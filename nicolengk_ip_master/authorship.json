[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"checkstyle {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicolengk":22,"-":40}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"T | 0 | g","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"D | 0 | p | 2019-10-15 12:12","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"E | 0 | d | 2019-10-15 12:12 | 2019-10-15 13:13","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"E | 0 | do something | 2019-10-15 12:12 | 2019-10-15 13:13","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"nicolengk":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":" * Creates a Duke object.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"public class Duke {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"    private Message message;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"    private Exit exit;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"     * This constructor initializes a new instance of the Duke class. The Duke object is typically used to","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"     * manage and interact with tasks in a task management application.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    public Duke() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        this.message \u003d new Message();","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"        this.exit \u003d new Exit();","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"            this.tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"    public String run(String userInput) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"        Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"        String userCommand \u003d parser.inputCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"        if (userCommand.equals(\"LIST\") || userCommand.equals(\"L\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"            message.listMessage(tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"MARK\") || userCommand.equals(\"M\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"            message.markMessage(tasks, parser.getTaskNumber());","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"UNMARK\") || userCommand.equals(\"U\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"            message.unmarkMessage(tasks, parser.getTaskNumber());","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"TODO\") || userCommand.equals(\"T\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"            message.todoMessage(tasks, parser.getTodoDescription());","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"DEADLINE\") || userCommand.equals(\"D\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"            String[] deadlineDetails \u003d parser.getDeadlineDescription();","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"            message.deadlineMessage(tasks, deadlineDetails[0], parser.getDateTime(deadlineDetails[1]));","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"EVENT\") || userCommand.equals(\"E\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"            String[] eventDetails \u003d parser.getEventDescription();","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"            message.eventMessage(tasks, eventDetails[0], parser.getDateTime(eventDetails[1]),","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"                    parser.getDateTime(eventDetails[2]));","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"DELETE\") || userCommand.equals(\"D\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"            message.deleteMessage(tasks, parser.getTaskNumber());","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"FIND\") || userCommand.equals(\"F\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"            message.findMessage(tasks, parser.getStringKeyword());","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"        } else if (userCommand.equals(\"BYE\") || userCommand.equals(\"B\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"            message.farewellMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"            exit.start();","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"        this.storage.saveTasksToFile(this.tasks.getTasks());","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"        assert message !\u003d null: \"message should not be empty.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"        return message.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"nicolengk"},"content":"    String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"nicolengk"},"content":"        return run(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicolengk":77,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":" * Custom exception class for Duke, a task management application.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":" * This exception is used to handle errors and exceptional situations specific to Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"     * @param message the detail message","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicolengk":16}},{"path":"src/main/java/duke/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":" * Represents the different commands that the user can input.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"public class Exit {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"    private Thread thread;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"     * Creates an exit command.","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    public Exit() {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"        thread \u003d new Thread(new Runnable() {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"            public void run() {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"                try {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"                    Thread.sleep(500);","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"                }","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        });","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"     * Starts the exit command.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"    public void start() {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"        thread.start();","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"nicolengk":31}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"     * Displays a greeting message with a logo and initial introduction in a dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"    public void greet() {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"        String logo \u003d","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"                \"  ____       _       ____        _      \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"                + \" / __\\\"| uU  /\\\"\\\\  uU |  _\\\"\\\\ u U  /\\\"\\\\  u  \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"                + \"\u003c\\\\___ \\\\/  \\\\/ _ \\\\/  \\\\| |_) |/  \\\\/ _ \\\\/   \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"                + \" u___) |  / ___ \\\\   |  _ \u003c    / ___ \\\\   \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"                + \" |____/\u003e\u003e/_/   \\\\_\\\\  |_| \\\\_\\\\  /_/   \\\\_\\\\  \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"                + \"  )(  (__)\\\\\\\\    \u003e\u003e  //   \\\\\\\\_  \\\\\\\\    \u003e\u003e  \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"                + \" (__)    (__)  (__)(__)  (__)(__)  (__) \\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"                DialogBox.getDukeDialog(logo + \"Hello! I\u0027m Sara\\n\" + \"What can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"            );","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"nicolengk"},"content":"            );","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":79}},{"path":"src/main/java/duke/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"public class Message {","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"    private String message \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    public void listMessage(TaskList tasks) {","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Here are the tasks in your List:\\n\"+ tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"    public void markMessage(TaskList tasks, int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"        tasks.markTaskDone(taskIndex);","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    public void unmarkMessage(TaskList tasks, int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"    public void todoMessage(TaskList tasks, String description) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"        Task todo \u003d tasks.addTodoTask(description);","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"                + todo + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    public void deadlineMessage(TaskList tasks, String description, LocalDateTime dateTime) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"        Task deadline \u003d tasks.addDeadlineTask(description, dateTime);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"                + deadline + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"    public void eventMessage(TaskList tasks, String description, LocalDateTime from, LocalDateTime to) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"        Task event \u003d tasks.addEventTask(description, from, to);","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"                + event + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"    public void deleteMessage(TaskList tasks, int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"        Task task \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"    public void findMessage(TaskList tasks, String keyword) {","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Here are the matching tasks in your list:\\n\" + matchingTasks;","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"    public void farewellMessage() {","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"        message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"nicolengk":61}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":" * The `Deadline` class represents a task with a description and a deadline date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":" * It is a subclass of the `Task` class.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new `Deadline` task with the given description and deadline date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"     * @param by The deadline date and time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"     * Returns a string representation of the deadline task for display to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string containing the task type, status, description, and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"     * Converts the deadline task to a string representation for saving to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string representing the task type, status, description, and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"        return \"D\" + \" | \" + super.toFileString() + \" | \" + by.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"     * Creates a `Deadline` task object from a data string. Used for deserialization.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"     * @param taskData The data string containing deadline task information.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"     * @return A `Deadline` task object created from the data string, or `null` if the data is incomplete or invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"    public static Deadline createDeadlineFromData(String taskData) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"        String[] taskParts \u003d taskData.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"        if (taskParts.length \u003e\u003d 3 \u0026\u0026 taskParts[0].trim().equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"            String doneStatus \u003d taskParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"            String description \u003d taskParts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(taskParts[3].trim(), formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"            if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"                deadline.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"            return deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"        return null; // incomplete data.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicolengk":70}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":" * The `Event` class represents a task with a description and a from and to date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":" * It is a subclass of the `Task` class.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new `Event` task with the given description, start date and time, and end date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"     * Returns a string representation of the event task for display to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string containing the task type, status, description, start date, and end date.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"     * Converts the event task to a string representation for saving to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string representing the task type, status, description, start date, and end date.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"        return \"E\" + \" | \" + super.toFileString() + \" | \" + from.format(formatter) + \" | \" + to.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"     * Creates an `Event` task object from a data string. Used for deserialization.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"     * @param taskData The data string containing event task information.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"     * @return An `Event` task object created from the data string, or `null` if the data is incomplete or invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"    public static Event createEventFromData(String taskData) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"        String[] taskParts \u003d taskData.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"        if (taskParts.length \u003e\u003d 4 \u0026\u0026 taskParts[0].trim().equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"            String doneStatus \u003d taskParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"            String description \u003d taskParts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(taskParts[3].trim(), formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(taskParts[4].trim(), formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"            Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"            if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"                event.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"            return event;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"        return null; // incomplete data.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicolengk":74}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":" * The `Task` class represents a basic task with a description and a completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new task with the given description, initially marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"     * Returns the type of the task. Subclasses should override this method.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"     * @return An empty string for the base class.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"        return \"\"; // Return an empty string for the base class","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"     * @return `true` if the task is done, otherwise `false`.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"     * @return \"X\" if the task is done, or a space character if it\u0027s not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"    public String taskStatus() {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the description of a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"     * @return The description of the task as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"     * Converts the task to a string representation for saving to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string representing the task\u0027s data.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nicolengk"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"nicolengk"},"content":"        char doneStatus \u003d isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"nicolengk"},"content":"        return doneStatus + \" | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"nicolengk"},"content":"     * Converts the task to a string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string representing the task\u0027s type, status, and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"nicolengk"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"nicolengk"},"content":"        return getTaskType() + \" [\" + taskStatus() + \"] \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"nicolengk"},"content":"     * Creates a task object from a data string.","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"nicolengk"},"content":"     * @param taskData The data string containing task information.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"nicolengk"},"content":"     * @return A task object created from the data string, or `null` if the data is incomplete or invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"nicolengk"},"content":"    public static Task createTaskFromData(String taskData) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"nicolengk"},"content":"        String[] taskParts \u003d taskData.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"nicolengk"},"content":"        if (taskParts.length \u003e\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"nicolengk"},"content":"            String taskType \u003d taskParts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"nicolengk"},"content":"            String doneStatus \u003d taskParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"nicolengk"},"content":"            String description \u003d taskParts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"nicolengk"},"content":"            Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"nicolengk"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"nicolengk"},"content":"                task \u003d Todo.createTodoFromData(taskData);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"nicolengk"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"nicolengk"},"content":"                task \u003d Deadline.createDeadlineFromData(taskData);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"nicolengk"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"nicolengk"},"content":"                task \u003d Event.createEventFromData(taskData);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"nicolengk"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"nicolengk"},"content":"                System.out.println(\"Unrecognized task type: \" + taskType);","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"nicolengk"},"content":"                return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"nicolengk"},"content":"            if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"nicolengk"},"content":"                task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"nicolengk"},"content":"            return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"nicolengk"},"content":"        return null; // Incomplete data","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicolengk":124}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":" * The Todo class represents a task with a description","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":" * , which is a subclass of the `Task` class.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new `Todo` task with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"     * Returns a string representation of the todo task for display to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string containing the task type and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"     * Converts the todo task to a string representation for saving to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"     * @return A formatted string representing the task type and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"        char taskType \u003d \u0027T\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"        return taskType + \" | \" + super.toFileString();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"     * Creates a `Todo` task object from a data string. Used for deserialization.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"     * @param taskData The data string containing todo task information.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"     * @return A `Todo` task object created from the data string, or `null` if the data is incomplete or invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"    public static Todo createTodoFromData(String taskData) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"        String[] taskParts \u003d taskData.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"        if (taskParts.length \u003e\u003d 3 \u0026\u0026 taskParts[0].trim().equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"            String doneStatus \u003d taskParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"            String description \u003d taskParts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"            if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"                todo.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"            return todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"        return null; // Incomplete data","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":61}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":" * The `Parser` class is responsible for parsing user input and extracting relevant information","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":" * for further processing by the Duke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"    private List\u003cString\u003e inputArray;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new `Parser` with an empty input array.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    public Parser() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"     * Constructs a new `Parser` with user input and splits it into an array of words.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"        this.inputArray \u003d Arrays.asList(userInput.split(\" \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"     * Extracts the command keyword from the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"     * @return The extracted command keyword in uppercase.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"    public String inputCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"        return inputArray.get(0).toUpperCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"     * Extracts the command keyword from the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"     * @return The extracted command keyword in uppercase.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"    public int getTaskNumber() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"            int taskIndex \u003d Integer.parseInt(inputArray.get(1)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"            return taskIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the description of a todo task from the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"    public String getTodoDescription() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"        if (this.inputArray.size() \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"            String description \u003d String.join(\" \", this.inputArray.subList(1, this.inputArray.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"            return description;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the description and deadline date/time from the user input for a deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"nicolengk"},"content":"     * @return An array containing the description and deadline date/time.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the description is empty or if the date/time format is incorrect.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"nicolengk"},"content":"    public String[] getDeadlineDescription() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"nicolengk"},"content":"        if (this.inputArray.size() \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"nicolengk"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"nicolengk"},"content":"            String description \u003d String.join(\" \", this.inputArray.subList(1, this.inputArray.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"nicolengk"},"content":"            return description.split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the description and event date/times from the user input for an event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"nicolengk"},"content":"     * @return An array containing the description, start date/time, and end date/time.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the description is empty, if time and date are missing, or if the format is incorrect.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"nicolengk"},"content":"    public String[] getEventDescription() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"nicolengk"},"content":"        if (this.inputArray.size() \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"nicolengk"},"content":"        String description \u003d String.join(\" \", this.inputArray.subList(1, this.inputArray.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"nicolengk"},"content":"        String[] descriptionAndDateTimes \u003d description.split(\" /from \");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"nicolengk"},"content":"        if (descriptionAndDateTimes.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Time and date required\");","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"nicolengk"},"content":"        String[] fromAndToDateTimes \u003d descriptionAndDateTimes[1].split(\" /to \");","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"nicolengk"},"content":"        if (fromAndToDateTimes.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Time and date required\");","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"nicolengk"},"content":"        return new String[] {descriptionAndDateTimes[0], fromAndToDateTimes[0], fromAndToDateTimes[1]};","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"nicolengk"},"content":"     * Converts a date/time string to a LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"nicolengk"},"content":"     * @param dateTime The date/time string to be converted.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"nicolengk"},"content":"     * @return A LocalDateTime object representing the parsed date/time.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the date/time format is incorrect.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"nicolengk"},"content":"    public LocalDateTime getDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"nicolengk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"nicolengk"},"content":"            return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"nicolengk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Sorry! Incorrect format for time and date :(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"nicolengk"},"content":"     * Retrieves a concatenated string representation of keywords from an input array.","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"nicolengk"},"content":"     * @return The concatenated string containing keywords.","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If an IndexOutOfBoundsException occurs while accessing the input array.","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"nicolengk"},"content":"    public String getStringKeyword() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"nicolengk"},"content":"            return String.join(\" \", this.inputArray.subList(1, this.inputArray.size()));","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"nicolengk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":140}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":" * The `Storage` class handles reading and writing tasks to a data file.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    private static final String DATA_FILE_PATH \u003d \"data.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"     * Saves a list of tasks to a data file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"     * @param toDoList The list of tasks to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If an error occurs during file writing.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"    public void saveTasksToFile(List\u003cTask\u003e toDoList) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"            FileWriter writer \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"            for (Task task : toDoList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"            writer.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"     * Loads a list of tasks from a data file.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"     * @return A List of Task objects loaded from the data file.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If there is an error reading the data file or creating tasks from the data.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"    public List\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"                    String taskData \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"                    Task task \u003d Task.createTaskFromData(taskData);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"                scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"        return tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":65}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":" * The `TaskList` class represents a list of tasks and provides methods for managing tasks within the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"    private List\u003cTask\u003e toDoList;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"     * Constructs a `TaskList` with an existing list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"     * @param toDoList The list of tasks to initialize the `TaskList`.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"    public TaskList(List\u003cTask\u003e toDoList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"     * Constructs an empty `TaskList`.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"        this.toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the list of tasks contained in the `TaskList`.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"        return toDoList;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"     * Retrieves the number of tasks in the `TaskList`.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"nicolengk"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"nicolengk"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"nicolengk"},"content":"        return toDoList.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"nicolengk"},"content":"     * Marks a task as done based on its index in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"nicolengk"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"nicolengk"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"nicolengk"},"content":"    public Task markTaskDone(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"nicolengk"},"content":"            Task task \u003d toDoList.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"nicolengk"},"content":"            task.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"nicolengk"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"nicolengk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"nicolengk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"nicolengk"},"content":"     * Unmarks a task as done based on its index in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"nicolengk"},"content":"     * @param taskIndex The index of the task to unmark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"nicolengk"},"content":"     * @return The task that was unmarked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"nicolengk"},"content":"    public Task unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"nicolengk"},"content":"            Task task \u003d toDoList.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"nicolengk"},"content":"            task.markNotDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"nicolengk"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"nicolengk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"nicolengk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"nicolengk"},"content":"     * Adds a new todo task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"nicolengk"},"content":"     * @param todoDescription The description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"nicolengk"},"content":"     * @return The newly added todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"nicolengk"},"content":"    public Task addTodoTask(String todoDescription) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"nicolengk"},"content":"        Task newTask \u003d new Todo(todoDescription);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"nicolengk"},"content":"        toDoList.add(newTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"nicolengk"},"content":"        return newTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"nicolengk"},"content":"     * Adds a new deadline task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"nicolengk"},"content":"     * @param dateTime The deadline date and time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"nicolengk"},"content":"     * @return The newly added deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"nicolengk"},"content":"    public Task addDeadlineTask(String description, LocalDateTime dateTime) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"nicolengk"},"content":"        Task newTask \u003d new Deadline(description, dateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"nicolengk"},"content":"        toDoList.add(newTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"nicolengk"},"content":"        return newTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"nicolengk"},"content":"     * Adds a new event task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"nicolengk"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"nicolengk"},"content":"     * @param fromDatetime The starting date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"nicolengk"},"content":"     * @param toDateTime The ending date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"nicolengk"},"content":"     * @return The newly added event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"nicolengk"},"content":"    public Task addEventTask(","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"nicolengk"},"content":"            String description,","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"nicolengk"},"content":"            LocalDateTime fromDatetime,","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"nicolengk"},"content":"            LocalDateTime toDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"nicolengk"},"content":"    ) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"nicolengk"},"content":"        Task newTask \u003d new Event(description, fromDatetime, toDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"nicolengk"},"content":"        toDoList.add(newTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"nicolengk"},"content":"        return newTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"nicolengk"},"content":"     * Deletes a task from the list based on its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"nicolengk"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"nicolengk"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"nicolengk"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"nicolengk"},"content":"    public Task deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"nicolengk"},"content":"            Task task \u003d toDoList.get(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"nicolengk"},"content":"            toDoList.remove(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"nicolengk"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"nicolengk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"nicolengk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"nicolengk"},"content":"            throw new DukeException(\"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"nicolengk"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"nicolengk"},"content":"     * Searches for tasks in a to-do list based on a specified keyword in their descriptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"nicolengk"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"nicolengk"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"nicolengk"},"content":"     * @return A list of tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"nicolengk"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"nicolengk"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"nicolengk"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"nicolengk"},"content":"        for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"nicolengk"},"content":"            Task task \u003d toDoList.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"nicolengk"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"nicolengk"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"nicolengk"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"nicolengk"},"content":"        if (matchingTasks.size() \u003c 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"nicolengk"},"content":"            System.out.println(\"OOPS! No matching tasks found\");","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"nicolengk"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"nicolengk"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"nicolengk"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"nicolengk"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"nicolengk"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"nicolengk"},"content":"        for (Task task : toDoList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"nicolengk"},"content":"            message.append(\"\\t\").append(i++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"nicolengk"},"content":"        return message.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":184,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":184}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"        \u003cStackPane\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"            \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"            wrappingWidth\u003d\"265\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"         \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"nicolengk":20}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"    public void markTaskDone_success() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"        task.addTodoTask(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).taskStatus(), \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"        task.markTaskDone(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).taskStatus(), \"X\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"    public void markNotDone_success() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"        task.addTodoTask(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).taskStatus(), \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"        task.markTaskDone(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).taskStatus(), \"X\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"        task.unmarkTask(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).taskStatus(), \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"nicolengk"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"nicolengk"},"content":"    public void toStringToDo_success() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nicolengk"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"nicolengk"},"content":"        task.addTodoTask(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).toString(), \"[T] [ ] test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"nicolengk"},"content":"        task.markTaskDone(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).toString(), \"[T] [X] test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"nicolengk"},"content":"        task.unmarkTask(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).toString(), \"[T] [ ] test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":46}},{"path":"src/test/java/duke/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"nicolengk"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"nicolengk"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"nicolengk"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"nicolengk"},"content":"    public void markTaskDone_success() throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"nicolengk"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"nicolengk"},"content":"        task.addTodoTask(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"nicolengk"},"content":"        task.markTaskDone(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"nicolengk"},"content":"        assertEquals(task.getTasks().get(0).getIsDone(), true);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"nicolengk"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"nicolengk"},"content":"    public void markTaskDone_invalidTaskNumber() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"nicolengk"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"nicolengk"},"content":"            TaskList task \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"nicolengk"},"content":"            task.addTodoTask(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nicolengk"},"content":"            task.markTaskDone(4);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"nicolengk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"nicolengk"},"content":"            assertEquals(e.getMessage(), \"Invalid task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"nicolengk"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"nicolengk"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"nicolengk"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"nicolengk":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicolengk"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicolengk"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicolengk"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicolengk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicolengk"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicolengk"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicolengk"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicolengk"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicolengk":8}}]
