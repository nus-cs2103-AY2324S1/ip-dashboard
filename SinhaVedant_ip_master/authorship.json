[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SinhaVedant":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"    archiveFileName \u003d \u0027Sivraj.jar\u0027","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SinhaVedant":16,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"T | 1 | walk","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"SinhaVedant":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"# User Guide - Sivraj","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"Sivraj is a easy to use chatbot style application to schedule and manage tasks. ","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"It can be distributed as a .jar file.","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Add ToDo","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"Adds a task todo with only description and no deadline.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `todo task`","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"**Example** - `todo walk`","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Add Deadline","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"Adds a deadline task with description and deadline date.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `deadline task /by date`, (date should be in format yyyy-mm-dd)","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"**example** - `deadline return book /by 2017-08-07`","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Add Event","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"Adds an Event task with description, start date and end date.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `event task /from start date \u0026 time /to end date \u0026 time`, (start/end date \u0026 time are in string format)","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"**example** - `event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Delete task","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"Deletes a task based on its index number in the task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `delete indexNumber`, (indexNumber is an integer)","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"**example** - `delete 3`","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Mark task","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"Marks a specific task as done/completed using index number.","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `mark indexNumber`, (indexNumber is an integer)","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"**example** - `mark 3`","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Unmark task","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"Marks a specific task as not done/completed using index number.","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `unmark indexNumber`, (indexNumber is an integer)","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"**example** - `unmark 3`","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"### Feature- List tasks","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"Lists all the current and previous tasks that are recorded in a text file.","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `list`","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"SinhaVedant"},"content":"### Feature- Bye","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"SinhaVedant"},"content":"Gives a goodbye message and saves the current state of task list into the text file.","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"SinhaVedant"},"content":"**Format** - `bye`","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"SinhaVedant":60,"-":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":" * Class to handle deadline type of tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a deadline task.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     * @param description task description.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"     * @param by deadline date.","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskType type of task.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    public Deadline(String description, String by, char taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"        super(description, taskType);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"        this.byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the deadline task to be stored in a file.","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"     * @return File string representation of the task.","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"        return super.toFileString() + \" | \" +","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"                byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"     * @return String representation.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"        return super.toString() + \" (by: \" +","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"                byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a DialogBox using given text and image.","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"     * @param text text to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"     * @param img image to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"    private void flip() {","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"     * Returns a new user DialogBox with the given text and image.","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"     * @param text text to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"     * @param img image to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"     * @return new DialogBox instance.","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"SinhaVedant"},"content":"     * Returns a new chatbot DialogBox with the given text and image.","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"SinhaVedant"},"content":"     * @param text text to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"SinhaVedant"},"content":"     * @param img image to be displayed on the dialog box.","lastModifiedDate":"2023-09-25"},{"lineNumber":74,"author":{"gitId":"SinhaVedant"},"content":"     * @return new DialogBox instance.","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"SinhaVedant"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"SinhaVedant"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"SinhaVedant"},"content":"        db.flip();","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"SinhaVedant"},"content":"        return db;","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" * Duke class to receive the response from the program.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a new Duke instance.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    public Duke() {","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"            taskList \u003d new TaskList(storage.loadPreviousTasks());","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"            ui.displayLoadErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"        assert taskList !\u003d null : \"taskList should not be null.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the response of Sivraj to the user-input.","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"     * @param input Input given by the user.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"     * @return String value to be displayed on the chat screen.","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"            String response \u003d Parser.userCommand(input, taskList, ui, storage);","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"            return response;","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"            String response \u003d ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"            return response;","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"SinhaVedant":45,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":" * Class to define a new exception that will be","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" * thrown by the program in certain cases.","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a DukeException with the provided message.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     * @param message message to be shown when the exception is caught and read.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":" * Class to handle tasks of type Event.","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"    private String from;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"    private String to;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises an Event task.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     * @param description task description.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"     * @param from start date and time.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"     * @param to end date and time.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskType type of task.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    public Event(String description, String from, String to, char taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"        super(description, taskType);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the event task to be stored in a file.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"     * @return File string representation of the task.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"        return super.toFileString() + \" | \" + from + \"-\" + to;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"     * @return String representation.","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":43}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" * Entry point of the program.","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"public class Launcher {","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"     * Launches the GUI of Sivraj.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"     * Starts the GUI program","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"     * the application scene can be set.","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"        assert duke !\u003d null : \"duke instance should not be null\";","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"            stage.show();","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":41}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"                DialogBox.getDukeDialog(ui.displayWelcomeMessage(), dukeImage)","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"        );","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    @FXML","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"        );","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" * Class to understand the input user commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"public class Parser {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"     * Parses through the input message to understand and execute the user command.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     * @param input user command.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList list where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"     * @param ui used to generate all the output messages.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     * @param storage to load and save to the text files.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"     * @return Final output to be read by the getResponse in Duke class.","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    public static String userCommand(String input, TaskList taskList,","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"                                      Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"            return parseByeCommand(taskList, ui, storage);","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"            return parseListCommand(taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"            return parseToDoCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"            return parseDeadlineCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"            return parseEventCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"            return parseMarkCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"            return parseUnmarkCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"            return parseDeleteCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseByeCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"            storage.appendTasksToFile(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"            return \"Something went wrong: \" + e.getMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"        return ui.displayByeMessage();","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseListCommand(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"        return ui.displayListMessage(taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"     * Executes todo type of commands.","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"     * @param input User command.","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"     * @param ui Used to generate all the output messages.","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"     * @return Final output to be read by the getResponse in Duke class.","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If no task is provided.","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"    public static String parseToDoCommand(String input, TaskList taskList,","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"                                 Ui ui) throws DukeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"SinhaVedant"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"SinhaVedant"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"SinhaVedant"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"SinhaVedant"},"content":"        taskList.addTask(new ToDo(description, \u0027T\u0027));","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"SinhaVedant"},"content":"        return ui.displayToDoMessage(taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseDeadlineCommand(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"SinhaVedant"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"SinhaVedant"},"content":"        String description \u003d input.substring(9, byIndex).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"SinhaVedant"},"content":"        String by \u003d input.substring(byIndex + 3).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"SinhaVedant"},"content":"        taskList.addTask(new Deadline(description, by, \u0027D\u0027));","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"SinhaVedant"},"content":"        return ui.displayDeadlineMessage(taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseEventCommand(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-25"},{"lineNumber":86,"author":{"gitId":"SinhaVedant"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"SinhaVedant"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"SinhaVedant"},"content":"        String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"SinhaVedant"},"content":"        String from \u003d input.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"SinhaVedant"},"content":"        String to \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"SinhaVedant"},"content":"        taskList.addTask(new Event(description, from, to, \u0027E\u0027));","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"SinhaVedant"},"content":"        return ui.displayEventMessage(taskList);","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseMarkCommand(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-25"},{"lineNumber":96,"author":{"gitId":"SinhaVedant"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"SinhaVedant"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.listSize()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"SinhaVedant"},"content":"            taskList.getTask(taskIndex).markAsDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"SinhaVedant"},"content":"            return ui.displayMarkMessage(taskList, taskIndex);","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"SinhaVedant"},"content":"            return \"Invalid task index.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":102,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseUnmarkCommand(String input, TaskList taskList,","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"SinhaVedant"},"content":"                                   Ui ui) {","lastModifiedDate":"2023-09-24"},{"lineNumber":107,"author":{"gitId":"SinhaVedant"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":108,"author":{"gitId":"SinhaVedant"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.listSize()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":109,"author":{"gitId":"SinhaVedant"},"content":"            taskList.getTask(taskIndex).markAsNotDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"SinhaVedant"},"content":"            return ui.displayUnmarkMessage(taskList, taskIndex);","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":112,"author":{"gitId":"SinhaVedant"},"content":"            return \"Invalid task index.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"SinhaVedant"},"content":"    private static String parseDeleteCommand(String input, TaskList taskList,","lastModifiedDate":"2023-09-25"},{"lineNumber":117,"author":{"gitId":"SinhaVedant"},"content":"                                   Ui ui) {","lastModifiedDate":"2023-09-24"},{"lineNumber":118,"author":{"gitId":"SinhaVedant"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":119,"author":{"gitId":"SinhaVedant"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.listSize()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":120,"author":{"gitId":"SinhaVedant"},"content":"            Task removedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-09-24"},{"lineNumber":121,"author":{"gitId":"SinhaVedant"},"content":"            return ui.displayDeleteMessage(taskList, removedTask);","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"SinhaVedant"},"content":"            return \"Invalid task index.\";","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"SinhaVedant":128}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.io.File;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":" * Deals with loading tasks from the file and saving tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":" * in the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"public class Storage {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"     * Creates a new data file if it does not exist.","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    public Storage() {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"        File dataDirectory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"        File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"            try {","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"                System.out.println(\"Error creating a new file:\" + e);","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"     * Stores all the data in the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List of all tasks to be saved.","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"     * @throws IOException If there is an input or output exception.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    public void appendTasksToFile(TaskList taskList)","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"            throws IOException {","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"        for (int i \u003d 0; i \u003c taskList.listSize(); i++) {","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"            fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"        fw.close();","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"     * Loads all the previously saved tasks in an ArrayList.","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"     * @return ArrayList of previous tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"     * @throws FileNotFoundException If program cannot find the data file.","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"    public ArrayList\u003cTask\u003e loadPreviousTasks()","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"SinhaVedant"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"SinhaVedant"},"content":"            try {","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"SinhaVedant"},"content":"                Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"SinhaVedant"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"SinhaVedant"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"SinhaVedant"},"content":"                System.err.println(\"Error parsing task from file: \" + e.getMessage());","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"SinhaVedant"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"SinhaVedant"},"content":"        s.close();","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"SinhaVedant"},"content":"        return tasks;","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"SinhaVedant"},"content":"     * Returns a Task after parsing through a string line.","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"SinhaVedant"},"content":"     * @param line String line which needs to interpreted as a Task.","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"SinhaVedant"},"content":"     * @return Task object.","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the format of the string line is invalid.","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"SinhaVedant"},"content":"    public Task parseTaskFromLine(String line) throws DukeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"SinhaVedant"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"SinhaVedant"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"SinhaVedant"},"content":"            throw new DukeException(\"Invalid data format in the file.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"SinhaVedant"},"content":"        char taskType \u003d parts[0].charAt(0);","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"SinhaVedant"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"SinhaVedant"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"SinhaVedant"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"SinhaVedant"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"SinhaVedant"},"content":"            return parseToDoTask(description, taskType, isDone);","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"SinhaVedant"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"SinhaVedant"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"SinhaVedant"},"content":"                throw new DukeException(\"Invalid data format for a deadline task\");","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"SinhaVedant"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"SinhaVedant"},"content":"            String deadlineBy \u003d parts[3];","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"SinhaVedant"},"content":"            return parseDeadlineTask(description, deadlineBy, taskType, isDone);","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"SinhaVedant"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"SinhaVedant"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"SinhaVedant"},"content":"                throw new DukeException(\"Invalid data format for an event task.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"SinhaVedant"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"SinhaVedant"},"content":"            String[] eventParts \u003d parts[3].split(\"-\");","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"SinhaVedant"},"content":"            String eventFrom \u003d eventParts[0];","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"SinhaVedant"},"content":"            String eventTo \u003d eventParts[1];","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"SinhaVedant"},"content":"            return parseEventTask(description, eventFrom, eventTo, taskType, isDone);","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"SinhaVedant"},"content":"        default:","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"SinhaVedant"},"content":"            throw new DukeException(\"Invalid task type in data file.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"SinhaVedant"},"content":"    private Task parseToDoTask(String description, char taskType, boolean isDone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"SinhaVedant"},"content":"        ToDo toDoTask \u003d new ToDo(description, taskType);","lastModifiedDate":"2023-09-24"},{"lineNumber":121,"author":{"gitId":"SinhaVedant"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-24"},{"lineNumber":122,"author":{"gitId":"SinhaVedant"},"content":"            toDoTask.markAsDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":124,"author":{"gitId":"SinhaVedant"},"content":"            toDoTask.markAsNotDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"SinhaVedant"},"content":"        return toDoTask;","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"SinhaVedant"},"content":"    private Task parseDeadlineTask(String description, String deadlineBy,","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"SinhaVedant"},"content":"            char taskType, boolean isDone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"SinhaVedant"},"content":"        Deadline deadlineTask \u003d new Deadline(description, deadlineBy, taskType);","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"SinhaVedant"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-24"},{"lineNumber":133,"author":{"gitId":"SinhaVedant"},"content":"            deadlineTask.markAsDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":134,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":135,"author":{"gitId":"SinhaVedant"},"content":"            deadlineTask.markAsNotDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":136,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"SinhaVedant"},"content":"        return deadlineTask;","lastModifiedDate":"2023-09-24"},{"lineNumber":138,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":139,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"SinhaVedant"},"content":"    private Task parseEventTask(String description, String eventFrom, String eventTo,","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"SinhaVedant"},"content":"            char taskType, boolean isDone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"SinhaVedant"},"content":"        Event eventTask \u003d new Event(description, eventFrom, eventTo, taskType);","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"SinhaVedant"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"SinhaVedant"},"content":"            eventTask.markAsDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":145,"author":{"gitId":"SinhaVedant"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":146,"author":{"gitId":"SinhaVedant"},"content":"            eventTask.markAsNotDone();","lastModifiedDate":"2023-09-24"},{"lineNumber":147,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":148,"author":{"gitId":"SinhaVedant"},"content":"        return eventTask;","lastModifiedDate":"2023-09-24"},{"lineNumber":149,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":150,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":151,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":152,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"SinhaVedant":153}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":" * Class to represent a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"    private String description;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"    private char taskType;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a task.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"     * @param description Short description of the task.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    public Task(String description, char taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the status of the task whether done or not done.","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"     * @return Status of the task as [X] or [].","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the task to be stored in a file.","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"     * @return File string representation of task.","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"        return taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"     * @return String representation.","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"        return \"[\" + taskType + \"]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" * Class to represent a list of tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"public class TaskList {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a task list using another ArrayList of tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"     * @param tasks ArrayList of tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"     * @return Deleted task.","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"        return taskList.remove(index);","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"     * @return Size.","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"    public int listSize() {","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"     * Returns a specific task from the task list","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"     * using the task index.","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskIndex Index of the task to be fetched.","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"     * @return Task that matches the index.","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"SinhaVedant":66}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":" * Class to handle tasks of type todo.","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises a task of type todo.","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"     * @param description task description.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskType type of task.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    public ToDo(String description, char taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"        super(description, taskType);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":" * Class to handle all the various outputs of the program","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":" * displayed on the GUI.","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"    private static final String DASH_LINE \u003d \"----------------------------------------\\n\";","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"     * Initialises the UI.","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"    public Ui() {}","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    public String displayWelcomeMessage() {","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"        return \"Hello! I\u0027m Sivraj\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a todo command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"    public String displayToDoMessage(TaskList taskList) {","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"     Got it. I\u0027ve added this task:\" + \"\\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"                \"         \" + taskList.getTask(taskList.listSize() - 1) + \"\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"                \"     Now you have \" + taskList.listSize() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"                DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a deadline command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"    public String displayDeadlineMessage(TaskList taskList) {","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"                \"       \" + taskList.getTask(taskList.listSize() - 1) +","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"                \"\\n\" + \"     Now you have \" + taskList.listSize() +","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"                \" tasks in the list.\\n\" + DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after an event command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"    public String displayEventMessage(TaskList taskList) {","lastModifiedDate":"2023-09-25"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"                \"       \" + taskList.getTask(taskList.listSize() - 1) +","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"                \"\\n\" + \"     Now you have \" + taskList.listSize() +","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"                \" tasks in the list.\\n\" + DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a mark command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskIndex Index of task to be marked.","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"SinhaVedant"},"content":"    public String displayMarkMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"    Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"SinhaVedant"},"content":"                \"       \" + taskList.getTask(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"SinhaVedant"},"content":"                DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after an unmark command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":78,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskIndex Index of task to be unmarked.","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":80,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":81,"author":{"gitId":"SinhaVedant"},"content":"    public String displayUnmarkMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2023-09-25"},{"lineNumber":82,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"     OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"SinhaVedant"},"content":"                \"       \" + taskList.getTask(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"SinhaVedant"},"content":"                DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":88,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a list command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":91,"author":{"gitId":"SinhaVedant"},"content":"     * @return Complete list.","lastModifiedDate":"2023-09-25"},{"lineNumber":92,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":93,"author":{"gitId":"SinhaVedant"},"content":"    public String displayListMessage(TaskList taskList) {","lastModifiedDate":"2023-09-25"},{"lineNumber":94,"author":{"gitId":"SinhaVedant"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"SinhaVedant"},"content":"        for (int i \u003d 0; i \u003c taskList.listSize(); i++) {","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"SinhaVedant"},"content":"            s \u003d s + \"\\n\" + (i + 1) + \".\" + taskList.getTask(i);","lastModifiedDate":"2023-09-25"},{"lineNumber":97,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE +","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"SinhaVedant"},"content":"                \"Here are the tasks in your list:\" + \"\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":100,"author":{"gitId":"SinhaVedant"},"content":"                s + \"\\n\" + DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":104,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a delete command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":105,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":106,"author":{"gitId":"SinhaVedant"},"content":"     * @param taskList List where all tasks are stored.","lastModifiedDate":"2023-09-25"},{"lineNumber":107,"author":{"gitId":"SinhaVedant"},"content":"     * @param removedTask Task that has been removed.","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":109,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":110,"author":{"gitId":"SinhaVedant"},"content":"    public String displayDeleteMessage(TaskList taskList, Task removedTask) {","lastModifiedDate":"2023-09-25"},{"lineNumber":111,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"     Noted. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"SinhaVedant"},"content":"                \"       \" + removedTask + \"\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":113,"author":{"gitId":"SinhaVedant"},"content":"                \"     Now you have \" + taskList.listSize() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-09-25"},{"lineNumber":114,"author":{"gitId":"SinhaVedant"},"content":"                DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":117,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":118,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message if there is some error.","lastModifiedDate":"2023-09-25"},{"lineNumber":119,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":120,"author":{"gitId":"SinhaVedant"},"content":"     * @param message Error message.","lastModifiedDate":"2023-09-25"},{"lineNumber":121,"author":{"gitId":"SinhaVedant"},"content":"     * @return Error Message.","lastModifiedDate":"2023-09-25"},{"lineNumber":122,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":123,"author":{"gitId":"SinhaVedant"},"content":"    public String displayErrorMessage(String message) {","lastModifiedDate":"2023-09-25"},{"lineNumber":124,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":125,"author":{"gitId":"SinhaVedant"},"content":"        return DASH_LINE + \"    OOPS \" + message + \"\\n\" + DASH_LINE;","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":129,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message after a bye command is executed.","lastModifiedDate":"2023-09-25"},{"lineNumber":130,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":131,"author":{"gitId":"SinhaVedant"},"content":"     * @return Message to be displayed.","lastModifiedDate":"2023-09-25"},{"lineNumber":132,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":133,"author":{"gitId":"SinhaVedant"},"content":"    public String displayByeMessage() {","lastModifiedDate":"2023-09-25"},{"lineNumber":134,"author":{"gitId":"SinhaVedant"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-25"},{"lineNumber":135,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":136,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-25"},{"lineNumber":138,"author":{"gitId":"SinhaVedant"},"content":"     * Displays the message if there is some error in loading the tasks.","lastModifiedDate":"2023-09-25"},{"lineNumber":139,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-25"},{"lineNumber":140,"author":{"gitId":"SinhaVedant"},"content":"     * @param errorMessage Error Message.","lastModifiedDate":"2023-09-25"},{"lineNumber":141,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-25"},{"lineNumber":142,"author":{"gitId":"SinhaVedant"},"content":"    public void displayLoadErrorMessage(String errorMessage) {","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"SinhaVedant"},"content":"        System.out.println(\"Error loading tasks: \" + errorMessage);","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":145,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"SinhaVedant":146}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":25}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":" * Test the parseToDoCommand method of parser class.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     * Initialise a dummy taskList and ui before each test.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with a valid input.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the tested method throws DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"    public void parseToDoCommand_validInput_addsToDoTask() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"        String input \u003d \"todo Buy groceries\";","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"        Parser.parseToDoCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"        assertEquals(\"[T][ ] Buy groceries\", taskList.getTask(0).toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with an empty description.","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"    public void parseToDoCommand_emptyDescription_throwsDukeException() {","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"        String input \u003d \"todo \";","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"            Parser.parseToDoCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"            fail();","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with description having leading spaces.","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the tested method throws DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"    public void parseToDoCommand_descriptionWithLeadingSpaces_addsToDoTask() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"        String input \u003d \"todo    Exercise\";","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"        Parser.parseToDoCommand(input, taskList, ui);","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"        assertEquals(\"[T][ ] Exercise\", taskList.getTask(0).toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":63}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"package duke;","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":" * Test the parseTaskFromLine method of the Storage class.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"SinhaVedant"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"SinhaVedant"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with a valid ToDo data.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the tested method throws DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"SinhaVedant"},"content":"    public void parseTaskFromLine_validToDoData_returnsToDoTask() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"SinhaVedant"},"content":"        String line \u003d \"T | 0 | Task 1\";","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"SinhaVedant"},"content":"        Task task \u003d storage.parseTaskFromLine(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"SinhaVedant"},"content":"        assertEquals(\"[T][ ] Task 1\", task.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with valid Deadline data.","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the tested method throws DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"SinhaVedant"},"content":"    public void parseTaskFromLine_validDeadlineData_returnsDeadlineTask() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"SinhaVedant"},"content":"        String line \u003d \"D | 1 | Task 2 | 2019-10-15\";","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"SinhaVedant"},"content":"        Task task \u003d storage.parseTaskFromLine(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"SinhaVedant"},"content":"        assertEquals(\"[D][X] Task 2 (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with a valid Event data.","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"SinhaVedant"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"SinhaVedant"},"content":"     * @throws DukeException If the tested method throws DukeException.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":47,"author":{"gitId":"SinhaVedant"},"content":"    public void parseTaskFromLine_validEventData_returnsEventTask() throws DukeException {","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"SinhaVedant"},"content":"        String line \u003d \"E | 1 | Task 3 | Aug 6th 2pm-4pm\";","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"SinhaVedant"},"content":"        Task task \u003d storage.parseTaskFromLine(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"SinhaVedant"},"content":"        assertEquals(\"[E][X] Task 3 (from: Aug 6th 2pm to: 4pm)\", task.toString());","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"SinhaVedant"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":54,"author":{"gitId":"SinhaVedant"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"SinhaVedant"},"content":"     * Tests the method with an invalid data to check whether it throws","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"SinhaVedant"},"content":"     * the correct DukeException error or not.","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"SinhaVedant"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"SinhaVedant"},"content":"    @Test","lastModifiedDate":"2023-09-25"},{"lineNumber":59,"author":{"gitId":"SinhaVedant"},"content":"    public void parseTaskFromLine_invalidData_throwsDukeException() {","lastModifiedDate":"2023-09-25"},{"lineNumber":60,"author":{"gitId":"SinhaVedant"},"content":"        try {","lastModifiedDate":"2023-09-25"},{"lineNumber":61,"author":{"gitId":"SinhaVedant"},"content":"            String line \u003d \"Invalid Data\";","lastModifiedDate":"2023-09-25"},{"lineNumber":62,"author":{"gitId":"SinhaVedant"},"content":"            Task task \u003d storage.parseTaskFromLine(line);","lastModifiedDate":"2023-09-25"},{"lineNumber":63,"author":{"gitId":"SinhaVedant"},"content":"            fail();","lastModifiedDate":"2023-09-25"},{"lineNumber":64,"author":{"gitId":"SinhaVedant"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-25"},{"lineNumber":65,"author":{"gitId":"SinhaVedant"},"content":"            assertEquals(\"Invalid data format in the file.\", e.getMessage());","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"SinhaVedant"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"SinhaVedant"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"SinhaVedant"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"SinhaVedant":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SinhaVedant"},"content":"todo run","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"SinhaVedant"},"content":"todo walk","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"SinhaVedant"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"SinhaVedant"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"SinhaVedant"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"SinhaVedant"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"SinhaVedant"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"SinhaVedant"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"SinhaVedant"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"SinhaVedant":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SinhaVedant"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SinhaVedant":1,"-":20}}]
