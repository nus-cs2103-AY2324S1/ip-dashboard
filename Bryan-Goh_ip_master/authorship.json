[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    mainClass.set(\"adam.Main\")","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    archiveBaseName \u003d \"AdamFinal\"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Bryan-Goh":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"# Adam User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"### Notes about the command format","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"- Words in `UPPER_CASE` are the parameters that is inputted in by the user","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo Homework`.","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"- The specific word `NUM` is used to indicate the integer parameter that is inputted by the user","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e e.g in `mark NUM`, `NUM` is a parameter which can be used as `mark 1`.","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"- The specific `YYYY-MM-DD` format is used to indicate the date parameter that is inputted by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e e.g in `deadline TEST /by YYYY-MM-DD`, `YYYY-MM-DD` is a parameter which can be used as `deadline test /by 2023-12-30`.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"- Parameters are strictly in order","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e e.g if the command specifies `/start YYYY-MM-DD /end YYYY-MM-DD` then only this formatting is acceptable.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"Adds a todo type task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `todo TEST`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"- `todo homework CS2103T`","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"- `todo walk the dog`","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"### Adding a Deadline task:`deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"Adds a task that has a deadline to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `deadline TEST /by YYYY-MM-DD`","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"- `deadline homework CS2103T /by 2023-11-22`","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"- `deadline apply internship /by 2023-09-22`","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"### Adding an Event task:`event`","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"Adds a task that specifies when an event starts and ends to the task list. \u003cbr/\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"Format: `event TEST /from YYYY-MM-DD /to YYYY-MM-DD`","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"- `event career fair /from 2023-09-17 /to 2023-09-20`","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"- `event midterms /from 2023-09-27 /to 2023-09-30`","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"### Marking a task to make it complete: `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"Marks a task as completed when the mark command is followed by the index of the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `mark NUM`","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"- `mark 1` Marks the first task in the task list as complete","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"- `mark 3` Marks the third task in the task list as complete","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"### Unmarking a task to make it incomplete: `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"Unmarks a task as incompleted when the unmark command is followed by the index of the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `unmark NUM`","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"- `unmark 1` Unmarks the first task in the task list as incomplete","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"- `unmark 3` Unmarks the third task in the task list as incomplete","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"### Tag a task: `tag`","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"Tag a task that does not have a tag yet or chang ean existing tag to the one according ot  the user input","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `tag NUM TEXT` ","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"- `tag 1 Homework` Tag the first task as Homework","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"- `tag 2 Exercise` Tag the second task as Exercise","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"Deletes a task according to the index inputted by the user","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Format: `delete NUM`","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"- `delete 1` Deletes the first task in the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"- `delete 3` Deletes the third task in the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"- ","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"### Finding a Task by the description:`find`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"Shows a list of all the tasks that contains the string that is inputted by the user","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003eFormat: `find TEST`","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003e Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"- `find homework` List out all the tasks that has the word homework in it","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"### Listing all Tasks: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"Shows a list of all the tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003eFormat: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"### Exits the program: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"Exits the program","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbr/\u003eFormat: `bye`","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"Bryan-Goh":63,"-":14}},{"path":"src/main/java/adam/Adam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.Command;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.AdamException;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":" * This is the main java class that contains instructions to create the chatbot Tasks.Task manager Adam.Adam.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"public class Adam {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    private Image adam \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAdam.jpeg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    private TaskList list;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates an instance of an Adam Object that is used to initialize the other objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public Adam() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            list \u003d new TaskList(storage.read());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            list \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the String form of the response from the user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input User input","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            return command.execute(list, storage, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            return ui.displayError(e.getInfo());","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.welcome();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean running() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        return list.isRunning();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":58}},{"path":"src/main/java/adam/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    public static DialogBox getAdamDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":61}},{"path":"src/main/java/adam/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":" * This is the launcher for the chatbot Adam.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":12}},{"path":"src/main/java/adam/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    private Adam adam \u003d new Adam();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAdam(adam);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":32}},{"path":"src/main/java/adam/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    private Adam adam;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    private Image adamImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAdam.jpeg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    public void setAdam(Adam d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        adam \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     * Greets the user whenever the program was launched at the start of the program.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    public void greet() {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"                DialogBox.getAdamDialog(adam.getGreeting(),adamImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        return adam.running();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        String response \u003d adam.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"                DialogBox.getAdamDialog(response,adamImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        if(!adam.running()){","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":67}},{"path":"src/main/java/adam/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.SingleCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.command.EditCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.AdamException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to parse the user input and make sense of it.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    public static String getParams(String[] tokens, String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d input.substring(length, input.length());","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003e 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"            item \u003d input.substring(length + 1, input.length());","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        return item;","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a Command object that specifies what kind of command the user inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input User input.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     * @return Command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        Command command ;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        switch (tokens[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"            command \u003d new SingleCommand(tokens, tokens[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"            command \u003d new AddCommand(tokens, getParams(tokens, input), tokens[0]);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        case \"tag\":","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            command \u003d new EditCommand(tokens, tokens[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"            command \u003d new FindCommand(tokens, getParams(tokens, input), tokens[0]);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"                throw new AdamException();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        return command;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":57}},{"path":"src/main/java/adam/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.NoFileException;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to store and read the array of tasks inside the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    private String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    private java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Digimon.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an Arraylist of tasks object that is used to save tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"     * @return ArrayList object of type Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    public ArrayList\u003cTask\u003e read() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(path.toFile()));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            ArrayList\u003cTask\u003e array \u003d (ArrayList\u003cTask\u003e) in.readObject();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            in.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            return array;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NoFileException();","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NoFileException();","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"     * Saves an ArrayList into a file inside the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks ArrayList Object that is going to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            ObjectOutputStream ob \u003d new ObjectOutputStream(new FileOutputStream(path.toFile()));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            ob.writeObject(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"            ob.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            ob.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NoFileException();","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":52}},{"path":"src/main/java/adam/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.NoTagException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.NumberException;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.OutOfBoundException;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":" * This class holds all the methods that is realted to the task list such as adding and deleting tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    private boolean isActive \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the array needed to run this program from the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     * @param list ArrayList obtained from reading the file from the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        tasks \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes the Task object from the ArrayList according to its index.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message saying whixh item was deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    public String deleteTask( String[] tokens) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(tokens[1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        if (!tokens[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003e getSize()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d tasks.get(number - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.delete(curr, tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds a Todo Object to the ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text inside the todo.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    public String addTodo(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        ToDo curr \u003d new ToDo(text);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.addTodo(curr, tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds a Deadline Object to the ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text inside the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"     * @param by By what time the deadline is due.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    public String addDeadline(String text, String by) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"        Deadline curr \u003d new Deadline(text, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.addDeadline(curr, tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds an Event Object to the ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text inside the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"     * @param from From what time does the event start.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"     * @param to To what time does the event ends.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    public String addEvent(String text, String from, String to) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        Event curr \u003d new Event(text, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.addEvent(curr, tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     * Lists all the existing tasks inside the task list as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"    public String list() {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        String sentence \u003d  ui.list() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        for (Task item: tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"            String task \u003d count + \". \" + item.toString()+\" | \";","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"            sentence \u003d sentence + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"            count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"        return sentence;","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"     * Marks the intended Tasks as complete according to their index.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message saying which item was marked.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"    public String markAsDone(String[] tokens) {","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(tokens[1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        if (!tokens[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003e getSize()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d tasks.get(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        curr.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"        assert curr.getStatusIcon().equals(\"X\") : \"This task should be unmarked\";","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.mark();","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"     * Unmarks the intended Tasks as uncomplete according to their index.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message saying which item was unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"    public String unmarkAsDone(String[] tokens) {","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"        if (!tokens[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(tokens[1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003e getSize()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d tasks.get(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"        curr.unmarkAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"        assert curr.getStatusIcon().equals(\" \") : \"This task should be unmarked\";","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.unmark();","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a boolean that indicates whether the program is still runnning or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"     * @return Boolean.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"Bryan-Goh"},"content":"        return isActive;","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Bryan-Goh"},"content":"     * Ends the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Bryan-Goh"},"content":"    public String bye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"Bryan-Goh"},"content":"        isActive \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.bye();","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"     * Saves the array to the storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage Object.","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"    public void save (Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the size of the array.","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"     * @return Size of the array.","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"Bryan-Goh"},"content":"     * Finds the task that contains the same word as the param.","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item String that is being searched.","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"Bryan-Goh"},"content":"     * @return  String listing out all the items that match the find input.","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"    public String find(String item) {","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"Bryan-Goh"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"Bryan-Goh"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"Bryan-Goh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"Bryan-Goh"},"content":"           if (task.search(item)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"Bryan-Goh"},"content":"               matches.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"Bryan-Goh"},"content":"           }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"Bryan-Goh"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"Bryan-Goh"},"content":"            return ui.apologize();","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"Bryan-Goh"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"Bryan-Goh"},"content":"            String sentence \u003d ui.search() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"Bryan-Goh"},"content":"            for (Task match : matches) {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"Bryan-Goh"},"content":"                String task \u003d count + \". \" + match.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"Bryan-Goh"},"content":"                sentence \u003d sentence + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"Bryan-Goh"},"content":"                count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"Bryan-Goh"},"content":"            return sentence;","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"Bryan-Goh"},"content":"     * Tags the specified item to have the tag of the input.","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens an array of Strings from the user input separated by empty space.","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message saying which item was tagged what it was tagged with.","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"Bryan-Goh"},"content":"    public String tagTask(String[] tokens) {","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"Bryan-Goh"},"content":"        if(tokens.length \u003c 3) {","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NoTagException();","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"Bryan-Goh"},"content":"        if (!tokens[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(tokens[1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003e getSize()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"Bryan-Goh"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":225,"author":{"gitId":"Bryan-Goh"},"content":"        for(int i \u003d 2 ; i \u003c tokens.length; i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":226,"author":{"gitId":"Bryan-Goh"},"content":"            description \u003d tokens[i] + \" \";","lastModifiedDate":"2023-09-13"},{"lineNumber":227,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d tasks.get(number - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":229,"author":{"gitId":"Bryan-Goh"},"content":"        curr.tag(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":230,"author":{"gitId":"Bryan-Goh"},"content":"        return ui.tag(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":232}},{"path":"src/main/java/adam/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This Class is responsible for the print statements of the program and shows the personality of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    protected Scanner scaner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the user input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    public String readInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"        return scaner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String of a welcome message at the start of the program.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public String welcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"         return \"What\u0027s up I am Adam\\n\" + \"so like what do you want?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String message of the amount of tasks you have inside your list.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     * @param size Size of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    public String getAmount(int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        return String.format(\"%d tasks in this list, stop procrasinating them!!!\", size);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the delete message when you delete a Task as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"     * @param curr Current Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"     * @param size Size of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    public String delete(Task curr, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        return \"I have removed the Task, so just make up your mind next time:\\n\" + curr.toString() +","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"                \"\\n\" + getAmount(size);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"     *Returns a message whenever you add a todo Task to your list as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"     * @param curr Current Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"     * @param size Size of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    public String addTodo(Task curr, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"       return \"I added this todo to the list of endless work you have:\\n\" + curr.toString() +","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"               \"\\n\" + getAmount(size);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a message whenever you add a event Task to your list as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     * @param curr Current Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"     * @param size Size of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"    public String addEvent(Task curr, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        return \"I added this event to your list, congrats on having a life outside of work:\" + curr.toString() +","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"                \"\\n\" + getAmount(size);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a message whenever you add a deadline Task to your list as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"     * @param curr Current Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"     * @param size Size of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"    public String addDeadline(Task curr, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        return \"I have added this deadline to the list, good \" +","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"                \"luck on remembering it one day before deadline:\\n\" + curr.toString() + \"\\n\" + getAmount(size);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"     * Lists out all the task in your list as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"    public String list() {","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        return \"Here are the amount of hard labor you have in your lists:\";","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a goodbye message when you end the program as a String.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"    public String bye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        return \"Bye. Hope we don\u0027t see each other too often\";","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String message to indicate that you have completed a Task.","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"    public String mark() {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"        return \"Congrats on getting one step closer to achieving true happines,\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"                \" I have marked this task as complete\";","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String message to indicate that you have uncompleted a Task.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        return \"turns out you still got more work to do, I have unmarked it\";","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String error messages that has been thrown inside the program.","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"     * @param message Message of the specific error.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"    public String displayError(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String whenever the find method couldnt find a match.","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"    public String apologize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"        return \"I couldn\u0027t find anything are you sure its here?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String when you find a match using the find method.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"    public String search() {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"        return \"Here are some of the tasks I found:\";","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns a String specifying what you have tagged this item as.","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item String of the tag.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"    public String tag(String item) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"    return \"I have tagged this task as \" + item;","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":142}},{"path":"src/main/java/adam/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.DateException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.DeadlineException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.DescriptionException;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.EventException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to call the appropriate methods to add a Task to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    private String[] tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    private String item;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    private String input;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the string from the user input that has been processed.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens Array of string divided by empty space.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item String after the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input String of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    public AddCommand(String[]tokens, String item, String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"     * Checks the input for any user errors and then calls the addDeadline method.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks The Tasks list.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message for when you add a deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"    public String checkDeadline(TaskList tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        String[] by \u003d item.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        if (by.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        if (by[0].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        if (by.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"            LocalDate.parse(by[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DateException();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        return  tasks.addDeadline(by[0], by[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"     * Checks the input for any user errors and then calls the addEvent method.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks The Tasks list.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message for when you add an Event.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"    public String checkEvent(TaskList tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        String[] divide1 \u003d item.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"        if (divide1.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"        if (divide1[0].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        if (divide1.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"            throw new EventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        String text \u003d divide1[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        String[] divide2 \u003d divide1[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"        if (divide2.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"            throw new EventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        String from \u003d divide2[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        String to \u003d divide2[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"            LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DateException();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"            LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DateException();","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"        return tasks.addEvent(text, from, to);","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"     * Calls the right add method for each kinds of Task while also checking for input errors.","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks Object that holds the list locally and has all the methods associated with it.","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage used to store the list in the hard disk.","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"     * @param ui Ui that is used to print messages.","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui){","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tasks.getSize();","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"        String respond \u003d \"Something went wrong\";","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        switch (input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.addTodo(item);","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d checkDeadline(tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        case \"event\":","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d checkEvent(tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d \"Wrong input\";","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"        assert tasks.getSize() \u003d\u003d length + 1 : \"There should be a task added\";","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.save(storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        return respond;","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":128}},{"path":"src/main/java/adam/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This interface is used to give a building block for all class that implements the Command interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public interface Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"     * Executes the command that is used to make changes to the program from the parser.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks Object that holds the list locally and has all the methods associated with it.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage used to store the list in the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param ui Ui that is used to print messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":20}},{"path":"src/main/java/adam/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to call the appropriate methods to edit a Task inside the list","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public class EditCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    private String[] tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    private String text;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the string from the user input that has been processed.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens Array of string divided by empty space.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text The specific command from the parser.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public EditCommand(String[] tokens, String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        this.tokens \u003d  tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"     * Calls the right method to edit Tasks inside the list while also checking for input errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks Object that holds the list locally and has all the methods associated with it.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage used to store the list in the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     * @param ui Ui that is used to print messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tasks.getSize();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        String respond \u003d \"Something went wrong\";","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        switch (text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.markAsDone(tokens);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            assert tasks.getSize() \u003d\u003d length : \"The size of the task should stay the same\";","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.unmarkAsDone(tokens);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            assert tasks.getSize() \u003d\u003d length : \"The size of the task should stay the same\";","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.deleteTask(tokens);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"            assert tasks.getSize() \u003d\u003d length - 1 : \"The size of the task should decrease\";","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        case \"tag\":","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.tagTask(tokens);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d \"Wrong input\";","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        tasks.save(storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        return respond;","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":59}},{"path":"src/main/java/adam/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.FindException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to call the find method if the user input is correct.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"public class FindCommand implements Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    private String[] tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    private String item;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    private String input;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the string from the user input that has been processed.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens Array of string divided by empty space.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item String after the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input String of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    public  FindCommand(String[]tokens, String item, String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"     * Calls the find method while also checking for input errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks Object that holds the list locally and has all the methods associated with it.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage used to store the list in the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     * @param ui Ui that is used to print messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        String respond \u003d \"Something went wrong\";","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            throw new FindException();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        switch (input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.find(item);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d \"Wrong Input\";","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        return respond;","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":51}},{"path":"src/main/java/adam/command/SingleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.OneWordException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to call either the list or bye methods","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public class SingleCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    private String[] tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    private String input;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the string from the user input that has been processed.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens Array of string divided by empty space.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input The specific command from the parser.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public SingleCommand(String[] tokens, String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"     * Calls the list or bye method while also checking for input errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tasks Object that holds the list locally and has all the methods associated with it.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"     * @param storage Storage used to store the list in the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"     * @param ui Ui that is used to print messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui){","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        String respond \u003d \"Something went wrong\";","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OneWordException();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        switch (input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.bye();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d tasks.list();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"            respond \u003d \"Wrong input\";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        return respond;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":50}},{"path":"src/main/java/adam/exception/AdamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This Exception is a subclass of a RunTimeException and is used when an unidentified user input was entered.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class AdamException extends RuntimeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an error String message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String message.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! I don\u0027t know what this means\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":16}},{"path":"src/main/java/adam/exception/DateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception class is for the wrong format of entering dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class DateException extends AdamException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! you need the date to be in a yyyy-mm-dd format\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":12}},{"path":"src/main/java/adam/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is used when a user input the /by incorrectly.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class DeadlineException extends AdamException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need to add one /by command to indicate by when deadline is\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is for when a add command is called without a description for the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class DescriptionException extends AdamException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need to add a description to these tasks\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is used for event commands that have incorrect use of /from and /to.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class EventException extends AdamException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need to add one /from and one /to command\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is thrown when user inputs find without specifying anything.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class FindException extends AdamException{","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need  to add a word that you are trying to find\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/NoFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is thrown when user tries access a file that doesn\u0027t exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class NoFileException extends AdamException{","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! This file doesn\u0027t exist\";","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/NoTagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is thrown when user tries to tag a task without a tag description.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class NoTagException extends AdamException{","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need to add a tag to this task\";","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/NumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is for when using an edit command incorrectly.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class NumberException extends AdamException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! You need to follow this command by a number\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/OneWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is for when you typed in bye and list and follow up those commands with something else.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class OneWordException extends AdamException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! Type in the first word you just entered\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/exception/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is used when an edit command is used to edit something outside of the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class OutOfBoundException extends AdamException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public String getInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        return \"OOPS!!! The number you put in is more than the current item in your list\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/adam/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used for creating deadline tasks that has a due date","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public class Deadline extends Task implements Serializable {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the by when this task is due.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text that gives the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param by By when this task is due.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public Deadline(String text, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[D]\" + super.toString()  + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":27}},{"path":"src/main/java/adam/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to create Event objects that holds the description and when the event starts and ends.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the dates for when the event starts and when it ends.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text that gives the description.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * @param from From when the event starts.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * @param to To when the event ends.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public Event(String text, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":31}},{"path":"src/main/java/adam/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":" * This class holds information about the task such as completion and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    private String item \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the deacription and the completion of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param description Describe the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public void tag(String item) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    public String getTag() {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        return \" tag : \" + item;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the strung form of the Tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"     * @return The string form and information about this task.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        if(item.equals(\"\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description + getTag();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an X when a task is complete and empty space when it is not.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"     * @return String for its completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"     * Completes this task.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     * Unmarks the task as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"    public void unmarkAsDone(){","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns boolean depending on whether or not the param exists in the description.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item String that is being checked.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"     * @return Boolean.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean search(String item) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        return description.contains(item);","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bryan-Goh":79}},{"path":"src/main/java/adam/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to create Todos object that holds the description of your todo.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"public class ToDo extends Task implements Serializable {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text Text that gives the description of the Todo object.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    public ToDo(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"adam.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Bryan-Goh":19}},{"path":"src/test/java/adam/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"import static  org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.AdamException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_randomInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"        try{","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"            Parser.parse(\"bla\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! I don\u0027t know what this means\",e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_noInput_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        try{","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! I don\u0027t know what this means\",e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":28}},{"path":"src/test/java/adam/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.AdamException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import static  org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    TaskList task \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDeadline_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to add a description to these tasks\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDeadline_noCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"deadline test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! You need to add one /by command to indicate by when deadline is\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDeadline_noDescriptionWithCommands_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"deadline /by \";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! You need to add a description to these tasks\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDeadline_wrongDates_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"deadline test /by test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! you need the date to be in a yyyy-mm-dd format\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeEvent_wrongDates_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"event test /from test /to test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! you need the date to be in a yyyy-mm-dd format\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeEvent_noDescriptionWithCommands_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"event /from /to \";","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! You need to add a description to these tasks\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeEvent_noCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"event test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals( \"OOPS!!! You need to add one /from and one /to command\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeEvent_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to add a description to these tasks\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeTodo_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"todo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"            new AddCommand(tokens,item,tokens[0]).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to add a description to these tasks\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":141}},{"path":"src/test/java/adam/command/EditCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package adam.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import adam.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import adam.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import adam.exception.AdamException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import adam.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    TaskList task \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeMark_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"mark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeMark_outOfBound_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"mark 5\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! The number you put in is more than the current item in your list\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeUnmark_outOfBound_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"unmark 5\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! The number you put in is more than the current item in your list\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDelete_outOfBound_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"delete 5\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! The number you put in is more than the current item in your list\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeMark_wrongDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"mark test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeMark_multipleDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"mark 1 2 3 \";","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeUnmark_multipleDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"unmark 1 2 3 \";","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeUnmark_wrongDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"unmark test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeUnmark_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"unmark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDelete_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"delete\";","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDelete_wrongDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"delete test\";","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Bryan-Goh"},"content":"    public void executeDelete_multipleDescription_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"        String li \u003d \"delete 1 2 3 \";","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"        String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"        int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"        String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"            new EditCommand(tokens,item).execute(task,storage,ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"            assertEquals(\"OOPS!!! You need to follow this command by a number\", e.getInfo());","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Bryan-Goh":169}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"todo test","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"event project /from 2010-10-10 /to 2011-10-10","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"deadline homework /by 2020-10-10","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"list 1","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"deadline test","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"event test","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":22}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"java -classpath ../bin Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Bryan-Goh":1}}]
