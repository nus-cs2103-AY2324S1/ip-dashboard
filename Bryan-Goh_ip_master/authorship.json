[{"path":"src/main/java/Adam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" * This is the main java class that contains instructions to create the chatbot Task manager Adam","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"public class Adam {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"     * This array holds all the Task that has been added","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    protected ArrayList\u003cTask\u003e array \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"     * This boolean is used to indicate whether or not the program is still running","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    protected boolean running \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * This is used to take in user input","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    protected Scanner scaner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to delete Items of the class or subclass Task from the Task array","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     * @param num tells the method which item to remove from the array","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public void deleteTask(int num) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d array.get(num-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        array.remove(num-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"I have removed the Task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(String.format(\"Now you have %d tasks in this list\", array.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     * this method adds a todo object to the Task array","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text this is the description of the todo","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    public void addTodo(String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        ToDos curr \u003d new ToDos(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        array.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Got it i have added this todo to the list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(String.format(\"Now you have %d tasks in this list\", array.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to add a Deadline object to the Task array","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text this param is used to describe the deadline task","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"     * @param by this param gives information on when the task is due","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    public void addDeadline(String text, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        Deadlines curr \u003d new Deadlines(text, by);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        array.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Got it i have added this todo to the list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(String.format(\"Now you have %d tasks in this list\", array.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"     * This method adds an Event object to the Task array","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text This param describes the event task","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"     * @param from This param gives information on when the event starts","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"     * @param to this param gives information on when the event ends","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"    public void addEvent(String text, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        Events curr \u003d new Events(text, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        array.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Got it i have added this todo to the list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(String.format(\"Now you have %d tasks in this list\", array.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to display all the Task available inside the Task array","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"    public void list() {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Here are the task in your lists:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        for (Task item: array) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            System.out.println(count + \". \" + item.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"            count++;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to throw exceptions caused by incorrect input and also call the add Tasks methods","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"     * like addTodo addEvent addDedaline according to their designated inputs","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens This param is an Array of Strings that contains words in each index and are seperated","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     *               based of empty spaces","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"     * @param item This param holds the description of the Tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input This param specifies the specific kinds of Task it wants to add","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"    public void taskCall(String[]tokens, String item, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"        switch (input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"                addTodo(item);","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"                String[] by \u003d item.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"                if (by.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"                    throw new DeadlineException();","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"                addDeadline(by[0], by[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"                String[] divide1 \u003d item.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"                if (divide1.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"                    throw new EventsException();","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"                String text \u003d divide1[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"                String[] divide2 \u003d divide1[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"                if (divide2.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"                    throw new EventsException();","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"                String from \u003d divide2[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"                String to \u003d divide2[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"                addEvent(text, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"                System.out.println(\"Wrong input\");","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to throw exceptions when the wrong input is used and call the correct editing method","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"     * according to its text param such as mark unmark and delete","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens This param is an Array of Strings that contains words in each index and are seperated","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"     *               based of empty spaces","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text This param specifies the specific kinds of editing methods it wants to use","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"    public void edit(String[] tokens, String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"        if (!tokens[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"            throw new NumberException();","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"        int number \u003d Integer.valueOf(tokens[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"        if (number \u003e array.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"        Task curr \u003d array.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"        switch (text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"                curr.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"                curr.unmarkAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"Bryan-Goh"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"                deleteTask(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"Bryan-Goh"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"Bryan-Goh"},"content":"                System.out.println(\"Wrong input\");","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to throw exceptions and call the correct single word methods such as bye and list","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"     * according to its input param","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"     * @param tokens This param is an Array of Strings that contains words in each index and are seperated","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"     *               based of empty spaces","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"     * @param input This param specifies wheteher it wants to call the bye or list method","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"    public void single(String[] tokens, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"        if (tokens.length \u003e 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"            throw new OneWordException();","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"        switch (input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"                bye();","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"                list();","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"                System.out.println(\"Wrong input\");","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"Bryan-Goh"},"content":"     * This method receives the user input and checks if they are the same as the predetermined command words","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"     * and calls the appropriate method according to what type of command it is. This method also catches all the","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Bryan-Goh"},"content":"     * exception specific to the Adam chatbot and prints out the approriate responds and instructions. This method also","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"Bryan-Goh"},"content":"     * starts the chabot","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"Bryan-Goh"},"content":"    public void start() {","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Hello! I am Adam\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"Bryan-Goh"},"content":"            while (running) {","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"Bryan-Goh"},"content":"                String li \u003d scaner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Bryan-Goh"},"content":"                String[] tokens \u003d li.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"Bryan-Goh"},"content":"                int length \u003d tokens[0].length();","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"Bryan-Goh"},"content":"                String item \u003d li.substring(length, li.length());","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"Bryan-Goh"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"Bryan-Goh"},"content":"                    switch (tokens[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"Bryan-Goh"},"content":"                            single(tokens, tokens[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"Bryan-Goh"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"Bryan-Goh"},"content":"                            taskCall(tokens, item, tokens[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"Bryan-Goh"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"Bryan-Goh"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"Bryan-Goh"},"content":"                            edit(tokens, tokens[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"Bryan-Goh"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"Bryan-Goh"},"content":"                        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"Bryan-Goh"},"content":"                                throw new AdamException();","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"Bryan-Goh"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (OutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! The number you put in is more than the current item in your list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (NumberException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! You need to follow this command by a number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (EventsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! You need to add one /from and one /to command\");","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (DeadlineException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! You need to add one /by command to indicate by when deadline is\");","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! You need to add a description to these tasks\");","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (OneWordException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! Type in the first word you just entered\");","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"Bryan-Goh"},"content":"                } catch (AdamException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"Bryan-Goh"},"content":"                    System.out.println(\"OOPS!!! I don\u0027t know what this means\");","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"Bryan-Goh"},"content":"     * This method stops the chatbot and ending the whole program","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"Bryan-Goh"},"content":"    public void bye() {","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"Bryan-Goh"},"content":"        running \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"Bryan-Goh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"Bryan-Goh"},"content":"        Adam test \u003d new Adam();","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"Bryan-Goh"},"content":"        test.start();","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":245}},{"path":"src/main/java/AdamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This Exception is a subclass of a RunTimeException and is used when an unidentified user input was entered","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class AdamException extends RuntimeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    public AdamException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public AdamException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public AdamException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    public AdamException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":16}},{"path":"src/main/java/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used when a user didnt input the /by command","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class DeadlineException extends AdamException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    public DeadlineException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public DeadlineException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public DeadlineException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    public DeadlineException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":16}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to create Deadline objects that holds the description and when the task is due","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class Deadlines extends  Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"     * This variable holds the information on when this instance of a deadline object is due","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a constructor that creates a Deadline object","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text This param gives the description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"     * @param by This param tells you when this task is due","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    public Deadlines(String text, String by){","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a toString method that has been Override to better suit the display of this class","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     * @return The string form and information about this deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[D]\" + super.toString()  + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bryan-Goh":28}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to create Event objects that holds the description and when the event starts and ends","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class Events extends  Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"     *  This variable holds the information on when this instance of an event object starts","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"     *  This variable holds the information on when this instance of an event object ends","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * this is a constructor to create an instance of an Event object","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text This param gives the description","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param from This param gives the information on when the event starts","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * @param to This param gives the information on when the event ends","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public Events(String text, String from, String to){","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a toString method that has been Override to better suit the display of this class","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"     * @return The string form and information about this event","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bryan-Goh":33}},{"path":"src/main/java/EventsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used when a user didnt input the /from and /to command","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class EventsException extends AdamException {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    public EventsException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public EventsException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public EventsException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    public EventsException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":16}},{"path":"src/main/java/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used when a user","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" * didnt input the description of a task","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"public class NoDescriptionException extends AdamException{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public NoDescriptionException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    public NoDescriptionException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    public NoDescriptionException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    public NoDescriptionException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":17}},{"path":"src/main/java/NumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used when a user didnt input the correct amount","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" * of numbers after the command","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"public class NumberException extends AdamException{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public NumberException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    public NumberException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    public NumberException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    public NumberException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":17}},{"path":"src/main/java/OneWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used whena user input something after inputing","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" * the one word command like list and bye","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"public class OneWordException extends AdamException{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public OneWordException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    public OneWordException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    public OneWordException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    public OneWordException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":17}},{"path":"src/main/java/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This exception is a subclass of the AdamException and is used when a user tried to edit a Task that doesnt exist","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class OutOfBoundsException extends AdamException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    public OutOfBoundsException(){}","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    public OutOfBoundsException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    public OutOfBoundsException(Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"        super(cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    public OutOfBoundsException(String message, Throwable cause){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        super(message,cause);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used as the superclass to all three types o tasks that is used in the chatbot Adam","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" * This class holds information such as the description of the task and whether or not someone has completed it","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"     * This variable holds the information on what the task is","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"     * This boolean is to indicate whether this task is complete or not","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a constructor to create a Task object","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * @param description This param gives the description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a toString method that has been Override to better suit the display of this class","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"     * @return The string form and information about this task","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to return a String representing whether or not this task has been completed","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     * @return A bracket that contains X or empty space depending on whther it is done or not","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to declare that this instance of a Task has been completed","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"You have completed this task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"     * This method is used to declare that this instance of a Task has been uncompleted","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    public void unmarkAsDone(){","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(\"You have unmarked this task as undone\");","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bryan-Goh":57}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":" * This class is used to create Todos object that holds the description of your todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"public class ToDos extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"     * This constructor creates an instance of a Todo Object that has its description","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"     * @param text This param gives the description of the Todo object","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"    public ToDos(String text){","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"     * This is a toString method that has been Override to better suit the display of this class","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     * @return The string form and information about this Todo","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bryan-Goh":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"todo test","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"event project /from 1am /to 1pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"deadline homework /by 2 pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"list 1","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"deadline test","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"event test","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bryan-Goh":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"java -classpath ../bin Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Bryan-Goh":1}}]
