[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"    archiveFileName \u003d \"Chatbot.jar\"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andytoh1":1,"-":41}},{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"public class Chatbot {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        Storage.load(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"        Ui.startMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        while (true) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"            String userMessage \u003d userInput.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"            Parser.parse(userMessage, taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"            Storage.saveTasks(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"andytoh1":25}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":" * Class for Deadline task.","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"public  class Deadline extends Task {","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"    String datePattern \u003d \"MMM-dd-yyyy HH:mm\";","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"        super(description);","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        return super.getDescription() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"    public String getDescriptionWithoutTime() {","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"        return super.getDescription();","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":" * Class for Event task.","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"    String datePattern \u003d \"MMM-dd-yyyy HH:mm\";","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        super(description);","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"        String datePattern \u003d \"MMM-dd-yyyy HH:mm\";","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"        return super.getDescription() + \" (from: \" + startTime.format(formatter) + \" to: \"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"                + endTime.format(formatter) + \")\";","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"        return startTime.format(formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"        return endTime.format(formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"    public String getDescriptionWithoutTime() {","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"        return super.getDescription();","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":38}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":" * Class for reading user input.","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"public class Parser {","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"     * Parses any user input.","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"     * @param userMessage Input of the user.","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"     * @param taskList TaskList with all the current tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"    public static void parse (String userMessage, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        String datePattern \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"        if (userMessage.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"            Ui.endMessage();","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"        if (userMessage.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"            Ui.listTasks(taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"            return;","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"            if (userMessage.substring(0, 6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"                int removeTask \u003d Integer.parseInt(userMessage.substring(7)) - 1;","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"                Ui.deleteMessage(removeTask, taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"            } else if (userMessage.substring(0, 4).equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"                Ui.findMessage(userMessage.substring(5), taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"            }else if (userMessage.substring(0, 4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"                int doneTask \u003d Integer.parseInt(userMessage.substring(5)) - 1;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"                Ui.markMessage(doneTask, taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"            } else if (userMessage.substring(0, 4).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"                try {","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"                    Todo todo \u003d new Todo(userMessage.substring(5));","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"                    Ui.todoMessage(todo, taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"                    Ui.formatErrorMessage(\"todo\");","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"            } else if (userMessage.substring(0, 8).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"                try {","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"                    int index \u003d userMessage.indexOf(\"/by\");","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"                    String description \u003d userMessage.substring(9, index - 1);","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime taskDeadline \u003d LocalDateTime.parse(userMessage.substring(index + 4), formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"                    Deadline deadline \u003d new Deadline(description, taskDeadline);","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"                    Ui.deadlineMessage(deadline, taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"                    Ui.formatErrorMessage(\"deadline\");","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"            } else if (userMessage.substring(0, 5).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"andytoh1"},"content":"                try {","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"andytoh1"},"content":"                    int index \u003d userMessage.indexOf(\"/from\");","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"andytoh1"},"content":"                    int index2 \u003d userMessage.indexOf(\"/to\");","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"andytoh1"},"content":"                    String description \u003d userMessage.substring(6, index - 1);","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"andytoh1"},"content":"                    String start \u003d userMessage.substring(index + 6, index2 - 1);","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"andytoh1"},"content":"                    String end \u003d userMessage.substring(index2 + 4);","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime startTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime endTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"andytoh1"},"content":"                    Event event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"                    Ui.eventMessage(event, taskList);","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"andytoh1"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"andytoh1"},"content":"                    Ui.formatErrorMessage(\"event\");","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"andytoh1"},"content":"            } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"andytoh1"},"content":"                Ui.inputErrorMessage();","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"andytoh1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"andytoh1"},"content":"            Ui.inputErrorMessage();","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":71}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":" * Class for saving and loading the list of tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"public class Storage {","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"     * Loads the list of tasks from file.","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"     * @param taskList The TaskList object to be filled with data from file.","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"    public static void load(TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"            String datePattern2 \u003d \"MMM-dd-yyyy HH:mm\";","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(datePattern2);","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"            File taskFile \u003d new File(\"./tasks.txt\");","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"            Scanner taskReader \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"            while (taskReader.hasNextLine()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"                String taskFromFile \u003d taskReader.nextLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"                if (taskFromFile.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"                    Todo todo \u003d new Todo(taskFromFile.substring(3));","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"                    if (taskFromFile.charAt(1) \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"                        todo.markAsDone();","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"                    }","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"                    taskList.addTask(todo);","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"                if (taskFromFile.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"                    String deadlineFromFile \u003d taskReader.nextLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime taskDeadline \u003d LocalDateTime.parse(deadlineFromFile, formatter2);","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"                    Deadline deadline \u003d new Deadline(taskFromFile.substring(3), taskDeadline);","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"                    if (taskFromFile.charAt(1) \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"                    }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"                    taskList.addTask(deadline);","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"                if (taskFromFile.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"                    String startFromFile \u003d taskReader.nextLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(startFromFile, formatter2);","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"                    String endFromFile \u003d taskReader.nextLine();","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(endFromFile, formatter2);","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"                    Event event \u003d new Event(taskFromFile.substring(3), start, end);","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"                    if (taskFromFile.charAt(1) \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"                        event.markAsDone();","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"                    }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"andytoh1"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"andytoh1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"andytoh1"},"content":"            File taskFile \u003d new File(\"./tasks.txt\");","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"andytoh1"},"content":"            try {","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"andytoh1"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"andytoh1"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Error!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"andytoh1"},"content":"     * Saves the current tasks to file.","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"andytoh1"},"content":"     * @param taskList The TaskList object with the tasks to be saved to file.","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"andytoh1"},"content":"    public static void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"andytoh1"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"andytoh1"},"content":"            FileWriter taskWriter \u003d new FileWriter(\"./tasks.txt\", false);","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"andytoh1"},"content":"            for (int taskNumber \u003d 0; taskNumber \u003c\u003d taskList.getCount(); taskNumber++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"andytoh1"},"content":"                if (taskList.getTask(taskNumber) instanceof Todo) {","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(\"T\");","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(taskList.getTask(taskNumber).isDone() ? \"t \" : \"f \");","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(taskList.getTask(taskNumber).getDescription() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"andytoh1"},"content":"                } else if (taskList.getTask(taskNumber) instanceof Deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(\"D\");","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(taskList.getTask(taskNumber).isDone() ? \"t \" : \"f \");","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(((Deadline)taskList.getTask(taskNumber)).getDescriptionWithoutTime() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"andytoh1"},"content":"                } else if (taskList.getTask(taskNumber) instanceof Event) {","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(\"E\");","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(taskList.getTask(taskNumber).isDone() ? \"t \" : \"f \");","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(((Event)taskList.getTask(taskNumber)).getDescriptionWithoutTime() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"andytoh1"},"content":"                if (taskList.getTask(taskNumber) instanceof Deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(((Deadline) taskList.getTask(taskNumber)).getDeadline() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"andytoh1"},"content":"                if (taskList.getTask(taskNumber) instanceof Event) {","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(((Event) taskList.getTask(taskNumber)).getStartTime() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"andytoh1"},"content":"                    taskWriter.write(((Event) taskList.getTask(taskNumber)).getEndTime() + \"\\n\");","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"andytoh1"},"content":"                taskWriter.flush();","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"andytoh1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"andytoh1"},"content":"            System.out.println(\"Error!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":99}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"public class Task {","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"    private String description;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"    private boolean done;","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        return description;","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"        return done;","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":25}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":" * Class representing a list of tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"    private Task[] tasks;","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"    private int taskCount;","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"        tasks \u003d new Task[100];","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"        taskCount++;","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"     * @param task The index of the task to be deleted from the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"    public void deleteTask(int task) {","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"        Task[] newTasks \u003d new Task[100];","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"        for (int i \u003d 0; i \u003c taskCount - 1; i++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"            int j \u003d i;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"            if (i \u003e\u003d task) j \u003d i + 1;","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"            newTasks[i] \u003d tasks[j];","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"        tasks \u003d newTasks;","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"        taskCount--;","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"    public void markTask(int task) {","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"        tasks[task].markAsDone();","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"    public int getCount() {","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"        return taskCount;","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"        return tasks[i];","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":" * Class for Todo task.","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"        super(description);","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":8}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":" * Class handling the output.","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"public class Ui {","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"    public static void startMessage() {","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"        System.out.println(\"Hello! I\u0027m Chatbot!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"    public static void endMessage() {","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"    public static void inputErrorMessage() {","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"        System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"     * Displays an error message arising from mistakes in format.","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"     * @param type Type of command that is not properly formatted.","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"    public static void formatErrorMessage(String type) {","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"        switch(type) {","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Please use the format \\\"todo \u003ctask description\u003e\\\"!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"                break;","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Please use the format \\\"mark \u003ctask number\u003e\\\"!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"                break;","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Please use the format \\\"delete \u003ctask number\u003e\\\"!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"                break;","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Please use the format \\\"deadline \u003ctask description\u003e /by DD-MM-YYYY HH:MM\\\"!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"                break;","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"            case \"event\":","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"                System.out.println(\"Please use the format \\\"event \u003ctask description\u003e /from DD-MM-YYYY HH:MM \" + \"/to DD-MM-YYYY HH:MM\\\"!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"                break;","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"    public static void listTasks(TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"        System.out.println(\"Here is the list of relevant tasks:\");","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"andytoh1"},"content":"        for (int i \u003d 0; i \u003c taskList.getCount(); i++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"andytoh1"},"content":"            int listNumber \u003d i + 1;","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"andytoh1"},"content":"            System.out.print(listNumber + \". \");","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"andytoh1"},"content":"            if (taskList.getTask(i) instanceof Todo) {","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[T]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(i) instanceof Deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[D]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(i) instanceof Event) {","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[E]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"andytoh1"},"content":"            if (taskList.getTask(i).isDone()) System.out.print(\"[X] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"andytoh1"},"content":"            else System.out.print(\"[ ] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"andytoh1"},"content":"            System.out.println(taskList.getTask(i).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"andytoh1"},"content":"     * Handles the output of a delete command.","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"andytoh1"},"content":"     * @param removeTask Index of the task to be removed from the list.","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"andytoh1"},"content":"     * @param taskList The TaskList object from which the task is to be deleted.","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"andytoh1"},"content":"    public static void deleteMessage(int removeTask, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"andytoh1"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"andytoh1"},"content":"            if (removeTask \u003c 0 || removeTask \u003e\u003d taskList.getCount()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"andytoh1"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"andytoh1"},"content":"            System.out.println(\"This task will be removed!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"andytoh1"},"content":"            if (taskList.getTask(removeTask) instanceof Todo) {","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[T]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(removeTask) instanceof Deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[D]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(removeTask) instanceof Event) {","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[E]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"andytoh1"},"content":"            if (taskList.getTask(removeTask).isDone()) System.out.print(\"[X] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"andytoh1"},"content":"            else System.out.print(\"[ ] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"andytoh1"},"content":"            System.out.println(taskList.getTask(removeTask).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"andytoh1"},"content":"            taskList.deleteTask(removeTask);","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"andytoh1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"andytoh1"},"content":"            Ui.formatErrorMessage(\"delete\");","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"andytoh1"},"content":"     * Handles the output of a mark command.","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"andytoh1"},"content":"     * @param doneTask Index of the task to be marked as done.","lastModifiedDate":"2023-09-26"},{"lineNumber":99,"author":{"gitId":"andytoh1"},"content":"     * @param taskList The TaskList object in which the task is to be marked as done.","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"andytoh1"},"content":"    public static void markMessage(int doneTask, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"andytoh1"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"andytoh1"},"content":"            if (doneTask \u003c 0 || doneTask \u003e\u003d taskList.getCount()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"andytoh1"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"andytoh1"},"content":"            System.out.println(\"Well done! This task has been marked as done.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"andytoh1"},"content":"            if (taskList.getTask(doneTask) instanceof Todo) {","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[T]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":109,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(doneTask) instanceof Deadline) {","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[D]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":111,"author":{"gitId":"andytoh1"},"content":"            } else if (taskList.getTask(doneTask) instanceof Event) {","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"andytoh1"},"content":"                System.out.print(\"[E]\");","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"andytoh1"},"content":"            System.out.print(\"[X] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"andytoh1"},"content":"            System.out.println(taskList.getTask(doneTask).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":116,"author":{"gitId":"andytoh1"},"content":"            taskList.getTask(doneTask).markAsDone();","lastModifiedDate":"2023-09-26"},{"lineNumber":117,"author":{"gitId":"andytoh1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":118,"author":{"gitId":"andytoh1"},"content":"            Ui.formatErrorMessage(\"mark\");","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"andytoh1"},"content":"    public static void todoMessage(Todo todo, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"andytoh1"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"andytoh1"},"content":"        System.out.print(\"Added this task: [T] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"andytoh1"},"content":"        System.out.println(taskList.getTask(taskList.getCount() - 1).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":127,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"andytoh1"},"content":"    public static void deadlineMessage(Deadline deadline, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":129,"author":{"gitId":"andytoh1"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"andytoh1"},"content":"        System.out.print(\"Added this task: [D] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":131,"author":{"gitId":"andytoh1"},"content":"        System.out.println(taskList.getTask(taskList.getCount() - 1).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":132,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":134,"author":{"gitId":"andytoh1"},"content":"    public static void eventMessage(Event event, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":135,"author":{"gitId":"andytoh1"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-09-26"},{"lineNumber":136,"author":{"gitId":"andytoh1"},"content":"        System.out.print(\"Added this task: [E] \");","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"andytoh1"},"content":"        System.out.println(taskList.getTask(taskList.getCount() - 1).getDescription());","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"andytoh1"},"content":"    public static void findMessage(String searchTerm, TaskList taskList) {","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"andytoh1"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"andytoh1"},"content":"        for (int i \u003d 0; i \u003c taskList.getCount(); i++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":143,"author":{"gitId":"andytoh1"},"content":"            String taskDescription \u003d taskList.getTask(i).getDescription();","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"andytoh1"},"content":"            for (int j \u003d 0; j \u003c\u003d taskDescription.length() - searchTerm.length(); j++) {","lastModifiedDate":"2023-09-26"},{"lineNumber":145,"author":{"gitId":"andytoh1"},"content":"                if (taskDescription.substring(j, j+ searchTerm.length()).equals(searchTerm)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"andytoh1"},"content":"                    resultList.addTask(taskList.getTask(i));","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"andytoh1"},"content":"                    break;","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"andytoh1"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"andytoh1"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":150,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":151,"author":{"gitId":"andytoh1"},"content":"        listTasks(resultList);","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":153}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"    public void testSaveTasks() {","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"        TaskList originalList \u003d new TaskList();","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"        Storage.load(originalList);","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"        Task task1 \u003d new Task(\"Task 1\");","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"        Task task2 \u003d new Task(\"Task 2\");","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"        testList.addTask(task1);","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"        testList.addTask(task2);","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        Storage.saveTasks(testList);","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"        TaskList verifyList \u003d new TaskList();","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"        Storage.load(verifyList);","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"        assertEquals(verifyList.getTask(0), task1);","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"        assertEquals(verifyList.getTask(1), task2);","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":22}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"    @Test","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"        Task task1 \u003d new Task(\"Task 1\");","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"        Task task2 \u003d new Task(\"Task 2\");","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"        assertEquals(1, taskList.getCount());","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"        assertEquals(task2, taskList.getTask(0));","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"andytoh1":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"adkpqweqwdpaskda","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"todo abc","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"deadline abc by sunday","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"deadline abc /by sunday","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"andytoh1":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"java -classpath ..\\bin Chatbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andytoh1":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"java -classpath ../bin Chatbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"andytoh1":1,"-":37}}]
