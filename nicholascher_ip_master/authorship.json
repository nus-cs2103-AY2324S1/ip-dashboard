[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    mainClass.set(\"duke.gui.Launcher\")","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicholascher":22,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"DukeyBoy is a desktop app for task management, optimised for use","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"via a Command Line Interface (CLI) while still having the benefits","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"of a Graphical User Interface (GUI). DukeyBoy can help you keep track","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"of all the important things you have going on in your life!","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"\u003e Dates should be written in the YYYY-MM-DD format for all","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"\u003e functions","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"\u003e[!NOTE]","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"\u003e All functions are case sensitive","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"### Getting help: `help`","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"Shows all the functions that DukeyBoy has to offer","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"Format: `help`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"### Viewing all your tasks: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"Displays all the tasks that you have.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"Adds a TODO to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"Format: `todo (description)`","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"Examples: ","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"- `todo Read a book this week!`","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"- `todo Watch the 2103 lecture`","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"Adds a task with a deadline to the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"Format: `deadline (description) /by (date)`","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"- `deadline submit 2103 quiz /by 2023-10-10`","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"- `deadline complete 2101 slides /by 2023-09-10`","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"Adds a task of type event to the list. An event has a start and","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"an end date.","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"Format: `event (description) /from (date) /to (date)`","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"- `event recess week /from 2023-09-23 /to 2023-10-01`","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"### Marking/UnMarking tasks: `mark/unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"Marks/UnMarks a task as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"Format: `mark/unmark (task number as indicated on list)`","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"Example: ","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"- `mark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"Format: `delete (task number as indicated on list)`","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"- `delete 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"### Find a task: `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"Finds a task that contains the keyword provided.","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"Format: `find (keyword)`","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"- `find submit`","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"\u003e[!NOTE] ","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"\u003e The keyword in find is not case-sensitive","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"Saves the list and exits the program.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"Format: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"### Saving the date","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"DukeyBoy will save the list in the hard disk automatically when","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"you exit the program using `bye`.","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"## Command Summary","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"| Action            | Format                                        |","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"|-------------------|-----------------------------------------------|","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"| **Help**          | `help`                                        |","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"| **List**          | `list`                                        |","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"| **Add todo**      | `todo (description)`                          |","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"| **Add deadline**  | `deadline (decription) /by (date)`            |","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"| **Add event**     | `event (description) /from (date) /to (date)` |","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"| **Mark / Unmark** | `mark (pos) / unmark (pos)`                   |","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"| **Delete**        | `delete (pos)`                                |","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"| **Find**          | `find (keyword)`                              |","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"| **Exit**          | `bye`                                          |","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"nicholascher":95,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" *  The main class that represents the Duke but BTR chatbot application.","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Duke object with the given file path.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param filePath The path to the file for storing task data.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"            tasks \u003d new TaskList(storage.load().getList());","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * Returns a response based on the given user input.","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @param input The String given by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @return Returns a String response based on the user input.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            Command command \u003d Parser.handleInput(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholascher":43,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicholascher":15}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private final String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    private final String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * Constructs an AddCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @param type        The type of the task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    public AddCommand(String type, String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Executes the add command, adding the task to the task list and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        Task newTask \u003d list.addTask(this.type, this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        return ui.showTaskAdded(newTask, list.getList());","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":51}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    public abstract String execute(TaskList list, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * @return True if this command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private final String pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be deleted in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    public DeleteCommand(String pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * Executes the delete command, deleting the task from the task list and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        Task deletedTask \u003d list.deleteTask(this.pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        return ui.showDelete(deletedTask, list.getList());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Executes the exit command, saving data and exiting the program.","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        storage.saveDataToFile(list.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        return ui.showExit();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @return True, as this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" * The FindCommand class represents a command to search for tasks containing a specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":" * Upon execution, it searches the task list for tasks that match the given keyword and displays the results.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    private String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * Constructs a FindCommand object with the specified keyword to search for.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * @param keyword The keyword to search for within the task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Executes the FindCommand by searching for tasks that match the specified keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * within the task list and displaying the matching tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param list The task list containing tasks to search within.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @param storage The storage manager for reading and saving task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e resultList \u003d list.findTask(this.keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        return ui.showListMatching(resultList);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether the FindCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     * This method always returns false, as the FindCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     * @return False, indicating that the command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":53}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * Represents a command to show the help dialog.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"        return ui.showHelp();","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"nicholascher":21}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * Executes the list command, displaying the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        return ui.showList(list.getList());","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":37}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" * Represents a command to mark or unMark a task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private final String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private final String pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param type Indicates whether this is a mark or unMark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @param pos  The position of the task to be marked in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    public MarkCommand(String type, String pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        assert type !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        assert pos !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * Executes the mark command, marking or unMarking the task and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    public String execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        Task markedTask \u003d list.markTask(this.type, this.pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        return ui.showMark(this.type, markedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":52}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":" * Represents a custom JavaFX control for displaying dialog boxes.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":" * Each dialog box consists of an ImageView to represent the","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":" * speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * Label to display the text in the dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     * ImageView to display the speaker\u0027s image.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     * @param text   The text to display in the dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     * @param img    The image to display in the dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     * @param isUser True if the dialog belongs to the user; false otherwise.","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    protected DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"        // Make the image a circle","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        displayPicture.setClip(new Circle(50, 50, 45));","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        // Set background color","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        Color bgColor \u003d isUser ? Color.LIGHTBLUE : Color.LIGHTGRAY;","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        BackgroundFill bgFill \u003d new BackgroundFill(bgColor, CornerRadii.EMPTY, Insets.EMPTY);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        Background bg \u003d new Background(bgFill);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"        this.setBackground(bg);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"        // Set height to fit text","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"        double labelHeight \u003d calculateLabelHeight(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"        setMinHeight(labelHeight);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"     * Calculates the height required to display the given text in the dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"     * @param text The text to calculate the height for.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"     * @return The height needed to display the text.","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"    private double calculateLabelHeight(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"        Text tempText \u003d new Text(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"        tempText.setWrappingWidth(200);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"        tempText.setLineSpacing(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"        double height \u003d tempText.getLayoutBounds().getHeight();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"        assert height \u003e 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"        return height;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"     * Flips the dialog box, placing the ImageView on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"     * Creates a DialogBox for the user with the specified text and image.","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"     * @param text The text to display in the user\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"     * @param img  The image to display in the user\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"     * @return A DialogBox for the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"     * Creates a DialogBox for Duke with the specified text and image and flips it.","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"     * @param text The text to display in Duke\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"     * @param img  The image to display in Duke\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     * @return A flipped DialogBox for Duke.","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"nicholascher":125}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":" * A launcher class.","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":" * This is the main entry point for the application.","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":13}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" * The main class for Duke\u0027s graphical user interface (GUI).","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":" * This class launches the Duke application with a graphical interface using JavaFX and FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * The instance of the Duke application.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    private Duke duke \u003d new Duke(\"./data/list.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * The entry point for the JavaFX application.","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     * Initializes the GUI for Duke.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     * @param stage The primary stage for displaying the GUI.","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            //set title of the window","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"            stage.setTitle(\"DUKEYBOY\");","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            // Set Duke instance for the MainWindow controller","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            // Show the main stage","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"     * Launches the Duke GUI application.","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        launch(args);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":57}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":" * Controller for the main window of the Duke application.","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":" * Provides the layout and functionality for user interaction with Duke.","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    // Images for user and Duke avatars","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"            this.getClass().getResourceAsStream(\"/images/DUKE.png\")));","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     * Initializes the main window controller.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"     * Binds the scroll pane\u0027s vertical value to the height of the dialog container for auto-scrolling.","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     * Sets the Duke instance for the controller and displays Duke\u0027s initial greeting.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"                DialogBox.getDukeDialog(\"Hi, I\u0027m Duke! How can I help you today?\", dukeImage)","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     * Handles user input, processes it with Duke, and displays the conversation in dialog boxes.","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"     * Clears the user input field after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        if (response.equals(\"Bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":74}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":" * Represents a parser for handling user inputs and generating corresponding commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * Handles the user input and returns the corresponding command.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     * @return A Command object based on the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue parsing the input or creating the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    public static Command handleInput(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"            arr \u003d new String[] { arr[0], \"\" };","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        String type \u003d arr[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        if (\"bye\".equals(type)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"mark\") || type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            return new MarkCommand(type, arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"deadline\") || type.equals(\"event\") || type.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"            return new AddCommand(type, arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        } else if (\"list\".equals(input.strip())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            return new DeleteCommand(arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"            return new FindCommand(arr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"help\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(ui.showInvalidInput());","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":" * Represents a class for managing data storage and retrieval.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    private static final String LINE \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    private final String filepath;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @param filepath The path to the file where data will be stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        assert filepath !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue loading tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        TaskList lst \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(this.filepath))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"                String taskString \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"                String[] arr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"                lst.readListFromFile(arr);","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Looks like this is your first time!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"                    + \"Let\u0027s start with a new list!\\n\" + LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        return lst;","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    public void saveDataToFile(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"        try (PrintWriter writer \u003d new PrintWriter(this.filepath)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"                writer.println(task.toStringFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":70}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Deadline task for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        return \"D | \" + super.toStringFile() + \"/by \" + by;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task (\"Deadline\").","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        return \"Deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a start and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * Constructs an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"                + \"(from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Event task for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        return \"E | \" + super.toStringFile() + \"/from \" + from + \"/to \" + to;","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task (\"Event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        return \"Event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"     * Compares this Event task with another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"            if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"            return this.description.equals(event.description)","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"                    \u0026\u0026 this.to.equals(event.to) \u0026\u0026 this.from.equals(event.from);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":78}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"     * This constructor initializes a Task object with the provided description and sets its initial","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * \"done\" status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public void mark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        return \"Task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     * Marks the task based on the value read from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * @param isMarked The value indicating whether the task is marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    public void markFromRead(String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"     * Gets the status of the task from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"     * @return The status of the task (1 for done, 0 for not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"    public int getStatusFromFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the task for writing to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the task for file output.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"        return getStatusFromFile() + \" | \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":89}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" * Represents a list of tasks with various operations.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private static final int MIN_LENGTH \u003d 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * Constructs a TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList containing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * Adds a task to the list based on the given type and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @param type The type of task (\"todo\", \"deadline\", or \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     * @return The added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the input type is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    public Task addTask(String type, String description) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        assert type !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        assert description !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"            return addTodo(description, list);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            return addDeadline(description, list);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            return addEvent(description, list);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"That\u0027s not a valid input!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList to which the task will be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     * @return The added ToDo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    public ToDo addTodo(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     * Adds a new Deadline task to the list based on the description provided.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task and its deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the new task to.","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"     * @return The newly added Deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"    public Deadline addDeadline(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"        String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"        if (deadline[0].isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"        boolean isInvalidDeadline \u003d deadline.length \u003d\u003d 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"        if (isInvalidDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please provide a valid deadline\");","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"        Deadline newTask \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"            LocalDate endDate \u003d LocalDate.parse(deadline[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"            newTask \u003d new Deadline(deadline[0], endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"     * Adds a new Event task to the list based on the description provided.","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task and its start and end dates.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the new task to.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"     * @return The newly added Event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"    public static Event addEvent(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"        String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"        if (event[0].isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"The description of an Event cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"        boolean isInvalidDate \u003d event.length \u003c 3;","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"        if (isInvalidDate) {","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please provide a valid start and end date\");","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"        Event newTask \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"            LocalDate start \u003d LocalDate.parse(event[1].stripTrailing());","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"            LocalDate end \u003d LocalDate.parse(event[2].stripTrailing());","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"Your start date has to be before your end date!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"            newTask \u003d new Event(event[0], start, end);","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nicholascher"},"content":"     * Deletes a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nicholascher"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the position is invalid or not provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nicholascher"},"content":"    public Task deleteTask(String pos) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please indicate which item you wish to delete\");","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"nicholascher"},"content":"            int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"nicholascher"},"content":"            boolean isLargerThanLimit \u003d amt \u003e\u003d list.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"nicholascher"},"content":"            boolean isSmallerThanMin \u003d amt \u003c MIN_LENGTH;","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"nicholascher"},"content":"            if (isLargerThanLimit || isSmallerThanMin) {","lastModifiedDate":"2023-09-11"},{"lineNumber":149,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"That\u0027s not a valid item!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"nicholascher"},"content":"            Task temp \u003d list.get(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"nicholascher"},"content":"            list.remove(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"nicholascher"},"content":"            return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"nicholascher"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please enter the number of the item you wish to delete\");","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nicholascher"},"content":"     * Marks or unmarks a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"nicholascher"},"content":"     * @param type The action (\"mark\" or \"unmark\").","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"nicholascher"},"content":"     * @return The task after marking or unmarking.","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the position is invalid or not provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nicholascher"},"content":"    public Task markTask(String type, String pos) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please indicate which item you wish to mark\");","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"nicholascher"},"content":"            int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"nicholascher"},"content":"            boolean isLargerThanLimit \u003d amt \u003e\u003d list.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"nicholascher"},"content":"            boolean isSmallerThanMin \u003d amt \u003c MIN_LENGTH;","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"nicholascher"},"content":"            if (isLargerThanLimit || isSmallerThanMin) {","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"That\u0027s not a valid item!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"nicholascher"},"content":"            Task newTask \u003d list.get(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"nicholascher"},"content":"            if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"nicholascher"},"content":"                newTask.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"nicholascher"},"content":"            } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"nicholascher"},"content":"                newTask.unMark();","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"nicholascher"},"content":"            return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"nicholascher"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Please indicate which item you wish to mark\");","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"nicholascher"},"content":"     * Reads task information from a file and adds it to the task list.","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"nicholascher"},"content":"     * @param arr The array of task information from the file.","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there\u0027s a problem with the file or task data.","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":197,"author":{"gitId":"nicholascher"},"content":"    public void readListFromFile(String[] arr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":198,"author":{"gitId":"nicholascher"},"content":"        if (arr.length !\u003d 3) {","lastModifiedDate":"2023-09-11"},{"lineNumber":199,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"There seems to be a problem with the save file!\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":200,"author":{"gitId":"nicholascher"},"content":"                    + \"Some of the tasks may be gone! Sorry!!\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":201,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"nicholascher"},"content":"        String type \u003d arr[0].strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":203,"author":{"gitId":"nicholascher"},"content":"        String description \u003d arr[2].strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":204,"author":{"gitId":"nicholascher"},"content":"        String isMarked \u003d arr[1].strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":205,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":206,"author":{"gitId":"nicholascher"},"content":"            ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-11"},{"lineNumber":207,"author":{"gitId":"nicholascher"},"content":"            newTask.markFromRead(isMarked);","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"nicholascher"},"content":"            String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"nicholascher"},"content":"            Deadline newTask \u003d new Deadline(deadline[0], LocalDate.parse(deadline[1]));","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"nicholascher"},"content":"            newTask.markFromRead(isMarked);","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":215,"author":{"gitId":"nicholascher"},"content":"            String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-09-11"},{"lineNumber":216,"author":{"gitId":"nicholascher"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"nicholascher"},"content":"                Event newTask \u003d new Event(event[0], LocalDate.parse(event[1]), LocalDate.parse(event[2]));","lastModifiedDate":"2023-09-11"},{"lineNumber":218,"author":{"gitId":"nicholascher"},"content":"                list.add(newTask);","lastModifiedDate":"2023-09-11"},{"lineNumber":219,"author":{"gitId":"nicholascher"},"content":"                newTask.markFromRead(isMarked);","lastModifiedDate":"2023-09-11"},{"lineNumber":220,"author":{"gitId":"nicholascher"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":221,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"There seems to be a problem with the save file!\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":222,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":223,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":224,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":225,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"nicholascher"},"content":"     * Finds tasks that match a specified keyword within the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"nicholascher"},"content":"     * This method searches through the task list for tasks whose descriptions contain the specified keyword,","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"nicholascher"},"content":"     * and returns a list of tasks that match the search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"nicholascher"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"nicholascher"},"content":"     * @return An ArrayList containing tasks that match the search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"nicholascher"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"nicholascher"},"content":"        for (Task task : temp) {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"nicholascher"},"content":"            String cleanDescription \u003d task.getDescription().stripTrailing().toLowerCase();","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"nicholascher"},"content":"            String cleanKeyword \u003d keyword.stripTrailing().toLowerCase();","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"nicholascher"},"content":"            if (cleanDescription.contains(cleanKeyword)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"nicholascher"},"content":"                resultList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"nicholascher"},"content":"        return resultList;","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"nicholascher"},"content":"     * Gets a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"nicholascher"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"nicholascher"},"content":"    public Task getTask(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"nicholascher"},"content":"        return list.get(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"nicholascher"},"content":"     * Gets the entire task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"nicholascher"},"content":"     * @return The ArrayList containing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"nicholascher"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"nicholascher"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":265,"author":{"gitId":"nicholascher"},"content":"        return this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":267}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the ToDo task for writing to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the ToDo task for file output.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        return \"T | \" + super.toStringFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        return \"TODO\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     * Compares this ToDo task to another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"     * @param obj The object to compare.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        if (obj instanceof ToDo) {","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"            ToDo toDo \u003d (ToDo) obj;","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"            return this.description.equals(toDo.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":61}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * The Ui class handles user interface interactions in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private static final String DIVIDER \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Displays a farewell message to the user upon exiting the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @return The farewell message.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    public String showExit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        return \"Bye\";","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * Displays the standard divider line.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @return The divider message.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public String showDivider() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        return DIVIDER;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @return The error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    public String showError(String error) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        return \"Uh oh! Duke has run into a problem:\\n\" + error;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the deletion of a task and the updated task list size.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * @param list The updated list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    public String showDelete(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay, I have deleted this task from the list:\\n\\t %s\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"                + \"Now you have %d items in your list\\n\", task.toString(), list.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the addition of a new task and the updated task list size.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     * @param list The updated list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    public String showTaskAdded(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay, I have added a new %s:\\n\\t %s\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"                + \"You now have %d items in your list!\", task.getType(), task.toString(), list.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the marking or unmarking of a task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"     * @param type The type of action (\"mark\" or \"unmark\").","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"    public String showMark(String type, Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay, I have unmarked this task:\\n%s\\n\", task.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"            msg \u003d String.format(\"Nice!! I have marked this task as done:\\n%s\\n\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"     * Displays the list of tasks with their respective indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"     * @param list The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"     * @return The list of tasks message.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"    public String showList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"        for (int i \u003d 0; i \u003c temp.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"            String nextLine \u003d String.format(\"%d. %s\\n\", i + 1, temp[i].toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"            msg \u003d msg.concat(nextLine);","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"     * Displays a list of tasks that match the specified search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"     * This method is used to show a subset of tasks from the given list that match a certain search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"     * It displays the matching tasks along with their indices in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"     * @param list The list of tasks to search within.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"     * @return The list of matching tasks message.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"    public String showListMatching(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"        for (int i \u003d 0; i \u003c temp.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"            String nextLine \u003d String.format(\"%d. %s\\n\", i + 1, temp[i].toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"            msg \u003d msg.concat(nextLine);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"     * Displays a help message to the user, listing supported commands.","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     * @return The help message.","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"    public String showHelp() {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d \"These are the commands that Duke supports:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"                + \"1. todo (DESCRIPTION)\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"                + \"2. deadline (DESCRIPTION) /by DATE\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"                + \"3. event (DESCRIPTION) /from DATE /to DATE\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"                + \"4. mark/unmark/delete (POSITION)\";","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"     * Displays message to the user, informing them that the input is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"     * @return The invalid input message.","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"    public String showInvalidInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d \"It looks like you have entered an invalid input!\\n\"","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"nicholascher"},"content":"                + \"For a list of all the valid inputs type \\\"help\\\"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"nicholascher"},"content":"        return msg;","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":137}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400\" scaleShape\u003d\"false\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"        \u003cURL value\u003d\"@styles.css\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"            \u003cFont name\u003d\"Century Gothic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"4.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"319.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"81.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"            \u003cFont name\u003d\"Century Gothic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"551.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"49.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":24}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    public void exitCommandParsed_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"        assertTrue(Parser.handleInput(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":16}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    public void addEvent_success() throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"Test Event /from 2023-10-20 /to 2023-10-21\";","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"        TaskList lst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        lst.addTask(\"event\", description);","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        LocalDate testStart \u003d LocalDate.parse(\"2023-10-20\");","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        LocalDate testEnd \u003d LocalDate.parse(\"2023-10-21\");","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        Event expectedEvent \u003d new Event(\"Test Event \", testStart, testEnd);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        expectedList.add(expectedEvent);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        assertEquals(expectedList, lst.getList());","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    public void addEvent_descriptionEmpty_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"            String description \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"            TaskList lst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"            lst.addTask(\"event\", description);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"            assertEquals(\"The description of an Event cannot be empty.\",","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    public void addToDo_success() throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"New TODO\";","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        TaskList lst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        lst.addTask(\"todo\", description);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        ToDo testToDo \u003d new ToDo(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        expectedList.add(testToDo);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        assertEquals(expectedList, lst.getList());","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    public void addTodo_descriptionEmpty_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"            String description \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"            TaskList lst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"            lst.addTask(\"todo\", description);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"            assertEquals(\"The description of a todo cannot be empty.\",","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nicholascher":64}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"        Assertions.assertEquals(\"[T][ ] Test TODO\",","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"                new ToDo(\"Test TODO\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    public void testFileStringConversion() {","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"        Assertions.assertEquals(\"T | 0 | NEW TODO\",","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"                new ToDo(\"NEW TODO\").toStringFile());","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"todo new Task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"deadline new Deadline /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"event new Event /from Sunday /to Monday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"BLAH BLAH BLAH","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"event /from Sunday /to Monday","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"event NEW EVENT /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"deadline /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"deadline NEW DEADLINE /by","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"mark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"unmark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"delete 20","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":20}}]
