[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    public Deadline (String description, LocalDate by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"                \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        return \"D | \" + super.toStringFile() + \"/by \" + by;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public static void addDeadline(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        if (deadline[0].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"            LocalDate endDate \u003d LocalDate.parse(deadline[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            Deadline newTask \u003d new Deadline(deadline[0], endDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Got it. I\u0027ve added the Deadline:\\n\\t\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    public static void addSavedDeadline(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"        Deadline newTask \u003d new Deadline(deadline[0], LocalDate.parse(deadline[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    private static final String line \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private static void saveDataToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"        if (!folder.exists()) folder.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        try (PrintWriter writer \u003d new PrintWriter(\"./data/list.txt\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"                writer.println(task.toStringFile());","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    private static void loadDataFromFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(\"./data/list.txt\"))) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"                String taskString \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"                String[] arr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"                Task.readListFromFile(arr, list);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Welcome back!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"            getList();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Looks like this is your first time!\\nLets start with a new list!\\n\" + line);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    private static void getList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        for (int i \u003d 0; i \u003c temp.length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            System.out.println(i + 1 + \". \" + temp[i].toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    private static void handleDelete(String pos) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please indicate which item you wish to delete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"        int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        if (amt \u003e\u003d list.size()) throw new DukeException(\"☹ OOPS!!! That\u0027s not a valid item!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"        Task temp \u003d list.get(amt);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        list.remove(amt);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Okay I have deleted this task:\\n\\t\" + temp.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"    private static void handleMark(String pos) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please indicate which item you wish to mark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"        int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        if (amt \u003e\u003d list.size()) throw new DukeException(\"☹ OOPS!!! That\u0027s not a valid item!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"        list.get(amt).mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"    private static void handleUnMark(String pos) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please indicate which item you wish to unmark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"        int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"        if (amt \u003e\u003d list.size()) throw new DukeException(\"☹ OOPS!!! That\u0027s not a valid item!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"        list.get(amt).unMark();","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"    protected static String[] handleInput(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"        return arr.length \u003d\u003d 1 ? new String[]{arr[0], \"\"} : arr;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"        String name \u003d \"Duke but btr!\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"        String exit \u003d line + \"Bye Bye. Hope to see you again soon!\\n\" + line;","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line + \"Hello! I\u0027m \" + name + line);","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"        loadDataFromFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"                String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"                String[] arr \u003d handleInput(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"                String type \u003d arr[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"                if (\"bye\".equals(input)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"                    saveDataToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"                    System.out.println(exit);","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"                    Duke.handleMark(arr[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"                    Duke.handleUnMark(arr[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"                    Deadline.addDeadline(arr[1], list);","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"                    Event.addEvent(arr[1], list);","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"                    ToDo.addTodo(arr[1], list);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"nicholascher"},"content":"                } else if (\"list\".equals(input.strip())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"nicholascher"},"content":"                    Duke.getList();","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"nicholascher"},"content":"                } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"nicholascher"},"content":"                    Duke.handleDelete(arr[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"nicholascher"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"nicholascher"},"content":"                    System.out.println(line + \"That\u0027s not a valid action! Try again\\n\"  + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"nicholascher"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"nicholascher"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"nicholascher"},"content":"                System.out.println(line + e.getMessage() + \"\\n\" + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholascher":146,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicholascher":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"                \"(from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        return \"E | \" + super.toStringFile() + \"/from \" + from + \"/to \" + to;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    public static void addEvent(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        if (event[0].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an Event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        if (event.length \u003c 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid start and end date\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            LocalDate start \u003d LocalDate.parse(event[1].stripTrailing());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            LocalDate end \u003d LocalDate.parse(event[2].stripTrailing());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"☹ OOPS!!! Your start date has to be before your end date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"            Event newTask \u003d new Event(event[0], start, end);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Got it. I\u0027ve added the Event:\\n\\t\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    public static void addSavedEvent(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"            Event newTask \u003d new Event(event[0], LocalDate.parse(event[1]), LocalDate.parse(event[2]));","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"            newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Please enter a valid Date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":68}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"    public static String line \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    public static void readListFromFile(String[] arr, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        if (arr.length !\u003d 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Uh Oh! There seems to be a problem with the file!\\n\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"                    \"Some of the tasks may be gone! Sorry!!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        String type \u003d arr[0].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        String description \u003d arr[2].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        String isMarked \u003d arr[1].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"            ToDo.addSavedTodo(description, list, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"            Deadline.addSavedDeadline(description, list, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"            Event.addSavedEvent(description, list, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    public void mark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Nice! I have marked this task as done:\\n\" + this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Okay! I have marked this task as not done yet\\n\" + this.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    public void markFromRead(String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        if (isMarked.equals(\"1\")) this.isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    public int getStatus() { return (isDone ? 1 : 0); }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        return getStatus() + \" | \" + description;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":60}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"    String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        return \"T | \" + super.toStringFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    public static void addTodo(String description, ArrayList\u003cTask\u003e list) throws DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Okay! I added a new TODO:\\n\\t\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    public static void addSavedTodo(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"todo new Task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"deadline new Deadline /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"event new Event /from Sunday /to Monday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"BLAH BLAH BLAH","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"event /from Sunday /to Monday","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"event NEW EVENT /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"deadline /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"deadline NEW DEADLINE /by","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"mark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"unmark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"delete 20","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":20}}]
