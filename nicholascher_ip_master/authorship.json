[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicholascher":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" * The main class that represents the Duke but BTR chatbot application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        ui.showWelcome(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"                ui.showDivider();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"                Command c \u003d Parser.handleInput(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"            } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"                ui.showDivider();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Duke object with the given file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     * @param filePath The path to the file for storing task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        new Duke(\"./data/list.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholascher":58,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicholascher":15}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private final String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private final String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * Constructs an AddCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param type        The type of the task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public AddCommand(String type, String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * Executes the add command, adding the task to the task list and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        Task newTask \u003d list.addTask(this.type, this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        ui.showTaskAdded(newTask, list.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * @return True if this command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private final String pos;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be deleted in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    public DeleteCommand(String pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     * Executes the delete command, deleting the task from the task list and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        Task deletedTask \u003d list.deleteTask(this.pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        ui.showDelete(deletedTask, list.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Executes the exit command, saving data and displaying an exit message.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        storage.saveDataToFile(list.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        ui.showExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @return True, as this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" * The FindCommand class represents a command to search for tasks containing a specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":" * Upon execution, it searches the task list for tasks that match the given keyword and displays the results.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    private String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * Constructs a FindCommand object with the specified keyword to search for.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * @param keyword The keyword to search for within the task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Executes the FindCommand by searching for tasks that match the specified keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * within the task list and displaying the matching tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param list The task list containing tasks to search within.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @param storage The storage manager for reading and saving task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e resultList \u003d list.findTask(this.keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        ui.showListMatching(resultList);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether the FindCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     * This method always returns false, as the FindCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     * @return False, indicating that the command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":53}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Executes the list command, displaying the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ui.showList(list.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":34}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * Represents a command to mark or unMark a task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private final String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    private final String pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param type Indicates whether this is a mark or unMark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param pos  The position of the task to be marked in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public MarkCommand(String type, String pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        this.pos \u003d pos;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * Executes the mark command, marking or unMarking the task and displaying relevant messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @param list    The TaskList object managing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * @param ui      The Ui object to interact with the user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param storage The Storage object to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        Task markedTask \u003d list.markTask(this.type, this.pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        ui.showMark(this.type, markedTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":49}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":" * Represents a parser for handling user inputs and generating corresponding commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * Handles the user input and returns the corresponding command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * @return A Command object based on the parsed input.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue parsing the input or creating the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public static Command handleInput(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"            arr \u003d new String[] { arr[0], \"\" };","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"        String type \u003d arr[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        if (\"bye\".equals(type)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"mark\") || type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            return new MarkCommand(type, arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"deadline\") || type.equals(\"event\") || type.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            return new AddCommand(type, arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        } else if (\"list\".equals(input.strip())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            return new DeleteCommand(arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"            return new FindCommand(arr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Oops!! That does not seem to be a valid command!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":54}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":" * Represents a class for managing data storage and retrieval.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    private final String filepath;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    private static final String LINE \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @param filepath The path to the file where data will be stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue loading tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(this.filepath))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"                String taskString \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"                String[] arr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"                Task.readListFromFile(arr, temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Looks like this is your first time!\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"                    \"Let\u0027s start with a new list!\\n\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"        return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    public void saveDataToFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"        File folder \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        if (!folder.exists()) folder.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        try (PrintWriter writer \u003d new PrintWriter(this.filepath)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"                writer.println(task.toStringFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":67}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Deadline task for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        return \"D | \" + super.toStringFile() + \"/by \" + by;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task (\"Deadline\").","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"        return \"Deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     * Adds a new Deadline task to the list based on the description provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task and its deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the new task to.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"     * @return The newly added Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"    public static Deadline addDeadline(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        if (deadline[0].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"        if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"        Deadline newTask \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"            LocalDate endDate \u003d LocalDate.parse(deadline[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"            newTask \u003d new Deadline(deadline[0], endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"     * Adds a Deadline task to the list based on the saved description and mark status.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"     * @param description The saved description of the task and its deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the saved task to.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"     * @param isMarked    The mark status of the saved task (\"1\" for marked, \"0\" for unmarked).","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"    public static void addDeadlineFromFile(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        String[] deadline \u003d description.stripTrailing().split(\"/by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"        Deadline newTask \u003d new Deadline(deadline[0], LocalDate.parse(deadline[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"        newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":99}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a start and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":" * */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * Constructs an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"                \"(from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"     * Returns a formatted string representation of the Event task for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     * @return The formatted string representation for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"        return \"E | \" + super.toStringFile() + \"/from \" + from + \"/to \" + to;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task (\"Event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"        return \"Event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"     * Adds a new Event task to the list based on the description provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task and its start and end dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the new task to.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     * @return The newly added Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there is an issue adding the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"    public static Event addEvent(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"        if (event[0].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an Event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"        if (event.length \u003c 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid start and end date\");","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"        Event newTask \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"            LocalDate start \u003d LocalDate.parse(event[1].stripTrailing());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"            LocalDate end \u003d LocalDate.parse(event[2].stripTrailing());","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"                throw new DukeException(\"☹ OOPS!!! Your start date has to be before your end date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"            newTask \u003d new Event(event[0], start, end);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Your date should be formatted as YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"     * Adds an Event task to the list based on the saved description and mark status.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"     * @param description The saved description of the task and its start and end dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"     * @param list        The ArrayList of tasks to add the saved task to.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"     * @param isMarked    The mark status of the saved task (\"1\" for marked, \"0\" for unmarked).","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"    public static void addEventFromFile(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"        String[] event \u003d description.stripTrailing().split(\"/from |/to \");","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"            Event newTask \u003d new Event(event[0], LocalDate.parse(event[1]), LocalDate.parse(event[2]));","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"            list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"            newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"            System.out.println(\"Please enter a valid Date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     * Compares this Event task with another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"        if (obj instanceof Event event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"            if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"            return this.description.equals(event.description) \u0026\u0026","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"                    this.to.equals(event.to) \u0026\u0026 this.from.equals(event.from);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":133}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"     * This constructor initializes a Task object with the provided description and sets its initial","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"     * \"done\" status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Reads task information from a file and adds it to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param arr The array of task information from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList to which the tasks will be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If there\u0027s a problem with the file or task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"    public static void readListFromFile(String[] arr, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        if (arr.length !\u003d 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"Uh Oh! There seems to be a problem with the file!\\n\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"                    \"Some of the tasks may be gone! Sorry!!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        String type \u003d arr[0].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        String description \u003d arr[2].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        String isMarked \u003d arr[1].strip();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"            ToDo.addToDoFromFile(description, list, isMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"            Deadline.addDeadlineFromFile(description, list, isMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"            Event.addEventFromFile(description, list, isMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"    public void mark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"        return \"Task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"     * Marks the task based on the value read from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"     * @param isMarked The value indicating whether the task is marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"    public void markFromRead(String isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"        if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"     * Gets the status of the task from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"     * @return The status of the task (1 for done, 0 for not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"    public int getStatusFromFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the task for writing to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the task for file output.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"        return getStatusFromFile() + \" | \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":127}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":" * Represents a list of tasks with various operations.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Constructs a TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList containing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        this.list \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Adds a task to the list based on the given type and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param type The type of task (\"todo\", \"deadline\", or \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * @return The added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the input type is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"    public Task addTask(String type, String description) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            return ToDo.addTodo(description, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            return Deadline.addDeadline(description, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            return Event.addEvent(description, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"That\u0027s not a valid input!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"     * Deletes a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the position is invalid or not provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"    public Task deleteTask(String pos) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please indicate which item you wish to delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"        int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        if (amt \u003e\u003d list.size()) throw new DukeException(\"☹ OOPS!!! That\u0027s not a valid item!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        Task temp \u003d list.get(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        list.remove(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     * Marks or unmarks a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     * @param type The action (\"mark\" or \"unmark\").","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to be marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"     * @return The task after marking or unmarking.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the position is invalid or not provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"    public Task markTask(String type, String pos) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"        if (pos.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! Please indicate which item you wish to mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"        int amt \u003d Integer.parseInt(pos.strip()) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"        if (amt \u003e\u003d list.size()) throw new DukeException(\"☹ OOPS!!! That\u0027s not a valid item!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"        Task newTask \u003d list.get(amt);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"            newTask.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"        } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"            newTask.unMark();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"     * Finds tasks that match a specified keyword within the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"     * This method searches through the task list for tasks whose descriptions contain the specified keyword,","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"     * and returns a list of tasks that match the search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"     * @return An ArrayList containing tasks that match the search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"        for (Task task : temp) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"            String description \u003d task.getDescription().stripTrailing().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"            if (description.contains(keyword.stripTrailing().toLowerCase())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"                resultList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"        return resultList;","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     * Gets a task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"     * @param pos The position of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"    public Task getTask(int pos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"        return list.get(pos);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"     * Gets the entire task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"     * @return The ArrayList containing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"        return this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":134}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"    public String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"     * Returns a string representation of the ToDo task for writing to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"     * @return A string representation of the ToDo task for file output.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"    public String toStringFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        return \"T | \" + super.toStringFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"    public String getType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"        return \"TODO\";","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList to which the task will be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     * @return The added ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"    public static ToDo addTodo(String description, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"     * Adds a ToDo task to the list of tasks from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"     * @param list The ArrayList to which the task will be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"     * @param isMarked The value indicating whether the task is marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"    public static void addToDoFromFile(String description, ArrayList\u003cTask\u003e list, String isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"        newTask.markFromRead(isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"     * Compares this ToDo task to another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"     * @param obj The object to compare.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"        if (obj instanceof ToDo toDo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"            return this.description.equals(toDo.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":94}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":" * The Ui class handles the user interface interactions of the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    private static final String DIVIDER \u003d \"___________________________________\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"     * Constructs an Ui object and initializes the scanner for user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"     * Displays a farewell message to the user upon exiting the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"    public void showExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Bye Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"     * Displays a welcome message along with the existing task list or an empty list message.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"    public void showWelcome(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d \"Looks like you have been here before!\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            msg \u003d \"Looks like your list is empty!\\nTime to add some new Tasks!\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        String welcome \u003d String.format(\"Hi I\u0027m Duke but BETTTERRRR!!!\\n%s\", msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        System.out.println(welcome + DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"        if (!list.isEmpty()){","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"            showList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"            showDivider();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nicholascher"},"content":"     * Displays the standard divider line.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nicholascher"},"content":"    public void showDivider() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholascher"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nicholascher"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nicholascher"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nicholascher"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholascher"},"content":"        System.out.println(error);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the deletion of a task and the updated task list size.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nicholascher"},"content":"     * @param list The updated list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nicholascher"},"content":"    public void showDelete(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay I have deleted this task from the list\\n\\t %s\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nicholascher"},"content":"                \"Now you have %d items in your list\\n\", task.toString(), list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nicholascher"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the addition of a new task and the updated task list size.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nicholascher"},"content":"     * @param list The updated list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nicholascher"},"content":"    public void showTaskAdded(Task task, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay!! I have added a new %s\\n\\t %s\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nicholascher"},"content":"                \"You now have %d items in your list!\", task.getType(), task.toString(), list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nicholascher"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nicholascher"},"content":"     * Displays a message confirming the marking or unMarking of a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nicholascher"},"content":"     * @param type The type of action (\"mark\" or \"unMark\").","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nicholascher"},"content":"     * @param task The task that was marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nicholascher"},"content":"    public void showMark(String type, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nicholascher"},"content":"        String msg \u003d String.format(\"Okay I have unmarked this task:\\n%s\\n\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nicholascher"},"content":"        if (type.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nicholascher"},"content":"            msg \u003d String.format(\"Nice!! I have marked this task as done:\\n%s\\n\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nicholascher"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nicholascher"},"content":"     * Displays the list of tasks with their respective indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nicholascher"},"content":"     * @param list The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nicholascher"},"content":"    public void showList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nicholascher"},"content":"        for (int i \u003d 0; i \u003c temp.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nicholascher"},"content":"            System.out.println(i + 1 + \". \" + temp[i].toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nicholascher"},"content":"     * Displays a list of tasks that match the specified search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nicholascher"},"content":"     * This method is used to show a subset of tasks from the given list that match a certain search criteria.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nicholascher"},"content":"     * It displays the matching tasks along with their indices in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nicholascher"},"content":"     * @param list The list of tasks to search within.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nicholascher"},"content":"    public void showListMatching(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nicholascher"},"content":"        Task[] temp \u003d list.toArray(new Task[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nicholascher"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nicholascher"},"content":"        for (int i \u003d 0; i \u003c temp.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nicholascher"},"content":"            System.out.println(i + 1 + \". \" + temp[i].toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nicholascher"},"content":"     * Reads and retrieves a user command from the console input.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nicholascher"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nicholascher"},"content":"     * @return The user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nicholascher"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"nicholascher"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"nicholascher"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nicholascher"},"content":"     * Displays an \"invalid command\" message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nicholascher"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nicholascher"},"content":"    public void invalidCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"nicholascher"},"content":"        System.out.println(DIVIDER + \"Oops! That does not seem to be a valid action!\\n\" + DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholascher":146}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"    public void exitCommandParsed_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"        assertTrue(Parser.handleInput(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    public void addEvent_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"Test Event /from 2023-10-20 /to 2023-10-21\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"        LocalDate testStart \u003d LocalDate.parse(\"2023-10-20\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        LocalDate testEnd \u003d LocalDate.parse(\"2023-10-21\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        Event expectedEvent \u003d new Event(\"Test Event \", testStart, testEnd);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        expectedList.add(expectedEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"        assertEquals(expectedEvent, Event.addEvent(description, testList));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        assertEquals(expectedList, testList);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    public void addEvent_descriptionEmpty_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        LocalDate testStart \u003d LocalDate.parse(\"2023-10-20\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"        LocalDate testEnd \u003d LocalDate.parse(\"2023-10-21\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"            assertEquals(new Event(description, testStart, testEnd), Event.addEvent(description, testList));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"            assertEquals(\"☹ OOPS!!! The description of an Event cannot be empty.\",","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":44}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"        Assertions.assertEquals(\"[T][ ] Test TODO\",","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"                new ToDo(\"Test TODO\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"    public void addToDo_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"New TODO\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nicholascher"},"content":"        ToDo testToDo \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nicholascher"},"content":"        expectedList.add(testToDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nicholascher"},"content":"        assertEquals(testToDo, ToDo.addTodo(description, testList));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nicholascher"},"content":"        assertEquals(expectedList, testList);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nicholascher"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nicholascher"},"content":"    public void addTodo_descriptionEmpty_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nicholascher"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nicholascher"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nicholascher"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nicholascher"},"content":"            assertEquals(new ToDo(description), ToDo.addTodo(description, testList));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nicholascher"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nicholascher"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nicholascher"},"content":"            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\",","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nicholascher"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nicholascher"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nicholascher"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nicholascher"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nicholascher"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nicholascher":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholascher"},"content":"todo new Task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholascher"},"content":"deadline new Deadline /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholascher"},"content":"event new Event /from Sunday /to Monday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholascher"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholascher"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholascher"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nicholascher"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholascher"},"content":"BLAH BLAH BLAH","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholascher"},"content":"event /from Sunday /to Monday","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nicholascher"},"content":"event NEW EVENT /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nicholascher"},"content":"deadline /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nicholascher"},"content":"deadline NEW DEADLINE /by","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholascher"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nicholascher"},"content":"mark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholascher"},"content":"unmark 20","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicholascher"},"content":"delete 20","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nicholascher"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nicholascher"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicholascher"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nicholascher"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholascher":20}}]
