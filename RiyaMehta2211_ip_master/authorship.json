[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.10.0\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"run {","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    archiveFileName \u003d \u0027HarryPotter.jar\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"# Harry Potter","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"1. Add / Delete task","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"2. Update attributes of the specified task in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"2. Mark / Unmark task","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"3. Mark / Unmark / Delete all tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"4. Find tasks with a matching keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"5. Save latest list of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"6. Produce help list of commands","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"### Add / Delete task","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"Allows users to add or delete tasks of type (ToDo, Deadline \u0026 Event)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"from the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"### Update task","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"Update description or dates of the task at specified index from the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"### Mark / Unmark task","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"Allows users to mark task at the specified index of the list as done or not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"### Mark / Unmark / Delete all tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"Allows users to mark, unmark or delete all the tasks in the list in one go.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"### Find tasks with a matching keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"Allows users to view tasks with the matching keyword in their description.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"### Save latest list of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"Most updated version of the list of tasks is saved so that users can access it next time.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"### Produce help list of commands","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"Users can access this help list of commands to learn more about the different commands handled.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"### `help` - View the list of commands","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"Users can view the list of commands handled under the help page","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"`help`","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"No worries, muggle! Harry Potter is here to help :D Accio Help Guide! ","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"Here are the commands for use: ","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"1. help: shows this list of commands","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"2. mark\u003cindex\u003e: marks task at \u003cindex\u003e in the list as done \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"3. mark all: marks all tasks in the list as done ","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"...","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"### `update` - Update attributes of a task in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"Users can specify the task and update attributes like description \u0026 start or end dates \u0026 times depending on the type of Task","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"`update 1 /description go on a holiday`","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve updated this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"[T][ ] go on a holiday","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"`update 1 /deadline 2023-12-12 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve updated this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"[D][ ] homework (by: Dec 12 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"`update 2 /event start date 2023-12-12 1900`","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve updated this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"[E][ ] networking (from: Dec 12 2023 1900 to: Dec 12 2130)","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"`update 2 /event end date 2023-12-12 2100`","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve updated this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"[E][ ] networking (from: Dec 12 2023 1900 to: Dec 12 2100)","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"### `list` - returns list of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"Users can access the most updated list of tasks using this command.","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"1. [T][ ] go on a holiday","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"2. [D][X] assignment (by: Oct 4 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"...","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"### `mark` - Mark task in list as done","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"Users can mark the task at specified index of the list as done","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"`mark 3`","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"[T][X] apply for summer internship","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"### `todo` - Add task of type ToDo to list","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"Users can add tasks with no deadline of type ToDo to list","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"`todo go on a holiday`","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"RiyaMehta2211"},"content":"    [T][] go on a holiday","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"### `deadline` - Add task of type Deadline to list","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"RiyaMehta2211"},"content":"Users can add tasks with a deadline of type Deadline to list","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"RiyaMehta2211"},"content":"`deadline homework /by 2023-09-22 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"RiyaMehta2211"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"RiyaMehta2211"},"content":"    [D][] homework (by: Sep 22 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"RiyaMehta2211"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"RiyaMehta2211"},"content":"### `event` - Add task of type Event to list","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"RiyaMehta2211"},"content":"Users can add tasks with a start and end date \u0026 time of type Event to list","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"RiyaMehta2211"},"content":"`event networking /from 2023-09-22 1900 /to 2023-09-22 2130`","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"RiyaMehta2211"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"RiyaMehta2211"},"content":"    [E][] networking (from: Sep 22 2023 1900 to: Sep 22 2023 2130)","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"RiyaMehta2211"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"RiyaMehta2211"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"RiyaMehta2211"},"content":"### `mark all` - mark all tasks in list as done","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"RiyaMehta2211"},"content":"Users can now mark all the tasks in the list as done easily","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"RiyaMehta2211"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"RiyaMehta2211"},"content":"`mark all`","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"RiyaMehta2211"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"Nice! I\u0027ve marked all tasks as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"RiyaMehta2211"},"content":"1. [T][X] go on a holiday","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"RiyaMehta2211"},"content":"2. [D][X] assignment (by: Oct 4 2023 2359)","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"RiyaMehta2211"},"content":"...","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"RiyaMehta2211":161,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * The Duke class represents a chatbot that generates a list of tasks based on user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * These tasks can include deadlines, events, and ToDos. The user input is parsed to extract","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" * dates and times for events and deadlines.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    TaskList tasks \u003d Storage.loadTasks(\"src/data/Duke.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     * Initiates interaction with the Duke application.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     * This method prompts the user and parses their input.","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    public void dukeInteraction() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        Ui.printHello();","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"            Parser.chat(str, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"            str \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        Ui.printBye();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        duke.dukeInteraction();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        return Parser.chat(input, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":37,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Initializes and starts the JavaFX application.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param stage The primary stage for this application, representing the main window.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        assert duke !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"            stage.setTitle(\"Wizarding World Organizer\");","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":39}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.exception.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":" * The Parser class is responsible for parsing user input and executing commands to manage tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":" * It handles various command types such as adding ToDos, Deadlines, and Events, marking tasks as done,","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":" * deleting tasks, and listing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     * Default constructor to initialize the Parser class.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    public Parser() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        //empty constructor to initialize class objects","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    static String temp \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void updateTask(String str, TaskList tasks) throws InvalidInputException, EmptyInputException, TaskTypeMismatchException {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        String num \u003d str.substring(7, 8);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new InvalidInputException(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        if (str.contains(\"/description\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"            String description \u003d str.substring(21).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"            task.updateDescription(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.contains(\"/deadline\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!task.taskString().contains(\"[D]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new TaskTypeMismatchException(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"            String date \u003d str.substring(18).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"            if (date.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"            deadline.updateDateTime(LocalDateTime.parse(date, formatter));","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.contains(\"/event start date\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!task.taskString().contains(\"[E]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new TaskTypeMismatchException(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"            String date \u003d str.substring(27).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"            if (date.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"            event.updateStartDateTime(LocalDateTime.parse(date, formatter));","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.contains(\"/event end date\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!task.taskString().contains(\"[E]\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new TaskTypeMismatchException(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"            String date \u003d str.substring(25).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"            if (date.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"            event.updateEndDateTime(LocalDateTime.parse(date, formatter));","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new InvalidInputException(str);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        temp \u003d  Ui.printUpdatedTask(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"     * Updates a task list based on the provided input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string containing the instruction to be performed.","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList object representing the list of tasks to be updated.","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws InvalidInputException If the input string is invalid","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void updateList(String str, TaskList tasks) throws InvalidInputException, EmptyInputException, TaskTypeMismatchException {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"        if (str.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"            if (str.startsWith(\"mark all\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"                    tasks.markDone(i);","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printAllDone(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"            } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"                String num \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"                if (num.trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"                int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"                if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"                int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"                tasks.markDone(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"                Task done \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printDone(done);","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"            if (str.startsWith(\"unmark all\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"                for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"                    tasks.markNotDone(i);","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printAllNotDone(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"                String num \u003d str.substring(7);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"                if (num.trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"                int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"                if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"                int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"                tasks.markNotDone(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"                Task notDone \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printNotDone(notDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.startsWith(\"update \")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"            updateTask(str, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"        } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"            if (str.startsWith(\"delete all\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"                while (tasks.getSize() !\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"                    tasks.removeTask(0);","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printAllDeleted(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"            else {","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"                String num \u003d str.substring(7);","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"                if (num.trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"                int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"RiyaMehta2211"},"content":"                if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"RiyaMehta2211"},"content":"                int index \u003d number - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"RiyaMehta2211"},"content":"                Task toBeDeleted \u003d tasks.removeTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printDelete(toBeDeleted, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a list of tasks based on the input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList to process tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void returnList(String str, TaskList tasks) throws EmptyInputException {","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"RiyaMehta2211"},"content":"        if (str.startsWith(\"find \")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"RiyaMehta2211"},"content":"            //return tasklist with matching keywords","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"RiyaMehta2211"},"content":"            String keyword \u003d str.substring(5);","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"RiyaMehta2211"},"content":"            if (keyword.trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"RiyaMehta2211"},"content":"            TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"RiyaMehta2211"},"content":"                if (tasks.getTask(i).getTask().contains(keyword)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"RiyaMehta2211"},"content":"                    matchingTasks.addTask(tasks.getTask(i));","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"RiyaMehta2211"},"content":"            temp \u003d Ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"RiyaMehta2211"},"content":"        else if (str.equals(\"list\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"RiyaMehta2211"},"content":"            temp \u003d Ui.listTasks(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds the tasks of type ToDo into tasklist based on the input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList to process tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws ToDoCommandUseException","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void addToDo(String str, TaskList tasks) throws ToDoCommandUseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"RiyaMehta2211"},"content":"        String todo \u003d str.substring(4);","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"RiyaMehta2211"},"content":"        //remove any leading and trailing whitespace characters and","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"        //check whether there is a task after the instruction","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"RiyaMehta2211"},"content":"        if (todo.trim().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"RiyaMehta2211"},"content":"            //this would mean the instruction is incomplete","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new ToDoCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"RiyaMehta2211"},"content":"        String string \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"RiyaMehta2211"},"content":"        Task task \u003d new ToDo(string);","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"RiyaMehta2211"},"content":"        temp \u003d Ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds the tasks of type Deadline into tasklist based on the input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList to process tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws DeadlineCommandUseException","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void addDeadline(String str, TaskList tasks) throws DeadlineCommandUseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"RiyaMehta2211"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!str.contains(\"/by \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new DeadlineCommandUseException(str); //needs to check for /by","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"RiyaMehta2211"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"RiyaMehta2211"},"content":"            String byWhen \u003d \"/by \";","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"RiyaMehta2211"},"content":"            int index \u003d str.indexOf(byWhen);","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"RiyaMehta2211"},"content":"            String deadline \u003d str.substring(index + 4); //remove /by from the substring","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"RiyaMehta2211"},"content":"            if (deadline.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new DeadlineCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"RiyaMehta2211"},"content":"            String workToDo \u003d str.substring(9, index);","lastModifiedDate":"2023-09-13"},{"lineNumber":212,"author":{"gitId":"RiyaMehta2211"},"content":"            workToDo \u003d workToDo.trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"RiyaMehta2211"},"content":"            Task task \u003d new Deadline(workToDo, LocalDateTime.parse(deadline, formatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"RiyaMehta2211"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"RiyaMehta2211"},"content":"            temp \u003d Ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds the tasks of type Event into tasklist based on the input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string.","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList to process tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws EventCommandUseException","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void addEvent(String str, TaskList tasks) throws EventCommandUseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":225,"author":{"gitId":"RiyaMehta2211"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":226,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!str.contains(\"/from\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"RiyaMehta2211"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"RiyaMehta2211"},"content":"            String fromMarker \u003d \"/from \"; //mark the /from index of the string","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"RiyaMehta2211"},"content":"            int firstIndex \u003d str.indexOf(fromMarker);","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"RiyaMehta2211"},"content":"            int secondIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"RiyaMehta2211"},"content":"            String fromWhen;","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"RiyaMehta2211"},"content":"            String toWhen;","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"RiyaMehta2211"},"content":"            String workToDo \u003d str.substring(6, firstIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":235,"author":{"gitId":"RiyaMehta2211"},"content":"            workToDo \u003d workToDo.trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"RiyaMehta2211"},"content":"            String afterFirstIndex \u003d str.substring(firstIndex + 6);","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!afterFirstIndex.contains(\"/to \")) { //to check the input of /to after /from","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"RiyaMehta2211"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"RiyaMehta2211"},"content":"                String toMarker \u003d \"/to \"; //mark the /to index of the string","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"RiyaMehta2211"},"content":"                secondIndex \u003d afterFirstIndex.indexOf(toMarker); //to make sure we get the /to after the /from","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"RiyaMehta2211"},"content":"                fromWhen \u003d afterFirstIndex.substring(0, secondIndex).trim(); //get the from timing","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"RiyaMehta2211"},"content":"                toWhen \u003d afterFirstIndex.substring(secondIndex + 3).trim(); //get the to timing","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"RiyaMehta2211"},"content":"                if (fromWhen.trim().isEmpty() ||","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"RiyaMehta2211"},"content":"                        toWhen.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"RiyaMehta2211"},"content":"                Task task \u003d new Event(workToDo, LocalDateTime.parse(fromWhen, formatter),","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime.parse(toWhen, formatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"RiyaMehta2211"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":251,"author":{"gitId":"RiyaMehta2211"},"content":"                temp \u003d Ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":252,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds the 3 different types of tasks into tasklist based on the input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str   The input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The TaskList to process tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void addTasks(String str, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"RiyaMehta2211"},"content":"            if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"RiyaMehta2211"},"content":"                addToDo(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"RiyaMehta2211"},"content":"            } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"RiyaMehta2211"},"content":"                addDeadline(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"RiyaMehta2211"},"content":"            } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"RiyaMehta2211"},"content":"                addEvent(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":268,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (EventCommandUseException | DeadlineCommandUseException |","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"RiyaMehta2211"},"content":"                ToDoCommandUseException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"RiyaMehta2211"},"content":"            temp \u003d Ui.printException(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":274,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"RiyaMehta2211"},"content":"     * Parses user input and executes various instructions to manage tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str    The user input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks  The task list to which tasks are added or manipulated.","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String chat(String str, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"RiyaMehta2211"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"RiyaMehta2211"},"content":"                Storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"RiyaMehta2211"},"content":"                return Ui.printBye();","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":285,"author":{"gitId":"RiyaMehta2211"},"content":"            else if (str.equals(\"help\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"RiyaMehta2211"},"content":"                Storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":287,"author":{"gitId":"RiyaMehta2211"},"content":"                return Ui.printHelp();","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"RiyaMehta2211"},"content":"            else if (str.startsWith(\"mark \") || str.startsWith(\"unmark \")","lastModifiedDate":"2023-09-13"},{"lineNumber":290,"author":{"gitId":"RiyaMehta2211"},"content":"                    || str.startsWith(\"delete \") || str.startsWith(\"update\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":291,"author":{"gitId":"RiyaMehta2211"},"content":"                updateList(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"RiyaMehta2211"},"content":"                Storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":293,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"RiyaMehta2211"},"content":"            else if (str.startsWith(\"todo\") || str.startsWith(\"deadline\")","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"RiyaMehta2211"},"content":"                    || str.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"RiyaMehta2211"},"content":"                addTasks(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"RiyaMehta2211"},"content":"                Storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":298,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"RiyaMehta2211"},"content":"            else if (str.equals(\"list\") || str.startsWith(\"find \")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"RiyaMehta2211"},"content":"                returnList(str, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"RiyaMehta2211"},"content":"                Storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":302,"author":{"gitId":"RiyaMehta2211"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":303,"author":{"gitId":"RiyaMehta2211"},"content":"                throw new InvalidInputException(str);","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":305,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":306,"author":{"gitId":"RiyaMehta2211"},"content":"            //detect inputs that don\u0027t follow the yyyy-MM-dd HHmm format","lastModifiedDate":"2023-09-02"},{"lineNumber":307,"author":{"gitId":"RiyaMehta2211"},"content":"            return Ui.printException();","lastModifiedDate":"2023-09-10"},{"lineNumber":308,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (EmptyInputException| TaskTypeMismatchException | InvalidInputException | FileNotFoundException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":309,"author":{"gitId":"RiyaMehta2211"},"content":"            return Ui.printException(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":310,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":311,"author":{"gitId":"RiyaMehta2211"},"content":"        return temp;","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":313,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"RiyaMehta2211":313}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":" * The Storage class is responsible for reading and writing tasklists","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":" * to and from the Duke.txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"public class Storage{","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"     * Saves the tasks in the task list to the specified file path.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file where tasks will be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * //@param tasks    The task list to be saved.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    public static void saveTasks(String filePath, TaskList tasks) throws FileNotFoundException{","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"            createDirectoryIfNotExists(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"                String taskData \u003d formatTaskData(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                fileWriter.write(taskData);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"            fileWriter.close(); // Don\u0027t forget to close the FileWriter when done.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     * Formats a task into a string representation suitable for saving to a file.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    static String formatTaskData(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        // Customize this method based on your Task class structure.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d task.saveTaskString();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        return str;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     * Loads tasks from the specified file path and returns them as a TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file from which tasks will be loaded.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A TaskList containing the loaded tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"    public static TaskList loadTasks(String filePath) {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        assert !filePath.equals(\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"            createDirectoryIfNotExists(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"                String[] components \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"                String taskType \u003d components[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"                boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"                String description \u003d components[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new ToDo(description, isDone));","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new Deadline(description, isDone, by));","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(components[4]);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new Event(description, isDone, from, to));","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"            reader.close(); // Close the reader when done.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"        return taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates the necessary directory and file if they do not exist.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file to be created.","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws IOException If an error occurs during directory or file creation.","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"    private static void createDirectoryIfNotExists(String filePath) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"        Path path \u003d FileSystems.getDefault().getPath(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"        Path parentDir \u003d path.getParent();","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!Files.exists(parentDir)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"                Files.createDirectories(parentDir);","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":126}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * The TaskList class represents a list of tasks in Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * It provides methods for adding, removing, and retrieving tasks from the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class TaskList{","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     * Default constructor to initialize an empty TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task removeTask(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        assert index \u003c this.tasks.size() \u0026\u0026 index \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The retrieved task.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task getTask(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        assert index \u003c this.tasks.size() \u0026\u0026 index \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markDone(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markNotDone(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":78}},{"path":"src/main/java/duke/exception/DeadlineCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for a deadline command is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the \u0027/by\u0027 part of the deadline command is missing or not followed","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * by a valid date and time.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"public class DeadlineCommandUseException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a DeadlineCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the deadline command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public DeadlineCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! deadline must be followed by a task to be added to the list \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                \"and a time specified after \u0027/by\u0027 \");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":19}},{"path":"src/main/java/duke/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"public class EmptyInputException extends Exception{","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"    public EmptyInputException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"        super(\"\\n\\tAccio error! Description, index or date entered cannot be empty! \" +","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Type \u0027help\u0027 to see the list of valid inputs and the expected formats! \");","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"RiyaMehta2211":8}},{"path":"src/main/java/duke/exception/EventCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for an event command is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the \u0027/from\u0027 or \u0027/to\u0027 parts of the event command are missing or","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * not followed by valid date and time.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"public class EventCommandUseException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs an EventCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the event command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public EventCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! Invalid input as when the event starts \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                \"must be specified after \u0027/from\u0027. When the event ends must also be specified after \u0027/to\u0027.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":19}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input is invalid or not recognized.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the user provides an input that does not match any of the valid instructions.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs an InvalidInputException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating that the input provided is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\n\\tAccio error! I don\u0027t know what the input means D: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Please enter valid inputs. Type \u0027help\u0027 to see the list of valid inputs! \");","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":19}},{"path":"src/main/java/duke/exception/TaskTypeMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"public class TaskTypeMismatchException extends Exception {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"    public TaskTypeMismatchException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\n\\tAccio error! It appears the Task type of the entered index does not match the \" +","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"                \"type of the intended Task to be updated.\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"                \" Type \u0027help\u0027 to see the list of valid inputs and the expected formats! \");","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"RiyaMehta2211":9}},{"path":"src/main/java/duke/exception/ToDoCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for a todo instruction is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the todo command is not followed by a task description to be added to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDoCommandUseException extends Exception{","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a ToDoCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the todo command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDoCommandUseException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! todo must be followed by a task to be added to the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents a Deadline task type","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description, a deadline and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a Deadline Task Object with the task description and date","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Deadline Task","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param date The deadline by which the Deadline Task is due","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a Deadline Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description, completion status and date","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Deadline Task","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone represents the completion status of the task","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param date The deadline by which the Deadline Task is due","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime date) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public void updateDateTime(LocalDateTime date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Deadline Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type, completion status, description, and due date/time.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Deadline Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[D]\" + super.taskString() + \" (by: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the Deadline Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the deadline tasks to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     * description, and due date.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Deadline Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"D\" + \"|\" + status + \"|\" + this.description","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"|\" + this.date;","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents an Event task type","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description, a start and end date \u0026 time and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    //Introducing LocalDateTime to parse the string inputs given by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    //for the relevant date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build an Event Task Object with the task description,","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     * start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param startDate   The start date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param endDate     The end date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    public void updateStartDateTime(LocalDateTime date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d date;","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    public void updateEndDateTime(LocalDateTime date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d date;","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build an Event Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     * start date and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone      Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param startDate   The start date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param endDate     The end date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Event Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type, description, start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[E]\" + super.taskString() + \" (from: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"                startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) +","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the Event Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the event tasks to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"     * description, start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Event Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"E\" + \"|\" + status + \"|\" + this.description","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"|\" + this.startDate + \"|\" + this.endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":" * The Task class is the base class for creating task objects in Duke. Task objects","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * can be of different types, including ToDos, Deadlines, and Events.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"public abstract class Task{","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a Task Object with the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a Task Object with the task description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone      Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Task, including its completion","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"     * status and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d str + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"     * Abstract method for saving the task to a text file. Subclasses will override","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     * and implement this method.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"    public abstract String saveTaskString();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":74}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents a ToDo task type","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a ToDo Task Object with the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param todo The description of the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDo(String todo) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        super(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a ToDo Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param todo    The description of the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone  Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDo(String todo, boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        super(todo, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the ToDo Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d \"[T]\" + super.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the ToDo Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the task to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     * and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the ToDo Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"T\" + \"|\" + status + \"|\" + this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":53}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a new DialogBox instance with the specified text and image.","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param text The text to be displayed in the dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param img The image to be displayed alongside the text in the dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates and returns a DialogBox instance representing a user\u0027s dialog message.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param text The text of the user\u0027s message to be displayed in the dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param img The image to be displayed alongside the user\u0027s message in the dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A DialogBox instance representing the user\u0027s message with the specified text and image.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates and returns a new DialogBox instance representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param text The text to be displayed in Duke\u0027s dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param img The image to be displayed alongside the text in Duke\u0027s dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A new DialogBox instance representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":80}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Muggle.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Initializes the JavaFX controller when the associated FXML file is loaded.","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * This method sets up the scroll pane and adds the initial Duke\u0027s dialog to the dialog container.","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"                DialogBox.getDukeDialog(Ui.printHello(), dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":59}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * The Ui class is responsible for user interaction and displaying messages to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"public class Ui{","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    static String hello \u003d \"Hello muggle! I\u0027m \" + \"Harry Potter!\" + \"\\n\" + \"Introducing the Wizarding World Organizer: Your Trusted Guide\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"            \" to Efficient \u0026 Effective Magical Planning! Type \u0027help\u0027 to find out more about my capabilities!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    static String bye \u003d \"\\t\" + \"Expelliarmus! Hope to see you again muggle! :D\";","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     * Retrieves and returns a welcome message to be displayed to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A welcome message to be shown to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printHello() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        return hello;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     * Retrieves and returns a goodbye message to be displayed to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A goodbye message to be shown to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printBye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        return bye;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message to indicate that a task has been marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param done The task that was marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the task has been marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printDone(Task done) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"\\t\" + \"Nice! I\u0027ve marked this task \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as done:\" + \"\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\t \" + done.taskString();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message to indicate that a task has been updated.","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param updated The task that was updated.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the task has been updated.","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printUpdatedTask(Task updated) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"\\t\" + \"Nice! I\u0027ve updated this task: \" +","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\t \" + updated.taskString();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message to indicate that all tasks have been marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating that all tasks have been marked as done","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"     * and the updated task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printAllDone(TaskList tasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        String answer \u003d \"\\t\" + \"Nice! I\u0027ve marked all tasks \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as done:\";","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"            answer +\u003d \"\\n\\t\" + i + \". \" + tasks.getTask(j).taskString();","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        return answer;","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message to indicate that a task has been marked as not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param notDone The task that was marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the task has been marked as not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printNotDone(Task notDone) {","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"\\t\" + \"OK, I\u0027ve marked this task \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as not done yet:\" + \"\\n\" + \"\\t\" + \" \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                notDone.taskString();","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message to indicate that all tasks have been marked as not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating that all tasks have been marked as not done","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"     * and the updated task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printAllNotDone(TaskList tasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"        String answer \u003d \"\\t\" + \"OK, I\u0027ve marked all tasks \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as not done yet:\";","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"            answer +\u003d \"\\n\\t\" + i + \". \" + tasks.getTask(j).taskString();","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"        return answer;","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message when a task is deleted from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param toBeDeleted The task that was deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks       The task list from which the task was deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the task has been removed and the updated task count.","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printDelete(Task toBeDeleted, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"\\tNoted. I\u0027ve removed this task:\\n\\t \" + toBeDeleted.taskString()","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message when all tasks are deleted from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list from which all tasks were deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating that all tasks have been removed from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printAllDeleted(TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"\\tNoted. I\u0027ve removed all tasks.\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a message when a task is added to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task  The task that was added.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the added task and the updated task count.","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printAddTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"        int len \u003d tasks.getSize();","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"                + task.taskString();","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"        String listLength \u003d len \u003d\u003d 1 ? \"Now you have \" + len + \" task in the list.\" :","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"        return output + \"\\n\\t\" + listLength;","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a custom message for an exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The custom exception message.","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The message indicating the exception occurred.","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"RiyaMehta2211"},"content":"        return message;","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a default exception message for an EventDateTime exception.","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message indicating the error on DateTime input and the expected date and time format.","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printException() {","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"RiyaMehta2211"},"content":"        return\"Accio error! I don\u0027t understand what the input means D:\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"RiyaMehta2211"},"content":"                \" Please input a valid date in the format yyyy-MM-dd HHmm \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"RiyaMehta2211"},"content":"                \"(the time in the 24-hour format).\";","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a help message listing available commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message listing the available commands and their descriptions.","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printHelp() {","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"No worries, muggle! Harry Potter is here to help :D Accio Help Guide! \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"Here are the commands for use: \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"1. help: shows this list of commands\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"2. todo \u003ctask\u003e: specify the task to be added in the list with no start or end date\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"3. deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HHmm\u003e: specify the task to be added with a specific deadline\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"4. event \u003ctask\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e: specify the event to be added with both start \u0026 end dates\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"2. mark\u003cindex\u003e: marks task at \u003cindex\u003e in the list as done \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"4. unmark\u003cindex\u003e: marks task at \u003cindex\u003e in the list as not done \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"6. delete\u003cindex\u003e: deletes task at \u003cindex\u003e in the list\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"7. mark all/ unmark all/ delete all: modifies/removes all tasks in the list accordingly\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"8. update \u003cindex\u003e /description \u003cnew description\u003e: changes description of the task at specified index \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"8. update \u003cindex\u003e /event \u003cstart/end\u003e date \u003cyyyy-MM-dd HHmm\u003e: changes start/end date of the Event task at specified index \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"8. update \u003cindex\u003e /description \u003cnew description\u003e: changes description of the task at specified index \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"8. update \u003cindex\u003e /deadline \u003cyyyy-MM-dd HHmm\u003e: changes deadline of the Deadline task at specified index \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"9. list: shows the existing list of tasks\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"10. find \u003ckeyword\u003e: returns a new list of tasks containing the matching keyword in the task description\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"11. bye: displays a goodbye message. \";","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message listing the tasks in the given task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message containing a list of tasks from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String listTasks(TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"RiyaMehta2211"},"content":"        String answer \u003d \"\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"RiyaMehta2211"},"content":"            answer +\u003d \"\\n\\t\" + i + \". \" + tasks.getTask(j).taskString();","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-03"},{"lineNumber":194,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"RiyaMehta2211"},"content":"        return answer;","lastModifiedDate":"2023-09-10"},{"lineNumber":196,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"RiyaMehta2211"},"content":"     * Generates a message listing all tasks that match the input keyword in the given task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A message containing a list of all tasks that match the input keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String printMatchingTasks(TaskList tasks){","lastModifiedDate":"2023-09-10"},{"lineNumber":204,"author":{"gitId":"RiyaMehta2211"},"content":"        String answer \u003d \"\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"RiyaMehta2211"},"content":"            answer +\u003d \"\\n\\t\" + i + \". \" + tasks.getTask(j).taskString();","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"RiyaMehta2211"},"content":"        return answer;","lastModifiedDate":"2023-09-10"},{"lineNumber":211,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":213,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"RiyaMehta2211":213}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"               style \u003d \"-fx-background-radius: 10; -fx-background-color: rgba(188, 193, 194, 0.5)\" textFill\u003d\"antiquewhite\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cFont name \u003d \"Times New Roman\" size \u003d \"14\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" left \u003d \"15.0\" right \u003d \"20.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003ccenterShape\u003efalse\u003c/centerShape\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"                   fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"\u003cAnchorPane fx:id \u003d \"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"            xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\" style\u003d\"-fx-background-color: #000000\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"320.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"                   style \u003d \"-fx-background-radius: 20.0; -fx-background-color: #000000;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"                   -fx-border-radius:20.0; -fx-border-color:#FFBF00;","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                   -fx-text-fill: #FFBF00; -fx-prompt-text-fill:#FFBF00; -fx-border-width: 2.5px;\"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Sort your tasks like a Sorting Hat!\" \u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cfont\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"                    \u003cFont name \u003d \"Times New Roman\" size \u003d \"14\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003c/font\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"                style \u003d \"-fx-background-radius: 20.0; -fx-background-color: #FFBF00;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"                -fx-border-radius: 20.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"38.0\" prefWidth\u003d\"76.0\" text\u003d\"⚡ Send ⚡\" textFill\u003d\"black\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cfont\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"                    \u003cFont name \u003d \"Times New Roman Bold\" size \u003d \"14\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003c/font\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"                    vvalue\u003d\"1.0\" styleClass\u003d\"scrollPane\" stylesheets\u003d\"@MainWindow.css\" \u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"RiyaMehta2211":38}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the Storage class.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests the saving and loading of tasks to and from a txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    void testSaveAndLoadTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(new ToDo(\"go on a holiday\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"            storage.saveTasks(\"src/data/newFile.txt\", tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"            TaskList loadedTasks \u003d storage.loadTasks(\"src/data/newFile.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"                assert loadedTasks.getTask(i).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"                        .equals(tasks.getTask(i).taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"            //assert storage.loadTasks(\"src/data/newFile.txt\").equals(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":33}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the TaskList class.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests various methods of the TaskList class, such as adding, removing,","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":" * and marking tasks from the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    Task todo \u003d new ToDo(\"go on a hike\");","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    Task deadline \u003d new Deadline(\"assignment submission\",","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"            LocalDateTime.parse(\"2023-09-11 2359\", formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testGetTask(){","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(todo);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(todo.taskString());","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(this.tasks.getTask(tasks.getSize() - 1).taskString());","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(todo.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        //to check that the length of the list is not changes by the get method","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen + 1, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.removeTask(tasks.getSize() - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen - 1, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.getTask(tasks.getSize() - 1).markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(deadline.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testNotMarkDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.getTask(tasks.getSize() - 1).markAsNotDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(deadline.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testGetTaskSize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen + 2, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":74}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the Deadline class.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests various methods of the Deadline class, such as taskString(), markAsDone(), markAsNotDone(),","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":" * and getTask().","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    void testTaskString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"        Deadline test \u003d new Deadline(\"assignment submission\", LocalDateTime.parse(\"2023-01-11 2359\", formatter));","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        Assertions.assertEquals(test.taskString(), \"[D][ ] assignment submission (by: Jan 11 2023 2359)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        Deadline test \u003d new Deadline(\"assignment submission\", LocalDateTime.parse(\"2023-01-11 2359\", formatter));","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        Assertions.assertEquals(test.taskString(), \"[D][X] assignment submission (by: Jan 11 2023 2359)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    void testNotMarkAsDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        Deadline test \u003d new Deadline(\"assignment submission\", LocalDateTime.parse(\"2023-01-11 2359\", formatter));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        test.markAsNotDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        Assertions.assertEquals(test.taskString(), \"[D][ ] assignment submission (by: Jan 11 2023 2359)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"    void testGetTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        Deadline test \u003d new Deadline(\"assignment submission\", LocalDateTime.parse(\"2023-09-11 2359\", formatter));","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        assert test.getTask().trim().equals(\"assignment submission\");","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"todo go to Mount Everest","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2103T Assignment /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2100 Lab /by next week\u0027s lab","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"todo apply for internships on TalentConnect","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"event CCA Tryouts /from tomorrow 7.30pm /to tomorrow 9.30pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"deadline CS2105 Assignment 1 /by week 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"event presentation rehearsal /from tonight 10pm /to tonight 11.15pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"mark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":1,"-":20}}]
