[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    private static final long serialVersionUID \u003d 6548478093468504893L;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[D]\" + super.taskString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":15}},{"path":"src/main/java/DeadlineCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class DeadlineCommandUseException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    public DeadlineCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" deadline must be followed by a task to be added to the list \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"                \"and a time specified after \u0027/by\u0027 \");","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"        String name \u003d \"Harry Potter\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"        String question \u003d \"Introducing the Wizarding World Organizer: Your Trusted Guide\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"                \"to Efficient \u0026 Effective Magical Planning\";","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(\"Hello muggle! I\u0027m \" + name + \"\\n\" + question);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks \u003d Task.loadTasks(\"src/data/Duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"            while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"                if (!str.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"                    if (str.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"                        String num \u003d str.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"                        int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (number \u003c\u003d 0 || number \u003e tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new InvalidInputException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"                        int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"                        Task done \u003d tasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"                        done.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"                        System.out.println(\"\\t\" + \"Nice! I\u0027ve marked this task \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"                                \"as done:\" + \"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"                                \"\\t \" + done.taskString());","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"                        String num \u003d str.substring(7);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"                        int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (number \u003c\u003d 0 || number \u003e tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new InvalidInputException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"                        int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"                        Task notDone \u003d tasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                        notDone.markAsNotDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"                        System.out.println(\"\\t\" + \"OK, I\u0027ve marked this task \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                                \"as not done yet:\" + \"\\n\" + \"\\t\" + \" \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"                                notDone.taskString());","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"                        String num \u003d str.substring(7);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"                        int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (number \u003c\u003d 0 || number \u003e tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new InvalidInputException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"                        int index \u003d number - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"                        Task toBeDeleted \u003d tasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"                        System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\\t \" + toBeDeleted.taskString()","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                        + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"                            String todo \u003d str.substring(4);","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"                            //remove any leading and trailing whitespace characters and","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"                            // check whether there is a task after the instruction","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"                            if (todo.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"                                //this would mean the instruction is incomplete","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"                                throw new ToDoCommandUseException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"                            String string \u003d str.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"                            Task task \u003d new ToDo(string);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"                            int len \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"                            String output \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"                                    + task.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"                            String listLength \u003d len \u003d\u003d 1 ? \"Now you have \" + len + \" task in the list.\" :","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"                                    \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                            System.out.println(output","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                                    + \"\\n\\t\" + listLength);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"                        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"                            if (!str.contains(\"/by \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"                                throw new DeadlineCommandUseException(str); //needs to check for /by","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"                            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"                                String byWhen \u003d \"/by \";","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"                                int index \u003d str.indexOf(byWhen);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                                String deadline \u003d str.substring(index + 4); //remove /by from the substring","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                                if (deadline.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                                    throw new DeadlineCommandUseException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"                                }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"                                String workToDo \u003d str.substring(9, index);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"                                Task task \u003d new Deadline(workToDo, LocalDateTime.parse(deadline, formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"                                tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"                                int len \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"                                String output \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"                                        + task.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                                String listLength \u003d len \u003d\u003d 1 ? \"Now you have \" + len + \" task in the list.\" :","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"                                        \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"                                System.out.println(output","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"                                        + \"\\n\" + \"\\t\" + listLength);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"                        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"                            if (!str.contains(\"from\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"                                throw new EventCommandUseException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"                            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"                                String fromMarker \u003d \"/from \"; //mark the /from index of the string","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"                                int firstIndex \u003d str.indexOf(fromMarker);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"                                int secondIndex;","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"                                String fromWhen;","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"                                String toWhen;","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"                                String workToDo \u003d str.substring(6, firstIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"                                String afterFirstIndex \u003d str.substring(firstIndex + 6);","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"                                if (!afterFirstIndex.contains(\"/to \")) { //to check the input of /to after /from","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"                                    throw new EventCommandUseException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"                                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"                                    String toMarker \u003d \"/to \"; //mark the /to index of the string","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"                                    secondIndex \u003d afterFirstIndex.indexOf(toMarker); //to make sure we get the /to after the /from","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"                                    fromWhen \u003d afterFirstIndex.substring(0, secondIndex); //get the from timing","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"                                    toWhen \u003d afterFirstIndex.substring(secondIndex + 4); //get the to timing","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"                                    if (fromWhen.trim().isEmpty() ||","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"                                            toWhen.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"                                        throw new EventCommandUseException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"                                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"                                    if (LocalDateTime.parse(fromWhen, formatter).isAfter(LocalDateTime.parse(toWhen))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"                                        throw new EventDateTimeException(str);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"                                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"                                    Task task \u003d new Event(workToDo, LocalDateTime.parse(fromWhen, formatter),","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"                                            LocalDateTime.parse(toWhen, formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"                                    tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"                                    int len \u003d tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"                                    String output \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"                                            + task.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"                                    String listLength \u003d len \u003d\u003d 1 ? \"Now you have \" + len + \" task in the list.\" :","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"                                            \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"                                    System.out.println(output","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"                                            + \"\\n\\t\" + listLength);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"                                }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new InvalidInputException(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"                    Task.listTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"                    System.out.println();","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"                str \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"            Task.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"\\t\" + \"Expelliarmus! Hope to see you again muggle! :D\");","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"            //detect inputs that don\u0027t follow the yyyy-MM-dd HHmm format","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"I don\u0027t understand what that means D:\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"RiyaMehta2211"},"content":"                    \" Please input a valid date in the format yyyy-MM-dd HHmm \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"RiyaMehta2211"},"content":"                    \"(the time in the 24-hour format).\");","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (InvalidInputException | EventCommandUseException|","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"                 DeadlineCommandUseException| ToDoCommandUseException|","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"RiyaMehta2211"},"content":"                EventDateTimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":151,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"    private static final long serialVersionUID \u003d -4674004457612195474L;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[E]\" + super.taskString() + \"(from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":18}},{"path":"src/main/java/EventCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class EventCommandUseException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    public EventCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\nInvalid input as when the event starts \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"                \"must be specified after /from. When the event ends must also be specified after /to.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":6}},{"path":"src/main/java/EventDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class EventDateTimeException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    public EventDateTimeException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\n\\tI don\u0027t know what that means D: Please provide valid date inputs for events\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"                \"in the yyyy-MM-dd HHmm format, and ensure that the start date \u0026 time of the \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"                \"event does not occur after the end date \u0026 time of the event.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"RiyaMehta2211":7}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\n\\tI don\u0027t know what that means D: Please enter valid inputs. Below are the valid\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"                \" inputs I can take\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\t1. list \\n\\t2. todo \\n\\t3. deadline \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\n\\t4. event \\n\\t5. mark \\n\\t6. unmark \\n\\t7. bye\");","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"abstract class Task implements Serializable {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    private static final long serialVersionUID \u003d -7108460826726050219L;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d str + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public static void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.print(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.print(\"\\t\" + i + \".\" + task.taskString());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     static void saveTasks(String filePath, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"         ObjectOutputStream file \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"         try {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"             file \u003d new ObjectOutputStream(new FileOutputStream(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"             file.writeObject(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"         } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"             System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"         } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"             if (file!\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"                 try {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                     file.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                 } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"                     throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"                 }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"             }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"         }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    static List\u003cTask\u003e loadTasks(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        ObjectInputStream file \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"            //Unchecked warnings are yielded due to an unchecked type conversion","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"            //readObject() returns an Object, but am casting it to List\u003cTask\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"            //The compiler has no way to check if the object is of type List\u003cTask\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"            //in compile time, resulting in an unchecked warning being yielded","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"            File taskFile \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"            if (taskFile.length() \u003e 0) { //check if file is empty before attempting to read the file","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                file \u003d new ObjectInputStream(new FileInputStream(taskFile));","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                tasks \u003d (List\u003cTask\u003e) file.readObject();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"            if (file !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                    file.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":89}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    private static final long serialVersionUID \u003d -1735846338330844537L;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDo(String todo) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"        super(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d \"[T]\" + super.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":13}},{"path":"src/main/java/ToDoCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDoCommandUseException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDoCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" todo must be followed by a task to be added to the list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"todo go to Mount Everest","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2103T Assignment /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2100 Lab /by next week\u0027s lab","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"todo apply for internships on TalentConnect","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"event CCA Tryouts /from tomorrow 7.30pm /to tomorrow 9.30pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"deadline CS2105 Assignment 1 /by week 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"event presentation rehearsal /from tonight 10pm /to tonight 11.15pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"mark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":15}}]
