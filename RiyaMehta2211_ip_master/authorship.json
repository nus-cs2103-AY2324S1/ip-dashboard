[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":3,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * The Duke class represents a chatbot that generates a list of tasks based on user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * These tasks can include deadlines, events, and ToDos. The user input is parsed to extract","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * dates and times for events and deadlines.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        ui.printHello();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        TaskList tasks \u003d storage.loadTasks(\"src/data/Duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"            parser.chat(str, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"            str \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        } try {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"            storage.saveTasks(\"src/data/Duke.txt\", tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        ui.printBye();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":30,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.exception.DeadlineCommandUseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.exception.EventCommandUseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.exception.ToDoCommandUseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":" * The Parser class is responsible for parsing user input and executing commands to manage tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":" * It handles various command types such as adding ToDos, Deadlines, and Events, marking tasks as done,","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":" * deleting tasks, and listing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * Default constructor to initialize the Parser class.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public Parser() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        //empty constructor to initialize class objects","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Parses user input and executes various instructions to manage tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param str    The user input string.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks  The task list to which tasks are added or manipulated.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    public void chat(String str, TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!str.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"                if (str.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"                    String num \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                    int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"                    if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                        throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"                    int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"                    tasks.markDone(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"                    Task done \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"                    ui.printDone(done);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"                } else if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"                    String num \u003d str.substring(7);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"                    int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"                    if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"                        throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                    int index \u003d number - 1; //index for task list","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"                    tasks.markNotDone(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"                    Task notDone \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"                    ui.printNotDone(notDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"                } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"                    String num \u003d str.substring(7);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"                    int number \u003d Integer.valueOf(num);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"                    if (number \u003c\u003d 0 || number \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"                        throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"                    int index \u003d number - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"                    Task toBeDeleted \u003d tasks.removeTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"                    ui.printDelete(toBeDeleted, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"                } else if (str.startsWith(\"find \")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"                    String keyword \u003d str.substring(5);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                    TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                    for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (tasks.getTask(i).getTask().contains(keyword)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"                            matchingTasks.addTask(tasks.getTask(i));","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"                    ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                    if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                        String todo \u003d str.substring(4);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                        //remove any leading and trailing whitespace characters and","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"                        //check whether there is a task after the instruction","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (todo.trim().isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"                            //this would mean the instruction is incomplete","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new ToDoCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"                        String string \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"                        Task task \u003d new ToDo(string);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                        tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"                        ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (!str.contains(\"/by \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new DeadlineCommandUseException(str); //needs to check for /by","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"                        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"                            String byWhen \u003d \"/by \";","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"                            int index \u003d str.indexOf(byWhen);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"                            String deadline \u003d str.substring(index + 4); //remove /by from the substring","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"                            if (deadline.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"                                throw new DeadlineCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"                            }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"                            String workToDo \u003d str.substring(9, index - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"                            Task task \u003d new Deadline(workToDo, LocalDateTime.parse(deadline, formatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"                            ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"                        if (!str.contains(\"/from\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"                            throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"                        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"                            String fromMarker \u003d \"/from \"; //mark the /from index of the string","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"                            int firstIndex \u003d str.indexOf(fromMarker);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"                            int secondIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"                            String fromWhen;","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"                            String toWhen;","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"                            String workToDo \u003d str.substring(6, firstIndex - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"                            String afterFirstIndex \u003d str.substring(firstIndex + 6);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"                            if (!afterFirstIndex.contains(\"/to \")) { //to check the input of /to after /from","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"                                throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"                            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"                                String toMarker \u003d \"/to \"; //mark the /to index of the string","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"                                secondIndex \u003d afterFirstIndex.indexOf(toMarker); //to make sure we get the /to after the /from","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"                                fromWhen \u003d afterFirstIndex.substring(0, secondIndex).trim(); //get the from timing","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"                                toWhen \u003d afterFirstIndex.substring(secondIndex + 3).trim(); //get the to timing","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"                                if (fromWhen.trim().isEmpty() ||","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"                                        toWhen.trim().isEmpty()) { //needs to check whether there is anything after /by","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"                                    throw new EventCommandUseException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"                                }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"                                Task task \u003d new Event(workToDo, LocalDateTime.parse(fromWhen, formatter),","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"                                        LocalDateTime.parse(toWhen, formatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"                                tasks.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"                                ui.printAddTask(task, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"                            }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"                    } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"                        throw new InvalidInputException(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"                ui.listTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"RiyaMehta2211"},"content":"            //detect inputs that don\u0027t follow the yyyy-MM-dd HHmm format","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"RiyaMehta2211"},"content":"            ui.printException();","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (InvalidInputException | EventCommandUseException","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"RiyaMehta2211"},"content":"                | DeadlineCommandUseException | ToDoCommandUseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"RiyaMehta2211"},"content":"            ui.printException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"RiyaMehta2211":149}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":" * The Storage class is responsible for reading and writing tasklists","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":" * to and from the Duke.txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"public class Storage{","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     * Saves the tasks in the task list to the specified file path.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file where tasks will be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks    The task list to be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    public void saveTasks(String filePath, TaskList tasks) throws FileNotFoundException{","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"            createDirectoryIfNotExists(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"                String taskData \u003d formatTaskData(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"                fileWriter.write(taskData);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"            fileWriter.close(); // Don\u0027t forget to close the FileWriter when done.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     * Formats a task into a string representation suitable for saving to a file.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    String formatTaskData(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        // Customize this method based on your Task class structure.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d task.saveTaskString();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"        return str;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     * Loads tasks from the specified file path and returns them as a TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file from which tasks will be loaded.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A TaskList containing the loaded tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    public TaskList loadTasks(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"            createDirectoryIfNotExists(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"                String[] components \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                String taskType \u003d components[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                boolean isDone \u003d components[1].equals(\"1\");","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"                String description \u003d components[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new ToDo(description, isDone));","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new Deadline(description, isDone, by));","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(components[4]);","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"                        taskList.addTask(new Event(description, isDone, from, to));","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"                        break;","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"            reader.close(); // Close the reader when done.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"        return taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates the necessary directory and file if they do not exist.","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param filePath The path to the file to be created.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"     * @throws IOException If an error occurs during directory or file creation.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"    private void createDirectoryIfNotExists(String filePath) throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"        Path path \u003d FileSystems.getDefault().getPath(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"        Path parentDir \u003d path.getParent();","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!Files.exists(parentDir)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"                Files.createDirectories(parentDir);","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":122}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * The TaskList class represents a list of tasks in Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * It provides methods for adding, removing, and retrieving tasks from the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class TaskList{","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     * Default constructor to initialize an empty TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task removeTask(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The retrieved task.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task getTask(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markDone(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markNotDone(int index){","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":76}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * The Ui class is responsible for user interaction and displaying messages to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"public class Ui{","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"    String name \u003d \"Harry Potter\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    String question \u003d \"Introducing the Wizarding World Organizer: Your Trusted Guide\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"            \" to Efficient \u0026 Effective Magical Planning\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    String hello \u003d \"Hello muggle! I\u0027m \" + name + \"\\n\" + question;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    String bye \u003d \"\\t\" + \"Expelliarmus! Hope to see you again muggle! :D\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"     * Default constructor to initialize the Ui class.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public Ui() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printHello() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(hello);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     * Displays a goodbye essage to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printBye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a message when a task is marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param done The task that was marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printDone(Task done) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(\"\\t\" + \"Nice! I\u0027ve marked this task \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as done:\" + \"\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\t \" + done.taskString());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a message when a task is marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param notDone The task that was marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printNotDone(Task notDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(\"\\t\" + \"OK, I\u0027ve marked this task \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                \"as not done yet:\" + \"\\n\" + \"\\t\" + \" \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                notDone.taskString());","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a message when a task is deleted from the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param toBeDeleted The task that was deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks       The task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printDelete(Task toBeDeleted, TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\\t \" + toBeDeleted.taskString()","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"\\n\\tNow you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a message when a task is added to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param task  The task that was added.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printAddTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"        int len \u003d tasks.getSize();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"                + task.taskString();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        String listLength \u003d len \u003d\u003d 1 ? \"Now you have \" + len + \" task in the list.\" :","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(output","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"\\n\\t\" + listLength);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a custom message for an exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The custom exception message.","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"RiyaMehta2211"},"content":"     * Prints a default exception message for EventDateTime Exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(\"Accio error! I don\u0027t understand what the input means D:\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"                \" Please input a valid date in the format yyyy-MM-dd HHmm \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"                \"(the time in the 24-hour format).\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"     * Lists the tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list to be printed.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.print(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println();","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.print(\"\\t\" + i + \".\" + tasks.getTask(j).taskString());","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println();","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"     * Lists the tasks in the task list","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"     * containing tasks with matching keywords","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param tasks The task list to be printed.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"    public void printMatchingTasks(TaskList tasks){","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.print(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println();","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.print(\"\\t\" + i + \".\" + tasks.getTask(j).taskString());","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"            i++;","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println();","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"RiyaMehta2211":133}},{"path":"src/main/java/duke/exception/DeadlineCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for a deadline command is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the \u0027/by\u0027 part of the deadline command is missing or not followed","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * by a valid date and time.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"public class DeadlineCommandUseException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a DeadlineCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the deadline command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public DeadlineCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! deadline must be followed by a task to be added to the list \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                \"and a time specified after \u0027/by\u0027 \");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":19}},{"path":"src/main/java/duke/exception/EventCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for an event command is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the \u0027/from\u0027 or \u0027/to\u0027 parts of the event command are missing or","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * not followed by valid date and time.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"public class EventCommandUseException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs an EventCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the event command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public EventCommandUseException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! Invalid input as when the event starts \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                \"must be specified after \u0027/from\u0027. When the event ends must also be specified after \u0027/to\u0027.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":19}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input is invalid or not recognized.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the user provides an input that does not match any of the valid instructions.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs an InvalidInputException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating that the input provided is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \"\\n\\tAccio error! I don\u0027t know what the input means D: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Please enter valid inputs. \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"                \"Below are the valid\" + \" inputs I can take\\n\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\t1. list \\n\\t2. todo \\n\\t3. deadline \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"                \"\\n\\t4. event \\n\\t5. mark \\n\\t6. unmark \\n\\t7. find \\n\\t8. bye\");","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":22}},{"path":"src/main/java/duke/exception/ToDoCommandUseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents an exception that occurs when the user input for a todo instruction is invalid.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This exception is thrown when the todo command is not followed by a task description to be added to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDoCommandUseException extends Exception{","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a ToDoCommandUseException with a custom error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param message The error message indicating the issue with the todo command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDoCommandUseException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"        super(message + \":\" + \" Accio error! todo must be followed by a task to be added to the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"RiyaMehta2211":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents a Deadline task type","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description, a deadline and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a Deadline Task Object with the task description and date","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Deadline Task","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param date The deadline by which the Deadline Task is due","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a Deadline Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description, completion status and date","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Deadline Task","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone represents the completion status of the task","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param date The deadline by which the Deadline Task is due","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime date) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Deadline Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type, completion status, description, and due date/time.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Deadline Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[D]\" + super.taskString() + \" (by: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the Deadline Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the deadline tasks to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     * description, and due date.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Deadline Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"D\" + \"|\" + status + \"|\" + this.description","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"|\" + this.date;","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents an Event task type","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description, a start and end date \u0026 time and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    LocalDateTime endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    //Introducing LocalDateTime to parse the string inputs given by the user","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    //for the relevant date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build an Event Task Object with the task description,","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     * start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param startDate   The start date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param endDate     The end date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build an Event Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * start date and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone      Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param startDate   The start date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param endDate     The end date and time of the Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Event Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type, description, start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"[E]\" + super.taskString() + \" (from: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) +","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the Event Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the event tasks to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"     * description, start date, and end date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Event Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"E\" + \"|\" + status + \"|\" + this.description","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"                + \"|\" + this.startDate + \"|\" + this.endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":" * The Task class is the base class for creating task objects in Duke. Task objects","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * can be of different types, including ToDos, Deadlines, and Events.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"public abstract class Task{","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a Task Object with the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a Task Object with the task description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone      Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the Task, including its completion","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * status and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        String str \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d str + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"     * Abstract method for saving the task to a text file. Subclasses will override","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"     * and implement this method.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"    public abstract String saveTaskString();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":71}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":" * This class inherits from the Task class and represents a ToDo task type","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * with a description and completion status","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructor to build a ToDo Task Object with the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param todo The description of the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDo(String todo) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        super(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     * Overloaded constructor to build a ToDo Task Object read from the tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * saved in the txt file with the task description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param todo    The description of the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param isDone  Represents the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public ToDo(String todo, boolean isDone) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        super(todo, isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a formatted string representation of the ToDo Task, including","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * its type and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string representing the ToDo Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public String taskString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        String output \u003d \"[T]\" + super.taskString();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns a string representation of the ToDo Task that can be used for","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"     * saving the task to a txt file, including its type, completion status,","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"     * and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return A string suitable for saving the ToDo Task to a text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        String status \u003d (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        return \"T\" + \"|\" + status + \"|\" + this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":53}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the Storage class.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests the saving and loading of tasks to and from a txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    void testSaveAndLoadTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(new ToDo(\"go on a holiday\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"            storage.saveTasks(\"src/data/newFile.txt\", tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"            TaskList loadedTasks \u003d storage.loadTasks(\"src/data/newFile.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"                assert loadedTasks.getTask(i).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"                        .equals(tasks.getTask(i).taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"            //assert storage.loadTasks(\"src/data/newFile.txt\").equals(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":31}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the TaskList class.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests various methods of the TaskList class, such as adding, removing,","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":" * and marking tasks from the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    Task todo \u003d new ToDo(\"todo go on a hike\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    Task deadline \u003d new Deadline(\"assignment submission\",","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"            LocalDateTime.parse(\"2023-09-11 2359\", formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testGetTask(){","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(todo);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(todo.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        //to check that the length of the list is not changes by the get method","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen + 1, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.removeTask(tasks.getSize() - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen - 1, this.tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.getTask(tasks.getSize() - 1).markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(deadline.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testNotMarkDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        this.tasks.getTask(tasks.getSize() - 1).markAsNotDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        assert this.tasks.getTask(tasks.getSize() - 1).taskString()","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"                .equals(deadline.taskString());","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    public void testGetTaskSize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        int initialLen \u003d tasks.getSize();","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(initialLen + 2, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":71}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains JUnit test cases to verify the functionality of the Deadline class.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * It tests various methods of the Deadline class, such as taskString(), markAsDone(), markAsNotDone(),","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * and getTask().","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    Deadline test \u003d new Deadline(\"assignment submission\", LocalDateTime.parse(\"2023-09-11 2359\", formatter));","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    void testTaskString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"        assert test.taskString().equals(\"[D][ ] assignment submission (by: Sep 11 2023 2359)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        assert test.taskString().equals(\"[D][X] assignment submission (by: Sep 11 2023 2359)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"    void testNotMarkAsDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        test.markAsNotDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        assert test.taskString().equals(\"[D][ ] assignment submission (by: Sep 11 2023 2359)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    void testGetTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        assert test.getTask().equals(\"assignment submission\");","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"RiyaMehta2211":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"todo go to Mount Everest","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2103T Assignment /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"deadline 2100 Lab /by next week\u0027s lab","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"todo apply for internships on TalentConnect","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"event CCA Tryouts /from tomorrow 7.30pm /to tomorrow 9.30pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"deadline CS2105 Assignment 1 /by week 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"event presentation rehearsal /from tonight 10pm /to tonight 11.15pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"mark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RiyaMehta2211":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RiyaMehta2211":1,"-":20}}]
