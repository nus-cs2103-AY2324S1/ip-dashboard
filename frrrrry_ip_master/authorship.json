[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"frrrrry":19}},{"path":"data/paimon.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"[T][ ] complete daily commissions","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"[E][X] new wish banner (from: 2023-09-04 18:00 to: 2023-09-30 10:00)","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"frrrrry":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"# PaimonBot\u0027s User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"PaimonBot is your friendly and ever-curious companion in the digital world. She\u0027s here ","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"to assist travellers in **managing their tasks** (todos, deadlines and events). ","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"Optimised for use via a **Command-Line Interface (CLI)**, while still retaining the","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"advantages of a **Graphical User Interface (GUI)**. ","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"### 1. Adding a task","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"Adds a task to the list of tasks. There are 3 types of tasks that can be added:","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"* Todos","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"  * A description of the task needs to be provided","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"* Deadlines","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"  * A description of the task needs to be provided","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"  * A date and time needs to be given to specify the deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"* Events","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"  * A description of the task needs to be provided","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"  * A date and time needs to be given to specify the start of the event","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"  * A date and time needs to be given to specify the end of the event","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"### 2. Deleting a task","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"Deletes the task from the list. To delete a task, you need to specify the index of the","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"### 3. Marking a task","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"Marks a task as done in the list. To mark a task, you need to specify the index of the","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"task in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"### 4. Unmarking a task","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"Marks a task as undone in the list. To unmark a task, you need to specift the index of the","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"task in the lsit. ","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"### 5. Listing tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"Shows the list of the current tasks in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"### 6. Finding tasks by keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"Searches the task(s) in the list with the given keyword. ","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"### 7. Sorting tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"Sorts the tasks in ascending order of their dates and times. **Only applies to deadlines ","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"and events**. ","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"### 8. Exiting the program","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"Exits the chatbot. ","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"### 1. `todo` - Adding a todo","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"`todo complete commissions`","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"Got it. Task successfully added: ","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"[T][] complete commissions ","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"Now you have 8 tasks in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"### 2. `deadline` - Adding a deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"`deadline DESCRIPTION /by yyyy-MM-dd HH:mm`","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"frrrrry"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"frrrrry"},"content":"`deadline clear spiral abyss /by 2023-09-20 23:59`","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"frrrrry"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"frrrrry"},"content":"Got it. Task successfully added: ","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"frrrrry"},"content":"[D][] clear spiral abyss (by: 2023-09-20 23:59) ","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"frrrrry"},"content":"Now you have 8 tasks in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"frrrrry"},"content":"### 3. `event` - Adding an event","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"frrrrry"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"frrrrry"},"content":"`event DESCRIPTION /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm`","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"frrrrry"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"frrrrry"},"content":"`event new wish banner /from 2023-08-23 18:00 /to 2023-09-10 08:00`","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"frrrrry"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"frrrrry"},"content":"Got it. Task successfully added: ","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"frrrrry"},"content":"[E][] yelan wish banner (from: 2023-08-23 18:00 to: 2023-09-10 08:00) ","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"frrrrry"},"content":"Now you have 8 tasks in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"frrrrry"},"content":"### 4. `delete` - Deleting a task","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"frrrrry"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"frrrrry"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"frrrrry"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"frrrrry"},"content":"`delete 8`","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"frrrrry"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"frrrrry"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"frrrrry"},"content":"[T][] complete commissions ","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"frrrrry"},"content":"Now you have 7 tasks in the list. ","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"frrrrry"},"content":"### 5. `mark` - Marking a task","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"frrrrry"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"frrrrry"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"frrrrry"},"content":"`mark 8`","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"frrrrry"},"content":"Expected outcome: ","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"frrrrry"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"frrrrry"},"content":"[T][X] complete commissions`","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"frrrrry"},"content":"### 6. `unmark` - Unmarking a task","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"frrrrry"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"frrrrry"},"content":"`unamrk INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"frrrrry"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"frrrrry"},"content":"`unmark 8`","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"frrrrry"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"frrrrry"},"content":"Nice! I\u0027ve un-marked this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"frrrrry"},"content":"[T][] complete commissions","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"frrrrry"},"content":"### 7. `list` - Listing out the current tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"frrrrry"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"frrrrry"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"frrrrry"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"frrrrry"},"content":"1. [T][X] complete commissions","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"frrrrry"},"content":"2. [D][] clear spiral abyss (by: 2023-09-20 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"frrrrry"},"content":"3. [E][X] yelan wish banner (from: 2023-08-23 18:00 to: 2023-09-10 08:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"frrrrry"},"content":"### 8. `find` - Finding the task(s) which satisfies the keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"frrrrry"},"content":"`find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"frrrrry"},"content":"`find yelan`","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"frrrrry"},"content":"Here are the tasks with \"yelan\": ","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"frrrrry"},"content":"1. [E][X] yelan wish banner (from: 2023-08-23 18:00 to: 2023-09-10 08:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"frrrrry"},"content":"### 9. `sort` - Sorting the tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"frrrrry"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"frrrrry"},"content":"`sort TASKs`","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"frrrrry"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"frrrrry"},"content":"`sort deadlines`","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"frrrrry"},"content":"Expected outcome: ","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"frrrrry"},"content":"Here are your sorted deadlines in ascending order:","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"frrrrry"},"content":"1. [D][X] farm crystals (by: 2023-06-10 17:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"frrrrry"},"content":"2. [D][] finish new event (by: 2023-09-20 14:30) ","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"frrrrry"},"content":"3. [D][] clear spiral abyss (by: 2023-09-20 23:59) ","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"frrrrry"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"frrrrry"},"content":"### 10. `bye` - Exiting the chatbot","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"frrrrry"},"content":"Format: ","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"frrrrry"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"frrrrry"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"frrrrry"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"frrrrry"},"content":"Expected outcome : ","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":222,"author":{"gitId":"frrrrry"},"content":"Bye Bye Traveller! See you soon :D","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"frrrrry":195,"-":28}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user wishes to exit the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"        return ui.printGoodbye();","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":21}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" * Command is an abstract class that performs the command the user types into","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" * the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * Runs the command the user inputted in the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The task list which the command adds the task into if asked.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     * @param ui The ui of the chatbot to read the input of the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     * @return The response of paimonbot when a specific command is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     * @throws Exception","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * Check whether the command issues the chatbot to stop running.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     * If the command is \u0027bye\u0027, returns false.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"     * @return The boolean to determine the chatbot should stop running.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"frrrrry":31}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyDateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user wishes to add a deadline to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws EmptyInputException,","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"            InvalidFormatException, EmptyDateTimeException, InvalidDateTimeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"                throw new EmptyInputException(\"a deadline\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"            } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"                throw new InvalidFormatException(\"deadline\", \"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"            } else if (input.length() \u003c\u003d input.indexOf(\"/by\") + 4) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"                throw new EmptyDateTimeException(\"deadline\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"                String tempDescription \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"                String description \u003d tempDescription.split(\" /by \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"                String by \u003d tempDescription.split(\" /by \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"                String str \u003d ui.printAddTask(taskList, deadline);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"                storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"                return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"            throw new InvalidDateTimeException(\"deadline\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":50}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user wishes to delete a specific task from","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" * the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        String indexString \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        int num \u003d Integer.valueOf(indexString);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        Task deletedTask \u003d taskList.deleteTask(num);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        String str \u003d ui.printDeleteTask(taskList, deletedTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":29}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyDateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":" * The Command which indicates that the user wishes to add an event to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws EmptyInputException,","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"            InvalidFormatException, EmptyDateTimeException, InvalidDateTimeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"                throw new EmptyInputException(\"a event\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"            } else if (!input.contains(\"/from\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"                throw new InvalidFormatException(\"event\", \"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"            } else if (!input.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"                throw new InvalidFormatException(\"event\", \"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"            } else if (input.length() \u003c\u003d input.indexOf(\"/from\") + 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"                throw new EmptyDateTimeException(\"event\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"            } else if (input.length() \u003c\u003d input.indexOf(\"/to\") + 4) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"                throw new EmptyDateTimeException(\"event\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"                String tempDescription \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"                String description \u003d tempDescription.split(\" /from \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"                String start \u003d tempDescription.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"                String end \u003d tempDescription.split(\" /to \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"                Event event \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"                taskList.addTask(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"                String str \u003d ui.printAddTask(taskList, event);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"                storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"                return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"            throw new InvalidDateTimeException(\"event\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":54}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":" * FindCommand finds the task in the task list with the keyword the user inputs.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws EmptyInputException {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        if (input.split(\" \").length \u003e 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"            String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTask(keyword);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"            return ui.printFindTask(matchingTasks, keyword);","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"            throw new EmptyInputException(\"find\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"frrrrry":32}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user has type in an invalid command.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"        throw new InvalidCommandException(\"Invalid command given. Please input a valid command.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":22}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user wants the chatbot to list out the current","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":" * tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        return ui.printTaskList(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":26}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" * The Command that indicates the user wishes to mark a specific task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        String indexString \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        int num \u003d Integer.valueOf(indexString);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        Task task \u003d taskList.markTask(num);","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        String str \u003d ui.printMarkedTask(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":28}},{"path":"src/main/java/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" * SortCommand sorts the Deadline or Event objects specified.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        // valid inputs should be: \"sort deadlines\" and \"sort events\"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        String taskType \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        case \"deadlines\":","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"            ArrayList\u003cDeadline\u003e sortedDeadlines \u003d taskList.sortDeadlines();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"            String deadlineString \u003d ui.printSortedDeadlines(sortedDeadlines);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"            return deadlineString;","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"        case \"events\":","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"            ArrayList\u003cEvent\u003e sortedEvents \u003d taskList.sortEvents();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"            String eventString \u003d ui.printSortedEvents(sortedEvents);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"            return eventString;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"            assert false : taskType;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"            throw new InvalidCommandException(\"Invalid sort command given.\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"                    + \"\u0027sort\u0027 command should be followed by \u0027deadlines\u0027 or \u0027events\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"frrrrry":42}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" * The Command to indicate that the user wishes to add a todo into the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws EmptyInputException {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        if (input.split(\" \").length \u003e 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"            String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"            String str \u003d ui.printAddTask(taskList, todo);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"            storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"            return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"            throw new EmptyInputException(\"a todo\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":33}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" * The Command which indicates the user wishes to mark a specific task in the","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" * task list as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        String indexString \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        int num \u003d Integer.valueOf(indexString);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        Task task \u003d taskList.unmarkTask(num);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        String str \u003d ui.printUnmarkedTask(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        storage.writeTasks(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        return str;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":29}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"    public static DialogBox getTravellerDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"    public static DialogBox getPaimonDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"frrrrry":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyDateTimeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import exception.EmptyInputException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import exception.InvalidFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":" * Duke is the chatbot program.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" *","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":" * @author fry","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"public class Duke {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * @param filePath The file path to be passed into to load the initial tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"        this.parser \u003d new Parser(this.taskList, this.ui, this.storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"     * Returns the response to the user input given.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"     * @param input The input of the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"     * @return The response of paimonbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"        String response;","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"        ui.readCommand(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"        Command c \u003d parser.parse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"            response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"        } catch (EmptyDateTimeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"        return response;","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"frrrrry":62,"-":1}},{"path":"src/main/java/duke/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * The Enums used to represent the main command keywords of the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"public enum Keyword {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"    MARK,","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    UNMARK,","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    LIST,","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    BYE,","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    TODO,","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    EVENT,","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    FIND,","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    SORT,","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"frrrrry":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    private Duke duke \u003d new Duke(\"./data/paimon.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        assert duke !\u003d null : \"The chat bot should be instantiated\";","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"frrrrry":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    private Image travellerImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lumine.jpg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    private Image paimonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/paimon.jpg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"     * To initialize the GUI of the chatbot.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"                DialogBox.getPaimonDialog(ui.printWelcome(), paimonImage)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"        );","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"     * Initialise the variable duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"     * @param d The Duke object to be set to.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"                DialogBox.getTravellerDialog(input, travellerImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"                DialogBox.getPaimonDialog(response, paimonImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"            pause.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"frrrrry":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import command.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import command.EventCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import command.InvalidCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import command.SortCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":" * Parser reads the primary user input and deals with making sense of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Parser.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The task list to be passed into the Command.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"     * @param ui The ui of the chatbot to be passed into the Command.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"     * Returns a specific Command when the corresponding command keywords are","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"     * detected in the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"     * @param input The full input the user typed into the chatbot.","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"     * @return A specific Command that corresponds to the command keyword the user inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"        assert input !\u003d null : \"There should be an input\";","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"        Keyword keyword \u003d Keyword.valueOf(command.toUpperCase());","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        assert keyword !\u003d null : \"There should be a command\";","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"        switch (keyword) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"        case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"        case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"        case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"            return new TodoCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"        case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"            return new EventCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"        case FIND:","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"            return new FindCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"        case SORT:","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"            return new SortCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"        case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"        case BYE:","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":73}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"import task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":" * Storage deals with loading tasks from the data file and saving tasks into it.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * @param filePath The specific file path to load and save tasks into.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"     * Writes and save tasks from the task list into the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The task list to get the tasks from.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"    public void writeTasks(TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"            System.out.println(\"An error occured while writing the tasks into file: \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"     * The method to read tasks from the file and add the subsequent tasks read into the","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"     * task list in order.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"     * @param file The file which the tasks are read from.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"     * @return The ArrayList of Tasks which the tasks read are added into.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cTask\u003e readTasks(File file) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"                char taskType \u003d input.charAt(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"                boolean isDone \u003d input.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"                String description \u003d input.split(\"] \")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"                    Todo t \u003d new Todo(description, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"                    break;","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"                    int byIndex \u003d description.indexOf(\"(by: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"                    int lastByIndex \u003d description.indexOf(\")\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"frrrrry"},"content":"                    String deadlineDescription \u003d description.substring(0, byIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"frrrrry"},"content":"                    String by \u003d description.substring(byIndex + 5, lastByIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"frrrrry"},"content":"                    Deadline d \u003d new Deadline(deadlineDescription, by, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"frrrrry"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"frrrrry"},"content":"                    break;","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"frrrrry"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"frrrrry"},"content":"                    int fromIndex \u003d description.indexOf(\"(from: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"frrrrry"},"content":"                    int toIndex \u003d description.indexOf(\"to: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"frrrrry"},"content":"                    int lastToIndex \u003d description.indexOf(\")\");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"frrrrry"},"content":"                    String eventDescription \u003d description.substring(0, fromIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"frrrrry"},"content":"                    String start \u003d description.substring(fromIndex + 7, toIndex - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"frrrrry"},"content":"                    String end \u003d description.substring(toIndex + 4, lastToIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"frrrrry"},"content":"                    Event e \u003d new Event(eventDescription, start, end, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"frrrrry"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"frrrrry"},"content":"                    break;","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"frrrrry"},"content":"                default:","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"frrrrry"},"content":"                    assert false : taskType;","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"frrrrry"},"content":"                    System.out.println(\"An error has occurred: Unknown task type\");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"frrrrry"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"frrrrry"},"content":"            sc.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"frrrrry"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"frrrrry"},"content":"            exception.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"frrrrry"},"content":"            System.out.println(exception);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"frrrrry"},"content":"        } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"frrrrry"},"content":"            return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"frrrrry"},"content":"     * The method to load the initial task list from the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"frrrrry"},"content":"     * If the data file does not exist, a new one will be created and an empty ArrayList","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"frrrrry"},"content":"     * will be returned.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"frrrrry"},"content":"     * @return The ArrayList of Tasks with the initial tasks added in where applicable.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"frrrrry"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"frrrrry"},"content":"            String[] filePathArray \u003d filePath.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"frrrrry"},"content":"            String fileDirectory \u003d filePathArray[0] + \"/\" + filePathArray[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"frrrrry"},"content":"            File directory \u003d new File(fileDirectory);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"frrrrry"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"frrrrry"},"content":"                directory.mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"frrrrry"},"content":"            assert directory.exists() : \"The file directory should already exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"frrrrry"},"content":"            File taskFile \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"frrrrry"},"content":"            if (taskFile.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"frrrrry"},"content":"                // creates new file","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"frrrrry"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"frrrrry"},"content":"                assert taskFile.exists() : \"The file should already exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"frrrrry"},"content":"                tasks \u003d readTasks(taskFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"frrrrry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"frrrrry"},"content":"            System.out.println(\"An error occured when initialising tasks: \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"frrrrry"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"frrrrry"},"content":"        } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"frrrrry"},"content":"            return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":133}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"import utils.DeadlineSortingComparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"import utils.EventSortingComparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":" * TaskList represent the list of tasks of the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     * The constructor of TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The ArrayList of tasks of the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"     * Marks the specific task in the user\u0027s list of tasks as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"     * @param num The index of the task which is to be mark as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"     * @return The message of paimonbot to indicate the task is marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"    public Task markTask(int num) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"        Task t \u003d taskList.get(num - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"        t.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"        return t;","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"     * Marks the specific task in the user\u0027s list of tasks as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"     * @param num The index of the task which is to be mark as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"     * @return The message of paimonbot to indicate the task is unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"    public Task unmarkTask(int num) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"        Task t \u003d taskList.get(num - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        t.markUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"        return t;","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"     * Adds the task into the user\u0027s list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"     * Deletes the specific task from the user\u0027s list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"     * @param num The index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"     * @return The message of paimonbot to indicate the task is deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"    public Task deleteTask(int num) {","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"        Task deletedTask \u003d taskList.remove(num - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"        return deletedTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"     * Finds the tasks in the list of tasks with the given keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"frrrrry"},"content":"     * @param keyword The keyword the user wants to search for in the tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"frrrrry"},"content":"     * @return The message of paimonbot to indicate the tasks with the keyword given.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"frrrrry"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"frrrrry"},"content":"            return matchingTasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"frrrrry"},"content":"            for (Task t : this.taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"frrrrry"},"content":"                String taskString \u003d t.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"frrrrry"},"content":"                if (taskString.contains(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"frrrrry"},"content":"                    matchingTasks.add(t);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"frrrrry"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"frrrrry"},"content":"            return matchingTasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"frrrrry"},"content":"     * To sort the Deadline objects in ascending order of their LocalDateTimes.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"frrrrry"},"content":"     * @return The sorted ArrayList of Deadline objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cDeadline\u003e sortDeadlines() {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cDeadline\u003e sortedDeadlines \u003d getDeadlineList();","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"frrrrry"},"content":"        Collections.sort(sortedDeadlines, new DeadlineSortingComparator());","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"frrrrry"},"content":"        return sortedDeadlines;","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"frrrrry"},"content":"     * To sort the Event objects in ascending order of their LocalDateTimes.","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"frrrrry"},"content":"     * @return The sorted ArrayList of Event objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cEvent\u003e sortEvents() {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cEvent\u003e sortedEvents \u003d getEventList();","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"frrrrry"},"content":"        Collections.sort(sortedEvents, new EventSortingComparator());","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"frrrrry"},"content":"        return sortedEvents;","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"frrrrry"},"content":"     * Get the list of Deadline objects from the ArrayList of Tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"frrrrry"},"content":"     * @return The list of Deadline objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cDeadline\u003e getDeadlineList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cDeadline\u003e deadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"frrrrry"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"frrrrry"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"frrrrry"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"frrrrry"},"content":"                deadlineList.add((deadline));","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"frrrrry"},"content":"        return deadlineList;","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"frrrrry"},"content":"     * Get the list of Event objects from the ArrayList of Tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"frrrrry"},"content":"     * @return The list of Event objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"frrrrry"},"content":"    public ArrayList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"frrrrry"},"content":"        ArrayList\u003cEvent\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"frrrrry"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"frrrrry"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"frrrrry"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"frrrrry"},"content":"                eventList.add(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"frrrrry"},"content":"        return eventList;","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"frrrrry"},"content":"     * To find the size of the ArrayList of Task objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"frrrrry"},"content":"     * @return The size of the ArrayList of Task objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"frrrrry"},"content":"    public int size() {","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"frrrrry"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"frrrrry"},"content":"     * A getter function to get the user\u0027s current list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"frrrrry"},"content":"     * @return The user\u0027s current list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"frrrrry"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"frrrrry"},"content":"        return taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":163}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"import task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":" * UI represents the User Interface of the chatbot and deals with interactions with the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    private String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Ui.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    public Ui() { }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"     * To read the user\u0027s input into the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"     * @param input The input of the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    public void readCommand(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"     * A getter function to get the user\u0027s input to the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"     * @return The user\u0027s input to the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"        return this.input;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"     * Prints out the welcome message of the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when the user","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"     *     starts the chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"    public String printWelcome() {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"        String msg \u003d \"\\nHi Traveller! I\u0027m Paimon!\"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"                + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        return msg;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"     *  Prints out the goodbye message when the user exits the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when the user","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"     *     exits the chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"    public String printGoodbye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"        return \"Bye Bye Traveller! See you soon :D\";","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message to see the tasks in the user\u0027s task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown to list out","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"     *     the tasks in the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"    public String printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"frrrrry"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"frrrrry"},"content":"            return \"There are currently no tasks in your list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"frrrrry"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"frrrrry"},"content":"            String listMessage \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"frrrrry"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"frrrrry"},"content":"                listMessage +\u003d i + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"frrrrry"},"content":"                i++;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"frrrrry"},"content":"            return listMessage;","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message when a task that is marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"frrrrry"},"content":"     * @param task The marked task to be printed out.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"frrrrry"},"content":"     *     a task is marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"frrrrry"},"content":"    public String printMarkedTask(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"frrrrry"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message when a task is marked as undone.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"frrrrry"},"content":"     * @param task The unmarked task to be printed out.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"frrrrry"},"content":"     *     a task is marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"frrrrry"},"content":"    public String printUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"frrrrry"},"content":"        return \"Nice! I\u0027ve un-marked this task: \\n\" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message when a task is added.","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The user\u0027s task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"frrrrry"},"content":"     * @param task The task to be added into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"frrrrry"},"content":"     *     the task is added.","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"frrrrry"},"content":"    public String printAddTask(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"frrrrry"},"content":"        return \"Got it. Task successfully added: \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"frrrrry"},"content":"                + task.toString()","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"frrrrry"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message when a task is deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"frrrrry"},"content":"     * @param taskList The user\u0027s task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"frrrrry"},"content":"     * @param deletedTask The task that was deleted by the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"frrrrry"},"content":"     *     a task is deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"frrrrry"},"content":"    public String printDeleteTask(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"frrrrry"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"frrrrry"},"content":"                + deletedTask.toString()","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"frrrrry"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message when the tasks with the specific keyword is","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"frrrrry"},"content":"     * requested to be found.","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"frrrrry"},"content":"     * @param matchingTasks The list of matching tasks to the specific keyword.","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"frrrrry"},"content":"     * @param keyword The keyword the user wants to search for in the tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when a keyword is","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"frrrrry"},"content":"     *     requested to be found.","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"frrrrry"},"content":"    public String printFindTask(ArrayList\u003cTask\u003e matchingTasks, String keyword) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"frrrrry"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"frrrrry"},"content":"            return \"There are no tasks in your list yet :O\";","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"frrrrry"},"content":"            String msg \u003d \"Here are the tasks with \" + \"\\\"\" + keyword + \"\\\"\" + \":\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"frrrrry"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"frrrrry"},"content":"            for (Task t : matchingTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"frrrrry"},"content":"                msg +\u003d i + \". \" + t;","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"frrrrry"},"content":"                i++;","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"frrrrry"},"content":"            return msg;","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message to see the user\u0027s sorted list of deadlines.","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"frrrrry"},"content":"     * @param sortedDeadlines The sorted ArrayList of Deadline objects","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"frrrrry"},"content":"     *     according to their dates and times.","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when the user","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"frrrrry"},"content":"     *     requests to see their sorted deadlines.","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"frrrrry"},"content":"    public String printSortedDeadlines(ArrayList\u003cDeadline\u003e sortedDeadlines) {","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"frrrrry"},"content":"        if (sortedDeadlines.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"frrrrry"},"content":"            return \"There are no deadlines in your list yet :O\";","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"frrrrry"},"content":"            String msg \u003d \"Here are your sorted deadlines in ascending order: \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"frrrrry"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"frrrrry"},"content":"            for (Deadline deadline : sortedDeadlines) {","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"frrrrry"},"content":"                msg +\u003d i + \". \" + deadline.toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"frrrrry"},"content":"                i++;","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"frrrrry"},"content":"            return msg;","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"frrrrry"},"content":"     * Prints out the message to see the user\u0027s sorted list of events.","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"frrrrry"},"content":"     * @param sortedEvents The sorted ArrayList of Event objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"frrrrry"},"content":"     * @return The String representation of the message to be shown when the user","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"frrrrry"},"content":"     *     requests to see their sorted events.","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"frrrrry"},"content":"    public String printSortedEvents(ArrayList\u003cEvent\u003e sortedEvents) {","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"frrrrry"},"content":"        if (sortedEvents.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"frrrrry"},"content":"            return \"There are no events in your list yet :O\";","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"frrrrry"},"content":"            String msg \u003d \"Here are your sorted events in ascending order: \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"frrrrry"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"frrrrry"},"content":"            for (Event event : sortedEvents) {","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"frrrrry"},"content":"                msg +\u003d i + \". \" + event.toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"frrrrry"},"content":"                i++;","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"frrrrry"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"frrrrry"},"content":"            return msg;","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"frrrrry":195}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * DukeException are Exceptions specific to Duke.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"     * The constructor of DukeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * Returns the message of exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @return The error message of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        return \"☹ OOPS!!! Something went wrong D:\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"frrrrry":23}},{"path":"src/main/java/exception/EmptyDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * The EmptyDateTimeException is thrown when the user types in an empty date/time into","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" * the input command when a date/time is required.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class EmptyDateTimeException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    protected String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"     * The constructor of EmptyDateTimeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public EmptyDateTimeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        return \"☹ OOPS!!! The date/time of the \" + this.message + \" cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"frrrrry":23}},{"path":"src/main/java/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * EmptyInputException is thrown when the user types in an empty input into the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"    protected String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"     * The constructor of EmptyInputException.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        return \"☹ OOPS!!! The description of \" + this.message + \" cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"frrrrry":22}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * The InvalidCommandException is thrown when the user types in an invalid input","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" * command into the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    protected String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"     * The constructor of InvalidCommandException.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        return this.message;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"frrrrry":23}},{"path":"src/main/java/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * The InvalidDateTimeException is thrown when the user types in an invalid date/time","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" * into the input command.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    protected String message;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"     * The constructor of InvalidDateTimeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public InvalidDateTimeException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        return \"☹ OOPS!!! The date/time format of the \"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"                + this.message + \" is incorrect :(((\";","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"frrrrry":24}},{"path":"src/main/java/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * InvalidFormatException is thrown when user inputs and invalid format","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" * for the user commands of deadline and event.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    protected String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    protected String subMessage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * The constructor of InvalidFormatException.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    public InvalidFormatException(String message, String subMessage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        this.subMessage \u003d subMessage;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        return \"☹ OOPS!!! The format of the \" + this.message + \" is incorrect :(((\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"                + \"Please add a \\\"\" + this.subMessage + \"\\\" keyword in\";","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"frrrrry":27}},{"path":"src/main/java/logo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":" ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⠿⠛⠋⠉⠩⣄⠘⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡏⠑⠒⠀⠀⣀⣀⠀⠀⢹⠈⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣷⡀⢀⣰⣿⡿⣿⣧⠀⠀⢡⣾⣧⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣯⣴⣿⠿⣄⣤⣾⡿⠟⠛⠛⠿⢿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⣠⣴⣶⠿⠛⠋⠙⣿⣏⠀⠀⢻⣿⣡⣀⣀⠀⠀⠀  ⢹⣿⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⠿⠋⠁⠀⣀⣤⣶⣾⣿⣿⣤⣤⣾⣿⠉⠉⠙⠻⣿⠆⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠁⠀⣀⣴⣿⠿⠛⠉⠀⢀⣿⡿⠿⠟⢿⣆⠀⢀⣴⣯⣴⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⣠⣾⠟⠋⠀⠀⠀⠀⠀⣈⣿⣷⣤⣴⣾⣿⣈⣻⣿⡟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⣰⡿⠁⠀⣠⡾⠋⠁⠀⠀⢀⣠⣴⠶⠞⠛⠛⠋⠉⠉⠉⠉⠙⠛⠻⠷⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠰⣿⠁⠀⠀⣿⣄⣀⣠⣴⡾⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⠿⣶⣄⠀⠀⠀⢀⣠⡄⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠈⠛⠶⠶⢾⣿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣄⠉⠙⠻⠿⠟⢹⡇⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⠘⣿⣿⣦⣀⠀⠲⣾⣁⠀⠀⠀⠀⠀⡀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣦⡀⠀⠀⠀⣿⡿⣿⣿⣿⡆⠀⠉⠛⠛⠛⠛⢻⡏⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⣠⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⡄⣸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⠛⢦⡀⠰⣿⣿⣿⣽⣿⡇⠀⠀⠀⠀⠀⢠⡿⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⣀⣤⡾⢻⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⡏⠙⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠰⣽⣶⣄⠉⠻⣿⣿⣧⠀⠀⢀⣤⣾⠟⠁⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"⢰⣶⡾⠛⠋⠉⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⢸⣸⡇⠀⣨⣿⣾⡋⠀⠀⠀⠀⢀⠀⠀⣿⡀⠀⠈⠛⢷⣄⠈⠛⣿⡆⠀⠘⣿⡀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"⠀⠙⠿⣦⣀⠀⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠋⠀⠙⢿⣦⣀⠀⠀⠘⣷⣄⣹⣧⠀⠀⠀⠈⢻⣦⠀⠈⠋⠀⠀⠘⣧⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠈⠛⠿⢶⡶⠃⠀⣰⠃⠀⠀⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⠀⠀⠉⠻⢷⣦⣤⣘⣿⡛⠛⠀⢀⣴⣶⣦⡹⣷⡀⠀⠀⠀⠀⠸⣧⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⢠⡿⠃⠀⢀⡟⠀⠀⠀⠀⠀⠀⣼⣿⠀⠀⢀⣴⣿⣿⣷⡄⠀⠀⠈⠉⠉⠉⠉⠀⠀⢸⣿⣿⣿⣷⠻⣧⠀⠀⠀⠀⠀⢿⡆⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⢰⣿⠁⠀⠀⢸⠁⠀⠀⠀⠀⠈⠋⣿⠀⠀⠸⣿⣿⣿⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀  ⠈⠛⠿⠟⠃⠀⢻⣧⠀⠀⠀⠸⣧⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⣿⡇⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠉⠻⠿⠿⠋⠀⢠⡀⠀⠀⣀⣀⣀⣸⠇⠀⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⠀⣿⡀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⢰⣿⠁⠀⠀⢰⡏⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⠀⠀ ⠀⠀⠈⠛⠒⠛⠉⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠀⠀⠀⠀⢸⡇⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⢸⣿⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠁⠀⠀⠀⠀⢸⣿⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⢸⣿⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣤⣶⡿⠋⣿⠀⠀⠀⠀⠀⠀⣿⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠘⣿⡄⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣧⣄⣀⣀⣀⣠⣤⣶⣶⣾⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⣠⠀⠀⢠⣿⡄","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⢻⣧⠀⠀⠸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣟⠛⢻⡟⢻⡉⠉⣫⣀⠀⠀⠀⠉⠉⠛⠙⠿⣷⣿⡿⠁⢀⣰⡟⠀⠀⢸⣿⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠈⢻⣧⡀⠀⠹⣷⡀⠀⠀⠀⠀⢠⠀⠀⠀⠘⣿⣿⣿⢻⡿⠀⠈⠷⠟⠁⠘⢾⣿⣶⣤⣶⣾⡇⠀⣿⣿⣤⣶⣿⣿⠃⠀⠀⣾⡟⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠈⠻⣷⣄⡀⠹⣷⣄⠀⠀⠀⢸⣷⣤⡀⠀⠈⢻⣿⣯⣤⠀⠀⣠⡀⠀⢀⣼⣿⣿⣿⣿⣟⠁⠐⠿⣿⣿⣿⣿⠋⠀⢀⣾⠟⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠈⠙⠿⣷⣮⣽⣷⣶⣤⣤⣿⣿⣿⣷⣶⣦⣭⣿⣿⣧⣠⠵⢯⡆⠚⣯⢿⠋⠛⠛⢫⣀⣠⣾⣿⢿⣿⣥⣤⠶⠛⠁⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⢁⣾⣿⣿⣿⠿⠿⠿⠿⠻⢿⣿⣿⣷⣦⣤⣤⣀⣤⣤⣄⣶⣿⣿⡿⠟⠉⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⡇⠀⠀⣀⡀⠈⢿⣧⠀⠉⠙⠛⠛⠛⠛⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⢿⡄⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣿⣿⡏⠛⠉⢻⣿⣿⣿⣾⣿⣿⠀⢸⣿⠀⠀⠀⠀⠀⠙⠓⠢⠀⠀⠀⠀⠀⠸⠀⠀⠀⠘⣿⡄⠀⠀⠀⠀⠀","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"frrrrry":33}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import utils.DateTimeFormat;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" * Deadline is a Task that has a date/time which this task should be completed by.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    protected String byString;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     * @param description The deadline description.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @param byString The string representation of the by datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Deadline with specified status.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"     * @param description The deadline description.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"     * @param byString The string representation of the by datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"     * @param isDone The status of the deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"    public Deadline(String description, String byString, boolean isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"     * To get the date and time of the deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"     * @return The LocalDateTime object of the date and time of the deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"        return DateTimeFormat.toLocalDateTime(this.byString);","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"frrrrry":49}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import utils.DateTimeFormat;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" * Event is a Task that has a start date/time and an end date/time.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    protected String fromString;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    protected String toString;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @param description The event description.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     * @param fromString The string representation of the from datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     * @param toString The string representation of the to datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    public Event(String description, String fromString, String toString) {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        this.fromString \u003d fromString;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        this.toString \u003d toString;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Event with specified status.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"     * @param description The event description.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"     * @param fromString The string representation of the from datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"     * @param toString The string representation of the to datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"     * @param isDone The status of the event.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"    public Event(String description, String fromString, String toString, boolean isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"        this.fromString \u003d fromString;","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"        this.toString \u003d toString;","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"     * To get the start date and time of the Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"     * @return The LocalDateTime object of the start date time of the Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        return DateTimeFormat.toLocalDateTime(this.fromString);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"     * To get the end date and time of the Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"     * @return The LocalDateTime object of the end date time of the Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"        return DateTimeFormat.toLocalDateTime(this.toString);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromString + \" to: \" + toString + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"frrrrry":64}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * Task is the object created to identify tasks the user adds into","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" * the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Task with specified status.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"frrrrry"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"frrrrry"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"frrrrry"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"frrrrry"},"content":"            System.out.println(\"Task is already done! (≧∇≦)/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"frrrrry"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"frrrrry"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"frrrrry"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"frrrrry"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"frrrrry"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"frrrrry"},"content":"            System.out.println(\"Task is not done yet! (;° ロ°)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"frrrrry"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"frrrrry"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"frrrrry"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"frrrrry"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"frrrrry"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"frrrrry"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"frrrrry"},"content":"            return \"[ ] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"frrrrry"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"frrrrry":67}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":" * Todo is a Task that has only the description.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"     * @param description the todo description.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     * The constructor of Todo with specified status.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     * @param description The todo description.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"     * @param isDone The status of the todo.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"frrrrry":31}},{"path":"src/main/java/utils/DateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package utils;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":" * DateTimeFormatter is used to format LocalDateTime objects and date strings.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"public class DateTimeFormat {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * Convert the date and time string to a LocalDateTime object.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * @param dateTimeString The date and time string in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     * @return The LocalDateTime object corresponding to the date and time of the string given.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    public static LocalDateTime toLocalDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        return LocalDateTime.parse(dateTimeString, FORMATTER);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"     * Convert the LocalDateTime object to a date and time string.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"     * @param ldt The LocalDateTime object to be converted.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"frrrrry"},"content":"     * @return The string represntation of the date and time in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"frrrrry"},"content":"    public static String toDateString(LocalDateTime ldt) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"frrrrry"},"content":"        return ldt.format(FORMATTER);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"frrrrry":31}},{"path":"src/main/java/utils/DeadlineSortingComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package utils;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" * Implements Comparator class to compare between the dates and times of Deadline objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"public class DeadlineSortingComparator implements Comparator\u003cDeadline\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * To compare the LocalDateTime of two Deadline objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * @param deadline1 The first Deadline object to be compared.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     * @param deadline2 The second Deadline object to be compared.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @return 0 if LocalDateTimes are equal,","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     *     less than 0 if LocalDateTime of deadline1 is before that of deadline2,","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     *     and more than 0 if LocalDateTime of deadline1 is after that of deadline2.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    public int compare(Deadline deadline1, Deadline deadline2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        return deadline1.getByDateTime().compareTo(deadline2.getByDateTime());","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"frrrrry":25}},{"path":"src/main/java/utils/EventSortingComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package utils;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":" * Implements Comparator class to compare between the dates and times of Event objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"public class EventSortingComparator implements Comparator\u003cEvent\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"     * To compare the LocalDateTime of two Event objects.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"     * @param event1 The first Event object to be compared.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"     * @param event2 The second Event object to be compared.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"     * @return 0 if LocalDateTimes are equal,","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"     *     less than 0 if LocalDateTime of event1 is before that of event2,","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"     *     and more than 0 if LocalDateTime of event1 is after that of event2.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    public int compare(Event event1, Event event2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"        return event1.getStartDateTime().compareTo(event2.getStartDateTime());","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"frrrrry":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: pink; -fx-border-width: 3;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"frrrrry":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"frrrrry":19}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        Deadline deadline \u003d new Deadline(\"deadline description\",","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"                \"1970-01-01 12:00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"        String dString \u003d deadline.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[D][ ] deadline description (by: 1970-01-01 12:00)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"                dString);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"frrrrry":16}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        Event event \u003d new Event(\"event description\", \"1970-01-01 12:00\", \"1970-01-01 00:00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"        String eString \u003d event.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[E][ ] event description (from: 1970-01-01 12:00 to: 1970-01-01 00:00)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"                eString);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"frrrrry":15}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        Task task \u003d new Task(\"task description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[ ] task description\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"    public void testMarkDoneUndone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        Task task \u003d new Task(\"task description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[X] task description\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        task.markUndone();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[ ] task description\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"frrrrry":23}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frrrrry"},"content":"package task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"frrrrry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"frrrrry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"frrrrry"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"frrrrry"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"frrrrry"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"frrrrry"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"frrrrry"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"frrrrry"},"content":"        Todo todo1 \u003d new Todo(\"test description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"frrrrry"},"content":"        String tString1 \u003d todo1.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[T][ ] test description\", tString1);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"frrrrry"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"frrrrry"},"content":"        Todo todo2 \u003d new Todo(\"description with numbers 12 3 4\");","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"frrrrry"},"content":"        String tString2 \u003d todo2.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"frrrrry"},"content":"        assertEquals(\"[T][ ] description with numbers 12 3 4\", tString2);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"frrrrry"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"frrrrry"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"frrrrry":23}}]
