[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"    mainClass.set(\"ipbot.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"    archiveBaseName \u003d \"ipbot\"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"javafx {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"rocketninja7":9,"-":40}},{"path":"src/main/java/ipbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.controller.MainWindowController;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Pair;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.TaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.CommandArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"    public static final DateTimeFormatter QUERY_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"    private static final String SAVE_FILE \u003d \"data/saved_tasks.csv\";","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"    public Duke() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"        this.storage \u003d new Storage(SAVE_FILE);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"            this.taskList \u003d this.storage.readTasksFromFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        } catch (TaskFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"            MainWindowController controller \u003d fxmlLoader.getController();","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"            controller.setDuke(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"            primaryStage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"            this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"            controller.sendWelcome();","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"rocketninja7"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"rocketninja7"},"content":"     * Get the bot response for a user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"rocketninja7"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"rocketninja7"},"content":"        Pair\u003cString, Map\u003cString, String\u003e\u003e commandResult \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"rocketninja7"},"content":"        String response;","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"rocketninja7"},"content":"            if (commandResult.getFirst().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"rocketninja7"},"content":"                return \"Nothing happened!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"rocketninja7"},"content":"            String command \u003d commandResult.getFirst();","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"rocketninja7"},"content":"            Command commandName \u003d Command.commandEnum(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"rocketninja7"},"content":"            if(commandName \u003d\u003d null){","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"rocketninja7"},"content":"                return \"Error: \" + command + \" is not a valid command!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"rocketninja7"},"content":"            if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"rocketninja7"},"content":"                primaryStage.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"rocketninja7"},"content":"                return \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"rocketninja7"},"content":"            Map\u003cString, String\u003e commandArgs \u003d commandResult.getSecond();","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"rocketninja7"},"content":"            switch (commandName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"rocketninja7"},"content":"            case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"rocketninja7"},"content":"                if (!commandArgs.get(\"\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"rocketninja7"},"content":"                    LocalDateTime queryDate \u003d LocalDateTime.parse(","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"rocketninja7"},"content":"                            commandArgs.get(\"\") + \" 0000\", QUERY_DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d taskList.listTasks(queryDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"rocketninja7"},"content":"                else{","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d taskList.listTasks();","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"rocketninja7"},"content":"            case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"rocketninja7"},"content":"                int markIndex \u003d Parser.checkIndexArg(commandArgs.get(\"\"), taskList.getTasksSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"rocketninja7"},"content":"                if (markIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"rocketninja7"},"content":"                    throw new CommandArgumentException(\"Invalid task to mark: \" + commandArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"rocketninja7"},"content":"                Pair\u003cTask, Boolean\u003e taskMark \u003d taskList.markTask(markIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"rocketninja7"},"content":"                if (taskMark.getSecond()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d Ui.markTaskString(taskMark.getFirst(), true);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"rocketninja7"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d Ui.alreadyMarkedTaskString(taskMark.getFirst(), true);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"rocketninja7"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"rocketninja7"},"content":"                int unmarkIndex \u003d Parser.checkIndexArg(commandArgs.get(\"\"), taskList.getTasksSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"rocketninja7"},"content":"                if (unmarkIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"rocketninja7"},"content":"                    throw new CommandArgumentException(\"Invalid task to unmark: \" + commandArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"rocketninja7"},"content":"                Pair\u003cTask, Boolean\u003e taskUnmark \u003d taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"rocketninja7"},"content":"                if (taskUnmark.getSecond()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d Ui.markTaskString(taskUnmark.getFirst(), false);","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"rocketninja7"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"rocketninja7"},"content":"                    response \u003d Ui.alreadyMarkedTaskString(taskUnmark.getFirst(), false);","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"rocketninja7"},"content":"            case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"rocketninja7"},"content":"                if (commandArgs.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"rocketninja7"},"content":"                    throw new CommandArgumentException(\"Task description cannot be empty!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"rocketninja7"},"content":"                ToDo toDo \u003d taskList.addToDoWithArgs(commandArgs);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"rocketninja7"},"content":"                response \u003d Ui.addedItemString(toDo, \"todo\");","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"rocketninja7"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"rocketninja7"},"content":"                Deadline deadline \u003d taskList.addDeadlineWithArgs(commandArgs);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"rocketninja7"},"content":"                response \u003d Ui.addedItemString(deadline, \"deadline\");","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"rocketninja7"},"content":"            case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"rocketninja7"},"content":"                Event event \u003d taskList.addEventWithArgs(commandArgs);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"rocketninja7"},"content":"                response \u003d Ui.addedItemString(event, \"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"rocketninja7"},"content":"            case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"rocketninja7"},"content":"                int deleteIndex \u003d Parser.checkIndexArg(commandArgs.get(\"\"), taskList.getTasksSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"rocketninja7"},"content":"                if (deleteIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"rocketninja7"},"content":"                    throw new CommandArgumentException(\"Invalid task to delete: \" + commandArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"rocketninja7"},"content":"                Task task \u003d taskList.deleteTask(deleteIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"rocketninja7"},"content":"                response \u003d Ui.deletedItemString(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"rocketninja7"},"content":"            case FIND:","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"rocketninja7"},"content":"                if (commandArgs.get(\"\").isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"rocketninja7"},"content":"                    throw new CommandArgumentException(\"Find string cannot be empty!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"rocketninja7"},"content":"                response \u003d taskList.listTasks(commandArgs.get(\"\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"rocketninja7"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"rocketninja7"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"rocketninja7"},"content":"                response \u003d \"If you see this, there was an error!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"rocketninja7"},"content":"        catch (CommandArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"rocketninja7"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"rocketninja7"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"rocketninja7"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"rocketninja7"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"rocketninja7"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"rocketninja7"},"content":"        this.storage.writeTasksToFile(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"rocketninja7"},"content":"        return response;","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"rocketninja7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"rocketninja7"},"content":"        Application.launch();","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rocketninja7":170,"-":2}},{"path":"src/main/java/ipbot/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.control;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    private DialogBox(String dialogText, Image image) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DialogBox.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"        this.dialog.setText(dialogText);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        this.displayPicture.setImage(image);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"    private void flip() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"    public static DialogBox getUserDialog(String dialogText, Image image) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"        return new DialogBox(dialogText, image);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"    public static DialogBox getBotDialog(String dialogText, Image image) {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"        var db \u003d new DialogBox(dialogText, image);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"        db.flip();","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"        return db;","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"rocketninja7":55}},{"path":"src/main/java/ipbot/controller/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.controller;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.Duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.control.DialogBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"public class MainWindowController {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    private static final Image userImage \u003d new Image(MainWindowController.class.getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    private static final Image botImage \u003d new Image(MainWindowController.class.getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello I\u0027m Ip Bot!\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"            \"While I may not be able to fight like Ip Man, I can assist you in other areas!\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing the bot reply and then appends them to","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        String userText \u003d this.userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"        String botText \u003d duke.getResponse(this.userInput.getText());  // TODO: Check if duke is not set","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"                DialogBox.getBotDialog(botText, botImage)","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"        this.userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"    public void sendWelcome() {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getBotDialog(WELCOME_MESSAGE, botImage));","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"rocketninja7":58}},{"path":"src/main/java/ipbot/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":" * Represents a command available in ipbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"public enum Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"    BYE (\"bye\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"    LIST (\"list\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"    MARK (\"mark\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"    UNMARK (\"unmark\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    EVENT (\"event\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    DELETE (\"delete\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"    FIND (\"find\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"    INVALID (\"\");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"    private final String command;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    Command(String command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"     * Returns the corresponding command based on the command String.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"     * @param command The String version of the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"     * @return The corresponding command if it exists. Otherwise, return null.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"    public static Command commandEnum(String command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"        for(Command currCmd: values()){","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"            if(currCmd.command.equals(command)){","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"                return currCmd;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"        return null;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":38}},{"path":"src/main/java/ipbot/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":" * Represents a deadline, with a description and due time.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"     * Attempts to parse a due time String to LocalDateTime.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"     * Then, defines a Deadline object with the given description and due time.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"     * @param endTimeStr The due time of the deadline as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    public Deadline(String description, String endTimeStr) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        this(description, LocalDateTime.parse(endTimeStr, Task.INPUT_DATE_TIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"     * Defines a Deadline object with the given description and due time.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"     * @param endTime The due time of the deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    public Deadline(String description, LocalDateTime endTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"     * Checks if the deadline is due on the date of the given LocalDateTime.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"     * @param dateTime Defines the date to check if the deadline is due.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"     * @return True if the deadline is due on the day given. False otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"    public boolean isDue(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        return this.endTime.truncatedTo(ChronoUnit.DAYS).isEqual(dateTime.truncatedTo(ChronoUnit.DAYS));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"    public String toCommaString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"        String[] commaStringValues \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"                \"D\",","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"                this.isDone ? \"X\" : \" \",","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"                this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"                this.endTime.format(Task.INPUT_DATE_TIME_FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"        String commaString \u003d String.join(\",\", commaStringValues);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"        return commaString;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.endTime.format(Task.DISPLAY_DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":63}},{"path":"src/main/java/ipbot/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":" * Represents an event, with a description, start time and end time.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"     * Attempts to parse a start time String and end time String to LocalDateTime.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"     * Then, defines an Event object with the given description, start time and end time.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"     * @param startTimeStr The start time of the event as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"     * @param endTimeStr The end time of the event as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    public Event(String description, String startTimeStr, String endTimeStr) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"        this(","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"                description,","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"                LocalDateTime.parse(startTimeStr, Task.INPUT_DATE_TIME_FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"                LocalDateTime.parse(endTimeStr, Task.INPUT_DATE_TIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"     * Defines an Event object with the given description, start time and end time.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"     * Throws an exception if the start time is after the end time.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"     * @param endTime  The end time of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) throws IllegalArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"            throw new IllegalArgumentException(\"Start time of event cannot be after end time!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"     * Checks if an event is ongoing at the given time.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"     * @param dateTime The time to check if the event is ongoing.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"     * @return True if the given time is between the start time and the end time of the event. False otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"    public boolean isOngoing(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"        return !this.startTime.truncatedTo(ChronoUnit.DAYS).isAfter(dateTime.truncatedTo(ChronoUnit.DAYS))","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"                \u0026\u0026 !dateTime.truncatedTo(ChronoUnit.DAYS).isAfter(this.endTime.truncatedTo(ChronoUnit.DAYS));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"    public String toCommaString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"        String[] commaStringValues \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"                \"E\",","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"rocketninja7"},"content":"                this.isDone ? \"X\" : \" \",","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"rocketninja7"},"content":"                this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"rocketninja7"},"content":"                this.startTime.format(Task.INPUT_DATE_TIME_FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"rocketninja7"},"content":"                this.endTime.format(Task.INPUT_DATE_TIME_FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"rocketninja7"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"rocketninja7"},"content":"        String commaString \u003d String.join(\",\", commaStringValues);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"rocketninja7"},"content":"        return commaString;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"rocketninja7"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"rocketninja7"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"rocketninja7"},"content":"                + \" (from: \" + this.startTime.format(Task.DISPLAY_DATE_TIME_FORMATTER)","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"rocketninja7"},"content":"                + \" to: \" + this.endTime.format(Task.DISPLAY_DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":79}},{"path":"src/main/java/ipbot/model/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":" * Defines a pair object for returning multiple values from functions.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":" * @param \u003cS\u003e The type of the first pair object.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":" * @param \u003cT\u003e The type of the second pair object.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"public class Pair \u003cS, T\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"    private S first;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"    private T second;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    public Pair(S first, T second) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"    public S getFirst() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"        return this.first;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    public T getSecond() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        return this.second;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"            return false;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"        if (this.first \u003d\u003d null || this.second \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"            return false;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"            return true;","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"        if (obj instanceof Pair\u003c?,?\u003e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"            Pair\u003c?,?\u003e p \u003d (Pair\u003c?, ?\u003e) obj;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"            if (p.first \u003d\u003d null || p.second \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"                return false;","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"            return this.first.equals(p.first) \u0026\u0026 this.second.equals(p.second);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        return false;","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"rocketninja7":46}},{"path":"src/main/java/ipbot/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":" * Represents the general structure of a task to be added to the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"public class Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"    public static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"            \"uuuu-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    public static final DateTimeFormatter DISPLAY_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"            \"dd LLL yyyy hh:mm a\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"     * Defines a task with a description and marks it as unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"     * Returns a String to represent whether the task has been marked.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"     * @return \"X\" if task has been marked. \" \" otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"     * @return True if task was not marked before. False otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"    public boolean markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        if(this.isDone){","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"            return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"     * Marks this task as undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"     * @return True if task was not unmarked before. False otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"    public boolean unmarkDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"        if(!this.isDone){","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"            return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"        return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"     * Creates a task from its String representation in CSV format.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"rocketninja7"},"content":"     * @param string The String representation in CSV format.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"rocketninja7"},"content":"     * @return The corresponding created Task object.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"rocketninja7"},"content":"     * @throws TaskFormatException","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"rocketninja7"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"rocketninja7"},"content":"    public static Task fromString(String string) throws TaskFormatException, DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"rocketninja7"},"content":"        String[] args \u003d string.split(\",\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"rocketninja7"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"rocketninja7"},"content":"            throw new TaskFormatException(\"Task string is too short!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"rocketninja7"},"content":"        if (!args[0].matches(\"^[a-zA-Z]$\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"rocketninja7"},"content":"            throw new TaskFormatException(\"Task string has incorrect format for type!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"rocketninja7"},"content":"        char taskType \u003d args[0].charAt(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"rocketninja7"},"content":"        if (!args[1].matches(\"^[X ]$\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"rocketninja7"},"content":"            throw new TaskFormatException(\"Task string has incorrect format for completion status!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"rocketninja7"},"content":"        char completionStatus \u003d args[1].charAt(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"rocketninja7"},"content":"        Task retTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"rocketninja7"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"rocketninja7"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"rocketninja7"},"content":"            if (args.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"rocketninja7"},"content":"                throw new TaskFormatException(","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"rocketninja7"},"content":"                        \"Task string has wrong number of arguments for ToDo \" + args.length + \"!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"rocketninja7"},"content":"            ToDo toDo \u003d new ToDo(args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"rocketninja7"},"content":"            retTask \u003d toDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"rocketninja7"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"rocketninja7"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"rocketninja7"},"content":"            if (args.length !\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"rocketninja7"},"content":"                throw new TaskFormatException(","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"rocketninja7"},"content":"                        \"Task string has wrong number of arguments for Deadline \" + args.length + \"!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"rocketninja7"},"content":"            Deadline deadline \u003d new Deadline(args[2], args[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"rocketninja7"},"content":"            retTask \u003d deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"rocketninja7"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"rocketninja7"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"rocketninja7"},"content":"            if (args.length !\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"rocketninja7"},"content":"                throw new TaskFormatException(","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"rocketninja7"},"content":"                        \"Task string has wrong number of arguments for Event \" + args.length + \"!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"rocketninja7"},"content":"            Event event \u003d new Event(args[2], args[3], args[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"rocketninja7"},"content":"            retTask \u003d event;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"rocketninja7"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"rocketninja7"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"rocketninja7"},"content":"            throw new TaskFormatException(\"Task type is invalid!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"rocketninja7"},"content":"        if (completionStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"rocketninja7"},"content":"            retTask.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"rocketninja7"},"content":"        return retTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"rocketninja7"},"content":"     * Returns the CSV representation of the task object.","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"rocketninja7"},"content":"     * @return The CSV representation of the task object.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"rocketninja7"},"content":"    public String toCommaString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"rocketninja7"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"rocketninja7"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"rocketninja7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"rocketninja7"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"rocketninja7"},"content":"        return description;","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":136}},{"path":"src/main/java/ipbot/model/TaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":" * Represents an Exception in parsing the CSV format of a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"public class TaskFormatException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"    public TaskFormatException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"rocketninja7":10}},{"path":"src/main/java/ipbot/model/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"    public TaskStub(String description) {","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"        super(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"        return \"\u003cSome Task String\u003e\";","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"rocketninja7":12}},{"path":"src/main/java/ipbot/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":" * Represents a todo, with a description.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"     * Defines a ToDo object with the given description.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    public ToDo(String description){","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"    public String toCommaString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"        String[] commaStringValues \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"                \"T\",","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"                this.isDone ? \"X\" : \" \",","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"                this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        String commaString \u003d String.join(\",\", commaStringValues);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"        return commaString;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":31}},{"path":"src/main/java/ipbot/model/test/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.model.test;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.TaskStub;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"public class UiTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"    public void testTaskListFormatString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"                \"1. \u003cSome Task String\u003e\",","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"                Ui.taskListFormatString(new TaskStub(\"asdf\"), 1)","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"                \"2. \u003cSome Task String\u003e\",","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"                Ui.taskListFormatString(new TaskStub(\"asdf\"), 2)","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"                \"3. \u003cSome Task String\u003e\",","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"                Ui.taskListFormatString(new TaskStub(\"asdf\"), 3)","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    public void testPrintAddedItem() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"                \"Added taskType item: \u003cSome Task String\u003e\",","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"                Ui.addedItemString(new TaskStub(\"asdf\"), \"taskType\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"rocketninja7":32}},{"path":"src/main/java/ipbot/util/CommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":" * Represents an exception in parsing or processing arguments given by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"public class CommandArgumentException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"    public CommandArgumentException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":11}},{"path":"src/main/java/ipbot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Pair;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":" * A class to parse user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"     * Processes the index argument given by the user as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"     * @param indexArg The index argument given by the user as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"     * @param lstSize The size of the list to index.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"     * @return The task index to use if the index argument given is valid. -1 otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"    public static int checkIndexArg(String indexArg, int lstSize){","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"        if (!indexArg.matches(\"^\\\\d+$\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"            return -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"        int index \u003d Integer.parseInt(indexArg) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"        if (0 \u003e index || index \u003e\u003d lstSize){","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"            return -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"        return index;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"     * Parses the command given by the user and extracts the command as a String and the arguments as a Map.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"     * @return A Pair of String and Map.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"     * The String is the command String, while the Map contains the arguments given by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"    public static Pair\u003cString, Map\u003cString, String\u003e\u003e parseCommand(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"        int commandEndIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"        if (commandEndIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"            commandEndIndex \u003d command.length();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        String commandNameStr \u003d command.substring(0, commandEndIndex).toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"        String commandArgs \u003d command.substring(commandEndIndex).strip();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"        commandArgs \u003d \"/ \" + commandArgs;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"        String[] splitArgs \u003d commandArgs.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        Map\u003cString, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"        for (String currArg: splitArgs) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"            int argEndIndex \u003d currArg.indexOf(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"            if (argEndIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"                argEndIndex \u003d currArg.length();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"            String argName \u003d currArg.substring(0, argEndIndex).toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"            String argArgs \u003d currArg.substring(argEndIndex).strip();","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"            args.put(argName, argArgs);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"        return new Pair\u003c\u003e(commandNameStr, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"rocketninja7":58}},{"path":"src/main/java/ipbot/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.TaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":" * A class to read and write from the task file storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    private String saveFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"     * Defines a Storage object with the save file path where the tasks are stored.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"     * @param saveFile The save file path where the tasks are stored.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    public Storage(String saveFile) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"        this.createFileIfNotExists();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"     * Creates the save file to store tasks if it does not exist.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"    public void createFileIfNotExists() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"        File saveFile \u003d new File(this.saveFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"            if (!saveFile.getParentFile().exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"                saveFile.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"     * Reads the tasks from the tasks save file.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"     * @return A TaskList containing all the Task in the save file.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"     * @throws TaskFormatException","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"    public TaskList readTasksFromFile() throws TaskFormatException, DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"            FileReader fr \u003d new FileReader(this.saveFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"            String line;","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"                taskList.addTask(Task.fromString(line));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"rocketninja7"},"content":"            br.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"rocketninja7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"rocketninja7"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"rocketninja7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"rocketninja7"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"rocketninja7"},"content":"        return taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"rocketninja7"},"content":"     * Writes the tasks to the tasks save file.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"rocketninja7"},"content":"     * @param taskList The TaskList object that contains the tasks to write.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"rocketninja7"},"content":"    public void writeTasksToFile(TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"rocketninja7"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"rocketninja7"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"rocketninja7"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"rocketninja7"},"content":"            bw.write(taskList.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"rocketninja7"},"content":"            bw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"rocketninja7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"rocketninja7"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"rocketninja7":89}},{"path":"src/main/java/ipbot/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Pair;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":" * A class to store the list of tasks and act as an interface for interacting with the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"     * Initialises the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"     * Returns the size of the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"    public int getTasksSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"     * Returns the list of tasks as a String.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"            taskListString +\u003d Ui.taskListFormatString(tasks.get(index), index + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"        return taskListString;","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"     * Returns a list of the deadlines that fall on the date of the given time,","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"     * and the events that are ongoing at that time, as a String.","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"rocketninja7"},"content":"     * @param queryDate The time to query.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"rocketninja7"},"content":"    public String listTasks(LocalDateTime queryDate) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"rocketninja7"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"rocketninja7"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"rocketninja7"},"content":"            if (queryDate !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"rocketninja7"},"content":"                Task currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"rocketninja7"},"content":"                if (currTask instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"rocketninja7"},"content":"                    Event event \u003d (Event) currTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"rocketninja7"},"content":"                    if (!event.isOngoing(queryDate)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"rocketninja7"},"content":"                        continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"rocketninja7"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"rocketninja7"},"content":"                } else if (currTask instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"rocketninja7"},"content":"                    Deadline deadline \u003d (Deadline) currTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"rocketninja7"},"content":"                    if (!deadline.isDue(queryDate)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"rocketninja7"},"content":"                        continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"rocketninja7"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"rocketninja7"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"rocketninja7"},"content":"                    continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"rocketninja7"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"rocketninja7"},"content":"            taskListString +\u003d Ui.taskListFormatString(tasks.get(index), index + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"rocketninja7"},"content":"        return taskListString;","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"rocketninja7"},"content":"    public String listTasks(String findStr) {","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"rocketninja7"},"content":"        if (findStr \u003d\u003d null || findStr.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"rocketninja7"},"content":"            return \"Please enter a search term\";","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"rocketninja7"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"rocketninja7"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"rocketninja7"},"content":"            Task currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"rocketninja7"},"content":"            if (currTask.getDescription().contains(findStr)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"rocketninja7"},"content":"                taskListString +\u003d Ui.taskListFormatString(tasks.get(index), index + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"rocketninja7"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"rocketninja7"},"content":"        return taskListString;","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"rocketninja7"},"content":"     * Marks a task at a given index.","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"rocketninja7"},"content":"     * @param index The index of the task to mark.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"rocketninja7"},"content":"     * @return A Pair, consisting of the marked task, and a boolean representing whether the task was unmarked before.","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"rocketninja7"},"content":"    public Pair\u003cTask, Boolean\u003e markTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"rocketninja7"},"content":"        boolean wasNotMarked \u003d tasks.get(index).markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"rocketninja7"},"content":"        return new Pair\u003c\u003e(tasks.get(index), wasNotMarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"rocketninja7"},"content":"     * Unmarks a task at a given index.","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"rocketninja7"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"rocketninja7"},"content":"     * @return A Pair, consisting of the unmarked task, and a boolean representing whether the task was marked before.","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"rocketninja7"},"content":"    public Pair\u003cTask, Boolean\u003e unmarkTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"rocketninja7"},"content":"        boolean wasNotUnmarked \u003d tasks.get(index).unmarkDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"rocketninja7"},"content":"        return new Pair\u003c\u003e(tasks.get(index), wasNotUnmarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"rocketninja7"},"content":"     * Adds a ToDo object to the list of tasks with the given arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"rocketninja7"},"content":"     * @param commandArgs A Map consisting of the arguments for the ToDo object being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"rocketninja7"},"content":"     * @return The ToDo object added.","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"rocketninja7"},"content":"    public ToDo addToDoWithArgs(Map\u003cString, String\u003e commandArgs) {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"rocketninja7"},"content":"        ToDo toDo \u003d new ToDo(commandArgs.get(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"rocketninja7"},"content":"        tasks.add(toDo);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"rocketninja7"},"content":"        return toDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"rocketninja7"},"content":"     * Adds a Deadline object to the list of tasks with the given arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"rocketninja7"},"content":"     * Throws an exception for empty arguments or missing \"by\" argument.","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"rocketninja7"},"content":"     * @param commandArgs A Map consisting of the arguments for the Deadline object being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"rocketninja7"},"content":"     * @return The Deadline object added.","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"rocketninja7"},"content":"     * @throws CommandArgumentException","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"rocketninja7"},"content":"    public Deadline addDeadlineWithArgs(Map\u003cString, String\u003e commandArgs) throws CommandArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"Task description cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"by\") \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"Deadline missing a /by argument!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"by\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"/by argument cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"rocketninja7"},"content":"        Deadline deadline \u003d new Deadline(commandArgs.get(\"\"), commandArgs.get(\"by\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"rocketninja7"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"rocketninja7"},"content":"        return deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"rocketninja7"},"content":"     * Adds an Event object to the list of tasks with the given arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"rocketninja7"},"content":"     * Throws an exception for empty arguments or missing \"from\" or \"to\" argument.","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"rocketninja7"},"content":"     * @param commandArgs A Map consisting of the arguments for the Event object being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"rocketninja7"},"content":"     * @return The Event object added.","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"rocketninja7"},"content":"     * @throws CommandArgumentException","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"rocketninja7"},"content":"    public Event addEventWithArgs(Map\u003cString, String\u003e commandArgs) throws CommandArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"Task description cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"from\") \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"Event missing a /from argument!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"from\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"/from argument cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"to\") \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"Event missing a /to argument!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"rocketninja7"},"content":"        if (commandArgs.get(\"to\").isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"rocketninja7"},"content":"            throw new CommandArgumentException(\"/to argument cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"rocketninja7"},"content":"        Event event \u003d new Event(commandArgs.get(\"\"), commandArgs.get(\"from\"), commandArgs.get(\"to\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"rocketninja7"},"content":"        tasks.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"rocketninja7"},"content":"        return event;","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"rocketninja7"},"content":"     * Deletes a task at the given index.","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"rocketninja7"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"rocketninja7"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"rocketninja7"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"rocketninja7"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"rocketninja7"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"rocketninja7"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"rocketninja7"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"rocketninja7"},"content":"        String string \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"rocketninja7"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"rocketninja7"},"content":"            string +\u003d tasks.get(i).toCommaString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"rocketninja7"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"rocketninja7"},"content":"        return string;","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"rocketninja7":205}},{"path":"src/main/java/ipbot/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":" * A class to handle all interactions with the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"     * Returns a task as a String in list format.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"     * @param number The number to be given to the task in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"    public static String taskListFormatString(Task task, int number) {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"        return String.format(\"%d. %s\\n\", number, task.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"     * Returns a notification that a task has been added.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"     * @param taskTypeStr The type of task that was added.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    public static String addedItemString(Task task, String taskTypeStr) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"        return \"Added \" + taskTypeStr + \" item: \" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"     * Returns a notification that a task has been deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"    public static String deletedItemString(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"        return \"Deleted item: \" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"     * Returns a notification that a task has been marked or unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task that was marked or unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"rocketninja7"},"content":"     * @param markAsDone Whether we are marking or unmarking the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"rocketninja7"},"content":"    public static String markTaskString(Task task, boolean markAsDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"rocketninja7"},"content":"        String done \u003d markAsDone ? \"done\" : \"undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"rocketninja7"},"content":"        return \"Marking task as \" + done + \": \" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"rocketninja7"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"rocketninja7"},"content":"     * Returns a notification that we are marking or unmarking a task that has already been marked or unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"rocketninja7"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"rocketninja7"},"content":"     * @param task The task that was marked or unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"rocketninja7"},"content":"     * @param markAsDone Whether we are marking or unmarking the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"rocketninja7"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"rocketninja7"},"content":"    public static String alreadyMarkedTaskString(Task task, boolean markAsDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"rocketninja7"},"content":"        String done \u003d markAsDone ? \"done\" : \"undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"rocketninja7"},"content":"        return \"Task was already marked as \" + done + \": \" + task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"rocketninja7":59}},{"path":"src/main/java/ipbot/util/test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"package ipbot.util.test;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"import ipbot.model.Pair;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"import ipbot.util.Parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"    public void testCheckIndexArg() {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(-1, Parser.checkIndexArg(\"abc\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(-1, Parser.checkIndexArg(\"-1\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(-1, Parser.checkIndexArg(\"0\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(0, Parser.checkIndexArg(\"1\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(1, Parser.checkIndexArg(\"2\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(2, Parser.checkIndexArg(\"3\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(-1, Parser.checkIndexArg(\"4\", 3));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"    public void testParseCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"        Map\u003cString, String\u003e m0 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"        m0.put(\"\", \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(new Pair\u003c\u003e(\"\", m0), Parser.parseCommand(\"\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(new Pair\u003c\u003e(\"asdf\", m0), Parser.parseCommand(\"asdf\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"        Map\u003cString, String\u003e m1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"        m1.put(\"\", \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"        m1.put(\"arg1\", \"a\");","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"rocketninja7"},"content":"        m1.put(\"arg2\", \"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(new Pair\u003c\u003e(\"asdf\", m1), Parser.parseCommand(\"asdf  /arg1 a /arg2 \"));","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"rocketninja7"},"content":"        Map\u003cString, String\u003e m2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"rocketninja7"},"content":"        m2.put(\"\", \"a\");","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"rocketninja7"},"content":"        m2.put(\"arg1\", \"1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"rocketninja7"},"content":"        assertEquals(new Pair\u003c\u003e(\"asdf\", m2), Parser.parseCommand(\"asdf a /arg1 /arg1 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"rocketninja7"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"rocketninja7"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"rocketninja7":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"      \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"rocketninja7":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"\u003cAnchorPane minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ipbot.controller.MainWindowController\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"      \u003cVBox AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"            \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"                  \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"               \u003c/content\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"                  \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"                  \u003cButton fx:id\u003d\"sendButton\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"rocketninja7"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"rocketninja7"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"rocketninja7"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"rocketninja7"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"rocketninja7"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"rocketninja7"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"rocketninja7":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rocketninja7"},"content":"test","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"rocketninja7"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"rocketninja7"},"content":"todo apple Pen 2","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"rocketninja7"},"content":"list 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"rocketninja7"},"content":"list apple Pen 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"rocketninja7"},"content":"deadline eat apple","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"rocketninja7"},"content":"deadline eat apple /by  tonight","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"rocketninja7"},"content":"event something cool /to  today  /from  yesterday","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"rocketninja7"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"rocketninja7"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"rocketninja7"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"rocketninja7"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"rocketninja7"},"content":"deadline a /by /by /by","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"rocketninja7"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"rocketninja7"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"rocketninja7"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"rocketninja7"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"rocketninja7"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"rocketninja7":26}}]
