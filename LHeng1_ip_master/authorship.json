[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"    mainClass.set(\"avalon.Avalon\")","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    archiveBaseName \u003d \"avalon\"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    toolVersion \u003d\u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LHeng1":7,"-":41}},{"path":"src/main/data/Avalon.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"D | 1 | return boook | 2019-08-18 2000","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"E | 0 | meeting | 2019-08-19 2000 | 2019-08-19 2200","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"LHeng1":3}},{"path":"src/main/java/avalon/Avalon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * The main class for the Duke ChatBot (Avalon).","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class Avalon {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     * Constructs an Avalon instance with the specified file path for task storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    public Avalon(String filePath) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"        storage.loadTasks(this.tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     * Runs the Avalon application, allowing users to manage tasks using a command-line interface.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    public void run() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"        String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        String[] parts;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        ui.greetMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"            String[] inputStr \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"            String command \u003d inputStr[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"                // Handle various commands","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"                switch (command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"                case \"bye\":","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"                    ui.byeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"                    return;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"                case \"list\":","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"                    ui.showTasksList(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"                    taskIndex \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"                        tasks.get(taskIndex).markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"                        ui.showMarkMessage(tasks, taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"Invalid task number to be marked.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"                    taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"                        tasks.get(taskIndex).markNotDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"                        ui.showUnmarkMessage(tasks, taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"Invalid task number to be unmarked.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"                    description \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"                    ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"LHeng1"},"content":"                    ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"LHeng1"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"LHeng1"},"content":"                    parts \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"LHeng1"},"content":"                    if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"Please provide a description and a deadline       (use /by).\");","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"LHeng1"},"content":"                    description \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"LHeng1"},"content":"                    String by \u003d parts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"LHeng1"},"content":"                    Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"LHeng1"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"LHeng1"},"content":"                    ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"LHeng1"},"content":"                case \"event\":","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"LHeng1"},"content":"                    parts \u003d userInput.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"LHeng1"},"content":"                    if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"Please provide a description, a starting time,     and an ending time (use /from and /to).\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"LHeng1"},"content":"                    description \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"LHeng1"},"content":"                    String from \u003d parts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"LHeng1"},"content":"                    String to \u003d parts[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"LHeng1"},"content":"                    Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"LHeng1"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"LHeng1"},"content":"                    ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"LHeng1"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"LHeng1"},"content":"                    taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"LHeng1"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"LHeng1"},"content":"                        Task deletedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"LHeng1"},"content":"                        tasks.removeTask(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"LHeng1"},"content":"                        ui.showDeleteTaskMessage(tasks, deletedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"LHeng1"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"LHeng1"},"content":"                        throw new IllegalArgumentException(\"Invalid task number to be deleted.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"LHeng1"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"LHeng1"},"content":"                case \"find\":","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"LHeng1"},"content":"                    String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"LHeng1"},"content":"                    findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"LHeng1"},"content":"                    break;","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"LHeng1"},"content":"                default:","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"LHeng1"},"content":"                    throw new IllegalArgumentException(\"I humbly apologize, but thy words remain a mystery to me...\");","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"LHeng1"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"LHeng1"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"LHeng1"},"content":"                System.out.println(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"LHeng1"},"content":"     * Searches for tasks containing the specified keyword in their descriptions and displays the matching tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"LHeng1"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"LHeng1"},"content":"    private void findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"LHeng1"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"LHeng1"},"content":"        for (Task task : tasks.tasks()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"LHeng1"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"LHeng1"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"LHeng1"},"content":"        ui.showFindMessage(matchingTasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"LHeng1"},"content":"    /** The entry point of the Avalon application.","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"LHeng1"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"LHeng1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"LHeng1"},"content":"        // Create an instance of Avalon and start the application","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"LHeng1"},"content":"        new Avalon(\"src/main/data/Avalon.txt\").run();","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":150}},{"path":"src/main/java/avalon/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Utility class for parsing and formatting date-time objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     * Parses a string representation of a date-time and returns a LocalDateTime object.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     * @param inputDateTime The input date-time string to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * @return The LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    public static LocalDateTime stringToDateTime(String inputDateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"            return LocalDateTime.parse(inputDateTime, formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"Invalid date format. Please follow the format: YYYY-MM-DD hhmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"        return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * Converts a LocalDateTime object to a formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return The formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"        String formattedDateTimeString \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        return formattedDateTimeString;","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"     * Converts a LocalDateTime object to a human-readable formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"     * @return The formatted human-readable date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"    public static String printDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        String formattedDateTimeString \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"        return formattedDateTimeString;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":51}},{"path":"src/main/java/avalon/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":" * Represents a task with a deadline, which is a type of task with a description, completion status, and a deadline timestamp.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     * The deadline timestamp for the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * Creates a new deadline task with the given description and deadline timestamp and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @param by The deadline timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.by \u003d DateTimeParser.stringToDateTime(by);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the deadline task, including its status icon, description, and deadline timestamp.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.printDateTimeToString(by) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":35}},{"path":"src/main/java/avalon/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":" * Represents an event task, which is a type of task with a description, completion status, and start and end timestamps.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     * The start timestamp for the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * The end timestamp for the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * Creates a new event task with the given description, start timestamp, and end timestamp, and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     * @param from The start timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     * @param to The end timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"        this.from \u003d DateTimeParser.stringToDateTime(from);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        this.to \u003d DateTimeParser.stringToDateTime(to);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the event task, including its status icon, description, start timestamp, and end timestamp.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateTimeParser.printDateTimeToString(from)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"                + \" to: \" + DateTimeParser.printDateTimeToString(to) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":43}},{"path":"src/main/java/avalon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Handles the loading and saving of tasks to/from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    private String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     * Constructs a new Storage instance with the specified file path.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     * Loads tasks from the file into the provided TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to which tasks will be loaded.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * @return The TaskList with loaded tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    public TaskList loadTasks(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"            System.out.print(\"Loading...\");","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"                String description \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"                Task task \u003d TaskParser.parse(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            scanner.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            // Handle the case where the file doesn\u0027t exist or other IO errors","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"No existing tasks file found. Starting with an empty list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"Tasks loaded successfully!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        return taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     * Saves tasks from the provided TaskList to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"            for (Task task : taskList.tasks()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"                String taskData \u003d TaskParser.serialize(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"                writer.write(taskData + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":67}},{"path":"src/main/java/avalon/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"     * Enumerates the types of tasks: TODO, DEADLINE, EVENT.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * Indicates whether the task is done (true) or not done (false).","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     * Creates a new task with the given description and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"     * Gets the status icon for the task, indicating whether it is done or not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"     * @return The status icon for the task (\"[X] \" if done, \"[ ] \" if not done).","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     * Marks the task as not done by setting its completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":67}},{"path":"src/main/java/avalon/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * Gets the tasks as an ArrayList.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     * @return The tasks as an ArrayList.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    public ArrayList\u003cTask\u003e tasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        return (ArrayList) tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    public int size() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"    public void removeTask(int i) {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":75}},{"path":"src/main/java/avalon/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Utility class for parsing and serializing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class TaskParser {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"     * Parses a string representation of a task and returns the corresponding Task object.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     * @param line The string representation of the task to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     * @return The Task object parsed from the input string.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    public static Task parse(String line) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"            task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"            task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"            task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        return task;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"     * Serializes a Task object to a string for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"     * @param task The Task object to be serialized.","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"     * @return The string representation of the serialized task.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    public static String serialize(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        String doneStatus \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"            return \"T | \" + doneStatus + \" | \" + task.description;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"            return \"D | \" + doneStatus + \" | \" + task.description + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(deadline.by);","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"            return \"E | \" + doneStatus + \" | \" + task.description + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(event.from) + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(event.to);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"            return \"Wrong formatting\";","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":61}},{"path":"src/main/java/avalon/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Represents a to-do task, which is a type of task with a description and completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"     * Creates a new to-do task with the given description and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the to-do task, including its status icon and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":26}},{"path":"src/main/java/avalon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":" * Represents the User Interface (UI) for interacting with the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     * Constructs a new UI instance with a scanner for user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    public Ui() {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * Gets user input from the console.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     * Prints a line separator to the console.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    public void linePrint() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        System.out.print(\"   _________________________________________\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"                \"________________________________________\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"     * Styles and prints a message with a line separator above and below it.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     * @param message The message to be styled and printed.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    public void styleMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        System.out.print(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"    public void greetMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"        styleMessage(\"    Hello! I\u0027m Arthur Pendragon.\\n    What can I do for you?\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    public void byeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"        styleMessage(\"    Farewell. We will meet again!\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"    public void showTasksList(TaskList tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"            styleMessage(\"    You haven\u0027t added anything, my sire.\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"            linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"   Here are the quests in thy list:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"            linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"LHeng1"},"content":"     * @param tasks     The task list containing the marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"LHeng1"},"content":"     * @param taskIndex The index of the marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"LHeng1"},"content":"    public void showMarkMessage(TaskList tasks, int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   Very well. I have marked this task as accomplished:\\n  \" + \"  \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"LHeng1"},"content":"                tasks.get(taskIndex).getStatusIcon() + \" \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"LHeng1"},"content":"                tasks.get(taskIndex).description);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"LHeng1"},"content":"     * @param tasks     The task list containing the unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"LHeng1"},"content":"     * @param taskIndex The index of the unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"LHeng1"},"content":"    public void showUnmarkMessage(TaskList tasks, int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   By the heavens! I have declared this task as yet to be completed:\\n  \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"LHeng1"},"content":"                \"  \" + tasks.get(taskIndex).getStatusIcon() +","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"LHeng1"},"content":"                \" \" + tasks.get(taskIndex).description);","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been added to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"LHeng1"},"content":"     * @param tasks The task list containing the newly added task.","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"LHeng1"},"content":"    public void showAddTaskMessage(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   Understood. I have included this quest:\\n  \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"LHeng1"},"content":"                \"  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"LHeng1"},"content":"     * @param tasks      The task list from which the task was deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"LHeng1"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"LHeng1"},"content":"    public void showDeleteTaskMessage(TaskList tasks, Task deletedTask) {","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   Noted. I\u0027ve removed this quest:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"    \" + deletedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"   Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"LHeng1"},"content":"        linePrint();","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"LHeng1"},"content":"     * Displays a message with the matching tasks found by a search operation.","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"LHeng1"},"content":"     * @param matchingTasks The TaskList containing matching tasks to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"LHeng1"},"content":"    public void showFindMessage(TaskList matchingTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"LHeng1"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"LHeng1"},"content":"            styleMessage(\"    No matching tasks found.\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"LHeng1"},"content":"            linePrint();","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"    Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"LHeng1"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"LHeng1"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"LHeng1"},"content":"            linePrint();","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":151}},{"path":"src/test/java/avalon/TaskParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"public class TaskParserTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    public void parse_deadlineCreation_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"        String input \u003d \"D | 1 | return book | 2019-08-18 2000\";","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d TaskParser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"return book\", task.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public void serialize_deadlineStringify_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d new Deadline(\"return book\", \"2019-08-18 2000\");","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        String serialized \u003d TaskParser.serialize(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"D | 0 | return book | 2019-08-18 2000\", serialized);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LHeng1":28}},{"path":"src/test/java/avalon/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"    public void toString_validDescription_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"        ToDo todo \u003d new ToDo(\"Buy food\");","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"[T][ ]  Buy food\", todo.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"        todo.markDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"[T][X]  Buy food\", todo.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"LHeng1":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"todo      ","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"deadline       ","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"event       ","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"ajhsf","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"mark 8","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"unmark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"delete 12","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"java -classpath ..\\bin avalon.Avalon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LHeng1":1,"-":20}}]
