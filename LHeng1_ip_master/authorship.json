[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    mainClass.set(\"avalon.Avalon\")","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"    archiveBaseName \u003d \"avalon\"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"    toolVersion \u003d\u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LHeng1":22,"-":41}},{"path":"src/main/data/Avalon.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"E | 0 | 2 | meeting | 2019-08-19 2000 | 2019-08-19 2200 | 2","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"T | 0 | 4 | read book","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"LHeng1":2}},{"path":"src/main/java/avalon/Avalon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * The main class for the Duke ChatBot (Avalon).","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class Avalon {","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    public static final String FILEPATH \u003d \"src/main/data/Avalon.txt\";","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     * Constructs an Avalon instance with the specified file path for task storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    public Avalon() {","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        this.storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        storage.loadTasks(this.taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * Gets a response from the ChatBot based on the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"     * @return The response generated by the ChatBot.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        ui.clearOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        return Parser.processCommand(input, taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":42}},{"path":"src/main/java/avalon/AvalonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Custom exception class for Avalon.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" * Represents exceptions specific to the Avalon chatbot application.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"public class AvalonException extends Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     * Constructs an AvalonException with the specified error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    public AvalonException(String message) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"        super(message);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":17}},{"path":"src/main/java/avalon/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"        double width \u003d displayPicture.getFitWidth();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        double height \u003d displayPicture.getFitHeight();","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        Circle clip \u003d new Circle(width / 2, height / 2, width/2);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"    public static DialogBox getAvalonDialog(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"        db.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"        return db;","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"LHeng1":66}},{"path":"src/main/java/avalon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"LHeng1":12}},{"path":"src/main/java/avalon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    private final Avalon avalon \u003d new Avalon();","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"            stage.setTitle(\"Avalon\");","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAvalon(avalon);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"            stage.show();","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"LHeng1":33}},{"path":"src/main/java/avalon/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    private Avalon avalon;","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"    public void setAvalon(Avalon a) {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        avalon \u003d a;","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        String response \u003d avalon.getResponse(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"                DialogBox.getAvalonDialog(response, dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"        if (response.equals(\"    Farewell. We will meet again!\\n\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"            PauseTransition wait \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"            wait.setOnFinished((e) -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"                Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"                stage.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"            });","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"            wait.play();","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":65}},{"path":"src/main/java/avalon/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Represents an abstract Command in the Avalon application.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * Concrete command classes should extend this class and provide an implementation for the \u0027execute\u0027 method.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" * Commands are responsible for performing actions on the task list and interacting with the user interface and storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     * Executes the command, performing the associated action on the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to operate on.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The Storage instance for reading/writing task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for user interaction.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If there is an error while executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    public abstract String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":24}},{"path":"src/main/java/avalon/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input starting with \"deadline\".","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Constructs a DeadlineCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input containing the description and deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public DeadlineCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Executes the DeadlineCommand, adding a deadline task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to which the deadline task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The Storage instance for reading/writing task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for user interaction.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If there is an error while executing the command, such as invalid input.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        String[] parts \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Please provide a description and a deadline \"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"                    + \"(use /by).\");","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        String by \u003d parts[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"        ui.showAddTaskMessage(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":50}},{"path":"src/main/java/avalon/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input starting with \"delete\".","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Constructs a DeleteCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input indicating which task to delete.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Executes the DeleteCommand, removing a task from the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList from which the task will be deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The Storage instance for reading/writing task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for user interaction.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If there is an error while executing the command, such as an invalid task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            Task deletedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"            taskList.removeTask(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            ui.showDeleteTaskMessage(taskList, deletedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"            return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Invalid task number to be deleted.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":47}},{"path":"src/main/java/avalon/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Event;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input starting with \"event\".","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Constructs an EventCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input specifying the event details.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public EventCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Executes the EventCommand, adding an event task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to which the event task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The Storage instance for reading/writing task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for user interaction.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If there is an error while executing the command, such as missing event details.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        String[] parts \u003d userInput.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Please provide a description, a starting time, \"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"                    + \"and an ending time (use /from and /to).\");","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        String from \u003d parts[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        String to \u003d parts[2];","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"        ui.showAddTaskMessage(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":50}},{"path":"src/main/java/avalon/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents a command to exit the Avalon application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"bye\".","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Executes the ExitCommand, saving tasks to storage and displaying a farewell message.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to save tasks to storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The Storage instance for saving tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying a farewell message.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        ui.byeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":27}},{"path":"src/main/java/avalon/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Represents a command to find tasks containing specified keywords in their descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"find\".","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * Constructs a FindCommand with the user input containing keywords to search for.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input containing keywords.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     * Searches for tasks containing the specified keyword in their descriptions","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * and displays the matching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param ui        The Ui instance for displaying search results.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param taskList  The TaskList to search for tasks in.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param keywords  The keywords to search for in task descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    private void findTasksByKeyword(Ui ui, TaskList taskList, String... keywords) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"            for (Task task : taskList.tasks()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"                    matchingTasks.addTask(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        ui.showFindMessage(matchingTasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     * Executes the FindCommand to search for tasks containing specified keywords","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     * in their descriptions and displays the matching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to search for tasks in.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     * @param storage  Not used in this command.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying search results.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"        String[] keywords \u003d userInput.substring(5).trim().split(\"\\\\s+\");","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"        findTasksByKeyword(ui, taskList, keywords);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":62}},{"path":"src/main/java/avalon/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"list\".","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Executes the ListCommand to display all tasks in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks to be listed.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * @param storage  Not used in this command.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        ui.showTasksList(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":26}},{"path":"src/main/java/avalon/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"mark\".","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * Constructs a MarkCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input specifying the task to be marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Executes the MarkCommand to mark a specified task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param storage  Not used in this command.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying the result of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If the provided task index is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        boolean isValidIndex \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size();","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"        if (isValidIndex) {","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"            taskList.get(taskIndex).markDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            ui.showMarkMessage(taskList, taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"            return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Invalid task number to be marked.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":47}},{"path":"src/main/java/avalon/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"public class PriorityCommand extends Command{","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    public PriorityCommand(String userInput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(9, 10)) - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"        int priority \u003d Integer.parseInt(userInput.substring(12));","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        boolean isValidIndex \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size();","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"        boolean isValidPriority \u003d priority \u003e\u003d 0 \u0026\u0026 priority \u003c\u003d 9;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        if (!isValidIndex){","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Task number does not exist.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        if (!isValidPriority) {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Please enter a number between 0 - 9.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        taskList.get(taskIndex).setPriority(priority);","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        ui.showPriorityMessage(taskList, taskIndex);","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"LHeng1":35}},{"path":"src/main/java/avalon/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"todo\".","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Constructs a TodoCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input specifying the todo task to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public TodoCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Executes the TodoCommand to add a todo task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param storage  Not used in this command.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying the result of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If the description of the todo task is empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        ui.showAddTaskMessage(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"        return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":47}},{"path":"src/main/java/avalon/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" * This command is triggered by user input \"unmark\".","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    private final String userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * Constructs an UnmarkCommand with the user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * @param userInput The user input specifying the task to be unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    public UnmarkCommand(String userInput) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     * Executes the UnmarkCommand to mark a task as not done in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param storage  Not used in this command.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The Ui instance for displaying the result of the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * @return A string message indicating the result of the command\u0027s execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @throws AvalonException If the task index provided is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws AvalonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"        int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        boolean isValidIndex \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size();","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        if (isValidIndex) {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            taskList.get(taskIndex).markNotDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"            ui.showUnmarkMessage(taskList, taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            return ui.getOutput();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"            throw new AvalonException(\"Invalid task number to be unmarked.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":46}},{"path":"src/main/java/avalon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.DateTimeParser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents a task with a deadline, which is a type of task with a description,","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * completion status, and a deadline timestamp.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * The deadline timestamp for the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * Creates a new deadline task with the given description and","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * deadline timestamp and sets its initial completion status to false.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     * @param by The deadline timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        this.by \u003d DateTimeParser.stringToDateTime(by);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        return by;","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the deadline task, including its status icon,","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"     * description, and deadline timestamp.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.printDateTimeToString(by) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":44}},{"path":"src/main/java/avalon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.DateTimeParser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents an event task, which is a type of task with a description, completion status,","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * and start and end timestamps.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * The start timestamp for the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     * The end timestamp for the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     * Creates a new event task with the given description, start timestamp,","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     * and end timestamp, and sets its initial completion status to false.","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     * @param from The start timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param to The end timestamp in string format (to be parsed into a LocalDateTime).","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"        this.from \u003d DateTimeParser.stringToDateTime(from);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        this.to \u003d DateTimeParser.stringToDateTime(to);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        return from;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        return to;","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the event task, including its status icon,","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"     * description, start timestamp, and end timestamp.","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateTimeParser.printDateTimeToString(from)","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"                + \" to: \" + DateTimeParser.printDateTimeToString(to) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":56}},{"path":"src/main/java/avalon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    private String description;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Indicates whether the task is done (true) or not done (false).","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    private int priority;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * Creates a new task with the given description and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        this.priority \u003d 0;","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        return description;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"        return isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"    public int getPriority() {","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        return priority;","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"     * Gets the status icon for the task, indicating whether it is done or not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"     * @return The status icon for the task (\"[X] \" if done, \"[ ] \" if not done).","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"     * Marks the task as not done by setting its completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"    public void setPriority(int priority) {","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"LHeng1"},"content":"        return \"[\" + getPriority() + \"]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":79}},{"path":"src/main/java/avalon/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     * Gets the tasks as an ArrayList.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     * @return The tasks as an ArrayList.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    public ArrayList\u003cTask\u003e tasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        return (ArrayList) tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"    public int size() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"    public void removeTask(int i) {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":75}},{"path":"src/main/java/avalon/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":" * Represents a to-do task, which is a type of task with a description and completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"     * Creates a new to-do task with the given description and sets its initial completion status to false.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Returns a string representation of the to-do task, including its status icon and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":26}},{"path":"src/main/java/avalon/utility/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.utility;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":" * Utility class for parsing and formatting date-time objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"     * Parses a string representation of a date-time and returns a LocalDateTime object.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     * @param inputDateTime The input date-time string to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * @return The LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"    public static LocalDateTime stringToDateTime(String inputDateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(inputDateTime, formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"            assert dateTime !\u003d null : \"Parsing result should not be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"            return dateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"Invalid date format. Please follow the format: YYYY-MM-DD HHmm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"     * Converts a LocalDateTime object to a formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     * @return The formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"     * Converts a LocalDateTime object to a human-readable formatted date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"     * @return The formatted human-readable date-time string.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    public static String printDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"        String formattedDateTimeString \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"        assert formattedDateTimeString !\u003d null : \"Formatted date-time string should not be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"        return formattedDateTimeString;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":53}},{"path":"src/main/java/avalon/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.utility;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.AvalonException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.command.DeadlineCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.command.DeleteCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.command.EventCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import avalon.command.ExitCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import avalon.command.FindCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"import avalon.command.ListCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"import avalon.command.MarkCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"import avalon.command.PriorityCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"import avalon.command.TodoCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"import avalon.command.UnmarkCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":" * The `Parser` class is responsible for processing user commands and executing the corresponding actions.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":" * It converts user input into executable commands and handles exceptions when necessary.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"public class Parser {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"     * Processes the user\u0027s input, determines the command type, and executes the corresponding action.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"     * @param input    The user\u0027s input command.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to which tasks are added or manipulated.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     * @param storage  The storage handler for loading and saving tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * @param ui       The user interface for displaying information to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     * @return A response message generated as a result of executing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"    public static String processCommand(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        String[] inputStr \u003d input.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"        String command \u003d inputStr[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"            switch (command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"                ExitCommand exit \u003d new ExitCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"                return exit.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"            case \"list\":","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"                ListCommand list \u003d new ListCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"                return list.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"                MarkCommand mark \u003d new MarkCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"                return mark.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"                UnmarkCommand unmark \u003d new UnmarkCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"                return unmark.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"                TodoCommand todo \u003d new TodoCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"                return todo.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"                DeadlineCommand deadline \u003d new DeadlineCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"                return deadline.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"            case \"event\":","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"                EventCommand event \u003d new EventCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"                return event.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"                DeleteCommand delete \u003d new DeleteCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"                return delete.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"            case \"find\":","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"                FindCommand find \u003d new FindCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"                return find.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"            case \"priority\":","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"                PriorityCommand priority \u003d new PriorityCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"                return priority.execute(taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"                throw new AvalonException(\"I humbly apologize, but thy words remain a mystery to me...\");","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"        } catch (AvalonException e){","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"            return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"LHeng1":74}},{"path":"src/main/java/avalon/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.utility;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":" * Handles the loading and saving of tasks to/from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     * Constructs a new Storage instance with the specified file path.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * Loads tasks from the file into the provided TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList to which tasks will be loaded.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    public void loadTasks(TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"            System.out.print(\"Loading...\");","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"                String description \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"                Task task \u003d TaskParser.parse(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"            scanner.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"            // Handle the case where the file doesn\u0027t exist or other IO errors","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"No existing tasks file found. Starting with an empty list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"        System.out.println(\"Tasks loaded successfully!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     * Saves tasks from the provided TaskList to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"            assert file.canWrite() : \"Cannot write to tasks file\";","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"            for (Task task : taskList.tasks()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"                String taskData \u003d TaskParser.serialize(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"                writer.write(taskData + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"            System.out.println(\"An error occurred while saving tasks to the file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":70}},{"path":"src/main/java/avalon/utility/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.utility;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Event;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import avalon.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Utility class for parsing and serializing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class TaskParser {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"     * Parses a string representation of a task and returns the corresponding Task object.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"     * @param line The string representation of the task to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * @return The Task object parsed from the input string.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    public static Task parse(String line) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        assert parts.length \u003c\u003d 6 : \"Task string should have no more than 6 parts\";","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"        String description \u003d parts[3];","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        int priority \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        switch (type) {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"        case \"T\":","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"        case \"D\":","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"            task \u003d new Deadline(description, parts[4]);","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"        case \"E\":","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"            task \u003d new Event(description, parts[4], parts[5]);","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"            break;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"            task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"        task.setPriority(priority);","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"        return task;","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"     * Serializes a Task object to a string for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"     * @param task The Task object to be serialized.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"     * @return The string representation of the serialized task.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"    public static String serialize(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"        String doneStatus \u003d task.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"            return \"T | \" + doneStatus + \" | \" + task.getPriority() + \" | \" + task.getDescription();","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"            return \"D | \" + doneStatus + \" | \" + task.getPriority() + \" | \"","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"                    + task.getDescription() + \" | \"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(deadline.getBy()) + \" | \" + task.getPriority();","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"            return \"E | \" + doneStatus + \" | \" + task.getPriority() + \" | \"","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"                    + task.getDescription() + \" | \"","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(event.getFrom()) + \" | \"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"                    + DateTimeParser.dateTimeToString(event.getTo()) + \" | \"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"                    + task.getPriority();","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"LHeng1"},"content":"            return \"Wrong formatting\";","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":80}},{"path":"src/main/java/avalon/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon.utility;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":" * Represents the User Interface (UI) for interacting with the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    private StringBuilder output;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"     * Constructs a new UI instance with a scanner for user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    public Ui() {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"     * Appends a message to the output buffer.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"     * @param message The message to be appended.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        this.output.append(message);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"LHeng1"},"content":"     * Retrieves the contents of the output buffer as a string.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"LHeng1"},"content":"     * @return The contents of the output buffer.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"LHeng1"},"content":"    public String getOutput() {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"LHeng1"},"content":"        return this.output.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"LHeng1"},"content":"     * Clears the contents of the output buffer.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"LHeng1"},"content":"    public void clearOutput() {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"LHeng1"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LHeng1"},"content":"     * Prints a line separator to the console.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LHeng1"},"content":"    public void printLineSeparator() {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   _________________________________________\"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"LHeng1"},"content":"                + \"________________________________________\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LHeng1"},"content":"     * Styles and prints a message with a line separator above and below it.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LHeng1"},"content":"     * @param message The message to be styled and printed.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"LHeng1"},"content":"    public void styleMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"LHeng1"},"content":"        printMessage(message);","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"LHeng1"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"LHeng1"},"content":"    public void greetMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"LHeng1"},"content":"        styleMessage(\"    Hello! I\u0027m Arthur Pendragon.\\n    What can I do for you?\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"LHeng1"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"LHeng1"},"content":"    public void byeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"    Farewell. We will meet again!\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"LHeng1"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"LHeng1"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"LHeng1"},"content":"    public void showTasksList(TaskList tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"LHeng1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"LHeng1"},"content":"            styleMessage(\"    You haven\u0027t added anything, my sire.\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"LHeng1"},"content":"            printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"LHeng1"},"content":"            printMessage(\"   Here are the quests in thy list:\" + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"LHeng1"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"LHeng1"},"content":"                printMessage(\"    \" + (i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"LHeng1"},"content":"            printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"LHeng1"},"content":"     * @param tasks     The task list containing the marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"LHeng1"},"content":"     * @param taskIndex The index of the marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"LHeng1"},"content":"    public void showMarkMessage(TaskList tasks, int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Very well. I have marked this task as accomplished:\\n  \" + \"  \"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"LHeng1"},"content":"                + tasks.get(taskIndex).getStatusIcon() + \" \"","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"LHeng1"},"content":"                + tasks.get(taskIndex).getDescription() + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"LHeng1"},"content":"     * @param tasks     The task list containing the unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"LHeng1"},"content":"     * @param taskIndex The index of the unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"LHeng1"},"content":"    public void showUnmarkMessage(TaskList tasks, int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   By the heavens! I have declared this task as yet to be completed:\\n  \"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"LHeng1"},"content":"                + \"  \" + tasks.get(taskIndex).getStatusIcon()","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"LHeng1"},"content":"                + \" \" + tasks.get(taskIndex).getDescription() + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been added to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"LHeng1"},"content":"     * @param tasks The task list containing the newly added task.","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"LHeng1"},"content":"    public void showAddTaskMessage(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Understood. I have included this quest:\\n  \"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"LHeng1"},"content":"                + \"  \" + tasks.get(tasks.size() - 1) + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Now you have \" + tasks.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"LHeng1"},"content":"     * Displays a message indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"LHeng1"},"content":"     * @param tasks      The task list from which the task was deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"LHeng1"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"LHeng1"},"content":"    public void showDeleteTaskMessage(TaskList tasks, Task deletedTask) {","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Noted. I\u0027ve removed this quest:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"    \" + deletedTask + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Now you have \" + tasks.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"LHeng1"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"LHeng1"},"content":"     * Displays a message with the matching tasks found by a search operation.","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"LHeng1"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"LHeng1"},"content":"     * @param matchingTasks The TaskList containing matching tasks to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"LHeng1"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"LHeng1"},"content":"    public void showFindMessage(TaskList matchingTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"LHeng1"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"LHeng1"},"content":"            styleMessage(\"    No matching tasks found.\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"LHeng1"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"LHeng1"},"content":"            printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"LHeng1"},"content":"            printMessage(\"    Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"LHeng1"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"LHeng1"},"content":"                printMessage(\"    \" + (i + 1) + \".\" + matchingTasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"LHeng1"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"LHeng1"},"content":"            printLineSeparator();","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"LHeng1"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"LHeng1"},"content":"    public void showPriorityMessage(TaskList tasks, int taskIndex) {","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"LHeng1"},"content":"        printMessage(\"   Very well. I have marked the priority of the task:\\n  \"","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"LHeng1"},"content":"                + \" [\" + tasks.get(taskIndex).getPriority() + \"] \"","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"LHeng1"},"content":"                + tasks.get(taskIndex).getDescription() + \"\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"LHeng1"},"content":"        printLineSeparator();","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"LHeng1":181}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"LHeng1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"avalon.MainWindow\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"298.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"298.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"102.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"553.0\" prefWidth\u003d\"387.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"LHeng1":19}},{"path":"src/test/java/avalon/TaskParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"import avalon.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import avalon.utility.TaskParser;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"public class TaskParserTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"    public void parse_deadlineCreation_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"        String input \u003d \"D | 1 | return book | 2019-08-18 2000\";","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d TaskParser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LHeng1"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"return book\", task.getDescription());","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LHeng1"},"content":"    public void serialize_deadlineStringify_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LHeng1"},"content":"        Task task \u003d new Deadline(\"return book\", \"2019-08-18 2000\");","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LHeng1"},"content":"        String serialized \u003d TaskParser.serialize(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"D | 0 | return book | 2019-08-18 2000\", serialized);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LHeng1":32}},{"path":"src/test/java/avalon/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"package avalon;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"import avalon.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"    public void toString_validDescription_success() {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"        ToDo todo \u003d new ToDo(\"Buy food\");","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"[T][ ]  Buy food\", todo.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"        todo.markDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"        assertEquals(\"[T][X]  Buy food\", todo.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"LHeng1":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LHeng1"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LHeng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"LHeng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LHeng1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LHeng1"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LHeng1"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LHeng1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LHeng1"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LHeng1"},"content":"todo      ","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LHeng1"},"content":"deadline       ","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LHeng1"},"content":"event       ","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LHeng1"},"content":"ajhsf","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LHeng1"},"content":"mark 8","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"unmark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LHeng1"},"content":"delete 12","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LHeng1"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LHeng1":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LHeng1"},"content":"java -classpath ..\\bin avalon.Avalon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LHeng1":1,"-":20}}]
