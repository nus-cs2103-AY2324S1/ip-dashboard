[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":" * The Deadline class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":" * This Task child contains the deadline to complete the task by.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"  /** The Deadline of the task. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"  String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"   * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"   * @param desc The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"  public Deadline(String desc, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"   * toString method of Deadline. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"   * The String representation of To-do appends the [D] tag in front of the Task toString, and","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"   * the deadline date to the end of the toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"   * @return \"[D]\" prefixed to task.toString(), and \"(by: [deadline])\" postfixed to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"  @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"  public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":" * The Event class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":" * This Event child contains the start and end times to complete the task by.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"  /** The start date of the event. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"  String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"  /** The end date of the event. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"  String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"   * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"   * @param desc The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"  public Event(String desc, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"    this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"    this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"   * toString method of Event. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"   * The String representation of To-do appends the [E] tag in front of the Task toString, and","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"   * the event period to the end of the toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"   * @return \"[D]\" prefixed to task.toString(), and \"(from: [start] / to: [end])\" postfixed to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"  @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"  public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + this.from + \" | to: \" + this.to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":" * The Task class for TrackerBot. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":" * The Task class abstracts each checklist item inside a Reminder-Type app. \u003cbr\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" * As of Level 4, Task should no longer be instantiated as a base task, as To-do","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" * exists as a basic Task. Therefore, Task has been converted to an Abstract class.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"  /** The description of the task instance. **/","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"  private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"  /** The status of the task instance. If true, the task is done. */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"  private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"   * Constructor for the Task class.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"   * @param desc The description of the task to create.","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"  public Task(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"    this.description \u003d desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"   * Helper function to determine the checkmark status of the Task.","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"   * @return \"[X]\" if the task is done, \"[ ]\" otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"  private String getCheckbox() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"    return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"   * Flags the task to be completed, if able.","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"   * @return true if the task is successfully marked to completion,","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"   *         false if the task is already completed.","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"  public boolean markTask() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"    if (isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"      return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"    return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"   * Flags the task to be incomplete, if able.","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"   * @return true if the task is successfully marked to be incomplete,","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"   *         false if the task is already marked as incomplete.","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"  public boolean unmarkTask() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    if (!isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"      return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"    isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"    return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"   * toString method of Task. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"   * A Task is formatted as \"[X] description of task\", where the X may or","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"   * may not be present depending on the completion status of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"   * @return The String representation of the Task.","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"  @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"  public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"    return getCheckbox() + \" \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"WZWren":70}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":" * The To-do class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":" * This represents the most basic variant of the Task, and can be constructed","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" * with the basic parameters for Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"   * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"   * @param desc The description of the To-do task.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"  public Todo(String desc) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"   * toString method of To-do. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"   * The String representation of To-do appends the [T] tag in front of the Task toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"   * @return \"[T]\" appended to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"  @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"  public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":27}},{"path":"src/main/java/TrackerBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"import ip.utils.Pair;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" * Main Program for the application. \u003cbr\u003e","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" * As of Level-0, this has been renamed from Duke to TrackerBot","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":" * as part of the requirements for the iP.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" * Level-5 was skipped as TrackerBot had been handling error messages throughout its lifespan.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * @version Level-6","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"public class TrackerBot {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"  /** Name of the app. **/","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"  private static final String APP_NAME \u003d \"TrackerBot\";","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"  /** Line separators for the console between paragraphs. **/","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"  private static final String FORMAT_LINE \u003d","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"      \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"   * Task Array - as TrackerBot is not instantiated, this must be static.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"   * The Task List array itself should be immutable, in case we override it","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"   * during runtime.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"  private static final ArrayList\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"   * Greet function of the app. \u003cbr\u003e","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"   * Prints a welcome message to the user on login.","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"  private static void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"    System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"Greetings from \" + APP_NAME + \"!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"How may I assist?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"    System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"   * Exit function of the app. \u003cbr\u003e","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"   * Prints an exit message to the user on logout.","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"  private static void exit() {","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"Thank you for using \" + APP_NAME + \". Goodbye.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"   * List function of the app. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"   * Prints the list of tasks in the bot.","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"  private static void list() {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"    // happy path: prints an appropriate message and exit the method.","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"    if (TASK_LIST.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"No tasks have been added to the list yet.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"      return;","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"I am tracking these tasks:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"    for (int i \u003d 1; i \u003c TASK_LIST.size() + 1; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"      System.out.println(i + \". \" + TASK_LIST.get(i - 1));","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"   * Function that adds a task to the app. \u003cbr\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"   * Adds a To-Do, Event or Deadline task to the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"   * @param input The Pair\u0026lt;Command, String\u0026gt; of the task to add to the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"  private static void add(Pair\u003cCommand, String\u003e input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"    Task newTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"    String[] segments;","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"    switch(input.getFirst()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"      case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"        if (input.getSecond().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"I can\u0027t track a task that doesn\u0027t have a description!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"        newTask \u003d new Todo(input.getSecond());","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"      case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"        segments \u003d input.getSecond().split(\"/by\");","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"        if (segments.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Use 1 /by flag in the argument, followed by the deadline.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Format: deadline [description] /by [end-date]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"        } else if (segments.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Too many flags specified! Use only 1 /by flag.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Format: deadline [description] /by [end-date]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"        if (segments[0].trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"I can\u0027t track a task that doesn\u0027t have a description!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"        if (segments[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Specify a deadline please.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"        newTask \u003d new Deadline(segments[0].trim(), segments[1].trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"      case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"        // this will check for the standard format, and will also guarantee that segment length is min 3.","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"        if (!input.getSecond().matches(\"^.+ /from .+ /to .+\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"event is not used in the correct format.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Format: event [description] /from [start-date] /to [end-date]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"WZWren"},"content":"        segments \u003d input.getSecond().split(\"/from|/to\");","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"WZWren"},"content":"        if (segments.length \u003e 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Too many flags specified for event!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Format: deadline [description] /by [end-date]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"WZWren"},"content":"        if (segments[0].trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"I can\u0027t track a task that doesn\u0027t have a description!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"        if (segments[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Specify a start date please.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"        if (segments[2].trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Specify an end date please.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"WZWren"},"content":"          return;","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"WZWren"},"content":"        newTask \u003d new Event(segments[0].trim(), segments[1].trim(), segments[2].trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"WZWren"},"content":"      default:","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"That wasn\u0027t supposed to happen...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"WZWren"},"content":"        return;","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"WZWren"},"content":"    TASK_LIST.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"Now tracking: \\n  \" + newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"WZWren"},"content":"   * Helper function for mark - checks if the index is valid.","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"WZWren"},"content":"   * @param index The index of the list to check.","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"WZWren"},"content":"   * @return The Task object at the index, if it exists, and null otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"WZWren"},"content":"  private static Task getTask(int index) {","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"WZWren"},"content":"    // happy path: return null if out of bounds.","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"WZWren"},"content":"    if (index \u003c\u003d 0 || index \u003e TASK_LIST.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"WZWren"},"content":"      return null;","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"WZWren"},"content":"    return TASK_LIST.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"WZWren"},"content":"   * Mark function for the app. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"WZWren"},"content":"   * Attempts to mark the item in the task list as completed. If the Task is already","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"WZWren"},"content":"   * completed, or the Task does not exist, prints an appropriate error message.","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"WZWren"},"content":"   * @param index The index of the list to mark.","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"WZWren"},"content":"  private static void mark(int index) {","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"WZWren"},"content":"    Task task \u003d getTask(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"WZWren"},"content":"    // happy path: the task does not exist.","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"WZWren"},"content":"    if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"That task is not on the list!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"Use \\\"list\\\" to display what I am currently tracking.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"WZWren"},"content":"      return;","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"WZWren"},"content":"    if (task.markTask()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"This task has been marked as completed.\\n  \" + task);","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"WZWren"},"content":"    } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"This task has already been completed!\\n  \" + task);","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"WZWren"},"content":"   * Unmark function for the app. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"WZWren"},"content":"   * Attempts to unmark the item in the task list as incomplete. If the Task is already","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"WZWren"},"content":"   * incomplete, or the Task does not exist, prints an appropriate error message.","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"WZWren"},"content":"   * @param index The index of the list to unmark.","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"WZWren"},"content":"  private static void unmark(int index) {","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"WZWren"},"content":"    Task task \u003d getTask(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"WZWren"},"content":"    // happy path: the task does not exist.","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"WZWren"},"content":"    if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"That task is not on the list!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"Use \\\"list\\\" to display what I am currently tracking.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"WZWren"},"content":"      return;","lastModifiedDate":"2023-08-21"},{"lineNumber":192,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":194,"author":{"gitId":"WZWren"},"content":"    if (task.unmarkTask()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":195,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"The task has been marked as incomplete.\\n  \" + task);","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"WZWren"},"content":"    } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"This task is already in progress.\\n  \" + task);","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"WZWren"},"content":"   * Delete function for the app. \u003cbr\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"WZWren"},"content":"   * Attempts to delete the item in the task list. If the Task does not exist,","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"WZWren"},"content":"   * prints an appropriate error message.","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"WZWren"},"content":"   * @param index The index of the list to unmark.","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"WZWren"},"content":"  private static void delete(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"WZWren"},"content":"    Task task \u003d getTask(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"WZWren"},"content":"    // happy path: the task does not exist.","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"WZWren"},"content":"    if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"That task is not on the list!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"WZWren"},"content":"      System.out.println(\"Use \\\"list\\\" to display what I am currently tracking.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"WZWren"},"content":"      return;","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"WZWren"},"content":"    TASK_LIST.remove(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"WZWren"},"content":"    System.out.println(\"I have removed this task off of my list.\\n  \" + task);","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"WZWren"},"content":"    System.out.println(TASK_LIST.size() + \" task(s) remain on my list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"WZWren"},"content":"   * Input handler function of the app. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":223,"author":{"gitId":"WZWren"},"content":"   * Takes in a user input, and acts upon the input based on what input it gets. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":224,"author":{"gitId":"WZWren"},"content":"   * \u003cul\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":225,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is \"bye\", exits the program by returning true.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":226,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is \"list\", prints the list.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":227,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is \"mark X\", marks the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is \"unmark X\", unmarks the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":229,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is \"delete X\", deletes the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"WZWren"},"content":"   *   \u003cli\u003eIf the input is one of the add task inputs, adds the item to the list.\u003c/li\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"WZWren"},"content":"   * \u003c/ul\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":232,"author":{"gitId":"WZWren"},"content":"   * @param str The input string that is given to the method.","lastModifiedDate":"2023-08-21"},{"lineNumber":233,"author":{"gitId":"WZWren"},"content":"   * @return true if the handler detects the bye keyword,","lastModifiedDate":"2023-08-21"},{"lineNumber":234,"author":{"gitId":"WZWren"},"content":"   *         false otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":235,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"WZWren"},"content":"  private static boolean handleInput(String str) {","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"WZWren"},"content":"    Pair\u003cCommand, String\u003e input \u003d Command.parse(str);","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"WZWren"},"content":"    Scanner scanner \u003d new Scanner(input.getSecond());","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"WZWren"},"content":"    System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":241,"author":{"gitId":"WZWren"},"content":"    // switch used for now: to handle future input cases.","lastModifiedDate":"2023-08-21"},{"lineNumber":242,"author":{"gitId":"WZWren"},"content":"    switch(input.getFirst()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"WZWren"},"content":"      case BYE:","lastModifiedDate":"2023-08-23"},{"lineNumber":244,"author":{"gitId":"WZWren"},"content":"        exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":245,"author":{"gitId":"WZWren"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":246,"author":{"gitId":"WZWren"},"content":"      case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"WZWren"},"content":"        list();","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":249,"author":{"gitId":"WZWren"},"content":"      case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"WZWren"},"content":"        if (scanner.hasNextInt()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"WZWren"},"content":"          mark(scanner.nextInt());","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"WZWren"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":253,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Compulsory parameter for mark should be a number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":254,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"WZWren"},"content":"      case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":257,"author":{"gitId":"WZWren"},"content":"        if (scanner.hasNextInt()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"WZWren"},"content":"          unmark(scanner.nextInt());","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"WZWren"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":260,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Compulsory parameter for unmark should be a number.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"WZWren"},"content":"      case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":264,"author":{"gitId":"WZWren"},"content":"        if (scanner.hasNextInt()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":265,"author":{"gitId":"WZWren"},"content":"          delete(scanner.nextInt());","lastModifiedDate":"2023-08-23"},{"lineNumber":266,"author":{"gitId":"WZWren"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":267,"author":{"gitId":"WZWren"},"content":"          System.out.println(\"Compulsory parameter for delete should be a number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":268,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":269,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":270,"author":{"gitId":"WZWren"},"content":"      case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":271,"author":{"gitId":"WZWren"},"content":"      case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"WZWren"},"content":"      case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":273,"author":{"gitId":"WZWren"},"content":"        add(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":274,"author":{"gitId":"WZWren"},"content":"        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":275,"author":{"gitId":"WZWren"},"content":"      default:","lastModifiedDate":"2023-08-21"},{"lineNumber":276,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"I could not recognise that keyword. Try another?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":277,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"WZWren"},"content":"    System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-08-20"},{"lineNumber":279,"author":{"gitId":"WZWren"},"content":"    scanner.close();","lastModifiedDate":"2023-08-21"},{"lineNumber":280,"author":{"gitId":"WZWren"},"content":"    return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":282,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":284,"author":{"gitId":"WZWren"},"content":"    greet();","lastModifiedDate":"2023-08-20"},{"lineNumber":285,"author":{"gitId":"WZWren"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"WZWren"},"content":"    String input;","lastModifiedDate":"2023-08-21"},{"lineNumber":287,"author":{"gitId":"WZWren"},"content":"    boolean isBye;","lastModifiedDate":"2023-08-21"},{"lineNumber":288,"author":{"gitId":"WZWren"},"content":"    do {","lastModifiedDate":"2023-08-21"},{"lineNumber":289,"author":{"gitId":"WZWren"},"content":"      // scanner.nextLine() blocks the main thread.","lastModifiedDate":"2023-08-21"},{"lineNumber":290,"author":{"gitId":"WZWren"},"content":"      System.out.print(\"Format :: [keyword] [parse string] | \");","lastModifiedDate":"2023-08-21"},{"lineNumber":291,"author":{"gitId":"WZWren"},"content":"      input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":292,"author":{"gitId":"WZWren"},"content":"      isBye \u003d handleInput(input);","lastModifiedDate":"2023-08-21"},{"lineNumber":293,"author":{"gitId":"WZWren"},"content":"    } while (!isBye);","lastModifiedDate":"2023-08-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":295,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":296,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":297,"author":{"gitId":"WZWren"},"content":"   * Enum for the commands that a user can use.","lastModifiedDate":"2023-08-22"},{"lineNumber":298,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":299,"author":{"gitId":"WZWren"},"content":"  public enum Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":300,"author":{"gitId":"WZWren"},"content":"    /** Command to exit the program. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":301,"author":{"gitId":"WZWren"},"content":"    BYE (\"bye\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":302,"author":{"gitId":"WZWren"},"content":"    /** Command to list all tasks in the task list. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":303,"author":{"gitId":"WZWren"},"content":"    LIST (\"list\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":304,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new to-do task to the task list. **/","lastModifiedDate":"2023-08-23"},{"lineNumber":305,"author":{"gitId":"WZWren"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":306,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new deadline task to the task list. **/","lastModifiedDate":"2023-08-23"},{"lineNumber":307,"author":{"gitId":"WZWren"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":308,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new event task to the task list. **/","lastModifiedDate":"2023-08-23"},{"lineNumber":309,"author":{"gitId":"WZWren"},"content":"    EVENT (\"event\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":310,"author":{"gitId":"WZWren"},"content":"    /** Command to mark a task to be complete. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":311,"author":{"gitId":"WZWren"},"content":"    MARK (\"mark\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":312,"author":{"gitId":"WZWren"},"content":"    /** Command to mark a task as incomplete. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":313,"author":{"gitId":"WZWren"},"content":"    UNMARK (\"unmark\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":314,"author":{"gitId":"WZWren"},"content":"    /** Command to delete a task. **/","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"WZWren"},"content":"    DELETE (\"delete\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":316,"author":{"gitId":"WZWren"},"content":"    /** Command to denote an unknown keyword call. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":317,"author":{"gitId":"WZWren"},"content":"    UNKNOWN (\"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":318,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":319,"author":{"gitId":"WZWren"},"content":"    /** The String representation of the enum. Used to parse the command into enum. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":320,"author":{"gitId":"WZWren"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-22"},{"lineNumber":321,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":322,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":323,"author":{"gitId":"WZWren"},"content":"     * Constructor for the enum Command. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":324,"author":{"gitId":"WZWren"},"content":"     * Enum constructors are implicitly private, so the tag is not included.","lastModifiedDate":"2023-08-22"},{"lineNumber":325,"author":{"gitId":"WZWren"},"content":"     * @param keyword The keyword of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":326,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":327,"author":{"gitId":"WZWren"},"content":"    Command(String keyword) {","lastModifiedDate":"2023-08-22"},{"lineNumber":328,"author":{"gitId":"WZWren"},"content":"      this.keyword \u003d keyword;","lastModifiedDate":"2023-08-22"},{"lineNumber":329,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":330,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":331,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":332,"author":{"gitId":"WZWren"},"content":"     * Helper function. Splits the console input string into the invoking keyword","lastModifiedDate":"2023-08-22"},{"lineNumber":333,"author":{"gitId":"WZWren"},"content":"     * and its description after the invoking keyword. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":334,"author":{"gitId":"WZWren"},"content":"     * If no description exists after the keyword, an empty string is returned in the","lastModifiedDate":"2023-08-22"},{"lineNumber":335,"author":{"gitId":"WZWren"},"content":"     * second half of the Pair structure.","lastModifiedDate":"2023-08-22"},{"lineNumber":336,"author":{"gitId":"WZWren"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":337,"author":{"gitId":"WZWren"},"content":"     * @param input The unmodified console string that the user inputs.","lastModifiedDate":"2023-08-22"},{"lineNumber":338,"author":{"gitId":"WZWren"},"content":"     * @return A Pair\u0026lt;Command, String\u0026gt; object containing the enum and description.","lastModifiedDate":"2023-08-22"},{"lineNumber":339,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":340,"author":{"gitId":"WZWren"},"content":"    public static Pair\u003cCommand, String\u003e parse(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":341,"author":{"gitId":"WZWren"},"content":"      Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":342,"author":{"gitId":"WZWren"},"content":"      // if the input is empty, return the unknown keyword with an empty description.","lastModifiedDate":"2023-08-22"},{"lineNumber":343,"author":{"gitId":"WZWren"},"content":"      if (!scanner.hasNext()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":344,"author":{"gitId":"WZWren"},"content":"        scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":345,"author":{"gitId":"WZWren"},"content":"        return new Pair\u003c\u003e(Command.UNKNOWN, \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":346,"author":{"gitId":"WZWren"},"content":"      }","lastModifiedDate":"2023-08-22"},{"lineNumber":347,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":348,"author":{"gitId":"WZWren"},"content":"      String keyword \u003d scanner.next();","lastModifiedDate":"2023-08-22"},{"lineNumber":349,"author":{"gitId":"WZWren"},"content":"      Command first \u003d Command.UNKNOWN;","lastModifiedDate":"2023-08-22"},{"lineNumber":350,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":351,"author":{"gitId":"WZWren"},"content":"      for (Command command: Command.values()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":352,"author":{"gitId":"WZWren"},"content":"        if (keyword.equals(command.keyword)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":353,"author":{"gitId":"WZWren"},"content":"          first \u003d command;","lastModifiedDate":"2023-08-22"},{"lineNumber":354,"author":{"gitId":"WZWren"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":355,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":356,"author":{"gitId":"WZWren"},"content":"      }","lastModifiedDate":"2023-08-22"},{"lineNumber":357,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":358,"author":{"gitId":"WZWren"},"content":"      if (first.equals(Command.UNKNOWN) || !scanner.hasNextLine()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":359,"author":{"gitId":"WZWren"},"content":"        scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":360,"author":{"gitId":"WZWren"},"content":"        return new Pair\u003c\u003e(first, \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":361,"author":{"gitId":"WZWren"},"content":"      }","lastModifiedDate":"2023-08-22"},{"lineNumber":362,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":363,"author":{"gitId":"WZWren"},"content":"      String second \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":364,"author":{"gitId":"WZWren"},"content":"      scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":365,"author":{"gitId":"WZWren"},"content":"      return new Pair\u003c\u003e(first, second);","lastModifiedDate":"2023-08-22"},{"lineNumber":366,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":367,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WZWren":365,"-":3}},{"path":"src/main/java/ip/utils/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package ip.utils;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" * Helper Data Structure for the iP. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" * A custom implementation of a paired data structure, as Java lacks a ready solution","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * that involves an ordered pair. Simplified, as we do not need a complicated solution","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" * as of now.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":" * @param \u003cS\u003e The Type of the first value in the Pair.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" * @param \u003cT\u003e The Type of the second value in the Pair.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"public class Pair\u003cS, T\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"  /** The first value to store in the pair. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"  private S first;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"  /** The second value to store in the pair. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"  private T second;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"   * Constructor for the Pair class.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"   * @param first The value to store in the first slot of the pair, of type S.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"   * @param second The value to store in the second slot of the pair, of type T.","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"  public Pair(S first, T second) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    this.first \u003d first;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    this.second \u003d second;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"   * @return The first value in the pair.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"  public S getFirst() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    return this.first;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"   * @return The first value in the pair.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"  public T getSecond() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"    return this.second;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":43}}]
