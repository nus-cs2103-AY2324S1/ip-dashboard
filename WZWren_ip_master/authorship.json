[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    mainClass.set(\"trackerbot.TrackerBot\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    archiveFileName \u003d \"trackerbot.jar\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    archiveBaseName \u003d \"trackerbot\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WZWren":4,"-":40}},{"path":"src/main/java/trackerbot/TrackerBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * Main Program for the application. \u003cbr\u003e","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" * As of Level-0, this has been renamed from Duke to TrackerBot","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":" * as part of the requirements for the iP.","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":" * Level-5 was skipped as TrackerBot had been handling error messages throughout its lifespan.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":" * @version Level-6","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"public class TrackerBot {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"    /** Name of the app. **/","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    private static final String APP_NAME \u003d \"TrackerBot\";","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    public TrackerBot(String appName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"        ui \u003d Ui.instantiate(appName);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"     * Input handler function of the app. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"     * Takes in a user input, and acts upon the input based on what input it gets. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is \"bye\", exits the program by returning true.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is \"list\", prints the list.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is \"mark X\", marks the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is \"unmark X\", unmarks the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is \"delete X\", deletes the item at index X.\u003c/li\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"     *   \u003cli\u003eIf the input is one of the add task inputs, adds the item to the list.\u003c/li\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"     * @param str The input string that is given to the method.","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"     * @return true if the handler detects the bye keyword,","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"     *         false otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"    private boolean handleInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"        Command command \u003d Parser.parseCommand(ui.readCommand());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"            command.execute(tasks, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"        } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"        return command.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"            Storage.read(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        String input;","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"        boolean isBye;","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"        do {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"            isBye \u003d handleInput();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"        } while (!isBye);","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"            Storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"        new TrackerBot(APP_NAME).run();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WZWren":85,"-":2}},{"path":"src/main/java/trackerbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"    public abstract void execute(TaskList tasks, Ui ui) throws TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"    public static Command of(String keyword, String rest) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"        CommandType parsedType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"        for (CommandType command: CommandType.values()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"            if (keyword.equals(command.getKeyword())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"                parsedType \u003d command;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"        Command result;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"        switch (parsedType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"        case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"            result \u003d new AddCommand(parsedType, rest);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"        case DELETE:","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"            result \u003d new DeleteCommand(rest);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"            result \u003d new ToggleCommand(parsedType, rest);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"            result \u003d new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"        case BYE:","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"            result \u003d new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"            // this handles the UNKNOWN case","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"            result \u003d new UnknownCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"        return result;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    private static class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        private final String commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"        private final CommandType type;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"        private AddCommand(CommandType type, String commandFields) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"            this.commandFields \u003d commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"            this.type \u003d type;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"            ui.showMessage(tasks.add(type, commandFields));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"    private static class ToggleCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"        private final String commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"        private final CommandType type;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"        private ToggleCommand(CommandType type, String commandFields) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"            this.commandFields \u003d commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"            this.type \u003d type;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"            Scanner scanner \u003d new Scanner(commandFields);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"            if (!scanner.hasNextInt()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"                scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"                throw new TrackerBotException(\"Invalid format: mark/unmark [number in list range]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"            int index \u003d scanner.nextInt();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"            if (scanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"                scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"                throw new TrackerBotException(\"Too many fields: mark/unmark [number in list range]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"            switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"            case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"                ui.showMessage(tasks.markTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"                ui.showMessage(tasks.unmarkTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"                throw new IllegalStateException(\"Created ToggleCommand with invalid field.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"WZWren"},"content":"    private static class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"        private final String commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"WZWren"},"content":"        private DeleteCommand(String commandFields) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"WZWren"},"content":"            this.commandFields \u003d commandFields;","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"            Scanner scanner \u003d new Scanner(commandFields);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"WZWren"},"content":"            if (!scanner.hasNextInt()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"                scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"                throw new TrackerBotException(\"Invalid format: delete [number in list range]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"            int index \u003d scanner.nextInt();","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"            if (scanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"                scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"                throw new TrackerBotException(\"Too many fields: delete [number in list range]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"WZWren"},"content":"            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"WZWren"},"content":"            ui.showMessage(tasks.delete(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"WZWren"},"content":"    private static class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"WZWren"},"content":"        private ExitCommand() {}","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"WZWren"},"content":"            ui.exitApp();","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"WZWren"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"WZWren"},"content":"    private static class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"WZWren"},"content":"        private ListCommand() {}","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"WZWren"},"content":"            ui.showMessage(tasks.list());","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"WZWren"},"content":"    private static class UnknownCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"WZWren"},"content":"        public void execute(TaskList tasks, Ui ui) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Unrecognised Command Type. Try another?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"WZWren"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WZWren":173}},{"path":"src/main/java/trackerbot/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"    /** Command to exit the program. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"    BYE (\"bye\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"    /** Command to list all tasks in the task list. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"    LIST (\"list\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new to-do task to the task list. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new deadline task to the task list. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"    /** Command to add a new event task to the task list. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"    EVENT (\"event\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"    /** Command to mark a task to be complete. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    MARK (\"mark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"    /** Command to mark a task as incomplete. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    UNMARK (\"unmark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    /** Command to delete a task. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"    DELETE (\"delete\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    /** Command to denote an unknown keyword call. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"    UNKNOWN (\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    /** The String representation of the enum. Used to parse the command into enum. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"     * Constructor for the enum Command. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"     * Enum constructors are implicitly private, so the tag is not included.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"     * @param keyword The keyword of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"    CommandType(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"    public String getKeyword() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        return keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WZWren":38}},{"path":"src/main/java/trackerbot/exception/TrackerBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"public class TrackerBotException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"    public TrackerBotException(String errMsg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"        super(errMsg);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WZWren":7}},{"path":"src/main/java/trackerbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.TaskDateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" * The Deadline class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" * This Task child contains the deadline to complete the task by.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    /** The Deadline of the task. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"     * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"     * @param desc The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"    public Deadline(String desc, String by) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"        super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"        this.by \u003d TaskDateHandler.convertInputToDate(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    protected Deadline(String[] args) throws DateTimeParseException, NumberFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"        super(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"        this.by \u003d TaskDateHandler.convertSaveToDate(args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        return \"D|\" + getSaveInfo() + \"|\" + this.by.toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"     * toString method of Deadline. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"     * The String representation of To-do appends the [D] tag in front of the Task toString, and","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"     * the deadline date to the end of the toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"     * @return \"[D]\" prefixed to task.toString(), and \"(by: [deadline])\" postfixed to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + TaskDateHandler.convertDateToUi(this.by) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":49}},{"path":"src/main/java/trackerbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.TaskDateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" * The Event class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" * This Event child contains the start and end times to complete the task by.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    /** The start date of the event. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    /** The end date of the event. **/","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"    LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"     * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"     * @param desc The description of the Deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    public Event(String desc, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"        super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        this.from \u003d TaskDateHandler.convertInputToDate(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"        this.to \u003d TaskDateHandler.convertInputToDate(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    protected Event(String[] args) throws DateTimeParseException, NumberFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"        super(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        this.from \u003d TaskDateHandler.convertSaveToDate(args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        this.to \u003d TaskDateHandler.convertSaveToDate(args[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"        return \"E|\" + getSaveInfo() + \"|\"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"                + this.from.toEpochSecond(ZoneOffset.UTC) + \"|\"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"                + this.to.toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"     * toString method of Event. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"     * The String representation of To-do appends the [E] tag in front of the Task toString, and","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"     * the event period to the end of the toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"     * @return \"[D]\" prefixed to task.toString(), and \"(from: [start] / to: [end])\" postfixed to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"                + \" (from: \" + TaskDateHandler.convertDateToUi(this.from)","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"                + \" | to: \" + TaskDateHandler.convertDateToUi(this.to) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":58}},{"path":"src/main/java/trackerbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * The Task class for TrackerBot. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" * The Task class abstracts each checklist item inside a Reminder-Type app. \u003cbr\u003e","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" * As of Level 4, Task should no longer be instantiated as a base task, as To-do","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":" * exists as a basic Task. Therefore, Task has been converted to an Abstract class.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    /** The description of the task instance. **/","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"    private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    /** The status of the task instance. If true, the task is done. */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"     * Returns the save string for the child class. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"     * The save string should have the following format: \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"     * {Task Flag} | {Mark Status} | {Description} | {Fields...}","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"     *  \u003cli\u003eTask Flag represents the type of Task to create.\u003c/li\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"     *  \u003cli\u003eMark Status is a 0/1 representation of the Checkmark status.\u003c/li\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"     *  \u003cli\u003eDescription is the main body of the Task item to display.\u003c/li\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"     *  \u003cli\u003eFields are the additional fields required by the Task, delimited by \u0027|\u0027.\u003c/li\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"     * @return The \u0027|\u0027 delimited String to store in save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"     * Helper method for toSaveString. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"     * Gets a formatted description and mark status of the Task, and","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"     * passes it to the child classes.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"     * @return {Mark Status} | {Description} String, to append to toSaveString","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"     *         implementation in child classes.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    protected String getSaveInfo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"        String checkStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"        return checkStatus + \"|\" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"     * @param desc The description of the task to create.","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"    protected Task(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        this.description \u003d args[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"        this.isDone \u003d args[0].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"    public static Task ofSaveString(String type, String... args)","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"            throws IllegalArgumentException, DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"            if (args.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"                throw new IllegalArgumentException(\"Todos should have exactly 2 arguments.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"            return new Todo(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"            if (args.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"                throw new IllegalArgumentException(\"Deadline should have exactly 3 arguments.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"            return new Deadline(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"            if (args.length !\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"                throw new IllegalArgumentException(\"Events should have exactly 4 arguments.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"            return new Event(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"            throw new IllegalArgumentException(\"Unknown Task type.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"     * Helper function to determine the checkmark status of the Task.","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"     * @return \"[X]\" if the task is done, \"[ ]\" otherwise.","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"    private String getCheckbox() {","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"     * Flags the task to be completed, if able.","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"     * @return true if the task is successfully marked to completion,","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"     *         false if the task is already completed.","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"    public boolean markTask() {","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"     * Flags the task to be incomplete, if able.","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"     * @return true if the task is successfully marked to be incomplete,","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"     *         false if the task is already marked as incomplete.","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"WZWren"},"content":"    public boolean unmarkTask() {","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"        if (!isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"WZWren"},"content":"            return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"WZWren"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"WZWren"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"WZWren"},"content":"     * toString method of Task. \u003cbr\u003e","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"     * A Task is formatted as \"[X] description of task\", where the X may or","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"     * may not be present depending on the completion status of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"     * @return The String representation of the Task.","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"        return getCheckbox() + \" \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"WZWren":129}},{"path":"src/main/java/trackerbot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.command.CommandType;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import trackerbot.utils.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"     * Task Array - as TrackerBot is not instantiated, this must be static.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"     * The Task List array itself should be immutable, in case we override it","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"     * during runtime.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"    private final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    public String markTask(int index) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"        // happy path: the task does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"The specified task does not exist.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"        if (!task.markTask()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"The specified task is already completed.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        return \"This task has been marked as completed.\\n  \" + task;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    public String unmarkTask(int index) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"        // happy path: the task does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"The specified task does not exist.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"        // we can use an exception here to denote the task is completed","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        if (!task.unmarkTask()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"This task is already in progress.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"        return \"The task has been marked as incomplete.\\n  \" + task;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"     * Delete function for the app. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"     * Attempts to delete the item in the task list. If the Task does not exist,","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"     * prints an appropriate error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"     * @param index The index of the list to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    public String delete(int index) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"        // happy path: the task does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"The specified task does not exist.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"        TASKS.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"        return \"I have removed this task off of my list.\\n  \" + task + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"                + TASKS.size() + \" task(s) remain on my list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"     * Function that adds a task to the app. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"     * Adds a To-Do, Event or Deadline task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"     * @param input The Pair\u0026lt;Command, String\u0026gt; of the task to add to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"    public String add(CommandType type, String commandField) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        Task newTask \u003d Parser.parseAdd(type, commandField);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"        TASKS.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"        return \"I am tracking this task now:\\n  \" + newTask.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"    public String list() {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"        // happy path: prints an appropriate message and exit the method.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"        if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"            return \"No tasks have been added to the list yet.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"        return \"I am tracking these tasks:\\n\" + getListOfTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"    public void importSave(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"        TASKS.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"    public void clear() {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"        TASKS.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"    public String exportSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"        for (int i \u003d 1; i \u003c TASKS.size() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"            result.append(TASKS.get(i - 1).toSaveString());","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"        return result.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"     * Gets the Task at the provided index.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"     * @param index The index of the list to check.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"     * @return The Task object at the index, if it exists, and null otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"    private Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"        // happy path: return null if out of bounds.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"        if (index \u003c\u003d 0 || index \u003e TASKS.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"WZWren"},"content":"        return TASKS.get(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"WZWren"},"content":"    private String getListOfTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"WZWren"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"        for (int i \u003d 1; i \u003c TASKS.size() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"WZWren"},"content":"            result.append(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"            result.append(\". \");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"WZWren"},"content":"            result.append(TASKS.get(i - 1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"            if (i !\u003d TASKS.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"        return result.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WZWren":128}},{"path":"src/main/java/trackerbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":" * The To-do class for TrackerBot, inheriting from the Task class. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":" * This represents the most basic variant of the Task, and can be constructed","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":" * with the basic parameters for Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":" * @version Level-4","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"     * The constructor for the class.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"     * @param desc The description of the To-do task.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"        super(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    public Todo(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"        super(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"        return \"T|\" + getSaveInfo();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"     * toString method of To-do. \u003cbr\u003e","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"     * The String representation of To-do appends the [T] tag in front of the Task toString.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"     * @return \"[T]\" appended to task.toString().","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"WZWren":38}},{"path":"src/main/java/trackerbot/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import trackerbot.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import trackerbot.command.CommandType;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"     * Helper function. Splits the console input string into the invoking keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"     * and its description after the invoking keyword. \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"     * If no description exists after the keyword, an empty string is returned in the","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"     * second half of the Pair structure.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"     * @param input The unmodified console string that the user inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"     * @return A Pair\u0026lt;Command, String\u0026gt; object containing the enum and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"        Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"        String keyword, rest;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"        // if the input is empty, return the unknown keyword with an empty description.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"        if (!scanner.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"            keyword \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"            keyword \u003d scanner.next();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"        if (keyword.equals(\"\") || !scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"            rest \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"            rest \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        return Command.of(keyword, rest);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    public static Task parseAdd(CommandType type, String commandField) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"        Task newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"        String[] segments;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"            switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"            case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"                if (commandField.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Cannot track task without description.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"                newTask \u003d new Todo(commandField.trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"                if (!commandField.matches(\"^.+ /by .+\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Improper format: deadline [description] /by [end-date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"                segments \u003d commandField.split(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"                if (segments.length \u003e 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Too many flags: deadline [description] /by [end-date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"                if (segments[0].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Cannot track task without description.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"                if (segments[1].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Empty /by flag.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"                newTask \u003d new Deadline(segments[0].trim(), segments[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"            case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"                // this will check for the standard format, and will also guarantee that segment length is min 3.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"                if (!commandField.matches(\"^.+ /from .+ /to .+\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"                            \"Improper format: event [description] /from [start-date] /to [end-date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"                segments \u003d commandField.split(\"/from|/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"                if (segments.length \u003e 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Too many flags: event [description] /from [start-date] /to [end-date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"                if (segments[0].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Cannot track task without description\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"                if (segments[1].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Empty /from flag.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"                if (segments[2].trim().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"                    throw new TrackerBotException(\"Empty /to flag.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"                newTask \u003d new Event(segments[0].trim(), segments[1].trim(), segments[2].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"                throw new IllegalStateException(\"Uncaught CommandType: \" + type.getKeyword());","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"            return newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Additional Date Fields should be in the format DD/MM(/YYYY)( HHmm).\");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WZWren":105}},{"path":"src/main/java/trackerbot/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    private Storage() {};","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"     * Parses the save string in the input file. \u003cbr\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"     * The save string is generated by the {@link #... toSaveString}","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"     * method, and will be parsed based on the format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"     * @param saveStr The input save string, in the aforementioned format.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"     * @return The Task object from parsing the String.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"    private static Task parseSaveLine(String saveStr) throws DateTimeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"        String delimiter \u003d \"|\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"        String[] args \u003d saveStr.split(\"[|]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"        return Task.ofSaveString(args[0], Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    public static void read(TaskList tasks) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"        Path path \u003d Paths.get(\"TrackerBot\", \"data.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"        try (Scanner input \u003d new Scanner(new FileReader(path.toFile()))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"            while (input.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"                tasks.importSave(parseSaveLine(input.nextLine()));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Failed to load save file: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Failed to parse date: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Corrupted save data in DateTime.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(\"Corrupted save data in Arguments.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"    public static void save(TaskList tasks) throws TrackerBotException {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"        Path path \u003d Paths.get(\"TrackerBot\", \"data.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"        File file \u003d path.toFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"        try (FileOutputStream output \u003d new FileOutputStream(file, false)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"            output.write(tasks.exportSave().getBytes());","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"            throw new TrackerBotException(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"        } // the try with resources statement auto-closes output.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WZWren":75}},{"path":"src/main/java/trackerbot/utils/TaskDateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":" * Handles Date-related methods for Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":" * @author WZWren","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * @version Level-8","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"public class TaskDateHandler {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"    /** Suppress the constructor, as no instance should be created. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    private TaskDateHandler() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"     * Converts the String into a LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"     * @param input The input String to parse into a Date object.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"     *              The String should be in the format: d/M/yyyy HHmm \u003cbr\u003e","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"     *              The year and time are optional. If not given, the year is assumed","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"     *              to be the current year, and the time is assumed to be 0000.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"     * @return The LocalDateTime object from the parsed String","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"     * @throws DateTimeParseException if the input does not match the format string","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"    public static LocalDateTime convertInputToDate(String input) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        DateTimeFormatter format \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"                .append(DateTimeFormatter.ofPattern(\"d/M[/yyyy][ HHmm]\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"                .parseDefaulting(ChronoField.YEAR_OF_ERA, LocalDateTime.now().get(ChronoField.YEAR_OF_ERA))","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"                .toFormatter();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        return LocalDateTime.parse(input, format);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"    public static LocalDateTime convertSaveToDate(String input) throws DateTimeParseException, NumberFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"        long epoch \u003d Long.parseLong(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        return LocalDateTime.ofEpochSecond(epoch, 0, ZoneOffset.UTC);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    public static String convertDateToUi(LocalDateTime date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"        DateTimeFormatter format \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"                .append(DateTimeFormatter.ofPattern(\"dd MMM yyyy, EEE @ hh:mma\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"                .toFormatter();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"        return date.format(format);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WZWren":49}},{"path":"src/main/java/trackerbot/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"    /** Name of the app. **/","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"    private final String appName;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"    /** Line separators for the console between paragraphs. **/","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"    private static final String FORMAT_LINE \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"            \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"    private static final Scanner USER_INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    private Ui(String appName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"        this.appName \u003d appName;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"    public static Ui instantiate(String appName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"        Ui ui \u003d new Ui(appName);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"        System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"Greetings from \" + ui.appName + \"!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"How may I assist?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"        System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"        return ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        String input;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"        System.out.print(\"Format :: [keyword] [parse string] | \");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"        input \u003d USER_INPUT.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        System.out.println(FORMAT_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"I got some trouble with that input...\\n  \" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    public void exitApp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"        System.out.println(\"Thank you for using \" + appName + \". Goodbye.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"    // generic message method","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WZWren":51}},{"path":"src/test/java/trackerbot/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import trackerbot.command.CommandType;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import trackerbot.exception.TrackerBotException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_todoCorrectInput_shouldParse() throws TrackerBotException {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"        assertEquals(\"[T][ ] Test Input\",","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"                Parser.parseAdd(CommandType.TODO, \"Test Input\").toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_todoEmptyInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.TODO, \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Cannot track task without description.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_deadlineCorrectInput_shouldParse() throws TrackerBotException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        assertEquals(\"[D][ ] Test Input (by: 12 Dec 2000, Tue @ 12:00AM)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"                Parser.parseAdd(CommandType.DEADLINE, \"Test Input /by 12/12/2000\").toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_deadlineMissingFlag_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.DEADLINE, \"Empty by flag\");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Improper format: deadline [description] /by [end-date]\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_deadlineEmptyInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.DEADLINE, \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Improper format: deadline [description] /by [end-date]\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_deadlineExtraFlag_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.DEADLINE, \"Test Input /by 12/12/2000 /by additional field\");","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Too many flags: deadline [description] /by [end-date]\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_eventCorrectInput_shouldParse() throws TrackerBotException {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"        assertEquals(\"[E][ ] Test Input (from: 01 Dec 2000, Fri @ 12:00AM | to: 09 Dec 2000, Sat @ 12:00AM)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"                Parser.parseAdd(CommandType.EVENT, \"Test Input /from 1/12/2000 /to 9/12/2000\").toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_eventMissingFlag_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.EVENT, \"Test Input /from 1/12/2000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Improper format: event [description] /from [start-date] /to [end-date]\",","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_eventEmptyInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.EVENT, \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Improper format: event [description] /from [start-date] /to [end-date]\",","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_eventFlippedFlag_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.EVENT, \"Test Input /to 1/12/2000 /from 9/12/2000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"        } catch (TrackerBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Improper format: event [description] /from [start-date] /to [end-date]\",","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"    public void parseAdd_illegalState_shouldThrow() throws TrackerBotException {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"            Parser.parseAdd(CommandType.UNKNOWN, \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"            // There should be an Illegal State Exception - this is not caught by the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WZWren":112}},{"path":"src/test/java/trackerbot/utils/TaskDateHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"package trackerbot.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":" * Test file for TaskDateHandlerTest. \u003cbr\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":" * This parses user input to Date. As the parse can be variable with optional","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":" * fields, we test to see if the parser handles bad input properly.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"public class TaskDateHandlerTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_dayAndMonthInput_shouldParseProperly() throws DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"        LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"1/12\");","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"        String expected \u003d LocalDateTime.now().get(ChronoField.YEAR_OF_ERA) + \"-12-01T00:00\";","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"        assertEquals(expected, date.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_dayMonthYearInput_shouldParseProperly() throws DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"        LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"24/1/2012\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"        String expected \u003d \"2012-01-24T00:00\";","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"        assertEquals(expected, date.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_dayMonthTimeInput_shouldParseProperly() throws DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"        LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"09/08 0654\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"        String expected \u003d LocalDateTime.now().get(ChronoField.YEAR_OF_ERA) + \"-08-09T06:54\";","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        assertEquals(expected, date.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_fullInput_shouldParseProperly() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"        LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"20/9/1922 2059\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"        String expected \u003d \"1922-09-20T20:59\";","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"        assertEquals(expected, date.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_emptyInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"            LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Text \u0027\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_faultyInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"            LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"21//2 2359\");","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Text \u002721//2 2359\u0027 could not be parsed at index 3\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"    public void convertInputToDate_notFullYearInput_shouldThrow() {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WZWren"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WZWren"},"content":"            LocalDateTime date \u003d TaskDateHandler.convertInputToDate(\"21/2/20 2359\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"            assertEquals(\"Text \u002721/2/20 2359\u0027 could not be parsed, unparsed text found at index 4\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WZWren":75}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"nonsense command. next line is empty on purpose.","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"todo Test my App.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"event Some arbitrary event. /from ABC /to XYZ","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"deadline tP Project. /by End of the semester.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"event No from parameter. /to XYZ","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"event No to parameter. /from ABC","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"event Flipped parameters. /to XYZ /from ABC","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"event Too many parameters. /from ABC /to XYZ /to 123","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"deadline No by parameter.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"deadline Too many parameters. /by XYZ /by XYZ","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"todo Placeholder item.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"todo Placeholder item 2.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"mark 0","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"unmark 0","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"delete 0","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WZWren":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"java -classpath ..\\bin TrackerBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"pause","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WZWren":2,"-":20}}]
