[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"    archiveBaseName \u003d \"dukeyJAR\"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"repositories {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingting1412":26,"-":40}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"T | 1 | something","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"D | 1 | read | 2023-10-19","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"D | 1 | return | 2003-10-08","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"D | 0 | apply | 2023-09-24","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"T | 0 | this project","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"T | 1 | debugging","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"E | 0 | project | today - tomorrow","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"T | 0 | wheeeee","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"jingting1412":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":" * Represents a \u003ccode\u003eDeadline\u003c/code\u003e object that extends from \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":" * A \u003ccode\u003eDeadline\u003c/code\u003e object contains a deadline and a description.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"     * @param description a description for the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"     * @param deadline the deadline of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException when the user fails to supply a deadline or description.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"            LocalDate d1 \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"            this.deadline \u003d d1;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"            throw new DukeException(\"Please provide a deadline in the format yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eDeadline\u003c/code\u003e object with the deadline in the format \"MMM dd yyyy\".","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the \u003ccode\u003eDeadline\u003c/code\u003e\u003e object to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"        String dueDate \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"        return \"[D] \" + super.getDescription()","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"                + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the \u003ccode\u003eDeadline\u003c/code\u003e object to be saved to the task list file.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"    public String getSavedString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"        return \"D \" + super.getSavedString() + \" | \" + this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jingting1412":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":" * Represents the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"    private TaskList toDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/batblob1.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/batblob2.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"     * Gets response from Duke chatbot based on user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"            return dukeReply(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"            return \"Sorry, I don\u0027t understand that o(TヘTo)\";","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"     * Gets the reply from the Duke chatbot based on the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"     * @param userInput the command given by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"     * @return reply from Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException when user input is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    public String dukeReply(String userInput) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"        storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"        assert storage !\u003d null : \"No storage created\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"        toDo \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"        storage.load();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"        String respondMsg \u003d \"Parsing command...\";","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"        Parser parseCommand \u003d new Parser(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"            respondMsg \u003d parseCommand.parseAndRespond();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"            assert respondMsg !\u003d \"Parsing command...\" : \"command not parsed\";","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"            respondMsg \u003d e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"        return respondMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jingting1412":54}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Catches checked exceptions during the execution of Duke.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"        super(errMsg);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jingting1412":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Represents a \u003ccode\u003eEvent\u003c/code\u003e object that extends from \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" * An \u003ccode\u003eEvent\u003c/code\u003e object contains a description, a start time, and an end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"    protected String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    protected String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"     * @param startTime the start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"     * @param endTime the end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the Event object to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"        return \"[E] \" + super.getDescription()","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"                + \" (from:\" + this.startTime","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"                + \" to:\" + this.endTime + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the \u003ccode\u003eEvent\u003c/code\u003e object to be saved to the task list file.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    public String getSavedString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"        return \"E \" + super.getSavedString() + \" | \" + this.startTime + \"-\" + this.endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jingting1412":43}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"            stage.setTitle(\"Dukey\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/batblob1.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/batblob2.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Parses user command and executes tasks based on user commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"    private String userCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"    private static final Integer COMMAND \u003d 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    private static final Integer TASKINFP \u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"     * Constructs new \u003ccode\u003eParser\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"     * @param command the command taken from user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"    public Parser(String command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"        this.userCommand \u003d command;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"     * Parses and responds to the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException when user command is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"    public String parseAndRespond() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"        String[] splitted \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"        assert splitted !\u003d null : \"there should be a command\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"        String command \u003d splitted[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"        String response \u003d \"Huhhhhhhh??? (o_O) ? \"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"                + \"Please use one of the command words: todo, event, deadline, list, mark, unmark, delete, bye\";","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"        switch (command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"            response \u003d Ui.listTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"            assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please indicate which task to mark!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"                int taskNo \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"                response \u003d TaskList.mark(taskNo);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"                assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please indicate which task to unmark!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"                int taskNo \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"                response \u003d TaskList.unmark(taskNo);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"                assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please provide a term to search for! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"                String searchTerm \u003d splitted[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"                response \u003d TaskList.searchFor(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"                assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please provide a description for this todo! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"                String todoTask \u003d splitted[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"                Todo newTodo \u003d new Todo(todoTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"jingting1412"},"content":"                response \u003d TaskList.add(newTodo, \"todo\");","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"jingting1412"},"content":"                assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please provide a description for this deadline! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"                String[] deadTask \u003d splitted[1].split(\"/by\");","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"jingting1412"},"content":"                if (deadTask.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"jingting1412"},"content":"                    throw new DukeException(\"Please provide a deadline! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jingting1412"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"jingting1412"},"content":"                    String deadDescription \u003d deadTask[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"jingting1412"},"content":"                    String deadTime \u003d deadTask[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"jingting1412"},"content":"                    assert deadTime !\u003d null : \"there should be a deadline\";","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"jingting1412"},"content":"                    deadTime \u003d deadTime.trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"                    Deadline deadlineTask \u003d new Deadline(deadDescription, deadTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"                    response \u003d TaskList.add(deadlineTask, \"deadline\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"jingting1412"},"content":"                    assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"jingting1412"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"jingting1412"},"content":"        case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"Please provide a description for this deadline! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"jingting1412"},"content":"                String[] eventTask \u003d splitted[1].split(\"/from\");","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"jingting1412"},"content":"                if (eventTask.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"jingting1412"},"content":"                    throw new DukeException(\"Please provide a start time! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jingting1412"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"jingting1412"},"content":"                    String eventDescription \u003d eventTask[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"jingting1412"},"content":"                    String[] startEnd \u003d eventTask[1].split(\"/to\");","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"jingting1412"},"content":"                    if (startEnd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"jingting1412"},"content":"                        throw new DukeException(\"Please provide an end time! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jingting1412"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"jingting1412"},"content":"                        String eventStart \u003d startEnd[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"jingting1412"},"content":"                        String eventEnd \u003d startEnd[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"jingting1412"},"content":"                        Event newEvent \u003d new Event(eventDescription, eventStart, eventEnd);","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"jingting1412"},"content":"                        response \u003d TaskList.add(newEvent, \"event\");","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"jingting1412"},"content":"                        assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"jingting1412"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"jingting1412"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"jingting1412"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"jingting1412"},"content":"            if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"jingting1412"},"content":"                throw new DukeException(\"You do not have that much tasks! parse! parse! (⋟﹏⋞)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"jingting1412"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"jingting1412"},"content":"                int target \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"jingting1412"},"content":"                response \u003d TaskList.delete(target);","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"jingting1412"},"content":"                assert response !\u003d null : \"response should be given\";","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"jingting1412"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"jingting1412"},"content":"            response \u003d \"Bye bye! Hope to see you again! o(^◇^)o\";","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"jingting1412"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"jingting1412"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"jingting1412"},"content":"            response \u003d  response;","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"jingting1412"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jingting1412":131}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":" * Deals with loading tasks from the file in the user\u0027s hard disk and saving tasks in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"    private static File taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    private static String filepath;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"     * Constructs new \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"     * @param filepath the filepath to the file that stores existing tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"     *                 New file created if the file specified does not exist at the start.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"        File tasks \u003d new File(filepath);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        if (!tasks.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"                tasks.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"                System.out.println(\"File cannot be created!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"     * Loads data from the hard disk when the chatbot starts up.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"     * Saves any pre-existing tasks in the file to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException when data from the file cannot be converted to a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    public static void load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"            Scanner s \u003d new Scanner(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"            String savedStrings;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"                savedStrings \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"                String[] arr \u003d savedStrings.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"                for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"                    arr[i] \u003d arr[i].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"                String taskType \u003d arr[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"                case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"                    Todo t \u003d new Todo(arr[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"                    if (arr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"                        t.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"                    TaskList.add(t);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"                case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"                    Deadline d \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"                    if (arr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"                        d.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"                    TaskList.add(d);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"jingting1412"},"content":"                case\"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"                    String startEnd \u003d arr[3];","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"                    String[] duration \u003d startEnd.split(\"-\");","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"                    String start \u003d duration[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"jingting1412"},"content":"                    String end \u003d duration[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"jingting1412"},"content":"                    Event e \u003d new Event(arr[2], start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"jingting1412"},"content":"                    if (arr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"jingting1412"},"content":"                        e.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"                    TaskList.add(e);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"                default:","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"                    System.out.println(\"Wrong input recognised :((\");","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"jingting1412"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"jingting1412"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"jingting1412"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"     * Saves the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jingting1412"},"content":"    public static void save() {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"            FileWriter writer \u003d new FileWriter(filepath);","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"jingting1412"},"content":"            for (Task t : TaskList.toDo) {","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"                writer.write(t.getSavedString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"jingting1412"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"jingting1412"},"content":"            System.out.println(\"Cannot save to file :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"jingting1412"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jingting1412":100}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Represents a Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"     * @param description the description given by user.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"     * Changes the boolean \u003ccode\u003eisDone\u003c/code\u003e to true.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"     * Changes the boolean \u003ccode\u003eisDone\u003c/code\u003e to false.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the task to be displayed to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the task to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"        assert this.description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"        return this.isDone ? \"[X] \" + this.description : \"[  ] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the task to be saved to the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the task to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"    public String getSavedString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"        assert this.description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"        return \"| \" + status + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"     * Checks if a search term is in the description of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"     * @param term the term to check for in the task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"     * @return returns true if the term is in the task description and false if the term is not in the task description","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"    public boolean checkTerm(String term) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"        assert this.description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"        return this.description.toLowerCase().contains(term.toLowerCase());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jingting1412":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":" * Represents a task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":" * Contains all current tasks and contain methods to add/delete/mark/unmark a specific task.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"    protected static ArrayList\u003cTask\u003e toDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"        toDo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"     * Adds a new task to the task list from user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"     * @param task the task to add into task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"     * @param type type of task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    public static String add(Task task, String type) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"        toDo.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"        Storage.save();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"        String successMsg \u003d Ui.successfulAdd(type, description, toDo.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"        return successMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"     * Adds a new task to the task list from the hard disk when chatbot starts up.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"     * @param task the task from the file in the hard disk to be loaded into the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"    public static void add(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"        toDo.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"     * Deletes a specific task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"     * @param target the index of the task in the task list that should be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException throws exception when the index of the task given is larger than the size of the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"    public static String delete(Integer target) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"        if (target \u003c\u003d toDo.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"            Task toDelete \u003d toDo.get(target - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"            String description \u003d toDelete.getDescription();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"            assert description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"            toDo.remove(target - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"            Storage.save();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"            String successMsg \u003d Ui.successfulDelete(description, toDo.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"            return successMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"            throw new DukeException(\"You do not have that many tasks! err! err! (⋟﹏⋞)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"     * Marks the specified task.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"     * @param taskNo the index of the task in the task list to be marked.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException exception thrown when the \u003ccode\u003etaskNo\u003c/code\u003e given exceeds the size of the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jingting1412"},"content":"    public static String mark(Integer taskNo) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"jingting1412"},"content":"        if (taskNo \u003c\u003d toDo.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"            Task target \u003d toDo.get(taskNo - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"            target.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"            String description \u003d target.getDescription();","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"            assert description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"jingting1412"},"content":"            String successMsg \u003d Ui.markMsg(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"jingting1412"},"content":"            Storage.save();","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"jingting1412"},"content":"            return successMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"jingting1412"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"jingting1412"},"content":"            throw new DukeException(\"You do not have that many tasks! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"jingting1412"},"content":"     * Unmarks the specified task.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"     * @param taskNo the index of the task in the task list to be unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jingting1412"},"content":"     * @throws DukeException exception thrown when the \u003ccode\u003etaskNo\u003c/code\u003e given exceeds the size of the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"    public static String unmark(Integer taskNo) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"        if (taskNo \u003c\u003d toDo.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"jingting1412"},"content":"            Task target \u003d toDo.get(taskNo - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"jingting1412"},"content":"            target.unmark();","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"jingting1412"},"content":"            String description \u003d target.getDescription();","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"jingting1412"},"content":"            assert description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"jingting1412"},"content":"            String successMsg \u003d Ui.unmarkMsg(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"jingting1412"},"content":"            Storage.save();","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"jingting1412"},"content":"            return successMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"jingting1412"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"jingting1412"},"content":"            throw new DukeException(\"You do not have that many tasks! (⋟﹏⋞)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jingting1412"},"content":"     * Displays all the tasks currently in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jingting1412"},"content":"    public static String listOut() {","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"jingting1412"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"jingting1412"},"content":"        for (int i \u003d 0; i \u003c toDo.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"jingting1412"},"content":"            Task currTask \u003d toDo.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"jingting1412"},"content":"            String description \u003d currTask.getDescription();","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"jingting1412"},"content":"            assert description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"jingting1412"},"content":"            tasks +\u003d (i + 1) + \". \" + description + \"\\n\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"jingting1412"},"content":"        return tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"jingting1412"},"content":"     * Searches for a task in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"jingting1412"},"content":"     * @param searchTerm the term to search for in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"jingting1412"},"content":"    public static String searchFor(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"jingting1412"},"content":"        String searchResult \u003d \"_____________________________________\"","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"jingting1412"},"content":"                + \"\\nHere are the matching tasks in your list: (≧▽≦)\\n\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"jingting1412"},"content":"        List\u003cTask\u003e result \u003d toDo.stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"jingting1412"},"content":"                .filter(task -\u003e task.checkTerm(searchTerm))","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"jingting1412"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"jingting1412"},"content":"        for (int i \u003d 0; i \u003c result.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"jingting1412"},"content":"            Task currTask \u003d result.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"jingting1412"},"content":"            String description \u003d currTask.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"jingting1412"},"content":"            assert description !\u003d null : \"description should not be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"jingting1412"},"content":"            searchResult +\u003d (i + 1) + \".\" + description + \"\\n\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"jingting1412"},"content":"        return searchResult + \"_____________________________________\";","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jingting1412":142}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e object that extends from \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object contains a description.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the \u003ccode\u003eTodo\u003c/code\u003e object to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        return \"[T] \" + super.getDescription();","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"     * Gets the description of the \u003ccode\u003eTodo\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"     * @return String representation of the \u003ccode\u003eTodo\u003c/code\u003e object to save to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    public String getSavedString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"        return \"T \" + super.getSavedString();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jingting1412":35}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Deals with user interactions.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"    //this is the new name for my chatbot","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"    private static String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    //these are the lines","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    private static String lines;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"    //this will be the greeting","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"    private static String greeting;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"    //this will be goodbye","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"    private static String goodbye;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"     * Constructs a new \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    public Ui() {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        name \u003d \"dukey\";","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"        lines \u003d \"_____________________________________\";","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"        greeting \u003d \"        Hello! I\u0027m \" + name + \"\\n        What can I do for you?\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        goodbye \u003d \"        Bye. Hope to see you again soon! :D\\n\";","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"     * Displays all current tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    public static String listTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        String tasks \u003d lines + \"\\nHere are the tasks in your list:\\n\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"        tasks +\u003d TaskList.listOut();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"        return tasks + lines;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"     * Displays message when task if successfully marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the task marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    public static String markMsg(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"        return lines + \"\\nNice! I\u0027ve marked this task as done: (≧▽≦)\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"                + description + \"\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"                + lines;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"     * Displays message when task is successfully unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the task unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"    public static String unmarkMsg(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"        return lines","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"                + \"\\nOK, I\u0027ve marked this task as not done yet: (≧▽≦)\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"                + description + \"\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"                + lines;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"     * Displays message when task is successfully added to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"     * @param type the type of the task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"     * @param size the updated number of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"    public static String successfulAdd(String type, String description, Integer size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"        return lines + \"\\nGot it. I\u0027ve added this new \" + type + \":\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"                + description + \"\\n\\nNow you have \" + size + \" tasks in the list.\\n\" + lines;","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"     * Displays message when task is successfully deleted from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jingting1412"},"content":"     * @param description the description of the task deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jingting1412"},"content":"     * @param size the updated number of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jingting1412"},"content":"    public static String successfulDelete(String description, Integer size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"        return lines + \"\\nNoted, I\u0027ve removed this task:\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"                + description + \"\\n\\nNow you have \" + size + \" tasks in the list\"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"                + \"\\n\" + lines;","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"jingting1412":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.effect.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: FFFFDD;\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Say something to Dukey!\" style\u003d\"-fx-background-color: FFFFDD;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: FFB7B7; -fx-background-radius: 50;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"            \u003cBlend /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jingting1412":28}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    public void parseAndRespond_wrongInput_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"        Parser p \u003d new Parser(\"abc\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"            p.parseAndRespond();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Huhhhhhhh??? (o_O) ? Please use one of the command words: \"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"                            + \"todo, event, deadline, list, mark, unmark, delete, bye\",","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"                        e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    public void parseAndRespond_noDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        Parser p \u003d new Parser(\"deadline something\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"            p.parseAndRespond();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please provide a deadline! (⋟﹏⋞)\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    public void parseAndRespond_noStartTime_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"        Parser p \u003d new Parser(\"event testing\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"            p.parseAndRespond();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please provide a start time! (⋟﹏⋞)\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"    public void parseAndRespond_noEndTime_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"        Parser p \u003d new Parser(\"event testing /from 2pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"            p.parseAndRespond();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please provide an end time! (⋟﹏⋞)\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"    public void parseAndRespond_noTaskIndicated_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"        Parser p \u003d new Parser(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"            p.parseAndRespond();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please indicate which task to mark!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jingting1412":61}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"    public void getDescription_deadlineValidInput_correctString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"        Deadline d \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"            d \u003d new Deadline(\"finish homework\", \"2023-10-19\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"[D] [ ] finish homework (by: Oct 19 2023)\", d.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"D | 0 | finish homework | 2023-10-19\", d.getSavedString());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please provide a deadline in the format yyyy-MM-dd\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"    public void getDescription_deadlineInvalidInput_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"        Deadline d \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"            d \u003d new Deadline(\"finish homework\", \"Friday 2pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"            assertEquals(\"Please provide a deadline in the format yyyy-MM-dd\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    public void getDescription_eventValidInput_correctString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"        Event d \u003d new Event(\"finish homework\", \"Friday 10pm\", \"11pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"        assertEquals(\"[E] [ ] finish homework (from: Friday 10pm to: 11pm)\", d.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"        assertEquals(\"E | 0 | finish homework | Friday 10pm-11pm\", d.getSavedString());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jingting1412":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"todo eat bread","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"deadline finish work /by Friday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"event barbecue /from Friday 7pm /to 10pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"unmark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jingting1412":12}}]
