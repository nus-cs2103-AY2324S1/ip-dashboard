[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mohammed-Faizzzz":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mohammed-Faizzzz":2,"-":41}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * deadline doesn\u0027t work with slashes","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     * other deadline formats?","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Deadlines(String task, LocalDate deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void mark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as completed!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as incomplete!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String submitDate \u003d \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return \"[D]\" + checkbox + task + \" \" + submitDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        new Duke(\"./src/main/data/tasklist.txt\").startChat();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void startChat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ui.greet();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String userInput \u003d parser.getUserInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        parser.setUserInput(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        while (true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                if (parser.bye()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                if (parser.list()){","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.printFileContents();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.mark()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.mark(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.unMark()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.unMark(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.delete()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.delete(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.todo()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.handleTodo(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.deadline()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.handleDeadline(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else if (parser.event()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    tasks.handleEvent(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    throw new DukeException(\"Error: Invalid Command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                System.out.println(Ui.line + exception.getMessage() + \"\\n\" + Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            userInput \u003d parser.getUserInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            parser.setUserInput(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ui.goodbye();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        parser.goodbye();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":60}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":7}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Events(String task, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void mark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as completed!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as incomplete!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String startTime \u003d \"(from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String endTime \u003d \"to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return \"[E]\" + checkbox + task + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static String userInput;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void setUserInput(String newUserInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        userInput \u003d newUserInput;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean bye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.equals(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean list() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.equals(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean mark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"mark \");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean unMark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"unmark \");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean delete() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"delete \");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean todo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"todo \");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean deadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"deadline \");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public boolean event() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return userInput.startsWith(\"event \");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void goodbye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        scanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    File taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.taskList \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public File load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":14}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    Boolean done \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    String task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    int taskId;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static String line \u003d \"______________________________________________________________________________________\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public Boolean isMarked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return this.done;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void mark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String line() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return line;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return \".\" + this.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return checkbox + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import duke.Deadlines;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import duke.Events;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static File taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static int taskCount \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public TaskList(File file) throws FileNotFoundException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        taskList \u003d file;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        taskList.deleteOnExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        taskList \u003d new File(\"./src/main/data/tasklist.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        taskList.deleteOnExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void printFileContents() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            Scanner s \u003d new Scanner(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                System.out.println(s.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(\"Error: There are no items in the list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            FileWriter fw \u003d new FileWriter(taskList.getPath());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            fw.write(displayList());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public static String displayList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        StringBuilder res \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: There are no items in the list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            res \u003d new StringBuilder(Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                res.append(index).append(task.getTask()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            res.append(Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DukeException emptyList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            res \u003d new StringBuilder(Ui.line + emptyList.getMessage() + \"\\n\" + Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return res.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void delete(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (taskIndex \u003e taskCount || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: Invalid duke.Task Index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                int remainingTasks \u003d taskCount - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                String response \u003d Ui.line + \"Got it! I\u0027ve removed this task:\" + \"\\n\" + tasks.get(taskIndex).toString() + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                        + \"You now have \" + remainingTasks + \" task(s) in the list\" + \"\\n\" + Ui.line;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                tasks.remove(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                if (taskCount \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                    taskCount--;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                System.out.println(response);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                writeToFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(Ui.line + exception.getMessage() + \"\\n\" + Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void mark(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (taskIndex \u003e taskCount || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: Invalid duke.Task Index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else if (tasks.get(taskIndex).isMarked()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: duke.Task is already completed!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                tasks.get(taskIndex).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                writeToFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(Ui.line + exception.getMessage() + \"\\n\" + Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void unMark(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            if (taskIndex \u003e taskCount || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: Invalid duke.Task Index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else if (!tasks.get(taskIndex).isMarked()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                throw new DukeException(\"Error: duke.Task is already marked as incomplete!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                tasks.get(taskIndex).unMark();","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                writeToFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(Ui.line + exception.getMessage() + \"\\n\" + Ui.line);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void addToList(Task task, int taskId) {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        int numTasks \u003d taskCount + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String response \u003d Ui.line + \"Got it! I\u0027ve added this task:\" + \"\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Mohammed-Faizzzz"},"content":"                + \"You now have \" + numTasks + \" task(s) in the list\" + \"\\n\" + Ui.line;","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        tasks.add(taskId, task);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        if (taskCount \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            taskCount++;","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        writeToFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(response);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void handleTodo(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String nameOfTask \u003d input.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        ToDos task \u003d new ToDos(nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        addToList(task, taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void handleDeadline(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String nameOfTask \u003d parts[0].trim().substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            LocalDate deadline \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            Deadlines task \u003d new Deadlines(nameOfTask, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addToList(task, taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(\"Invalid Date Format! Follow: YYYY-MM-DD\");","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void handleEvent(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String[] taskAndTime \u003d input.split(\"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String[] fromAndTo \u003d taskAndTime[1].split(\"/to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            LocalDate start \u003d LocalDate.parse(fromAndTo[0].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            LocalDate end \u003d LocalDate.parse(fromAndTo[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            String nameOfTask \u003d taskAndTime[0].trim().substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            Events task \u003d new Events(nameOfTask, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            addToList(task, taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Mohammed-Faizzzz"},"content":"            System.out.println(\"Invalid Date Format! Follow: YYYY-MM-DD\");","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":168}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public ToDos(String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void mark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as completed!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line() + \"Okay, I have marked this task as incomplete!\" + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(super.line());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String checkbox \u003d this.done ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return \"[T]\" + checkbox + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    private static final String name \u003d \"Bartholomew Hamish Montgomery\";","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    static final String line \u003d \"______________________________________________________________________________________\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void greet() {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String greeting \u003d line + \"I extend to you my utmost felicitations, User! I am \" + name + \".\" + \"\\n\" + \"What may I do for you?\" + \"\\n\" + line;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public void goodbye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        String goodbye \u003d line + \"Until we meet once more in the near future, I bid you farewell.\" + \"\\n\" + line;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String line() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return line;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"        return \"Error\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":22}},{"path":"src/main/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"todo go for a walk","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"unmark 0","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"unmark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"mark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"mark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"deadline CS2103T Quiz /by 2019-02-14","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"event project meeting /from 2019-02-14 /to 2019-02-15","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"hello","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"bye","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":12}},{"path":"src/main/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"Mohammed-Faizzzz"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Mohammed-Faizzzz"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Mohammed-Faizzzz"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    mkdir ../bin","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Mohammed-Faizzzz"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Mohammed-Faizzzz"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Mohammed-Faizzzz"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Mohammed-Faizzzz"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Mohammed-Faizzzz"},"content":"if ! javac -cp ../java/ -Xlint:none -d ../bin ../java/*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Mohammed-Faizzzz"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    exit 1","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Mohammed-Faizzzz"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Mohammed-Faizzzz"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Mohammed-Faizzzz"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Mohammed-Faizzzz"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Mohammed-Faizzzz"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Mohammed-Faizzzz"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Mohammed-Faizzzz"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    exit 0","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Mohammed-Faizzzz"},"content":"else","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Mohammed-Faizzzz"},"content":"    exit 1","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Mohammed-Faizzzz"},"content":"fi","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Mohammed-Faizzzz":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Mohammed-Faizzzz"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mohammed-Faizzzz":1,"-":20}}]
