[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"## Duke Project","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"\u003e Beware the stories you read or tell; subtly, at night, beneath the waters of consciousness, they are altering your world. - [Ben Okri](https://en.wikipedia.org/wiki/Ben_Okri)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"This project is","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"- **Text**-based","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"- *Easy* to use","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"This project helps you to:","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"1. Track tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"2. Stay on target","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"3. Practise programming","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":":+1:","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"Features:","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"\u003e If you Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"```java","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"public class Main {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thaddeusong":25,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2023-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"    implementation \u0027org.jetbrains:annotations:23.0.0\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-08-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-08-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"    mainClass.set(\"duke.duke.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-05"}],"authorContributionMap":{"thaddeusong":22,"-":41}},{"path":"src/main/java/duke/application/Application.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.application;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import duke.message.Message;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":" * The application that manages UI and the taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"public class Application extends javafx.application.Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"    private static final String name \u003d \"Iris\";","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"    private static final String filePath \u003d \"C:\\\\Users\\\\ortt2\\\\Documents\\\\ip\\\\src\\\\data\\\\tasks.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    private Storage storage \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"     * Shuts down application.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"    public void kill() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"        saveTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"        ScheduledExecutorService executor \u003d Executors.newScheduledThreadPool(1);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"        executor.schedule(() -\u003e Platform.runLater(ui::closeGui), 1, TimeUnit.SECONDS);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"     * Adds a task to the application\u0027s task list and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"     * Removes a task from the application\u0027s task list and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"        taskList.removeTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"     * Loads the task list from storage into the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If there\u0027s an issue with loading tasks from storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"    public void loadTaskList() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"        String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"        int currentLine \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"        while (!(line \u003d storage.getLine(currentLine)).equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"            taskList.addTask(Task.parse(line));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"            currentLine++;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"     * Saves the task list into storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"    public void saveTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        storage.clear();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"        for (int i \u003d 0; i \u003c getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"            storage.addLine(task.toSaveFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"     * Returns the number of tasks in the application\u0027s task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"        return taskList.getTaskCount();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"thaddeusong"},"content":"     * Retrieves a task from the application\u0027s task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"thaddeusong"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"thaddeusong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"thaddeusong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"thaddeusong"},"content":"        return taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"thaddeusong"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"thaddeusong"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"thaddeusong"},"content":"     * Retrieves a TaskList containing all the tasks that contain a substring.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"thaddeusong"},"content":"     * @param content The substring to search for.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"thaddeusong"},"content":"     * @return A TaskList containing matching Tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"thaddeusong"},"content":"    public TaskList findMatchingTasks(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"thaddeusong"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"thaddeusong"},"content":"        for (int i \u003d 0; i \u003c getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"thaddeusong"},"content":"            if (taskList.getTask(i).containsString(content)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"thaddeusong"},"content":"                matchingTasks.addTask(taskList.getTask(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"thaddeusong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"thaddeusong"},"content":"        return matchingTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"thaddeusong"},"content":"     * Initialize the components of the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"thaddeusong"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"thaddeusong"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"thaddeusong"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"thaddeusong"},"content":"     *                     primary stages.","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"thaddeusong"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"thaddeusong"},"content":"        this.ui \u003d new Ui(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"thaddeusong"},"content":"        ui.renderGui(primaryStage);","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"thaddeusong"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"thaddeusong"},"content":"            loadTaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"thaddeusong"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"thaddeusong"},"content":"            ui.showError(de);","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"thaddeusong"},"content":"        ui.showMessage(Message.onGreeting(name).fromDuke());","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"thaddeusong"},"content":"     * Handle a command.","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"thaddeusong"},"content":"     * @param command The command to execute.","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"thaddeusong"},"content":"    public void executeCommand(Command command) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"thaddeusong"},"content":"        ui.showMessage(command.execute(this).fromDuke());","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"thaddeusong":149}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.InvalidTaskIndexException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.NoCommandFoundException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.TaskIndexOutOfRangeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import duke.message.Message;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":" * Represents an abstract command that interacts with the application with some content string.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"    protected String content;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    protected Command(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"     * Creates a Command instance based on the given command name and content.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"     * @param content The content associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"     * @return A Command instance corresponding to the specified command name.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"     * @throws NoCommandFoundException If the provided command name is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"    public static Command of(String commandName, String content)","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"            throws NoCommandFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"        switch (commandName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"            return new Bye(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"            return new Todo(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"            return new Deadline(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"            return new Event(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"            return new Find(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"            return new List(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"            return new Mark(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"            return new Unmark(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"            return new Delete(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"            throw new NoCommandFoundException(commandName);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"     * Executes the command and interacts with the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"     * @param application The application instance with which the command interacts.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"     * @return A Message instance representing the result of executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"    public abstract Message execute(Application application) throws DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"class Bye extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"    protected Bye(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"        application.kill();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        return Message.onExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to add a To-do task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"class Todo extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"    protected Todo(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"        Task task \u003d Task.of(content, Task.TaskType.TODO);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"        application.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskAdd(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to add a Deadline task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"thaddeusong"},"content":"class Deadline extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"thaddeusong"},"content":"    protected Deadline(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"thaddeusong"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"thaddeusong"},"content":"        Task task \u003d Task.of(content, Task.TaskType.DEADLINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"thaddeusong"},"content":"        application.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskAdd(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to add an Event task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"thaddeusong"},"content":"class Event extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"thaddeusong"},"content":"    protected Event(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"thaddeusong"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"thaddeusong"},"content":"        Task task \u003d Task.of(content, Task.TaskType.EVENT);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"thaddeusong"},"content":"        application.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskAdd((task));","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to list tasks in the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"thaddeusong"},"content":"class List extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"thaddeusong"},"content":"    protected List(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"thaddeusong"},"content":"        return Message.accumulateList(Message.convertTasks(application.getTaskList()), \"\\n\").chainTo(","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"thaddeusong"},"content":"                Message.onList(application.getTaskList()), \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"thaddeusong"},"content":"class Mark extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"thaddeusong"},"content":"    protected Mark(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"thaddeusong"},"content":"            throws InvalidTaskIndexException, TaskIndexOutOfRangeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"thaddeusong"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"thaddeusong"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"thaddeusong"},"content":"            taskIndex \u003d Integer.parseInt(content) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"thaddeusong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTaskIndexException(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"thaddeusong"},"content":"            task \u003d application.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"thaddeusong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"thaddeusong"},"content":"            throw new TaskIndexOutOfRangeException(String.valueOf(taskIndex));","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"thaddeusong"},"content":"        task.setCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskComplete(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to unmark a completed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"thaddeusong"},"content":"class Unmark extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"thaddeusong"},"content":"    protected Unmark(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"thaddeusong"},"content":"            throws InvalidTaskIndexException, TaskIndexOutOfRangeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"thaddeusong"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"thaddeusong"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"thaddeusong"},"content":"            taskIndex \u003d Integer.parseInt(content) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"thaddeusong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTaskIndexException(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"thaddeusong"},"content":"            task \u003d application.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"thaddeusong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"thaddeusong"},"content":"            throw new TaskIndexOutOfRangeException(String.valueOf(taskIndex));","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"thaddeusong"},"content":"        task.setUncompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskUncomplete(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"thaddeusong"},"content":"class Find extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"thaddeusong"},"content":"    public Find(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application) {","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskFind().chainTo(","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"thaddeusong"},"content":"                Message.accumulateList(Message.convertTasks(application.findMatchingTasks(content)), \"\\n\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"thaddeusong"},"content":"                \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"thaddeusong"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"thaddeusong"},"content":"class Delete extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"thaddeusong"},"content":"    protected Delete(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"thaddeusong"},"content":"    public Message execute(Application application)","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"thaddeusong"},"content":"            throws InvalidTaskIndexException, TaskIndexOutOfRangeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"thaddeusong"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"thaddeusong"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"thaddeusong"},"content":"            taskIndex \u003d Integer.parseInt(content) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"thaddeusong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTaskIndexException(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"thaddeusong"},"content":"            task \u003d application.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"thaddeusong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"thaddeusong"},"content":"            throw new TaskIndexOutOfRangeException(String.valueOf(taskIndex));","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"thaddeusong"},"content":"        application.removeTask((task));","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"thaddeusong"},"content":"        return Message.onTaskDelete(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":232}},{"path":"src/main/java/duke/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * Entrypoint for the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        javafx.application.Application.launch(Application.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"thaddeusong":12}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An abstract class for custom exceptions specific to Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    protected DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"     * Generates an error message object based on the exception\u0027s content.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"     * @param content Additional content related to the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"     * @return An ErrorMessage object representing the error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"    public abstract ErrorMessage generateErrorMessage(String content);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":21}},{"path":"src/main/java/duke/exception/EmptyTaskDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a task description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class EmptyTaskDescException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public EmptyTaskDescException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(\"A task description cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":19}},{"path":"src/main/java/duke/exception/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when the file cannot be found.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"public class FileNotFoundException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"    public FileNotFoundException(String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(\"There is no file at \" + content);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":15}},{"path":"src/main/java/duke/exception/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a task format is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class InvalidTaskFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(content + \" isn\u0027t the right format for this kind of task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":17}},{"path":"src/main/java/duke/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a task index is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class InvalidTaskIndexException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public InvalidTaskIndexException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(content + \" isn\u0027t a number.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":17}},{"path":"src/main/java/duke/exception/InvalidTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a time format is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class InvalidTimeFormatException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public InvalidTimeFormatException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(content + \" isn\u0027t the right time format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"thaddeusong":17}},{"path":"src/main/java/duke/exception/NoCommandFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a no matching command is found.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class NoCommandFoundException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public NoCommandFoundException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(\"Sorry, I don\u0027t know what \" + content + \" means.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":18}},{"path":"src/main/java/duke/exception/TaskIndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.message.ErrorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * An exception that is thrown when a task index is out of range.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class TaskIndexOutOfRangeException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    public TaskIndexOutOfRangeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage generateErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"        return new ErrorMessage(content + 1 + \" is out of range of the task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":17}},{"path":"src/main/java/duke/message/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.message;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":" * Represents an error message that can be displayed to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":" * Extends the {@link Message} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"public class ErrorMessage extends Message {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"    public ErrorMessage(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"        super(content);","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":11}},{"path":"src/main/java/duke/message/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.message;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":" * Represent a message that can be displayed in the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"public class Message extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    private static final Image USER_IMAGE \u003d new Image(","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"            Message.class.getClassLoader().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"    private static final Image BOT_IMAGE \u003d new Image(","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"            Message.class.getClassLoader().getResourceAsStream(\"/images/Bot.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"    private final String content;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    private final Label label;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"    private ImageView image;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"     * Constructs a message with the given content.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"     * @param content The content of the message.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"    public Message(String content) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"        //Set label contents and formatting","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"        this.label \u003d new Label();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"        label.setText(content);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"        this.getChildren().addAll(this.label);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"     * Constructs a message with the given content and image.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"     * @param content The content of the message.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"     * @param image   The image associated with the message.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"    public Message(String content, Image image) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"        this(content);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"        this.image \u003d new ImageView();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"        //Set image contents and formatting","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"        this.image.setImage(image);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"        this.image.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"        this.image.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"        this.getChildren().addAll(this.image);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"     * Converts a list of tasks into a list of messages.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"     * @param taskList The list of tasks to convert.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"     * @return A list of messages representing the tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"    public static List\u003cMessage\u003e convertTasks(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"        List\u003cMessage\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"            messages.add((new Message((i + 1) + \". \" + taskList.getTask(i).toString())));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"        return messages;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"    public static Message onGreeting(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"Hello, I\u0027m \" + name + \".\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"    public static Message onExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"    public static Message onTaskAdd(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"added: \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"    public static Message onTaskComplete(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"    public static Message onTaskUncomplete(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"    public static Message onTaskDelete(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"I\u0027ve removed this task: \\n\" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"thaddeusong"},"content":"    public static Message onTaskFind() {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"Here are the matching tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"thaddeusong"},"content":"    public static Message onList(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"thaddeusong"},"content":"        return new Message(\"There are \" + tasks.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"thaddeusong"},"content":"    public Message chainTo(Message message, String splitString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"thaddeusong"},"content":"        return new Message(this.content + splitString + message.content);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"thaddeusong"},"content":"     * Accumulates a list of messages into a single message with specified splitting text.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"thaddeusong"},"content":"     * Messages in the list are concatenated together with the specified splitting text.","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"thaddeusong"},"content":"     * @param messages    The list of messages to accumulate.","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"thaddeusong"},"content":"     * @param splitString The text to be used for splitting the messages.","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"thaddeusong"},"content":"     * @return A message containing the accumulated text.","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"thaddeusong"},"content":"    public static Message accumulateList(List\u003c? extends Message\u003e messages, String splitString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"thaddeusong"},"content":"        Message chainedMessage \u003d new Message(\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"thaddeusong"},"content":"        if (messages.size() \u003e 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"thaddeusong"},"content":"            chainedMessage \u003d messages.get(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"thaddeusong"},"content":"            for (int i \u003d 1; i \u003c messages.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"thaddeusong"},"content":"                Message message \u003d messages.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"thaddeusong"},"content":"                chainedMessage \u003d chainedMessage.chainTo(message, splitString);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"thaddeusong"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"thaddeusong"},"content":"        return chainedMessage;","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"thaddeusong"},"content":"     * Flips the message, changing its alignment and layout.","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"thaddeusong"},"content":"     * This method creates a new message with the same content but with the image on the left side.","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"thaddeusong"},"content":"     * @return A flipped message.","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"thaddeusong"},"content":"    public Message flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"thaddeusong"},"content":"        Message flippedMessage \u003d new Message(this.content, this.image.getImage());","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"thaddeusong"},"content":"        flippedMessage.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"thaddeusong"},"content":"        flippedMessage.getChildren().clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"thaddeusong"},"content":"        flippedMessage.getChildren().addAll(flippedMessage.image, flippedMessage.label);","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"thaddeusong"},"content":"        return flippedMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"thaddeusong"},"content":"     * Formats the message such that it appears on the users side.","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"thaddeusong"},"content":"     * @return A message from the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"thaddeusong"},"content":"    public Message fromUser() {","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"thaddeusong"},"content":"        return new Message(this.content, USER_IMAGE);","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"thaddeusong"},"content":"     * Formats the message such that it appears on the bots side.","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"thaddeusong"},"content":"     * @return A message from the bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"thaddeusong"},"content":"    public Message fromDuke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"thaddeusong"},"content":"        return new Message(this.content, BOT_IMAGE).flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"thaddeusong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"thaddeusong"},"content":"        return content;","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thaddeusong":158}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import java.io.File;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":" * Represents a text-file based storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    private final File file;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"    private final BufferedWriter bufferedWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"     * Constructor for a Storage instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"     * @param filePath The file path to the text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"     * @throws FileNotFoundException If no file exists at the filePath.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    public Storage(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"            bufferedWriter \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"            throw new FileNotFoundException(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"     * Write a line into the text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"     * @param line The line to add.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"    public void addLine(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"            bufferedWriter.write(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"     * Get a line from the text file.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"     * @param index The index of the line.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"     * @return The line at the given index.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"    public String getLine(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"            int currentLine \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"                if (index \u003d\u003d currentLine) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"                    return line;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"                currentLine++;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"     * Clear the file of all text.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    public void clear() {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"        // Create a FileWriter with the given file path","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"            // Overwrite the file content with an empty string","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"            // Close the FileWriter","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":84}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.InvalidTaskFormatException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.InvalidTimeFormatException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":" * Represents a deadline task that has a name and deadline time.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":" * Extends the {@link Task} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"    private final LocalDateTime deadlineTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"     * @param task The information about the Deadline task.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException when formatting errors occur.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    public Deadline(String task) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"        super(task.split(\"/\", 2)[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"        String[] taskComponents \u003d task.split(\"/\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"        String[] timeComponents;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"            timeComponents \u003d taskComponents[1].split(\" \", 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"            if (timeComponents.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"                throw new InvalidTimeFormatException(taskComponents[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTaskFormatException(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"            deadlineTime \u003d LocalDateTime.of(LocalDate.parse(timeComponents[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"                    LocalTime.parse(timeComponents[2]));","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTimeFormatException(taskComponents[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"     * Returns a Deadline object parsed from the save format.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"     * @param savedTask The string representing the task in the save format.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException when the formatting is wrong.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"    public static Deadline parseSaveFormat(String savedTask) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"        String[] components \u003d savedTask.split(\"\\\\|\", 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"        Deadline task \u003d new Deadline(components[1] + \"/by \" + components[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"        if (components[2].equals(\"true\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"            task.setUncompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime.toLocalDate().toString() + \",\"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"                + deadlineTime.toLocalTime().toString() + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"     * Converts this Deadline into a save format string.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"     * @return A string representing this Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        return \"deadline:\" + deadlineTime.toLocalDate().toString() + \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"                + deadlineTime.toLocalTime().toString() + \"|\" + super.toSaveFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":77}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.InvalidTaskFormatException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.InvalidTimeFormatException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":" * Represents an event task that has a name, start time, and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":" * Extends the {@link Task} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"     * Constructor for an Event Task.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"     * @param task The information about the Event task.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException When formatting errors occur.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    public Event(String task) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"        super(task.split(\"/\", 3)[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"        String[] taskComponents \u003d task.split(\"/\", 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"        String[] startTimeComponents;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"        String[] endTimeComponents;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"            startTimeComponents \u003d taskComponents[1].split(\" \", 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"            endTimeComponents \u003d taskComponents[2].split(\" \", 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTaskFormatException(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"        if (startTimeComponents.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTimeFormatException(taskComponents[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"            this.startTime \u003d LocalDateTime.of(LocalDate.parse(startTimeComponents[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"                    LocalTime.parse(startTimeComponents[2]));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTimeFormatException(taskComponents[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"        if (endTimeComponents.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTimeFormatException(taskComponents[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"            this.endTime \u003d LocalDateTime.of(LocalDate.parse(endTimeComponents[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"                    LocalTime.parse(endTimeComponents[2]));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"            throw new InvalidTimeFormatException(taskComponents[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"     * Returns a Event object parsed from the save format.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"     * @param savedTask The string representing the task in the save format.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException when the formatting is wrong.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"    public static Event parseSaveFormat(String savedTask) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"        String[] components \u003d savedTask.split(\"\\\\|\", 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"        Event task \u003d new Event(components[2] + \"/from \" + components[0] + \"/to \" + components[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"        if (components[3].equals(\"true\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"            task.setUncompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"                + startTime.toLocalDate().toString() + \",\" + startTime.toLocalTime().toString() + \" to: \"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"                + endTime.toLocalDate().toString() + \",\" + endTime.toLocalTime().toString() + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"     * Converts this Event into a save format string.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"     * @return A string representing this Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"        return \"event:\"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"                + startTime.toLocalDate().toString() + \" \" + startTime.toLocalTime().toString() + \"|\"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"                + endTime.toLocalDate().toString() + \" \" + endTime.toLocalTime() + \"|\" + super.toSaveFormat();","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":90}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.EmptyTaskDescException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.NoCommandFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":" * Represents a task with a name and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    private final String name;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"     * Constructor for a Task instance.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"     * @param name The name/description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"     * @throws EmptyTaskDescException If the name is empty.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"    public Task(String name) throws EmptyTaskDescException {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"            throw new EmptyTaskDescException(\"Name cannot be blank.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"     * Parses a task from a line of text.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"     * @param line The line of text containing task information.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"     * @return A Task object parsed from the input line.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If there\u0027s an issue with parsing the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"    public static Task parse(String line)","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"        String[] components \u003d line.split(\":\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"        TaskType taskType \u003d components[0].equals(\"todo\") ? TaskType.TODO","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"                          : components[0].equals(\"deadline\") ? TaskType.DEADLINE","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"                          : TaskType.EVENT;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"        String content \u003d components[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"        case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"            return Todo.parseSaveFormat(content);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"            return Deadline.parseSaveFormat(content);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"        case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"            return Event.parseSaveFormat(content);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"            throw new NoCommandFoundException(taskType.name());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"    public boolean containsString(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"        return name.contains(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"     * The different types of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"        EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"     * Creates a Task object based on the provided content and task type.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"     * @param task The content of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"     * @return A Task object of the specified type.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If there\u0027s an issue with creating the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    public static Task of(String task, TaskType taskType)","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"        case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"            return new Todo(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"            return new Deadline(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"        case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"            return new Event(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"            throw new NoCommandFoundException(taskType.name());","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"        completed \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"    public void setUncompleted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"        completed \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"thaddeusong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"thaddeusong"},"content":"        return completed ? \"[X] \" + name : \"[ ] \" + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"thaddeusong"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"thaddeusong"},"content":"        return name + \"|\" + completed;","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thaddeusong":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    private final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"        taskList.remove(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"thaddeusong":26}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.EmptyTaskDescException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * Represents a to-do task that has a name.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" * Extends the {@link Task} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    public Todo(String task) throws EmptyTaskDescException {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"        super(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"     * Returns a To-do object parsed from the save format.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"     * @param savedTask The string representing the task in the save format.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"     * @return A new To-do object.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    public static Todo parseSaveFormat(String savedTask) throws EmptyTaskDescException {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"        String[] components \u003d savedTask.split(\"\\\\|\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"        Todo task \u003d new Todo(components[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"        if (components[1].equals(\"true\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"            task.setUncompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"        return \"todo:\" + super.toSaveFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":36}},{"path":"src/main/java/duke/ui/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":" * Parses user input and returns the corresponding command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"public class InputParser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"     * Parses an input line into a command.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"     * @param input The string input.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"     * @return A Command object representing the input.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If the input has formatting errors.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"        String[] inputComponents \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        String commandName \u003d inputComponents[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"        if (inputComponents.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"            content \u003d inputComponents[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"        return Command.of(commandName, content);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"thaddeusong":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"import duke.message.Message;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":" * Handles user interactions, input parsing, and displaying messages.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"public class Ui {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"thaddeusong"},"content":"    private static final double GUI_WIDTH \u003d 800.0;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"thaddeusong"},"content":"    private static final double GUI_HEIGHT \u003d 600.0;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"thaddeusong"},"content":"    private final InputParser parser \u003d new InputParser();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"thaddeusong"},"content":"    private final Application application;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"thaddeusong"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"thaddeusong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"thaddeusong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"thaddeusong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"thaddeusong"},"content":"    //GUI Window dimensions","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"thaddeusong"},"content":"     * Constructor for this class.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"thaddeusong"},"content":"     * @param application The application that interfaces with this UI.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"thaddeusong"},"content":"    public Ui(Application application) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"thaddeusong"},"content":"        this.application \u003d application;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"thaddeusong"},"content":"     * Parses the next line of user input into a Command object.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"thaddeusong"},"content":"     * @return A Command object corresponding to the parsed user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"thaddeusong"},"content":"     * @throws DukeException If there\u0027s an issue with parsing the input or creating the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"thaddeusong"},"content":"    public Command parseLine(String line) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"thaddeusong"},"content":"        return parser.parseInput(line);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"thaddeusong"},"content":"     * Displays the provided message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"thaddeusong"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"thaddeusong"},"content":"    public void showMessage(Message message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"thaddeusong"},"content":"        dialogContainer.getChildren().addAll(message);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"thaddeusong"},"content":"     * Displays an error message generated from the provided DukeException.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"thaddeusong"},"content":"     * @param e The DukeException that triggered the error.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"thaddeusong"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"thaddeusong"},"content":"        dialogContainer.getChildren().addAll(e.generateErrorMessage(e.getMessage()).fromDuke());","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"thaddeusong"},"content":"     * Render the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"thaddeusong"},"content":"     * @param stage The primary stage for the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"thaddeusong"},"content":"    public void renderGui(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"thaddeusong"},"content":"        primaryStage \u003d stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"thaddeusong"},"content":"        //Init text pane","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"thaddeusong"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setPrefSize(GUI_WIDTH - 15.0, GUI_HEIGHT - 65.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"thaddeusong"},"content":"        //Init dialog container","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"thaddeusong"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"thaddeusong"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"thaddeusong"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"thaddeusong"},"content":"        //Init text input","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"thaddeusong"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"thaddeusong"},"content":"        userInput.setPrefWidth(GUI_WIDTH - 75.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"thaddeusong"},"content":"        //Init send button","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"thaddeusong"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"thaddeusong"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"thaddeusong"},"content":"        //Handle user events","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"thaddeusong"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"thaddeusong"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"thaddeusong"},"content":"        //Add nodes to main layout","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"thaddeusong"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"thaddeusong"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"thaddeusong"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"thaddeusong"},"content":"        //Update node dimensions if window is resized","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"thaddeusong"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"thaddeusong"},"content":"        stage.heightProperty().addListener((observable) -\u003e scrollPane.setPrefHeight(stage.getHeight() - 65.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"thaddeusong"},"content":"        stage.widthProperty().addListener((observable) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"thaddeusong"},"content":"            scrollPane.setPrefWidth(stage.getWidth() - 15.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"thaddeusong"},"content":"            userInput.setPrefWidth(stage.getWidth() - 75.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"thaddeusong"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"thaddeusong"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"thaddeusong"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"thaddeusong"},"content":"        stage.setOnCloseRequest(event -\u003e application.kill());","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"thaddeusong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"thaddeusong"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"thaddeusong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"thaddeusong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"thaddeusong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"thaddeusong"},"content":"            dialogContainer.getChildren().addAll(new Message(userInput.getText()).fromUser());","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"thaddeusong"},"content":"            application.executeCommand(parseLine(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"thaddeusong"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"thaddeusong"},"content":"            showError(de);","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"thaddeusong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"thaddeusong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"thaddeusong"},"content":"    public void closeGui() {","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"thaddeusong"},"content":"        primaryStage.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"thaddeusong":131}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    public void testDeadlineConstructor() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Deadline(\"a/by 2020-02-10 10:15\").toString(), \"[D][ ] a (by: 2020-02-10,10:15)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    public void testDeadlineToSaveFormat() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Deadline(\"a/by 2020-02-10 10:15\").toSaveFormat(), \"deadline:2020-02-10,10:15|a|false\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"thaddeusong":19}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    public void testEventConstructor() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Event(\"a/from 2020-02-10 10:15/to 2020-02-10 10:20\").toString(), \"[E][ ] a (from: 2020-02-10,10:15 to: 2020-02-10,10:20)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    public void testEventToSaveFormat() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Event(\"a/from 2020-02-10 10:15/to 2020-02-10 10:20\").toSaveFormat(), \"event:2020-02-10 10:15|2020-02-10 10:20|a|false\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"thaddeusong":19}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"import duke.exception.EmptyTaskDescException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"    public void testTodoConstructor() throws EmptyTaskDescException {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Todo(\"a\").toString(), \"[T][ ] a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"thaddeusong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"thaddeusong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"    public void testTodoToSaveFormat() throws EmptyTaskDescException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"        assertEquals(new Todo(\"a\").toSaveFormat(), \"todo:a|false\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"thaddeusong":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thaddeusong"},"content":"hello","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"thaddeusong"},"content":"todo a","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thaddeusong"},"content":"deadline b / by jun 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thaddeusong"},"content":"event c / from jun 1 / to jun 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thaddeusong"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"thaddeusong"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"thaddeusong"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thaddeusong"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thaddeusong"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thaddeusong":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"thaddeusong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"thaddeusong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"thaddeusong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\DukeException\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thaddeusong":3,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"thaddeusong"},"content":"if ! (javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"thaddeusong"},"content":"      javac  -cp ..\\src\\main\\java\\Duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"thaddeusong"},"content":"      javac  -cp ..\\src\\main\\java\\DukeException -Xlint:none -d ..\\bin ..\\src\\main\\java\\DukeException\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"thaddeusong"},"content":"      javac  -cp ..\\src\\main\\java\\Task -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task\\*.java)","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thaddeusong":4,"-":37}}]
