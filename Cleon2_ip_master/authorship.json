[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":6,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"T | 0 | chicken rice | ","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"D | 0 | nasi lemak | 2023-09-22T09:00","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"E | 0 | rotisserie chicken | 2021-03-22T09:00--2023-04-23T12:00","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Cleon2":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":" * Represents the main application class for Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    private DukeList itemList;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Duke instance with the given file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"     * @param filePath The path to the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"            this.itemList \u003d new DukeList(this.storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"            this.itemList \u003d new DukeList();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"     * The main method that initializes and runs the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        // Initializing Scanner","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"                c.execute(itemList, ui, storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"            } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Cleon2":66,"-":3}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    private LocalDateTime till;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    private String type;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to add a ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"        this.type \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to add a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    public AddCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        this.type \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"        this.till \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to add an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"     * @param from        The starting time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"     * @param to          The ending time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"    public AddCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"        this.type \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"        this.till \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"        switch (this.type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"            task \u003d new ToDo(this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"            task \u003d new Deadline(this.description, this.till);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"            task \u003d new Event(this.description, this.from, this.till);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Invalid task type!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"        ui.acknowledgeAdd(tasks.getSize(), task);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"        storage.updateStorage(tasks.getArrayList());","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":98}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    public abstract void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @return True if the command is an exit command, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":29}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to delete a task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException If the specified index is out of bounds.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"        if (tasks.getSize() \u003c index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The task you are trying to delete is out of bounds!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        ui.acknowledgeDelete(index, tasks.getTask(index - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"        storage.updateStorage(tasks.getArrayList());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Cleon2":51}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"        ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @return True, as this command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":33}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":" * Represents a command to find a task","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"    private String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to find a task","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filterByKeyword(this.keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        ui.acknowledgeFind(filteredTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"        storage.updateStorage(tasks.getArrayList());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Cleon2":39}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" * Represents a command to handle incorrect or invalid user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    private String errMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to handle incorrect input.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param errMessage The error message to be thrown.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    public IncorrectCommand(String errMessage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        this.errMessage \u003d errMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to handle incorrect input by throwing a DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException Always thrown with the error message provided during construction.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"        throw new DukeException(this.errMessage);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":45}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":34}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":" * Represents a command to mark or unmark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * Constructs a command to mark or unmark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     * @param index The index of the task to be marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"     * @param type  The type of action: \"mark\" or \"unmark\".","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    public MarkCommand(int index, String type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d type.equals(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * Executes the command to mark or unmark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException If the specified index is out of bounds or the task is already marked/unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    public void execute(DukeList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        if (tasks.getSize() \u003c index || tasks.getTask(index - 1).isDone() \u003d\u003d isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The task you are trying to mark is either out of bound, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"                    + \"or has already been marked/unmarked\");","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"            tasks.setTaskAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"            ui.acknowledgeMark(index, tasks.getTask(index - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"            tasks.setTaskAsUndone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"            ui.acknowledgeUnmark(index, tasks.getTask(index - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        storage.updateStorage(tasks.getArrayList());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":61}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":" * Represents a custom exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"     * @param message The error message to be associated with the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     * Overrides the getMessage() method to prepend \"OOPS! \" to the error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"        return \"OOPS! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Cleon2":26}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":" * Represents a parser to convert user input into executable commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"//Solution below inspired by Shishir Bychapur","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * Parses the user input and converts it into an executable command.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     * @return A Command object based on the parsed input","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        switch (split[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateExit(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateList(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateMark(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateTodo(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateDeadline(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateEvent(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateDelete(split);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"            c \u003d validateFind(split);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"            c \u003d new IncorrectCommand(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"        return c;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs a Todo command.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"     * @return A TodoCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    public static Command validateTodo(String[] split) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"        if (split.length \u003d\u003d 1 || split[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"        return new AddCommand(split[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs a Deadline command.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"     * @return A DeadlineCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"    public static Command validateDeadline(String[] split) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        if (split.length \u003d\u003d 1 || split[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"        if (!split[1].contains(\" /by \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please indicate a deadline using /by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"        String[] task \u003d split[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"        if (task.length \u003c\u003d 1 || task[1].isBlank() || task[0].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid task and/or deadline.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"            return new AddCommand(task[0], LocalDateTime.parse(task[1], formatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter the date \u0026 time in DD/MM/YY HHMM format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs an Event command.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"     * @return An EventCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"    public static Command validateEvent(String[] split) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"        if (!split[1].contains(\" /from \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please indicate a start datetime using /from.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"        String[] task \u003d split[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"        if (task.length \u003c\u003d 1 || task[1].isBlank() || task[0].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Cleon2"},"content":"        if (!task[1].contains(\" /to \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please indicate an end datetime using /to.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Cleon2"},"content":"        String[] to \u003d task[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"Cleon2"},"content":"        if (to.length \u003c\u003d 1 || to[1].isBlank() || to[0].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter valid to \u0026 from dates\");","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Cleon2"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Cleon2"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(to[0], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Cleon2"},"content":"            LocalDateTime till \u003d LocalDateTime.parse(to[1], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Cleon2"},"content":"            if (from.isAfter(till) || from.isEqual(till)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Cleon2"},"content":"                return new IncorrectCommand(\"Please ensure that the start date is not equal to\"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"Cleon2"},"content":"                        + \" or later than the end date\");","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Cleon2"},"content":"            return new AddCommand(task[0], from, till);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"Cleon2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter the date \u0026 time in DD/MM/YY HHMM format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs an Exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"Cleon2"},"content":"     * @return An ExitCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Cleon2"},"content":"    private static Command validateFind(String[] split) {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Cleon2"},"content":"        if (split.length \u003d\u003d 1 || split[1].isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid find command.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Cleon2"},"content":"        return new FindCommand(split[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Cleon2"},"content":"    private static Command validateExit(String[] split) {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Cleon2"},"content":"        if (split.length !\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"The bye command should not have \"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"Cleon2"},"content":"                    + \"any additional words appended to it\");","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"Cleon2"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs a List command.","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Cleon2"},"content":"     * @return A ListCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"Cleon2"},"content":"    public static Command validateList(String[] split) {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Cleon2"},"content":"        if (split.length !\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"The list command should not have any \"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"Cleon2"},"content":"                    + \"additional words appended to it\");","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"Cleon2"},"content":"        return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs a Mark command.","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"Cleon2"},"content":"     * @return A MarkCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"Cleon2"},"content":"    public static Command validateMark(String[] split) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"Cleon2"},"content":"        if (split.length !\u003d 2 || split[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid mark command!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(split[1].charAt(0))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"The second argument must be a digit!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"Cleon2"},"content":"        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"Cleon2"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a number greater than 0!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"Cleon2"},"content":"        return new MarkCommand(index, split[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"Cleon2"},"content":"     * Validates and constructs a Delete command.","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"Cleon2"},"content":"     * @param split The user input split into parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"Cleon2"},"content":"     * @return A DeleteCommand object if input is valid, else an IncorrectCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"Cleon2"},"content":"    public static Command validateDelete(String[] split) {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"Cleon2"},"content":"        if (split.length !\u003d 2 || split[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a valid delete command!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(split[1].charAt(0))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"The second argument must be a digit!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"Cleon2"},"content":"        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"Cleon2"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"Cleon2"},"content":"            return new IncorrectCommand(\"Please enter a number greater than 0!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"Cleon2"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":222}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":" * Represents the storage manager for saving and loading tasks to/from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    private File file;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Storage instance and initializes the file based on the given path.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @param path The path to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"            String[] splitted \u003d path.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"            File directory \u003d new File(splitted[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"            File savedData \u003d new File(path);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"            if (!savedData.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"                savedData.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"            this.file \u003d savedData;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"     * @return An ArrayList of Task objects loaded from the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException If an error occurs during reading or parsing the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"                String current \u003d sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"                String[] splitted \u003d current.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"                switch (splitted[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"                case \"T\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"                    Task toDo \u003d new ToDo(splitted[2], splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"                    savedTasks.add(toDo);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"                case \"D\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"                    Task deadline \u003d new Deadline(splitted[2], formatInputDate(splitted[3]), splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"                    savedTasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"                case \"E\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"                    String[] timeline \u003d splitted[3].split(\"--\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"                    LocalDateTime from \u003d formatInputDate(timeline[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"                    LocalDateTime to \u003d formatInputDate(timeline[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"                    Task event \u003d new Event(splitted[2], from, to, splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"                    savedTasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"                default: {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"                    throw new DukeException(\"Error reading data from storage.\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"                            + \"Creating a task list from scratch.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"            return savedTasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"        return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"     * Updates the storage file with the given list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"    public void updateStorage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"                writer.write(task.toFile() + System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"     * Formats an input date string into a LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"     * @param date The input date string.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"     * @return A LocalDateTime object representing the formatted date.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"    public LocalDateTime formatInputDate(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"        return localDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Cleon2":121}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Deadline task with the given description, deadline, and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"     * Converts the Deadline task to its string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.localDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"     * Converts the Deadline task to its file format representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"     * @return The file format representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"        return \"D\" + super.toFile() + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":52}},{"path":"src/main/java/duke/tasks/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":" * Represents a tasklist","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"public class DukeList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    private ArrayList\u003cTask\u003e dukeList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"        dukeList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public DukeList(ArrayList\u003cTask\u003e itemList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        dukeList \u003d itemList;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"     * This method simply prints out an acknowledgemnt that a task has been added","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     * @param newTask takes in a new task","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"        this.dukeList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"     * This method deletes a task from the tasklist","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        dukeList.remove(taskNum - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     * Returns a filtered arraylist based on the keyword","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     * @param keyword keyword associated with the task","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"    public ArrayList\u003cTask\u003e filterByKeyword(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"        for (Task task : dukeList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"            if (description.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"        return filteredTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     * Sets task as done","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsDone(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"     * Sets task as undone","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsUndone(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"     * returns size of list","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"     * @return size of list","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"        return dukeList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"        return this.dukeList;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"        return dukeList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":87}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":" * Represents a task that starts and ends at specific date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * Constructs an Event task with the given description, start time, end time, and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"     * Converts the Event task to its string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.localDateTimeToString(from) + \" to: \"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"                + super.localDateTimeToString(to) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"     * Converts the Event task to its file format representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"     * @return The file format representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"        return \"E\" + super.toFile() + this.from + \"--\" + this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":59}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" * Represents a single task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Task instance with the given description and sets completion status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * Constructs a Task instance with the given description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"     * Converts the task to its string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     * Converts the task to its file format representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     * @return The file format representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"        return \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \";","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"    public void setAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"     * Converts a LocalDateTime object to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"     * @param dateTime The LocalDateTime object to be converted.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"     * @return The formatted string representation of the date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"    public String localDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"        String dayOfMonth \u003d dateTime.getDayOfMonth() + getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"        String month \u003d dateTime.getMonth().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"        month \u003d month.substring(0, 1).toUpperCase() + month.substring(1).toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"        String year \u003d String.valueOf(dateTime.getYear());","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"        String hour \u003d dateTime.format(DateTimeFormatter.ofPattern(\"h\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        String minute \u003d dateTime.format(DateTimeFormatter.ofPattern(\"mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"        String amPm \u003d dateTime.format(DateTimeFormatter.ofPattern(\"a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"        return String.format(\"%s of %s %s, %s:%s%s\", dayOfMonth, month, year, hour, minute, amPm);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"     * Returns the suffix for the day of the month.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"     * @param n The day of the month.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"     * @return The suffix (\"st\", \"nd\", \"rd\", or \"th\").","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"    public String getDayOfMonthSuffix(final int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"            return \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"        switch (n % 10) {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"        case 1:","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"            return \"st\";","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"        case 2:","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"            return \"nd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"        case 3:","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"            return \"rd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"            return \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Cleon2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Cleon2"},"content":"        return description;","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Cleon2":127}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":" * Represents a to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"     * Constructs a ToDo instance with the given description and sets completion status to false.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"     * Constructs a ToDo instance with the given description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"     * @param isDone The completion status of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"     * Converts the to-do task to its string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"     * Converts the to-do task to its file format representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     * @return The file format representation of the to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        return \"T\" + super.toFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":" * The Ui class handles interactions with the user, including displaying messages and receiving input.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    private Scanner input;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     * Initializes a new Ui object with a Scanner for user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * @return The user\u0027s input command as a String.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"        return this.input.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * Displays a line separator for a cleaner output.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"_______________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"     * Displays the initial greeting message when the application starts.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"        // Introduction","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"                + \" Hello! I\u0027m Cleon\\n\" + \" What can I do for you?\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"    public void showList(DukeList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"        int len \u003d tasks.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"            System.out.println(num + \". \" + currTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"     * Displays an error message when there is an issue loading past data.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Issues loading past data. Creating a new tasklist from scratch\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"     * Displays an error message with a custom error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"     * @param errMessage The error message to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"    public void showError(String errMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"        System.out.println(errMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"     * Acknowledges the addition of a task to the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"     * @param size The current size of the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"    public void acknowledgeAdd(int size, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Added the following task to the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"        System.out.println(size + \". \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"You currently have \" + size + \" tasks in your list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"     * Acknowledges the deletion of a task from the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"     * @param index The index of the task that was deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"    public void acknowledgeDelete(int index, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"        System.out.println(index + \". \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"     * Acknowledges the result of a keyword-based task search.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"     * @param filteredTasks The list of tasks matching the search criteria.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"    public void acknowledgeFind(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"            System.out.println(\"No tasks with the given keyword can be found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"            int len \u003d filteredTasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"                Task currTask \u003d filteredTasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"                System.out.println(num + \". \" + currTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"Cleon2"},"content":"     * Acknowledges the marking of a task as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"Cleon2"},"content":"     * @param index The index of the task that was marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"Cleon2"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"Cleon2"},"content":"    public void acknowledgeMark(int index, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"Cleon2"},"content":"     * Acknowledges the marking of a task as not done yet.","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"Cleon2"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"Cleon2"},"content":"     * @param index The index of the task that was marked as not done yet.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"Cleon2"},"content":"     * @param task The task that was marked as not done yet.","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"Cleon2"},"content":"    public void acknowledgeUnmark(int index, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"Cleon2"},"content":"     * Displays a farewell message when the application is exiting.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"Cleon2"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Cleon2"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":160}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import duke.tasks.DukeList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    void list_wrongInput_incorrectCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        Command com \u003d Parser.parse(\"list  \");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        assertTrue(com instanceof IncorrectCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    void list_correctInput_listCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"        Command com \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"        assertTrue(com instanceof ListCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":27}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    void file_absentFile_createsNewFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        String path \u003d \"data/test.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    void file_absentFolder_createNewFolder() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"        String path \u003d \"testdata/test.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"        File folder \u003d new File(\"testdata\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"        assertFalse(folder.isDirectory());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"        assertTrue(folder.exists());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Cleon2":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Cleon2":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":1,"-":20}}]
