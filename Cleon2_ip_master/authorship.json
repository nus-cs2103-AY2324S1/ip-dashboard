[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"import java.sql.SQLOutput;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" * Duke class serves as the chatbot","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"            Duke bot \u003d new Duke();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"            //Introduction","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"            bot.greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"            //Interact","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"            bot.interact();","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"     * This method prints out the initial greeting","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    public void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"            //Introduction","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"                    \" Hello! I\u0027m Cleon\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"                    \" What can I do for you?\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"     * This method initialises the beginning of the bots interaction with the user. It analyses the users input","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * and performs the relevant action correspondingly","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    public void interact() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        //Initialising Scanner","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        boolean notEnd \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        //Initialising array to store list items","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"        DukeList ItemList \u003d new DukeList();","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"        while (notEnd) {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"                    notEnd \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"                    ItemList.displayList();","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"                    String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"                    if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"                        this.mark(splitted, ItemList);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"                        this.unmark(splitted, ItemList);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"                        this.deleteTask(splitted, ItemList);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"                        this.toDo(splitted, ItemList);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"                        this.deadline(splitted, ItemList);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"                        this.event(splitted, ItemList);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"                        throw new DukeException(\" I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"                System.out.println(de.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"     * This method marks a task as done and handles the relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"    public void mark(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"        ItemList.setTaskAsDone(taskNum);","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"     * This method unmarks and handles the relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"    public void unmark(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to unmark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Cleon2"},"content":"        ItemList.setTaskAsUndone(taskNum);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"Cleon2"},"content":"     * This method deletes a specific task and handles the relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"Cleon2"},"content":"    public void deleteTask(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to delete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to delete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"Cleon2"},"content":"        ItemList.deleteTask(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"Cleon2"},"content":"     * This method adds a to-do task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"Cleon2"},"content":"    public void toDo(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Cleon2"},"content":"        //add items to the array","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Cleon2"},"content":"        ItemList.addToDo(splitted[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"Cleon2"},"content":"     * This method adds a deadline task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"Cleon2"},"content":"    public void deadline(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"Cleon2"},"content":"        if (!splitted[1].contains(\"/by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate a specific deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"Cleon2"},"content":"        String[] deadline \u003d splitted[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"Cleon2"},"content":"        String trimmedDeadline \u003d deadline[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Cleon2"},"content":"        if (trimmedDeadline.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate a specific deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"Cleon2"},"content":"        ItemList.addDeadline(deadline[0], deadline[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"Cleon2"},"content":"     * This method adds an event task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":203,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"Cleon2"},"content":"    public void event(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"Cleon2"},"content":"        if (!splitted[1].contains(\"/from\") || !splitted[1].contains(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate either/both a from and to datetime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"Cleon2"},"content":"        String[] from \u003d splitted[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"Cleon2"},"content":"        String[] to \u003d from[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"Cleon2"},"content":"        String trimmedFrom\u003d to[0].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"Cleon2"},"content":"        String trimmedTo \u003d to[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"Cleon2"},"content":"        if (trimmedFrom.equals(\"\") || trimmedTo.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate either/both a from and to datetime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"Cleon2"},"content":"        ItemList.addEvent(from[0], to[0], to[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Cleon2":226,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        return \"OOPS! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Cleon2":11}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":" * Represents a tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"public class DukeList {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    private ArrayList\u003cTask\u003e dukeList;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"        dukeList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * This method simply prints out an acknowledgemnt that a task has been added","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * @param newTask takes in a new task","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public void printAddList(Task newTask) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * This method adds a to-do task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"        ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        printAddList(newToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"     * This method adds a deadline task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"    public void addDeadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"        printAddList(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"     * This method adds an event task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"    public void addEvent(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"        printAddList(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"     * This method deletes a task from the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"        Task removedItem \u003d dukeList.remove(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t \" + removedItem.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Now you have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"     * Displays the current list","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"    public void displayList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"        int len \u003d dukeList.size();","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"            Task currTask \u003d dukeList.get(i);","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"            System.out.println(num + \". \" + currTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"     * Sets task as done","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsDone(int taskNum) {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"     * Sets task as undone","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsUndone(int taskNum) {","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"     * returns size of list","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"     * @return size of list","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"        return dukeList.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Cleon2":106}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":" * Represents a single task","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"     * Returns the status icon","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"     * @return returns a string representation of the status icon","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    public void setAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Cleon2":32}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Cleon2":2}}]
