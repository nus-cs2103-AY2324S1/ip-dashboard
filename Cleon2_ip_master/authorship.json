[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"T | 0 | eat breakfast | ","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"E | 0 | host a party  | 2023-05-22T09:00--2023-05-22T12:00","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Cleon2":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.localDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"        return \"D\" + super.toFile() + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":" * duke.Duke class serves as the chatbot","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    private DukeList ItemList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        //Initialising array to store list items","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"            this.ItemList \u003d new DukeList(this.storage.load());","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"            this.ItemList \u003d new DukeList();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"           new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"     * This method initialises the beginning of the bots interaction with the user. It analyses the users input","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     * and performs the relevant action correspondingly","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        //Initialising Scanner","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        ui.greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        parser.parse(storage, ItemList, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Cleon2":42,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"        return \"OOPS! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Cleon2":13}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" * Represents a tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"public class DukeList {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    private ArrayList\u003cTask\u003e dukeList;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"        dukeList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public DukeList(ArrayList\u003cTask\u003e ItemList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        dukeList \u003d ItemList;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"     * This method simply prints out an acknowledgemnt that a task has been added","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * @param newTask takes in a new task","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    public void printAddList(Task newTask) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"     * This method adds a to-do task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"        ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"        printAddList(newToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"     * This method adds a deadline task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"    public void addDeadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        printAddList(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"     * This method adds an event task to the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"    public void addEvent(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"        dukeList.add(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"        printAddList(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"     * This method deletes a task from the tasklist","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"        Task removedItem \u003d dukeList.remove(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t \" + removedItem.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Now you have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"     * Displays the current list","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"    public void displayList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"        int len \u003d dukeList.size();","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"            Task currTask \u003d dukeList.get(i);","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"            System.out.println(num + \". \" + currTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"     * Sets task as done","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsDone(int taskNum) {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"     * Sets task as undone","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"     * @param taskNum index of task","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"    public void setTaskAsUndone(int taskNum) {","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"        Task chosenTask \u003d dukeList.get(taskNum - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"        chosenTask.setAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"     * returns size of list","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"     * @return size of list","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"        return dukeList.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"        return this.dukeList;","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Cleon2":119}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.localDateTimeToString(from) + \" to: \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"                super.localDateTimeToString(to) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"        return \"E\" + super.toFile() +   this.from + \"--\" + this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"    Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    boolean notEnd;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    public Parser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        notEnd \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public void parse(Storage storage, DukeList ItemList, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        while (notEnd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"                    notEnd \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"                    ui.exit();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"                    ItemList.displayList();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"                    String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"                    if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"                        this.mark(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"                        this.unmark(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"                        this.deleteTask(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"                        this.toDo(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"                        this.deadline(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"                        this.event(splitted, ItemList);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"                        storage.updateStorage(ItemList.getArrayList());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"                        throw new DukeException(\" I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"                System.out.println(de.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"     * This method marks a task as done and handles the relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"    public void mark(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"duke.Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"        ItemList.setTaskAsDone(taskNum);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"     * This method unmarks and handles the relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"    public void unmark(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to mark off\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"duke.Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Cleon2"},"content":"        ItemList.setTaskAsUndone(taskNum);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Cleon2"},"content":"     * This method deletes a specific task and handles the relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Cleon2"},"content":"    public void deleteTask(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"Please indicate which task you wish to delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Cleon2"},"content":"        if (!Character.isDigit(splitted[1].charAt(0))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The second argument must be a digit\");","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Cleon2"},"content":"        if (Integer.parseInt(splitted[1]) \u003e ItemList.getSize() || Integer.parseInt(splitted[1]) \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"duke.Task number lies beyond the range of the current task list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Cleon2"},"content":"        int taskNum \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Cleon2"},"content":"        ItemList.deleteTask(taskNum);","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Cleon2"},"content":"     * This method adds a to-do task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Cleon2"},"content":"    public void toDo(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Cleon2"},"content":"        //add items to the array","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Cleon2"},"content":"        ItemList.addToDo(splitted[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Cleon2"},"content":"     * This method adds a deadline task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Cleon2"},"content":"    public void deadline(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"Cleon2"},"content":"        if (!splitted[1].contains(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate a specific deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Cleon2"},"content":"        String[] deadline \u003d splitted[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Cleon2"},"content":"        String trimmedDeadline \u003d deadline[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"Cleon2"},"content":"        if (trimmedDeadline.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate a specific deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"Cleon2"},"content":"            LocalDateTime by \u003d formatInputDate(deadline[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"Cleon2"},"content":"            System.out.println(by);","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"Cleon2"},"content":"            ItemList.addDeadline(deadline[0], by);","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"Cleon2"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"Cleon2"},"content":"            System.out.println(\"Your date is not in the dd/mm/yy format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"Cleon2"},"content":"     * This method adds an event task to the task list and handles relevant exceptions","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"Cleon2"},"content":"     * @param splitted Takes in the input that has been split by whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"Cleon2"},"content":"     * @param ItemList  Takes in the tasklist that has been initialised","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"Cleon2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"Cleon2"},"content":"    public void event(String[] splitted, DukeList ItemList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"Cleon2"},"content":"        if (splitted.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"Cleon2"},"content":"        String trimmed \u003d splitted[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"Cleon2"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"Cleon2"},"content":"        if (!splitted[1].contains(\"/from\") || !splitted[1].contains(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate either/both a from and to datetime\");","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"Cleon2"},"content":"        String[] from \u003d splitted[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"Cleon2"},"content":"        String[] to \u003d from[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"Cleon2"},"content":"        String trimmedFrom\u003d to[0].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"Cleon2"},"content":"        String trimmedTo \u003d to[1].replaceAll(\"\\\\s+\",\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"Cleon2"},"content":"        if (trimmedFrom.equals(\"\") || trimmedTo.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"Cleon2"},"content":"            throw new DukeException(\"You forgot to indicate either/both a from and to datetime\");","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"Cleon2"},"content":"            LocalDateTime start \u003d formatInputDate(to[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"Cleon2"},"content":"            LocalDateTime end \u003d formatInputDate(to[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"Cleon2"},"content":"            ItemList.addEvent(from[0], start, end);","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"Cleon2"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"Cleon2"},"content":"            System.out.println(\"Your date is not in the d/MM/yyyy HHmm format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"Cleon2"},"content":"    public LocalDateTime formatInputDate(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"Cleon2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"Cleon2"},"content":"        return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Cleon2":230}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    private File file;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"            String[] splitted \u003d path.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"            File directory \u003d new File(splitted[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"            File savedData \u003d new File(path);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"            if (!savedData.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"                savedData.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"            this.file \u003d savedData;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"                String current \u003d sc.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"                String[] splitted \u003d current.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"                switch (splitted[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"                    case \"T\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"                        Task toDo \u003d new ToDo(splitted[2], splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"                        savedTasks.add(toDo);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"                    case \"D\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"                        Task deadline \u003d new Deadline(splitted[2], formatInputDate(splitted[3]), splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"                        savedTasks.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"                    case \"E\": {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"                        String[] timeline \u003d splitted[3].split(\"--\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"                        LocalDateTime from \u003d formatInputDate(timeline[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"                        LocalDateTime to \u003d formatInputDate(timeline[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"                        Task event \u003d new Event(splitted[2], from, to, splitted[1].equals(\"1\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"                        savedTasks.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"                        break;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"                    default: {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"                        throw new DukeException(\"Error reading data from storage.\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"                                + \"Creating a task list from scratch.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"            return savedTasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"        return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    public void updateStorage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Cleon2"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Cleon2"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Cleon2"},"content":"                writer.write(task.toFile() + System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Cleon2"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Cleon2"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Cleon2"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Cleon2"},"content":"            System.out.println(err);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Cleon2"},"content":"    public LocalDateTime formatInputDate(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Cleon2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Cleon2"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Cleon2"},"content":"        return localDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Cleon2":90}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":" * Represents a single task","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Cleon2"},"content":"     * Returns the status icon","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Cleon2"},"content":"     * @return returns a string representation of the status icon","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Cleon2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Cleon2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Cleon2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Cleon2"},"content":"        return \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \";","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Cleon2"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Cleon2"},"content":"    public void setAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Cleon2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Cleon2"},"content":"    public  String localDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Cleon2"},"content":"        String dayOfMonth \u003d dateTime.getDayOfMonth() + getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Cleon2"},"content":"        String month \u003d dateTime.getMonth().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Cleon2"},"content":"        month \u003d month.substring(0,1).toUpperCase() + month.substring(1).toLowerCase();// Capitalize the month name","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Cleon2"},"content":"        String year \u003d String.valueOf(dateTime.getYear());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Cleon2"},"content":"        String hour \u003d dateTime.format(DateTimeFormatter.ofPattern(\"h\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Cleon2"},"content":"        String minute \u003d dateTime.format(DateTimeFormatter.ofPattern(\"mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Cleon2"},"content":"        String amPm \u003d dateTime.format(DateTimeFormatter.ofPattern(\"a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Cleon2"},"content":"        return String.format(\"%s of %s %s, %s:%s%s\", dayOfMonth, month, year, hour, minute, amPm);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Cleon2"},"content":"    public String getDayOfMonthSuffix(final int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Cleon2"},"content":"        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Cleon2"},"content":"            return \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Cleon2"},"content":"        switch (n % 10) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Cleon2"},"content":"            case 1:","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Cleon2"},"content":"                return \"st\";","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Cleon2"},"content":"            case 2:","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Cleon2"},"content":"                return \"nd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Cleon2"},"content":"            case 3:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Cleon2"},"content":"                return \"rd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Cleon2"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Cleon2"},"content":"                return \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Cleon2"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Cleon2":74}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"        return \"T\" + super.toFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Cleon2":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Cleon2"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Cleon2"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Cleon2"},"content":"     * This method prints out the initial greeting","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Cleon2"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Cleon2"},"content":"    public void greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Cleon2"},"content":"        //Introduction","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Cleon2"},"content":"                \" Hello! I\u0027m Cleon\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Cleon2"},"content":"                \" What can I do for you?\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Cleon2"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Issues loading past data. Creating a new tasklist from scratch\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Cleon2"},"content":"    public void exit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Cleon2"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Cleon2"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Cleon2"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Cleon2":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cleon2"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Cleon2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Cleon2":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cleon2"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cleon2":1,"-":20}}]
