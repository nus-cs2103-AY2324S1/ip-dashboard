[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neyapraveen":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"    /*id \u0027checkstyle\u0027*/","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neyapraveen":19,"-":41}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"D | 0 | task1 | 23/09/2023 1300","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"neyapraveen":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":" * The `Deadline` class represents a task with a specific deadline in the Duke program.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":" * It is a subclass of the `Task` class and provides functionality to handle tasks with deadlines.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"    private String byStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"     * Initializes a new `Deadline` task with the specified description and deadline.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"     * @param isNotSaved A boolean indicating whether the task needs to be saved.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"     * @param by The deadline of the task in string format (dd/MM/yyyy).","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If there is an issue parsing the deadline format.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"    public Deadline(String task, Boolean isNotSaved, String by) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"        super(task, isNotSaved);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"            this.by \u003d parseDateTime(by);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"            this.byStr \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"                    + \"Invalid date format :\u003c Please use dd/MM/yyyy\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"                    + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"        if (isNotSaved) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"            saveToFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"     * Returns a string representation of the `Deadline` task, including its description and deadline.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"     * @return A formatted string representing the `Deadline` task.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"        // Format LocalDateTime as a string in your desired output format","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"                .ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"        String formattedDateTime \u003d by.format(outputFormatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"     * Prints a message to confirm that the task has been added and displays the updated task count.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"    public String print() {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"        return (Ui.horizontalLine + \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"                + this.toString()+ \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"                + Task.getCounter() + \" tasks in the list\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"     * Generates a string representation of the `Deadline` task for saving to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"     * @return A formatted string representing the `Deadline` task for file storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"    public String generateStr() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"        return \"D | \" + (this.getStatus() \u003d\u003d TaskStatus.DONE ? 1 : 0)","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"                + \" | \" + this.getTask() + \" | \" + byStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"     * Saves the `Deadline` task to a file if it has not been saved already.","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"        if (isNotSaved) {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"            Storage.saveTaskToFile(generateStr());","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":81}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"    private void flip() {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"        db.flip();","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"        return db;","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":" * The Duke class is the main class of the Duke chatbot application.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":" * It initializes the application and interacts with the user","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":" * through the command-line interface.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"public class Duke {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"     * The TaskList that stores the tasks in the application.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"    public static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"    public Duke() {","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"        // ...","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"//    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"//     * The main method of the Duke chatbot application.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"//     *","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"//     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"//     * @throws DukeException If there is an issue with Duke\u0027s operation.","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"//     */","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"//        // Create the data location for storing task data","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"//        Storage.createDataLocation();","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"//        // Load tasks from the data file into the TaskList","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"//        storage.loadTasksFromFile(taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"//        List\u003cTask\u003e allTasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"//        // Create a scanner to read user input","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"//        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"//        // Create a parser to process user commands","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"//        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"//        // Create a user interface","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"//        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"//        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"//            parser.run \u003d 1;","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"//        }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"//        String task \u003d \"\";","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"//        ui.greet();","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"//        System.out.flush();","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"//        parser.parse(sc);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"//        ui.sayBye();","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"//    }","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"       return \"Duke heard: \" + input;","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"//            return Parser.parse(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"neyapraveen":81,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":" * The `DukeException` class represents an exception specific to the Duke program.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":" * It is a subclass of the standard Java `Exception` class and is used","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":" * to handle custom error messages.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"     * Initializes a new instance of `DukeException` with the specified error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"     * @param message The error message associated with this exception.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":" * The `Event` class represents a task with a specific start and end date/time.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":" * It is a subclass of the `Task` class and includes information about","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":" * the event\u0027s timing.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    private String fromStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    private String toStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"     * Initializes a new `Event` object with the given task description, save status, start date/time, and end date/time.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"     * @param isNotSaved A boolean indicating whether the task needs to be saved to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"     * @param from The start date/time of the event in string format (dd/MM/yyyy HHmm).","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"     * @param to The end date/time of the event in string format (dd/MM/yyyy HHmm).","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If the date/time format is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"    public Event(String task, Boolean isNotSaved, String from, String to) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"        super(task, isNotSaved);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        this.fromStr \u003d from;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"        this.toStr \u003d to;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"            this.from \u003d parseDateTime(from);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"            this.to \u003d parseDateTime(to);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"                    + \"Invalid date format :\u003c Please use dd/MM/yyyy\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"                    + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"        if (isNotSaved) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"            saveToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"     * Returns a string representation of the `Event` object.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"     * @return A formatted string representing the event task with its start and end date/time.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"        String formattedFromDate \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"        String formattedFromTime \u003d from.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"        String formattedToDate \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"        String formattedToTime \u003d to.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFromDate","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"                + \" \" + formattedFromTime + \" to: \" + formattedToDate","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"                + \" \" + formattedToTime + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"     * Prints a confirmation message after adding the `Event` task.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"    public String print() {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"        return (Ui.horizontalLine + \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"                + this.toString()+ \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"                + Task.getCounter() + \" tasks in the list\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"     * Generates a string representation of the `Event` task for saving to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"     * @return A formatted string for saving the event task to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"    public String generateStr() {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"        return \"E | \" + (this.getStatus() \u003d\u003d TaskStatus.DONE ? 1 : 0)","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"                + \" | \" + this.getTask() + \" | \" + fromStr + \" | \" + toStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"     * Saves the `Event` task to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"        Storage.saveTaskToFile(generateStr());","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":89}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"public class Launcher {","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"            stage.show();","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"    public void handleUserInput() {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"        );","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"public class Parser {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"    public static int run \u003d 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    public static void parse(Scanner sc) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        while (true) {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"                String task \u003d Ui.readCommand(sc);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"                if (task.equals(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"                    run \u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                    break;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"                if (task.equals(\"list\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"                    Task taskInstance \u003d new Task();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"                    taskInstance.printList();","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"                    continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"                String[] elements \u003d task.split((\" \"));","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"                if (elements.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"                    String instruction \u003d elements[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"mark\") || instruction.equals(\"unmark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"                        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"                            int no \u003d Integer.parseInt(elements[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"                            Task taskInstance \u003d new Task();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"                            if (instruction.equals(\"mark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"                                taskInstance.mark(no);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"                            } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"                                taskInstance.unmark(no);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"                            }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"                            Ui.showError(Ui.horizontalLine + \"You did not enter a valid integer :(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"delete\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"                        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"                            int no \u003d Integer.parseInt(elements[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"                            Task taskInstance \u003d new Task();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"                            taskInstance.delete(no);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"                            Ui.showError(Ui.horizontalLine + \"You did not enter a valid integer :(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"find\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"                        String keyword \u003d elements[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"                        Ui.displaySearchResults(Duke.taskList, keyword);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"                        continue;","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"                    int firstSpaceIndex \u003d task.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"                    String actualTask \u003d task.substring(firstSpaceIndex + 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"todo\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"                        Todo todo \u003d new Todo(actualTask, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"                        todo.print();","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"                    else if (instruction.equals(\"deadline\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"                        String[] taskAndDeadline \u003d actualTask.split(\"/by\");","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"                        if (taskAndDeadline.length \u003d\u003d 1 || taskAndDeadline.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid format for deadline :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"                        if (taskAndDeadline.length \u003d\u003d 1 || taskAndDeadline.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid format for deadline :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"                        String onlyTask \u003d taskAndDeadline[0].trim(); // Trim to remove extra spaces","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"                        String by \u003d taskAndDeadline[1].trim();// Trim to remove extra spaces","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"                        if (!by.contains(\" \")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"                            by +\u003d \" 2359\";","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"                        Deadline deadline \u003d new Deadline(onlyTask, true, by);","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"                        deadline.print();","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"                    else if (instruction.equals(\"event\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"                        String[] taskAndToFrom \u003d actualTask.split(\"/from\");","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"                        if (taskAndToFrom.length \u003d\u003d 1 || taskAndToFrom.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"                        String onlyTask \u003d taskAndToFrom[0].trim(); // Trim to remove extra spaces","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"                        if (onlyTask.isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"                        String[] ToFrom \u003d taskAndToFrom[1].split(\"/to\");","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"                        if (ToFrom.length \u003d\u003d 1 || ToFrom.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"neyapraveen"},"content":"                        String from \u003d ToFrom[0].trim(); // Trim to remove extra spaces","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"neyapraveen"},"content":"                        String to \u003d ToFrom[1].trim(); // Trim to remove extra spaces","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"neyapraveen"},"content":"                        if (!from.contains(\" \")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"neyapraveen"},"content":"                            from +\u003d \" 2359\";","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"neyapraveen"},"content":"                        if (!to.contains(\" \")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"neyapraveen"},"content":"                            to +\u003d \" 2359\";","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"neyapraveen"},"content":"                        Event event \u003d new Event(onlyTask, true, from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"neyapraveen"},"content":"                        event.print();","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"neyapraveen"},"content":"                    else {","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"neyapraveen"},"content":"                        throw new DukeException(Ui.horizontalLine + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"neyapraveen"},"content":"                } else if (elements[0].equals(\"todo\") || elements[0].equals(\"deadline\") || elements[0].equals(\"event\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"neyapraveen"},"content":"                    throw new DukeException(Ui.horizontalLine + \"OOPS!!! The description of a \" + elements[0] + \" cannot be empty.\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"neyapraveen"},"content":"                else {","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"neyapraveen"},"content":"                    throw new DukeException(Ui.horizontalLine + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"neyapraveen"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"neyapraveen"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"neyapraveen":116}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.io.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import java.util.List;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":" * The `Storage` class handles file input and output operations for Duke task data.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":" * It is responsible for creating data storage, loading tasks from a file,","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":" * saving tasks to a file, deleting a specific line from the file,","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":" * and updating a specific line in the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"public class Storage {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    private static final String FILE_PATH \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"     * Creates the data storage directory and file if they do not exist.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"     * If the directory or file creation fails, appropriate error messages are displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    public static void createDataLocation() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"        File dir \u003d new File(\"src/main/data\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"        // Check if the directory exists; if not, create it","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"            if (dir.mkdirs()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"                System.out.println(\"Directory created: \" + dir.getAbsolutePath());","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"            } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"                System.err.println(\"Failed to create directory: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"                        + dir.getAbsolutePath());","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"                return;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"        File db \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"        // Check if the file exists; if not, create it","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"        if (!db.exists()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"                if (db.createNewFile()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"                    System.out.println(\"File created: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"                            + db.getAbsolutePath());","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"                } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"                    System.err.println(\"Failed to create file: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"                            + db.getAbsolutePath());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"                System.out.println(\"Error when creating the data storage!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"     * Loads tasks from a file and populates a given `TaskList` with the loaded tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"     * The file is read line by line, and tasks are parsed and added to the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"     * If the file is not found or an error occurs during loading,","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"     * appropriate error messages are displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"     * @param taskList The `TaskList` to populate with loaded tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"    public void loadTasksFromFile(TaskList taskList) {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e(); // Create a temporary list","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"        try (Scanner scanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"                    continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"                boolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"                String taskDescription \u003d parts[2];","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"                // Check if the task is already in duke.Duke.allTasks","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"                if (!Duke.taskList.isTaskInAllTasks(taskType, taskDescription)) { //rewrite method in duke.TaskList class","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"                    Task task;","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"                        task \u003d new Todo(taskDescription, false);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"                    } else if (taskType.equals(\"D\") \u0026\u0026 parts.length \u003e\u003d 4) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"                        task \u003d new Deadline(taskDescription, false, by);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"                    } else if (taskType.equals(\"E\") \u0026\u0026 parts.length \u003e\u003d 4) {","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"                        String to \u003d (parts.length \u003e 4) ? parts[4] : \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"                        task \u003d new Event(taskDescription, false, from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"                    } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"neyapraveen"},"content":"                        continue;","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"neyapraveen"},"content":"                    if (isDone) {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"neyapraveen"},"content":"                        task.setStatus(TaskStatus.DONE);","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"neyapraveen"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"neyapraveen"},"content":"            taskList.getTasks().clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"neyapraveen"},"content":"            taskList.getTasks().addAll(loadedTasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"neyapraveen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"neyapraveen"},"content":"            System.err.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"neyapraveen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"neyapraveen"},"content":"     * Saves a task to the file by appending it as a new line.","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"neyapraveen"},"content":"     * If an error occurs during saving, an appropriate error message is displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"neyapraveen"},"content":"     * @param task The task to save to the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"neyapraveen"},"content":"    public static void saveTaskToFile(String task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"neyapraveen"},"content":"        try (FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"neyapraveen"},"content":"             BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"neyapraveen"},"content":"             PrintWriter out \u003d new PrintWriter(bw)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"neyapraveen"},"content":"            out.println(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"neyapraveen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"neyapraveen"},"content":"            System.err.println(\"Error saving task to file: \" + e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"neyapraveen"},"content":"     * Deletes a specific line from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"neyapraveen"},"content":"     * If an error occurs during deletion, an appropriate error message is displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"neyapraveen"},"content":"     * @param lineNumber The line number to delete from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"neyapraveen"},"content":"    public static void deleteLineFromFile(int lineNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"neyapraveen"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"neyapraveen"},"content":"            File inputFile \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"neyapraveen"},"content":"            File tempFile \u003d new File(FILE_PATH + \".tmp\");","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"neyapraveen"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"neyapraveen"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"neyapraveen"},"content":"            String currentLine;","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"neyapraveen"},"content":"            int lineCounter \u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"neyapraveen"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"neyapraveen"},"content":"                lineCounter++;","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"neyapraveen"},"content":"                if (lineCounter \u003d\u003d lineNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"neyapraveen"},"content":"                    continue; // Skip the line to be deleted","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"neyapraveen"},"content":"                writer.write(currentLine);","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"neyapraveen"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":153,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"neyapraveen"},"content":"            writer.close();","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"neyapraveen"},"content":"            reader.close();","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"neyapraveen"},"content":"            boolean successfulRename \u003d tempFile.renameTo(inputFile);","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"neyapraveen"},"content":"            if (!successfulRename) {","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"neyapraveen"},"content":"                throw new IOException(\"Failed to rename temporary file\");","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"neyapraveen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"neyapraveen"},"content":"            System.err.println(\"Error deleting line from file: \" + e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":164,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":167,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"neyapraveen"},"content":"     * Updates a specific line in the file with new content.","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"neyapraveen"},"content":"     * If an error occurs during updating, an appropriate error message is displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"neyapraveen"},"content":"     * @param lineNumber     The line number to update in the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"neyapraveen"},"content":"     * @param updatedContent The new content to replace the line with.","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"neyapraveen"},"content":"    public static void updateLineInFile(int lineNumber, String updatedContent) {","lastModifiedDate":"2023-09-09"},{"lineNumber":175,"author":{"gitId":"neyapraveen"},"content":"        try (RandomAccessFile file \u003d new RandomAccessFile(FILE_PATH, \"rw\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"neyapraveen"},"content":"            long position \u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"neyapraveen"},"content":"            int currentLine \u003d 1;","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"neyapraveen"},"content":"            while (currentLine \u003c lineNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"neyapraveen"},"content":"                String line \u003d file.readLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"neyapraveen"},"content":"                if (line \u003d\u003d null) {","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"neyapraveen"},"content":"                    System.err.println(\"Invalid line number: \" + lineNumber);","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"neyapraveen"},"content":"                    return;","lastModifiedDate":"2023-09-09"},{"lineNumber":184,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"neyapraveen"},"content":"                position +\u003d line.length() + System.lineSeparator().length();","lastModifiedDate":"2023-09-09"},{"lineNumber":186,"author":{"gitId":"neyapraveen"},"content":"                currentLine++;","lastModifiedDate":"2023-09-09"},{"lineNumber":187,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"neyapraveen"},"content":"            file.seek(position);","lastModifiedDate":"2023-09-09"},{"lineNumber":190,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":191,"author":{"gitId":"neyapraveen"},"content":"            file.writeBytes(updatedContent);","lastModifiedDate":"2023-09-09"},{"lineNumber":192,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"neyapraveen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":194,"author":{"gitId":"neyapraveen"},"content":"            System.err.println(\"Error updating line in file: \" + e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":196,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":197,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"neyapraveen":198}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":" * The Task class represents a task in the Duke chatbot application.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    private String task;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    private TaskStatus status;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    Boolean isNotSaved;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    private static ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    private static int counter \u003d 0;","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"     * Constructs a Task object with a task description and save status.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"     * @param task       The description of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"     * @param isNotSaved A boolean indicating whether the task is saved.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    public Task(String task, Boolean isNotSaved) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"        this.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        this.isNotSaved \u003d isNotSaved;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"        if (!task.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"            addTask(this.task);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"     * Empty constructor for Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"    public Task() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"     * @return A string representing the task\u0027s status and description.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"        return status.toString() + \" \" + this.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"     * @param task The task description to add.","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"    public void addTask(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"        if (!task.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"            if (!task.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"                Duke.taskList.addTask(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"                counter++;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"     * Gets the count of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"     * @return The count of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"    public static int getCounter() {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"        return counter;","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"     * @return The status of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"    public TaskStatus getStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"        return this.status;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"     * Sets the status of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"     * @param taskStatus The status to set.","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"neyapraveen"},"content":"    public void setStatus(TaskStatus taskStatus) {","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"neyapraveen"},"content":"        this.status \u003d taskStatus;","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"neyapraveen"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"neyapraveen"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"neyapraveen"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"neyapraveen"},"content":"        return this.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"neyapraveen"},"content":"     * Parses a date and time string to a LocalDateTime object.","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"neyapraveen"},"content":"     * @param dateTimeString The date and time string in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"neyapraveen"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If the date and time string has an invalid format.","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"neyapraveen"},"content":"    public LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"neyapraveen"},"content":"        // Split the input string into date and time parts","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"neyapraveen"},"content":"        String[] parts \u003d dateTimeString.split(\" \", 2);","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"neyapraveen"},"content":"        // Check if there are exactly two parts (date and time)","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"neyapraveen"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"neyapraveen"},"content":"            throw new IllegalArgumentException(\"Invalid date/time format: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"neyapraveen"},"content":"                    + dateTimeString);","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"neyapraveen"},"content":"        String datePart \u003d parts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"neyapraveen"},"content":"        String timePart \u003d parts[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"neyapraveen"},"content":"        // Define a formatter for the date part, e.g., \"dd/MM/yyyy\"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"neyapraveen"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"neyapraveen"},"content":"        // Parse the date part into a LocalDate object","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"neyapraveen"},"content":"        LocalDate date \u003d LocalDate.parse(datePart, dateFormatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"neyapraveen"},"content":"        // Define a formatter for the time part, e.g., \"HHmm\"","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"neyapraveen"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"neyapraveen"},"content":"        // Parse the time part into a LocalTime object","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"neyapraveen"},"content":"        LocalTime time \u003d LocalTime.parse(timePart, timeFormatter);","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"neyapraveen"},"content":"        // Combine the date and time into a LocalDateTime object","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"neyapraveen"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"neyapraveen"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"neyapraveen"},"content":"    public void printList() {","lastModifiedDate":"2023-08-25"},{"lineNumber":141,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Ui.horizontalLine + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"neyapraveen"},"content":"        for (int i \u003d 0; i \u003c Duke.taskList.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"neyapraveen"},"content":"            Task task \u003d Duke.taskList.getTasks().get(i);","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"neyapraveen"},"content":"            System.out.println((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":146,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Ui.horizontalLine);","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":148,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":149,"author":{"gitId":"neyapraveen"},"content":"    public String formatList() {","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"neyapraveen"},"content":"        StringBuilder formattedList \u003d new StringBuilder();","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"neyapraveen"},"content":"        formattedList.append(Ui.horizontalLine).append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"neyapraveen"},"content":"        for (int i \u003d 0; i \u003c Duke.taskList.size(); i++) {","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"neyapraveen"},"content":"            Task task \u003d Duke.taskList.getTasks().get(i);","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"neyapraveen"},"content":"            formattedList.append((i + 1)).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"neyapraveen"},"content":"        formattedList.append(Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"neyapraveen"},"content":"        return formattedList.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"neyapraveen"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"neyapraveen"},"content":"     * @return The string representing task type.","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"neyapraveen"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"neyapraveen"},"content":"        // Your logic to determine the task type based on the instance\u0027s actual class","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"neyapraveen"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"neyapraveen"},"content":"            return \"T\";","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"neyapraveen"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"neyapraveen"},"content":"            return \"D\";","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"neyapraveen"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"neyapraveen"},"content":"            return \"E\";","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"neyapraveen"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"neyapraveen"},"content":"            return \"\"; // Handle unknown task types or add appropriate logic","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"neyapraveen"},"content":"     * Marks a task as done by its index, updates its status,","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"neyapraveen"},"content":"     * and writes the change to the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"neyapraveen"},"content":"     * @param i The index of the task to mark as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"neyapraveen"},"content":"    public void mark(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e Duke.taskList.getTasks().size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":191,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Ui.horizontalLine + \"OOPS!!! Invalid number :(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-09"},{"lineNumber":192,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"neyapraveen"},"content":"        Task markTask \u003d Duke.taskList.getTasks().get(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"neyapraveen"},"content":"        markTask.status \u003d TaskStatus.DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"neyapraveen"},"content":"        // Update the task description in the file","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"neyapraveen"},"content":"        Storage.updateLineInFile(i, markTask.generateStr());","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"neyapraveen"},"content":"//        System.out.println(Ui.horizontalLine + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"neyapraveen"},"content":"//                + markTask.toString() + \"\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":203,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":204,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"neyapraveen"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"neyapraveen"},"content":"    public void mark() {","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"neyapraveen"},"content":"        this.status \u003d TaskStatus.DONE;","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"neyapraveen"},"content":"    public void unmark() {","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"neyapraveen"},"content":"        this.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"neyapraveen"},"content":"    public void delete() {","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"neyapraveen"},"content":"        Duke.taskList.deleteTask(this); // Remove the task from the list","lastModifiedDate":"2023-09-10"},{"lineNumber":217,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"neyapraveen"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-10"},{"lineNumber":220,"author":{"gitId":"neyapraveen"},"content":"        return task.contains(keyword);","lastModifiedDate":"2023-09-10"},{"lineNumber":221,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":224,"author":{"gitId":"neyapraveen"},"content":"     * Marks a task as not done by index and updates it in the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":225,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":226,"author":{"gitId":"neyapraveen"},"content":"     * @param i The index of the task to mark as not done.","lastModifiedDate":"2023-09-10"},{"lineNumber":227,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":228,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":229,"author":{"gitId":"neyapraveen"},"content":"    public void unmark(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":230,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e Duke.taskList.getTasks().size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":231,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":232,"author":{"gitId":"neyapraveen"},"content":"                    + \"OOPS!!! Invalid number :(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":233,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"neyapraveen"},"content":"        Task unmarkTask \u003d Duke.taskList.getTasks().get(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":235,"author":{"gitId":"neyapraveen"},"content":"        unmarkTask.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"neyapraveen"},"content":"        Storage.updateLineInFile(i, unmarkTask.generateStr());","lastModifiedDate":"2023-09-09"},{"lineNumber":237,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":238,"author":{"gitId":"neyapraveen"},"content":"                + \"Ok, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":239,"author":{"gitId":"neyapraveen"},"content":"                + unmarkTask.toString() + \"\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-09"},{"lineNumber":240,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":241,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":242,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":243,"author":{"gitId":"neyapraveen"},"content":"     * Deletes a task by index, updates the task counter, and removes it from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":244,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":245,"author":{"gitId":"neyapraveen"},"content":"     * @param i The index of the task to delete.","lastModifiedDate":"2023-09-10"},{"lineNumber":246,"author":{"gitId":"neyapraveen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":247,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":248,"author":{"gitId":"neyapraveen"},"content":"    public void delete(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":249,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e Duke.taskList.size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":250,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":251,"author":{"gitId":"neyapraveen"},"content":"                    + \"OOPS!!! Invalid number :(\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":252,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"neyapraveen"},"content":"        Task deleteTask \u003d Duke.taskList.getTasks().get(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":254,"author":{"gitId":"neyapraveen"},"content":"        counter \u003d counter - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":255,"author":{"gitId":"neyapraveen"},"content":"        Duke.taskList.deleteTask(i - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":256,"author":{"gitId":"neyapraveen"},"content":"        Storage.deleteLineFromFile(i);","lastModifiedDate":"2023-09-09"},{"lineNumber":257,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Ui.horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":258,"author":{"gitId":"neyapraveen"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\" + deleteTask.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":259,"author":{"gitId":"neyapraveen"},"content":"                + \"\\n\" + String.format(\"Now you have %d tasks in the list\\n\", counter)","lastModifiedDate":"2023-09-10"},{"lineNumber":260,"author":{"gitId":"neyapraveen"},"content":"                + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":261,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":262,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":263,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":264,"author":{"gitId":"neyapraveen"},"content":"     * Generates String representation to be saved in text file.","lastModifiedDate":"2023-09-10"},{"lineNumber":265,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":266,"author":{"gitId":"neyapraveen"},"content":"    public String generateStr() {","lastModifiedDate":"2023-09-06"},{"lineNumber":267,"author":{"gitId":"neyapraveen"},"content":"        return task;","lastModifiedDate":"2023-09-06"},{"lineNumber":268,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":269,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":270,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":271,"author":{"gitId":"neyapraveen"},"content":"     * Saves the task to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":272,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":273,"author":{"gitId":"neyapraveen"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":274,"author":{"gitId":"neyapraveen"},"content":"        return;","lastModifiedDate":"2023-09-06"},{"lineNumber":275,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":276,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"neyapraveen":276}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.util.List;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":" * The `TaskList` class represents a list of tasks in the Duke task management application.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":" * It provides methods for adding, deleting, and retrieving tasks, as well as checking if a task exists in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"public class TaskList {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    private List\u003cTask\u003e allTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"     * Constructs an empty `TaskList`.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"     * The `allTasks` list is initialized as an empty ArrayList.","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"        allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"     * Constructs a `TaskList` with an initial list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"     * @param initialTasks The initial list of tasks to populate the `TaskList`.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    public TaskList(List\u003cTask\u003e initialTasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"        allTasks \u003d new ArrayList\u003c\u003e(initialTasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"     * Adds a task to the `TaskList`.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"        allTasks.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"     * Deletes a task from the `TaskList` based on its index.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c allTasks.size()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"            allTasks.remove(taskIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"        allTasks.remove(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"    public int size() {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"        return allTasks.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"     * Retrieves the list of tasks stored in the `TaskList`.","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"     * @return A list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"        return allTasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"     * Checks if a task with a specific task type and description exists in the `TaskList`.","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"     * @param taskType        The type of the task (e.g., \"T\" for Todo, \"D\" for Deadline).","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"     * @return `true` if a matching task is found, `false` otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"    public boolean isTaskInAllTasks(String taskType, String taskDescription) {","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"            if (task.getTask().equals(taskDescription)","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"                    \u0026\u0026 task.getTaskType().equals(taskType)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"                return true;","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"        return false;","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"neyapraveen":85}},{"path":"src/main/java/duke/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":" * The `TaskStatus` enum represents the status of a task, which can be either done or not done.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":" * It provides symbolic representations for task status and allows converting status to a string.","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"enum TaskStatus {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"     * Represents a task that is marked as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    DONE(\"[X]\"),","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"     * Represents a task that is not marked as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    NOT_DONE(\"[ ]\");","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    private final String symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"     * Constructs a `TaskStatus` enum value with the specified symbolic representation.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"     * @param symbol The symbolic representation of the task status.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    TaskStatus(String symbol) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"     * Returns the symbolic representation of the task status.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"     * @return A string representation of the task status.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"        return symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"neyapraveen":39}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":" * The `Todo` class represents a to-do task, which is a basic type of task with a description.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":" * It inherits from the `Task` class and provides specific implementations for to-do tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"     * Constructs a new `Todo` task with the given description and save status.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"     * @param task        The description of the to-do task.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"     * @param isNotSaved  A boolean indicating whether the task needs to be saved.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    public Todo(String task, boolean isNotSaved) {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        super(task, isNotSaved);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"        if (isNotSaved) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"            saveToFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"     * Returns a formatted string representation of the to-do task.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"     * @return A string representing the to-do task.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"     * Prints a message indicating that the to-do task has been added.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"    public void print() {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Ui.horizontalLine + \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"                + this.toString()+ \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"                + Task.getCounter() + \" tasks in the list\\n\" + Ui.horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"     * Generates a string representation of the to-do task for saving to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"     * @return A string representation of the to-do task for file storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"    public String generateStr() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"        return \"T | \" + (this.getStatus() \u003d\u003d TaskStatus.DONE ? 1 : 0)","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"                + \" | \" + this.getTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"     * Saves the to-do task to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"        Storage.saveTaskToFile(generateStr());","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":59}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.util.List;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":" * The `Ui` class handles user interface interactions and provides methods","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":" * for displaying messages and reading user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"public class Ui {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"     * A horizontal line used for separating messages.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    public static String horizontalLine \u003d \"_\".repeat(60) + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"     * Displays a greeting message when the program starts.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(\"Hello! I\u0027m Bot\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"                + \"What can I do for you?\\n\" + horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"     * Displays a farewell message when the program exits.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"    public static void sayBye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"                + \"Bye. Hope to see you again soon!\\n\" + horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"     * Displays an error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"        System.err.println(errorMessage);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"     * Reads a command from the user via the provided Scanner.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"     * @param sc The Scanner object for reading user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"    public static String readCommand(Scanner sc) {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"    public static String displaySearchResults(TaskList taskList, String keyword) {","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"        List\u003cTask\u003e allTasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"        if (allTasks.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"            return (horizontalLine + \"You have no tasks in your list.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"                    + horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"        TaskList filteredList \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"                filteredList.addTask(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"        if (filteredList.getTasks().isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"            return (horizontalLine","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"                    + \"You have no matching tasks in your list.\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"                    + horizontalLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"//        System.out.println(horizontalLine + \"Here are the matching items in your list: \\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"//        int count \u003d 0;","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"//        for (Task t : filteredList.getTasks()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"//            System.out.println(++count + \". \" + t.toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"//        }","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"//        System.out.println(\"\\n\" + horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"        StringBuilder formattedItems \u003d new StringBuilder();","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"        formattedItems.append(horizontalLine).append(\"Here are the matching items in your list: \\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"        for (Task t : filteredList.getTasks()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"            formattedItems.append(++count).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"        formattedItems.append(\"\\n\").append(horizontalLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"        return formattedItems.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"neyapraveen":91}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"neyapraveen":20}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    void testToString() throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"        Deadline deadline \u003d new Deadline(\"Finish assignment\", false, \"23/09/2023 1300\");","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"        String expectedFormattedDateTime \u003d LocalDateTime.parse(\"23/09/2023 1300\",","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")).format(outputFormatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        String expectedToString \u003d \"[D][ ] Finish assignment (by: \" + expectedFormattedDateTime + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(expectedToString, deadline.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"    void testGenerateStr() throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"        Deadline deadline \u003d new Deadline(\"Finish assignment\", false, \"23/09/2023 1300\");","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"        String expectedGenerateStr \u003d \"D | 0 | Finish assignment | 23/09/2023 1300\";","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(expectedGenerateStr, deadline.generateStr());","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"neyapraveen":26}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"    void testGenerateStr() {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"        Todo task1 \u003d new Todo(\"task1\", false);","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"        Todo task2 \u003d new Todo(\"task2\", false);","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"        task2.mark();","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(\"T | 0 | task1\",","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                task1.generateStr(), \"Generate str of uncompleted task\");","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(\"T | 1 | task2\", task2.generateStr(), \"Generate str of completed task\");","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"    void testToString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"        Todo task1 \u003d new Todo(\"task1\", false);","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"        Todo task2 \u003d new Todo(\"task2\", false);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"        task2.mark();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(\"[T][ ] task1\",","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"                task1.toString(), \"To String of uncompleted task\");","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"        assertEquals(\"[T][X] task2\", task2.toString(), \"To String of completed task\");","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"neyapraveen":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neyapraveen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"if ! javac -cp ../src/main/java/Duke -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neyapraveen":1,"-":37}}]
