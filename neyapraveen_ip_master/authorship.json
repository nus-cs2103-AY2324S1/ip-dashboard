[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"    private String by;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"    public Deadline(String task, String by) {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"    public void print() {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Got it. I\u0027ve added this task:\\n \" + this.toString()+ \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                + \"Now you have \" + Task.getCounter() + \" tasks in the list\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"    public static String horizontalLine \u003d \"_\".repeat(60) + \"\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(\"Hello! I\u0027m Bot\\n\" + \"What can I do for you?\\n\" + horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        while (true) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"                task \u003d sc.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"                if (task.equals(\"bye\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"                if (task.equals(\"list\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"                    Task taskInstance \u003d new Task(\"\");","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"                    taskInstance.printList();","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"                    continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"                String[] elements \u003d task.split((\" \"));","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"                if (elements.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"                    String instruction \u003d elements[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"mark\") || instruction.equals(\"unmark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"                        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"                            int no \u003d Integer.parseInt(elements[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"                            Task taskInstance \u003d new Task(\"\");","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"                            if (instruction.equals(\"mark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"                                taskInstance.mark(no);","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"                            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"                                taskInstance.unmark(no);","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"                            }","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"                            System.err.println(Duke.horizontalLine + \"You did not enter a valid integer :(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"                        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"                            int no \u003d Integer.parseInt(elements[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"                            Task taskInstance \u003d new Task(\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"                            taskInstance.delete(no);","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"                            System.err.println(Duke.horizontalLine + \"You did not enter a valid integer :(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"                            continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"                    int firstSpaceIndex \u003d task.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"                    String actualTask \u003d task.substring(firstSpaceIndex + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"                    if (instruction.equals(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"                        Todo todo \u003d new Todo(actualTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"                        todo.print();","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"                    else if (instruction.equals(\"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"                        String[] taskAndDeadline \u003d actualTask.split((\"/by\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"                        if (taskAndDeadline.length \u003d\u003d 1 || taskAndDeadline.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Duke.horizontalLine + \"OOPS!!! Invalid format for deadline :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"                        String onlyTask \u003d taskAndDeadline[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"                        String by \u003d taskAndDeadline[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"                        Deadline deadline \u003d new Deadline(onlyTask, by);","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"                        deadline.print();","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"                    else if (instruction.equals(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"                        String[] taskAndToFrom \u003d actualTask.split((\"/from\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"                        if (taskAndToFrom.length \u003d\u003d 1 || taskAndToFrom.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Duke.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"neyapraveen"},"content":"                        String onlyTask \u003d taskAndToFrom[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"neyapraveen"},"content":"                        if (onlyTask.trim().isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Duke.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"neyapraveen"},"content":"                        String[] ToFrom \u003d taskAndToFrom[1].split(\"/to\");","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"neyapraveen"},"content":"                        if (ToFrom.length \u003d\u003d 1 || ToFrom.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"neyapraveen"},"content":"                            throw new DukeException(Duke.horizontalLine + \"OOPS!!! Invalid format for event :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"neyapraveen"},"content":"                        }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"neyapraveen"},"content":"                        String from \u003d ToFrom[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"neyapraveen"},"content":"                        String to \u003d ToFrom[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"neyapraveen"},"content":"                        Event event \u003d new Event(onlyTask, from, to);","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"neyapraveen"},"content":"                        event.print();","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"neyapraveen"},"content":"                    else {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"neyapraveen"},"content":"                        throw new DukeException(Duke.horizontalLine + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"neyapraveen"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"neyapraveen"},"content":"                } else if (elements[0].equals(\"todo\") || elements[0].equals(\"deadline\") || elements[0].equals(\"event\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"neyapraveen"},"content":"                    throw new DukeException(Duke.horizontalLine + \"OOPS!!! The description of a \" + elements[0] + \" cannot be empty.\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"neyapraveen"},"content":"                else {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"neyapraveen"},"content":"                    throw new DukeException(Duke.horizontalLine + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"neyapraveen"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"neyapraveen"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"neyapraveen"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"neyapraveen"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(horizontalLine+ \"Bye. Hope to see you again soon!\\n\" + horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"neyapraveen":96,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"    String from;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"    String to;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"    public void print() {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Got it. I\u0027ve added this task:\\n \" + this.toString()+ \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"                + \"Now you have \" + Task.getCounter() + \" tasks in the list\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"    private String task;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"    private TaskStatus status;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"    private static ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"    private static int counter \u003d 0;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        this.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"        addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        return status.toString() + \" \" + this.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"neyapraveen"},"content":"    public void addTask(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"neyapraveen"},"content":"        if (!task.equals(\"\")){","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"neyapraveen"},"content":"            arr.add(this);","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"neyapraveen"},"content":"            counter \u003d counter + 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"neyapraveen"},"content":"    public static int getCounter() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"neyapraveen"},"content":"        return counter;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"neyapraveen"},"content":"    public void printList() {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"neyapraveen"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"neyapraveen"},"content":"        for (Task task : arr) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"neyapraveen"},"content":"            count++;","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"neyapraveen"},"content":"            System.out.println( count+\". \" + task.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"neyapraveen"},"content":"    public void mark(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e arr.size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Duke.horizontalLine+ \"OOPS!!! Invalid number :(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"neyapraveen"},"content":"        Task markTask \u003d arr.get(i - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"neyapraveen"},"content":"        markTask.status \u003d TaskStatus.DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"neyapraveen"},"content":"        + markTask.toString() + \"\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"neyapraveen"},"content":"    public void unmark(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e arr.size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Duke.horizontalLine+ \"OOPS!!! Invalid number :(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"neyapraveen"},"content":"        Task unmarkTask \u003d arr.get(i - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"neyapraveen"},"content":"        unmarkTask.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Ok, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"neyapraveen"},"content":"                + unmarkTask.toString() + \"\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"neyapraveen"},"content":"    public void delete(int i) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"neyapraveen"},"content":"        if (i \u003e arr.size() || i \u003c\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"neyapraveen"},"content":"            throw new DukeException(Duke.horizontalLine+ \"OOPS!!! Invalid number :(\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"neyapraveen"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"neyapraveen"},"content":"        Task deleteTask \u003d arr.get(i - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"neyapraveen"},"content":"        counter \u003d counter - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"neyapraveen"},"content":"        arr.remove(i - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Noted. I\u0027ve removed this task:\\n\" + deleteTask.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"neyapraveen"},"content":"        + \"\\n\" + String.format(\"Now you have %d tasks in the list\\n\", counter) + Duke.horizontalLine );","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"neyapraveen":70}},{"path":"src/main/java/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"enum TaskStatus {","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"    DONE(\"[X]\"), NOT_DONE(\"[ ]\");","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"    private final String symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"    TaskStatus(String symbol) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"        return symbol;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"neyapraveen":12}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"    String task;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"    Boolean done;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"neyapraveen"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"neyapraveen"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"neyapraveen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"neyapraveen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"neyapraveen"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"neyapraveen"},"content":"    public void print() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"neyapraveen"},"content":"        System.out.println(Duke.horizontalLine + \"Got it. I\u0027ve added this task:\\n \" + this.toString()+ \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"        + \"Now you have \" + Task.getCounter() + \" tasks in the list\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"neyapraveen"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"neyapraveen"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"neyapraveen"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"neyapraveen"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"neyapraveen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"neyapraveen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"neyapraveen"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"neyapraveen":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"neyapraveen"},"content":"if ! javac -cp ../src/main/java/Duke -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"neyapraveen":1,"-":37}}]
