[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"3. After that, locate the `src/duke/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.duke()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":2,"-":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.StorageException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"        private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        private static final String chatBotName \u003d \"Cristiano\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        private TaskManager taskManager;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"        public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"                storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"                taskManager \u003d storage.loadData();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"            duke.greetUser();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"            duke.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        protected void greetUser() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"            UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println(\"Hello! I\u0027m \" + chatBotName + \"! SUIIII!!!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"        protected static void exit() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"            UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"            UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"         * this is the function that runs while the user is using the application.","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"         * It takes in users input, calls getCommand to decide which function it should to call to handle the input.","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"         * It also handles exceptions and waits for user to say bye.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"        protected void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"                    String command \u003d getCommand(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"                    switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"                        case \"list\":","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"                            taskManager.list();","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"                            handleMarking(input, taskManager);","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"                            handleTodo(input, taskManager);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"                            handleDeadline(input, taskManager);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"                            handleEvent(input, taskManager);","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"                            handleDelete(input, taskManager);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"                        default:","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"                            throw new UnknownCommandException(\"I may be the GOAT but I don\u0027t know what that means.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"                    UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"                    UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"            exit();","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"         * returns the first word of the input string. Helps to determine which function to call.","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"         * @return command string","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"        private String getCommand(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"            return input.split(\" \")[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"         * This function handles the logic for when a user wants to mark a task as done or undone.","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"        private void handleMarking(String input, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"                int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"                if (words[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"                    taskManager.mark(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"                } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"                    taskManager.unmark(index);","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"                updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a numerical index!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"            } catch (StorageException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"                throw new StorageException(\"Storage Error\");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"        private void updateStorage() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"            this.storage.saveData(taskManager);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"tanveersingh10"},"content":"         * if the user wants to add a to do-task, this function will handle the logic.","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"tanveersingh10"},"content":"        private void handleTodo(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"tanveersingh10"},"content":"            int indexOfSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"tanveersingh10"},"content":"            if (indexOfSpace \u003d\u003d -1 || indexOfSpace \u003d\u003d input.length() - 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a task description.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d input.substring(input.indexOf(\" \") + 1).trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"tanveersingh10"},"content":"            if(taskName.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a task description.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"tanveersingh10"},"content":"            taskManager.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"tanveersingh10"},"content":"         * similar to to-do, this function handles logic for handling adding a deadline to the task manager.","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"tanveersingh10"},"content":"        private void handleDeadline(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"tanveersingh10"},"content":"            String suffix \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"tanveersingh10"},"content":"            String[] parts \u003d suffix.split(\" /due \");","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"tanveersingh10"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Invalid format for deadline. \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"tanveersingh10"},"content":"                        \"Please use: deadline task name /due due Date\");","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d parts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"tanveersingh10"},"content":"            String dueDate \u003d parts[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime time;","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"tanveersingh10"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"tanveersingh10"},"content":"                time \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please use the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new Deadline(taskName, time);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"tanveersingh10"},"content":"            taskManager.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"tanveersingh10"},"content":"         * similar to to-do and deadline, this function handles the logic for adding an event to the task manager.","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"tanveersingh10"},"content":"        private void handleEvent(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"tanveersingh10"},"content":"            String suffix \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"tanveersingh10"},"content":"            String[] parts \u003d suffix.split(\" /from \");","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"tanveersingh10"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Invalid format for event. \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"tanveersingh10"},"content":"                        \"Please use: event task_name /from start /to end\");","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d parts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"tanveersingh10"},"content":"            String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"tanveersingh10"},"content":"            if (timeParts.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":204,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Invalid format for event. \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"tanveersingh10"},"content":"                        \"Please use: event task_name /from start /to end\");","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":207,"author":{"gitId":"tanveersingh10"},"content":"            String from \u003d timeParts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"tanveersingh10"},"content":"            String to \u003d timeParts[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"tanveersingh10"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"tanveersingh10"},"content":"                fromTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"tanveersingh10"},"content":"                toTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please use the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new Event(taskName, fromTime, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"tanveersingh10"},"content":"            taskManager.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"tanveersingh10"},"content":"         * this function allows the user to delete a task by identifying its index.","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"tanveersingh10"},"content":"        private void handleDelete(String input, TaskManager taskManager) throws InvalidArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"tanveersingh10"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"tanveersingh10"},"content":"                int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"tanveersingh10"},"content":"                taskManager.delete(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":236,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":237,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a numerical index!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":231,"-":9}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.StorageException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"import java.io.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"    public void saveData(TaskManager taskManager) throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"            for (Task task: taskManager.getList()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"                bw.append(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"            bw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"            throw new StorageException(\"Couldn\u0027t save data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager loadData() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"        File savedFile \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"            Scanner fileReader \u003d new Scanner(savedFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"                tasks.add(readLine(fileReader.nextLine()));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"            TaskManager taskmanager \u003d new TaskManager(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"            return taskmanager;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"            createFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"            return new TaskManager();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    // basically the format will be something like this:","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"    // [T][X] do homework","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"    // [D][ ] submit assignment (by: Friday)","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"    // [E][ ] attend lecture (from: Wednesday to: Thursday)","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"    private Task readLine(String line) throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"        line \u003d line.trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"\\\\[T\\\\]\\\\[(.)\\\\] (.*)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"\\\\[D\\\\]\\\\[(.)\\\\] (.*) \\\\(by: (.*)\\\\)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"\\\\[E\\\\]\\\\[(.)\\\\] (.*) \\\\(from: (.*) to: (.*)\\\\)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"        Matcher matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"        matcher \u003d todoPattern.matcher(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"            boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"            ToDo todo \u003d new ToDo(taskName, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"            return todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"        matcher \u003d deadlinePattern.matcher(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"            boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"            String dueString \u003d matcher.group(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime dueTime \u003d LocalDateTime.parse(dueString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"            Deadline deadline \u003d new Deadline(taskName, isDone, dueTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"            return deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"        matcher \u003d eventPattern.matcher(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"            boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"            String fromString \u003d matcher.group(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"            String toString \u003d matcher.group(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime fromTime \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime toTime \u003d LocalDateTime.parse(toString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"            return new Event(taskName, isDone, fromTime, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"        throw new StorageException(\"There was an issue reading your data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"    public void createFile() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        File rootDirectory \u003d new File(file.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"            rootDirectory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"            throw new StorageException(\"Unable to create a database\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanveersingh10":115}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    private int numOfTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks \u003d this.list.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        this.index \u003d this.numOfTasks - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public void add (Task task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks +\u003d 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d task.getTaskName();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        UI.addTask(taskName, numOfTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    public void list() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        UI.printLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"    public void mark(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \"tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1; // since 0 indexed","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        task.mark();","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"        UI.markTask(task.getTaskName());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    public void unmark(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \" tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1; // since 0 indexed","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"        task.unmark();","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"        UI.unMarkTask(task.getTaskName());","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    public void delete(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \" tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"        numOfTasks -\u003d 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"        Task removedTask \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"        list.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"        UI.deleteTask(removedTask.getTaskName(), numOfTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"        return list;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tanveersingh10":73}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"public class UI {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public static void addTask(String taskName, int numOfTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"Got it. I\u0027ve added the task:\\n\" + taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        if (numOfTasks !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println(\"Now you have \" + numOfTasks + \" tasks in your list, just like how I have 5 Ballon d\u0027Ors.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"            System.out.println(\"Now you have \" + numOfTasks + \" task in your list, just like how I have 5 Ballon d\u0027Ors.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    public static void deleteTask(String taskName, int numOfTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        UI.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"Removed task:\\n\" + taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"Now you have \" + numOfTasks + \" tasks in your list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"        UI.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public static void markTask(String taskName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"SIUUU! I\u0027ve marked this task as done. We will make Saudi League number 1.\\n [X] \" + taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"    public static void unMarkTask(String taskName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done.\\n [ ] \" + taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanveersingh10":35}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"[D][ ] hello world (by: 12 Dec 2021, 00:00)","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanveersingh10":1}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        return \"☹ OOPS!!! \";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":11}},{"path":"src/main/java/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class InvalidArgumentException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public StorageException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + this.message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    public Deadline(String taskName, LocalDateTime time) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"        this.dateTime \u003d time;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    public Deadline(String taskName, boolean done, LocalDateTime time) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"        this.dateTime \u003d time;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"        String formattedDate \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":25}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    public Event(String taskName, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    public Event(String taskName, boolean done, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        String formattedFromTime \u003d fromTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        String formattedToTime \u003d toTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFromTime + \" to: \" + formattedToTime + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":31}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    public Task(String taskName, boolean done) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    //default constructor","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    public Task() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d \"Untitled task\";","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        String status \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        return status + \" \" + taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":45}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    public ToDo(String taskName, boolean done) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"todo send flowers to mom","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"deadline cs2103t assignment /due Tuesday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"event watch oppenheimer /from 7pm /to 10pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"mark hello world","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"yo yo yo","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"delete 100","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"javac  -cp ..\\src\\duke\\java -Xlint:none -d ..\\bin ..\\src\\duke\\java\\*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":1,"-":37}}]
