[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"# duke.duke.main.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"3. After that, locate the `src/duke/java/duke.duke.main.Duke.java` file, right-click it, and choose `Run duke.duke.main.Duke.duke()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"    mainClass.set(\"duke.main.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    archiveBaseName \u003d \"penaldo\"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"    archiveFileName \u003d \u0027penaldo.jar\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":18,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"[T][ ] go to the gym","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"tanveersingh10":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"# Cristiano Ronaldo Task Manager 🤖","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"Penaldo is a graphical user interface (GUI) desktop app that helps you track your upcoming tasks. To start using Cristiano, you can:","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"- Download the `.jar` file under `Releases`,","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"- Navigate to the directory in terminal,","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"- run `java -jar penaldo.jar`, angd voila!","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"## Features 👾","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"Penaldo is packed with various features, such as:","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"* Addition and deletion of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    * Todos","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    * Events","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    * Deadlines","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"* Marking tasks as done","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"* Searching tasks with keywords","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"## User Guide 🕹","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"### - `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"See a list of your tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"\u003e list","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"Here are the tasks in your list. Finish them all so we can beat Messi.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"\t1. [T][ ] CS2103T assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"\t2. [D][ ] CS2101 slides (by 21 Sep 2023, 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"\t3. [E][X] Football (from 19 Sep 2023 17:00 to 19 Sep 2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"### - `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"Create a todo.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"`todo \u003ctask name\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"\u003e todo CS2103T assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"    [T][ ] CS2101 slides","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"You now have 1 task in your list, just like how I have 5 Ballon d\u0027Ors.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"### - `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"Create an event.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"`event \u003cevent name\u003e /from \u003cstart time\u003e /to \u003cend time\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"`\u003cstart time\u003e` and `\u003cend time\u003e` should be `DD/MM/YYYY HH:MM`.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"\u003e event Football /from 19/09/2023 16:00 /to 19/09/2023 19:00","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"    [E][ ] Football (from 19 Sep 2023 17:00 to 19 Sep 2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"You now have 2 tasks in your list, just like how I have 5 Ballon d\u0027Ors.","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"### - `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"Create a deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"`deadline \u003cdeadline name\u003e /by \u003ctime\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"`\u003ctime\u003e` should be in the form of `DD/MM/YYYY HH:MM`.","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"\u003e deadline CS2101 slides /due 21/09/2023 23:59","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"    [D][ ] CS2101 slides (by 21 Sep 2023, 23:59)","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"You now have 3 tasks in your list, just like how I have 5 Ballon d\u0027Ors.","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"### - `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"\u003e mark 3","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"SIUUU! I\u0027ve marked this task as done. We will make Saudi League number 1.","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"    [E][X] Football (from 19 Sep 2023 17:00 to 19 Sep 2023 19:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"### - `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"Delete a specific task.","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"\u003e delete 1","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"I\u0027ve deleted this task from the list!","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"    [T][ ] CS2103T assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"### - `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"Search a task based on the keyword provided.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"\u003e find assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"Here are the matching tasks in your list","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"    1. [T][ ] CS2103T assignment","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"### - `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"Quit the app.","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"#### Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"\u003e bye","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"Bye. Hope to see you again in the Saudi League!","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"tanveersingh10":123,"-":18}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":" * DukeException class represents a custom exception for Duke program.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":" * It extends the base Exception class and provides additional functionality","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":" * to customize error messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        return \"OOPS!!! \";","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":22}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class InvalidArgumentException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/duke/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public StorageException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"    String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        return super.getMessage() + this.message;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":15}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":62}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        private static final String chatBotName \u003d \"Cristiano\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        private TaskManager taskManager;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"        private UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        private Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/speed.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/ronaldo.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        private boolean isRunning \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"            assert user !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"            assert duke !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"                this.parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"                storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"                this.ui \u003d new UI();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"                ui.greetUser(chatBotName);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"                taskManager \u003d storage.loadData();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"                this.isRunning \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"                ui.displayError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"         * this is the function that runs while the user is using the application.","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"         * It takes in users input, calls getCommand to decide which function it should to call to handle the input.","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"         * It also handles duke.exceptions and waits for user to say bye.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"        protected String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"                    String command \u003d this.parser.getCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"                    switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"                        return taskManager.list();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"                        return handleMarking(input, taskManager);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"                        return handleTodo(input, taskManager);","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"                        return handleDeadline(input, taskManager);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"                        return handleEvent(input, taskManager);","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"                        return handleDelete(input, taskManager);","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"                    case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"                        return handleFind(input, taskManager);","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"                    case \"note\":","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"                        return handleNote(input, taskManager);","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"                    case \"describe\":","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"                        return handleDescribe(input, taskManager);","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"                    case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"                        break;","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"                    default:","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"                        throw new UnknownCommandException(\"I may be the GOAT but I don\u0027t know what that means.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"                    return ui.displayError(e);","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"            assert isRunning;","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"            return ui.exit();","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"        private String handleFind(String input, TaskManager taskManager) throws InvalidArgumentException {","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"            String keyword \u003d parser.parseFind(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"            ArrayList\u003cTask\u003e filteredList \u003d taskManager.filterList(keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"            return ui.displayFilteredList(filteredList, filteredList.size());","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"        private String handleNote(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"            String[] parsedInput \u003d parser.parseNote(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"            String i \u003d parsedInput[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"            String note \u003d parsedInput[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"            int index;","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"                index \u003d Integer.parseInt(i);","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Use the format note index description! Eg. note 1 complete asap\");","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"            String response \u003d taskManager.addNote(index, note);","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"            return response;","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"         * returns the first word of the input string. Helps to determine which function to call.","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"         * @return command string","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"         * This function handles the logic for when a user wants to mark a task as done or undone.","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"        private String handleMarking(String input, TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"tanveersingh10"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"tanveersingh10"},"content":"                int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"tanveersingh10"},"content":"                String response \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"tanveersingh10"},"content":"                if (words[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"                    response \u003d taskManager.mark(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"tanveersingh10"},"content":"                } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"tanveersingh10"},"content":"                    response \u003d taskManager.unmark(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"tanveersingh10"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"tanveersingh10"},"content":"                updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"tanveersingh10"},"content":"                return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":153,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a numerical index!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"tanveersingh10"},"content":"            } catch (StorageException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"tanveersingh10"},"content":"                throw new StorageException(\"duke.main.Storage Error\");","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"tanveersingh10"},"content":"        private void updateStorage() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"tanveersingh10"},"content":"            assert (this.storage !\u003d null);","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"tanveersingh10"},"content":"            this.storage.saveData(taskManager);","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"tanveersingh10"},"content":"         * if the user wants to add a to-do task, this function will handle the logic.","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"tanveersingh10"},"content":"        private String handleTodo(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d this.parser.parseToDo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"tanveersingh10"},"content":"            String response \u003d taskManager.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"tanveersingh10"},"content":"            return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"tanveersingh10"},"content":"         * similar to to-do, this function handles logic for handling adding a deadline to the task manager.","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"tanveersingh10"},"content":"        private String handleDeadline(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"tanveersingh10"},"content":"            String[] parsedInput \u003d this.parser.parseDeadline(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d parsedInput[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"tanveersingh10"},"content":"            String dueDate \u003d parsedInput[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime time;","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"tanveersingh10"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"tanveersingh10"},"content":"                time \u003d LocalDateTime.parse(dueDate, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please use the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new Deadline(taskName, time);","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"tanveersingh10"},"content":"            String response \u003d taskManager.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":199,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"tanveersingh10"},"content":"            return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":201,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"tanveersingh10"},"content":"         * similar to to-do and deadline, this function handles the logic for adding an event to the task manager.","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"tanveersingh10"},"content":"        private String handleEvent(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-08"},{"lineNumber":210,"author":{"gitId":"tanveersingh10"},"content":"            String[] parsedInput \u003d this.parser.parseEvent(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"tanveersingh10"},"content":"            String taskName \u003d parsedInput[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"tanveersingh10"},"content":"            String from \u003d parsedInput[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"tanveersingh10"},"content":"            String to \u003d parsedInput[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"tanveersingh10"},"content":"            LocalDateTime toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"tanveersingh10"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"tanveersingh10"},"content":"                fromTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"tanveersingh10"},"content":"                toTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"tanveersingh10"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please use the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"tanveersingh10"},"content":"            Task task \u003d new Event(taskName, fromTime, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"tanveersingh10"},"content":"            String response \u003d taskManager.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":228,"author":{"gitId":"tanveersingh10"},"content":"            updateStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"tanveersingh10"},"content":"            return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"tanveersingh10"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"tanveersingh10"},"content":"         * this function allows the user to delete a task by identifying its index.","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"tanveersingh10"},"content":"         * @param input","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"tanveersingh10"},"content":"         * @param taskManager","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"tanveersingh10"},"content":"         * @throws InvalidArgumentException","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"tanveersingh10"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"tanveersingh10"},"content":"        private String handleDelete(String input, TaskManager taskManager) throws InvalidArgumentException, StorageException {","lastModifiedDate":"2023-09-14"},{"lineNumber":239,"author":{"gitId":"tanveersingh10"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"tanveersingh10"},"content":"                int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":242,"author":{"gitId":"tanveersingh10"},"content":"                String response \u003d taskManager.delete(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"tanveersingh10"},"content":"                updateStorage();","lastModifiedDate":"2023-09-14"},{"lineNumber":244,"author":{"gitId":"tanveersingh10"},"content":"                return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":245,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a numerical index!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":250,"author":{"gitId":"tanveersingh10"},"content":"        private String handleDescribe(String input, TaskManager taskManager) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":251,"author":{"gitId":"tanveersingh10"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-09-15"},{"lineNumber":252,"author":{"gitId":"tanveersingh10"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":253,"author":{"gitId":"tanveersingh10"},"content":"                int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":254,"author":{"gitId":"tanveersingh10"},"content":"                String response \u003d taskManager.getDescription(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":255,"author":{"gitId":"tanveersingh10"},"content":"                return response;","lastModifiedDate":"2023-09-15"},{"lineNumber":256,"author":{"gitId":"tanveersingh10"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":257,"author":{"gitId":"tanveersingh10"},"content":"                throw new InvalidArgumentException(\"Please enter a numerical index!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":258,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":259,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":260,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":261,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanveersingh10":258,"-":3}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":30}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/speed.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ronaldo.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        String greeting \u003d \"Hi! I\u0027m Cristiano. SUIII!!!\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        String response;","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"            TimerTask task \u003d new TimerTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"                public void run() {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"                    Platform.exit();","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"            };","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"            timer.schedule(task, 2000);","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":71}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":" * The Parser class is responsible for parsing user input and extracting relevant information.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":" * It provides methods to parse different types of tasks and commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"     * Extracts the command keyword from the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"     * @return The command keyword extracted from the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    protected String getCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"     * Parses the task description for a ToDo task from the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"     * @return The task description for the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the task description is missing or empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    protected String parseToDo(String input) throws InvalidArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        int indexOfSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        if (indexOfSpace \u003d\u003d -1 || indexOfSpace \u003d\u003d input.length() - 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Please enter a task description.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d input.substring(input.indexOf(\" \") + 1).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Please enter a task description.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        return taskName;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    protected String parseFind(String input) throws InvalidArgumentException {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"        int indexOfSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        if (indexOfSpace \u003d\u003d -1 || indexOfSpace \u003d\u003d input.length() - 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Please enter a keyword\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        String keyword \u003d input.substring(input.indexOf(\" \") + 1).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"        // Check if keyword contains more than one word","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"        if (keyword.isEmpty() || keyword.split(\"\\\\s+\").length \u003e 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Please enter only one keyword\");","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        return keyword;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"     * Parses the task name and due date for a Deadline task from the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"     * @return An array containing the task name and due date.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the input format is incorrect.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"    protected String[] parseDeadline(String input) throws InvalidArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"        String suffix \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"        String[] parts \u003d suffix.split(\" /due \");","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Invalid format for deadline. \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"                    \"Please use: deadline task name /due due Date\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d parts[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"        String dueDate \u003d parts[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"        return new String[]{taskName, dueDate};","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"    protected String[] parseNote(String input) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"        String suffix \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"        String parts[] \u003d suffix.split(\" \", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Invalid format for note. \" +","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"                    \"Please use: note index description\");","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"        return parts;","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"     * Parses the task name, start time, and end time for an Event task from the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"     * @return An array containing the task name, start time, and end time.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the input format is incorrect.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"    protected String[] parseEvent(String input) throws InvalidArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"        String suffix \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"        String[] parts \u003d suffix.split(\" /from \");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Invalid format for event. \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"                    \"Please use: event task_name /from start /to end\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d parts[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"        if (timeParts.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"Invalid format for event. \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"                    \"Please use: event task_name /from start /to end\");","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"        String from \u003d timeParts[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        String to \u003d timeParts[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        return new String[]{taskName, from, to};","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tanveersingh10":109}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.main.TaskManager;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import java.io.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":" * The Storage class is responsible for reading and writing data to and from the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":" * It provides methods to save tasks to the storage file and load tasks from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"     * Saves task data from the TaskManager to the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskManager The TaskManager containing the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"     * @throws StorageException If there is an error while saving data.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"    public void saveData(TaskManager taskManager) throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"            assert bw !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"            for (Task task: taskManager.getList()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"                bw.append(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"            bw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"            throw new StorageException(\"Couldn\u0027t save duke.data\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"     * Loads task data from the storage file and returns a TaskManager.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"     * @return A TaskManager containing the loaded tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"     * @throws StorageException If there is an error while loading data.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager loadData() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"        File savedFile \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"            Scanner fileReader \u003d new Scanner(savedFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"                tasks.add(readLine(fileReader.nextLine()));","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"            TaskManager taskmanager \u003d new TaskManager(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"            return taskmanager;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"            createFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"            return new TaskManager();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"    //refactored to use Single Level of Abstraction","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"    private Task readLine(String line) throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"        line \u003d line.trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"        if (isMatchingPattern(line, \"\\\\[T\\\\]\\\\[(.)\\\\] (.*)\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"            return createTodoTask(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"        } else if (isMatchingPattern(line, \"\\\\[D\\\\]\\\\[(.)\\\\] (.*) \\\\(by: (.*)\\\\)\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"            return createDeadlineTask(line, formatter);","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"        } else if (isMatchingPattern(line, \"\\\\[E\\\\]\\\\[(.)\\\\] (.*) \\\\(from: (.*) to: (.*)\\\\)\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"            return createEventTask(line, formatter);","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"        throw new StorageException(\"There was an issue reading your duke.data\");","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"    private boolean isMatchingPattern(String line, String pattern) {","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        Pattern compiledPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"        Matcher matcher \u003d compiledPattern.matcher(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"        return matcher.matches();","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"    private ToDo createTodoTask(String line) {","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        Matcher matcher \u003d Pattern.compile(\"\\\\[T\\\\]\\\\[(.)\\\\] (.*)\").matcher(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        matcher.find();","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"        return new ToDo(taskName, isDone);","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"    private Deadline createDeadlineTask(String line, DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        Matcher matcher \u003d Pattern.compile(\"\\\\[D\\\\]\\\\[(.)\\\\] (.*) \\\\(by: (.*)\\\\)\").matcher(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"        matcher.find();","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"        String dueString \u003d matcher.group(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime dueTime \u003d LocalDateTime.parse(dueString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"        return new Deadline(taskName, isDone, dueTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"    private Event createEventTask(String line, DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"        Matcher matcher \u003d Pattern.compile(\"\\\\[E\\\\]\\\\[(.)\\\\] (.*) \\\\(from: (.*) to: (.*)\\\\)\").matcher(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"        matcher.find();","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"        boolean isDone \u003d matcher.group(1).equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d matcher.group(2).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"        String fromString \u003d matcher.group(3).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"        String toString \u003d matcher.group(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime fromTime \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime toTime \u003d LocalDateTime.parse(toString, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"        return new Event(taskName, isDone, fromTime, toTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"     * Creates the storage file and its parent directory.","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"     * @throws StorageException If there is an error while creating the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"    public void createFile() throws StorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"tanveersingh10"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"tanveersingh10"},"content":"        File rootDirectory \u003d file.getParent() \u003d\u003d null ? new File(\"parent\") : new File(file.getParent());","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"tanveersingh10"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"tanveersingh10"},"content":"            rootDirectory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"tanveersingh10"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"tanveersingh10"},"content":"            throw new StorageException(\"Unable to create a database\");","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanveersingh10":150}},{"path":"src/main/java/duke/main/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import duke.main.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":" * The TaskManager class manages a list of tasks and provides methods to interact with the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":" * It can add, list, mark, unmark, and delete tasks from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    private int numOfTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    private UI ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a TaskManager with an empty task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"     * Initializes the index, number of tasks, and UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a TaskManager with an existing list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"     * Initializes the index, number of tasks, and UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"     * @param tasks The list of tasks to initialize the TaskManager with.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks \u003d this.list.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"        this.index \u003d this.numOfTasks - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"     * Adds a task to the list and displays change using the UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"    public String add (Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"        this.numOfTasks +\u003d 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"        String taskName \u003d task.getTaskName();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"        String response \u003d ui.addTask(taskName, numOfTasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"     * Lists all tasks in the list using the UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    public String list() {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"        return ui.displayList(list, numOfTasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"     * Marks a task as done by its index in the list and updates the UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the index is out of range.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"    public String mark(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \"duke.tasks.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1; // since 0 indexed","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"        task.mark();","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"        String response \u003d ui.markTask(task.getTaskName());","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"     * Marks a task as not done by its index in the list and updates the UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the index is out of range.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"    public String unmark(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \" duke.tasks.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1; // since 0 indexed","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"        task.unmark();","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"        String response \u003d ui.unMarkTask(task.getTaskName());","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"     * Removes a task from the ArrayList of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"     * @throws InvalidArgumentException If the index is out of range.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"    public String delete(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        assert index \u003e\u003d 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \" duke.tasks.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"        numOfTasks -\u003d 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"tanveersingh10"},"content":"        Task removedTask \u003d list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"tanveersingh10"},"content":"        list.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"tanveersingh10"},"content":"        String response \u003d ui.deleteTask(removedTask.getTaskName(), numOfTasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"tanveersingh10"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"tanveersingh10"},"content":"    public String getDescription(int index) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"tanveersingh10"},"content":"        assert index \u003e\u003d 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"tanveersingh10"},"content":"        if (index \u003e numOfTasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"tanveersingh10"},"content":"            throw new InvalidArgumentException(\"I\u0027m sorry but that task does not exist. There are only \" + numOfTasks + \" duke.tasks.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"tanveersingh10"},"content":"        String note \u003d task.getNote();","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"tanveersingh10"},"content":"        return ui.getDescription(note);","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"tanveersingh10"},"content":"    protected String addNote(int index, String note) {","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"tanveersingh10"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"tanveersingh10"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"tanveersingh10"},"content":"        task.addNote(note);","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"tanveersingh10"},"content":"        return ui.addNote(index + 1, task.getTaskName());","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"tanveersingh10"},"content":"     * Retrieves the list of tasks managed by the TaskManager.","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"tanveersingh10"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"tanveersingh10"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"tanveersingh10"},"content":"        return list;","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"tanveersingh10"},"content":"    protected ArrayList\u003cTask\u003e filterList(String keyword) {","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"tanveersingh10"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"tanveersingh10"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"tanveersingh10"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"tanveersingh10"},"content":"                filteredList.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"tanveersingh10"},"content":"        return filteredList;","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tanveersingh10":156}},{"path":"src/main/java/duke/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"public class UI {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    public String printLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"        return \"______________________________________\";","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    public String greetUser(String chatBotName) {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        return \"Hello from\\n\" + logo + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"                + printLine() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"                + \"Hello! I\u0027m \" + chatBotName + \"! SUIIII!!!\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    public String displayList(ArrayList\u003cTask\u003e list, int numOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(\"Here are the tasks in your list. Finish them all so we can beat Messi.\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"            sb.append((i + 1) + \". \" + list.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine());","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    public String displayError(DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\" + e.getMessage() + \"\\n\" + printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"    public String exit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\" + \"Bye. Hope to see you again in the Saudi League!\" + \"\\n\" + printLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"    public String addTask(String taskName, int numOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        String message \u003d numOfTasks !\u003d 1","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"                ? \"Now you have \" + numOfTasks + \" tasks in your list, just like how I have 5 Ballon d\u0027Ors.\"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"                : \"Now you have \" + numOfTasks + \" task in your list, just like how I have 5 Ballon d\u0027Ors.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"                + \"Got it. I\u0027ve added the task:\\n\" + taskName + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"                + message + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"                + printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"    public String deleteTask(String taskName, int numOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"                + \"Removed task:\\n\" + taskName + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"                + \"Now you have \" + numOfTasks + \" tasks in your list.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"                + printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"    public String markTask(String taskName) {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"                + \"SIUUU! I\u0027ve marked this task as done. We will make Saudi League number 1.\\n [X] \" + taskName + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"                + printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"    public String unMarkTask(String taskName) {","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"        return printLine() + \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"                + \"OK, I\u0027ve marked this task as not done. Cheeky boy!!\\n [ ] \" + taskName + \"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"                + printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"    protected String displayFilteredList(ArrayList\u003cTask\u003e filteredList, int numOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"            sb.append(\"There are no tasks matching your search :(\");","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"            for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"                sb.append((i + 1) + \". \" + filteredList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine());","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"    public String addNote(int index, String taskName) {","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(\"Added your descriptive note for task \");","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(\": \" + taskName);","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"tanveersingh10"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"tanveersingh10"},"content":"    public String getDescription(String note) {","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"tanveersingh10"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"tanveersingh10"},"content":"        if (note !\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"tanveersingh10"},"content":"            sb.append(note);","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"tanveersingh10"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"tanveersingh10"},"content":"            sb.append(\"You did not add a note for this task\");","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"tanveersingh10"},"content":"        sb.append(printLine()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"tanveersingh10"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanveersingh10":111}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":" * The Deadline class represents a task with a specific deadline date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":" * It is a subclass of the Task class and provides methods to work with deadline tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a Deadline task with the given task name and deadline time.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"     * @param time The deadline date and time for the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    public Deadline(String taskName, LocalDateTime time) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"        this.dateTime \u003d time;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a Deadline task with the given task name, completion status, and deadline time.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"     * @param time The deadline date and time for the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    public Deadline(String taskName, boolean done, LocalDateTime time) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"        this.dateTime \u003d time;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"     * Overrides the toString() method to provide a custom string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"     * @return A formatted string containing task details and deadline information.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\").withLocale(Locale.US);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"        String formattedDate \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tanveersingh10":48}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":" * The Event class represents a task that occurs within a specific time range.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":" * It is a subclass of the Task class and provides methods to work with event tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    LocalDateTime fromTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    LocalDateTime toTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs an Event task with the given task name and time range.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"     * @param fromTime The start time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"     * @param toTime The end time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    public Event(String taskName, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs an Event task with the given task name, completion status, and time range.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"     * @param fromTime The start time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"     * @param toTime The end time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"    public Event(String taskName, boolean done, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"     * Overrides the toString() method to provide a custom string representation of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"     * @return A formatted string containing task details and time range.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\").withLocale(Locale.US);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"        String formattedFromTime \u003d fromTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"        String formattedToTime \u003d toTime.format(formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFromTime + \" to: \" + formattedToTime + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tanveersingh10":58}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":" * The Task class represents a basic task with a name and completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":" * It provides methods to work with tasks, such as marking them as done and retrieving their details.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    protected String note;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a Task with the given task name and sets its completion status to false.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        this.note \u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a Task with the given task name and completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    public void addNote(String note) {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"    public String getNote() {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        return this.note;","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a default Task with an untitled task name and sets its completion status to false.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"     * This constructor is used when no task name is provided.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"    public Task() {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        this.taskName \u003d \"Untitled task\";","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"     * Unmarks the task by setting its completion status to false.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"tanveersingh10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tanveersingh10"},"content":"     * Overrides the toString() method to provide a custom string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tanveersingh10"},"content":"     * @return A formatted string containing task status and name.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"tanveersingh10"},"content":"        String status \u003d this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"tanveersingh10"},"content":"        return status + \" \" + taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"tanveersingh10"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"tanveersingh10"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"tanveersingh10"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"tanveersingh10"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"tanveersingh10"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"tanveersingh10"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"tanveersingh10"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"tanveersingh10"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":92}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":" * The ToDo class represents a simple task without any specific time or date associated.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":" * It is a subclass of the Task class and provides methods to work with ToDo tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a ToDo task with the given task name.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"     * Constructs a ToDo task with the given task name and completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"     * @param taskName The name of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public ToDo(String taskName, boolean done) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        super(taskName, done);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"     * Overrides the toString() method to provide a custom string representation of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"     * @return A formatted string containing task details.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tanveersingh10":19}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    public void getCommand_validInput_returnsCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"todo\", parser.getCommand(\"todo read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"deadline\", parser.getCommand(\"deadline return book /due tomorrow\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"event\", parser.getCommand(\"event book club /from 2pm /to 4pm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    public void parseToDo_validInput_returnsTaskName() throws InvalidArgumentException {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"read book\", parser.parseToDo(\"todo read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"    public void parseToDo_noDescription_throwsInvalidArgumentException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e parser.parseToDo(\"todo\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e parser.parseToDo(\"todo \"));","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"    public void parseDeadline_validInput_returnsTaskAndDueDate() throws InvalidArgumentException {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"        String[] expected \u003d new String[]{\"return book\", \"22/09/2023 00:00\"};","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        assertArrayEquals(expected, parser.parseDeadline(\"deadline return book /due 22/09/2023 00:00\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tanveersingh10"},"content":"    public void parseDeadline_misingDueDate_throwsInvalidArgumentException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tanveersingh10"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e parser.parseDeadline(\"deadline return book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tanveersingh10"},"content":"    public void parseEvent_validInput_returnsEventAndDates() throws InvalidArgumentException {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tanveersingh10"},"content":"        String[] expected \u003d new String[]{\"book club\", \"22/10/2023 00:00\", \"22/10/2023 12:00\"};","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tanveersingh10"},"content":"        assertArrayEquals(expected, parser.parseEvent(\"event book club /from 22/10/2023 00:00 /to 22/10/2023 12:00\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tanveersingh10"},"content":"    public void parseEvent_missingDates_throwsInvalidArgumentException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tanveersingh10"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e parser.parseEvent(\"event book club /from 22/10/2023 00:00\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tanveersingh10"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e parser.parseEvent(\"event book club\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tanveersingh10":60}},{"path":"src/test/java/duke/main/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.main;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"class StorageTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"    private String testFilePath \u003d \"testData.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"    public void loadData_fileDoesntExist_createsNewTaskManager() {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"        String randomFileName \u003d \"randomfilename.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        Storage tempStorage \u003d new Storage(randomFileName);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        TaskManager taskManager \u003d assertDoesNotThrow(() -\u003e tempStorage.loadData());","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        assertNotNull(taskManager);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"tanveersingh10"},"content":"    public void testCreateFile_fileDoesntExit_createsNewFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"tanveersingh10"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"tanveersingh10"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"tanveersingh10"},"content":"            file.delete();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"tanveersingh10"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"tanveersingh10"},"content":"        assertDoesNotThrow(() -\u003e storage.createFile());","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"tanveersingh10"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"tanveersingh10":43}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"    private Deadline deadline1;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"    private Deadline deadline2;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        deadline1 \u003d new Deadline(\"Submit Assignment\", LocalDateTime.of(2023, 9, 5, 16, 30));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        deadline2 \u003d new Deadline(\"Complete Project\", true, LocalDateTime.of(2023, 9, 10, 12, 0));","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    public void toString_validDeadlines_correctOutput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"[D][ ] Submit Assignment (by: 05 Sep 2023, 16:30)\", deadline1.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"[D][X] Complete Project (by: 10 Sep 2023, 12:00)\", deadline2.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"    public void constructor_differentDoneValues_correctOutput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        assertFalse(deadline1.isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"        assertTrue(deadline2.isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tanveersingh10":33}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"class EventTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"    public void constructor_newEvent_hasCorrectTimings() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime fromTime \u003d LocalDateTime.of(2023, 9, 20, 9, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime toTime \u003d LocalDateTime.of(2023, 9, 20, 10, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tanveersingh10"},"content":"        Event event \u003d new Event(\"Test Event\", fromTime, toTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"        assertNotNull(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"tanveersingh10"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(\"Test Event\", event.getTaskName());","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(fromTime, event.fromTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(toTime, event.toTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"tanveersingh10"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"tanveersingh10"},"content":"    public void toString_validInput_returnsCorrectString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime fromTime \u003d LocalDateTime.of(2023, 9, 20, 9, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"tanveersingh10"},"content":"        LocalDateTime toTime \u003d LocalDateTime.of(2023, 9, 20, 10, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"tanveersingh10"},"content":"        Event event \u003d new Event(\"Test Event\", fromTime, toTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"tanveersingh10"},"content":"        String expected \u003d \"[E][ ] Test Event (from: 20 Sep 2023, 09:00 to: 20 Sep 2023, 10:00)\";","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"tanveersingh10"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"tanveersingh10"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tanveersingh10"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"tanveersingh10"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"tanveersingh10":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanveersingh10"},"content":"todo send flowers to mom","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tanveersingh10"},"content":"deadline cs2103t assignment /due Tuesday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tanveersingh10"},"content":"event watch oppenheimer /from 7pm /to 10pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tanveersingh10"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tanveersingh10"},"content":"mark hello world","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tanveersingh10"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tanveersingh10"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tanveersingh10"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tanveersingh10"},"content":"yo yo yo","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tanveersingh10"},"content":"delete 100","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tanveersingh10"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tanveersingh10"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tanveersingh10":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tanveersingh10"},"content":"javac  -cp ..\\src\\duke\\java -Xlint:none -d ..\\bin ..\\src\\duke\\java\\*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanveersingh10"},"content":"java -classpath ..\\bin duke.duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tanveersingh10"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanveersingh10":1,"-":37}}]
