[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":" * Encapsulates the Deadline Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":" * @author Donovan Chan Jia Jun","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"public class Deadlines extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"    private String deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"    public Deadlines(String name, String deadline) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"        super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"     * Retrieves the String representation of the Deadline object.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"     * @return String","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"        return String.format(\"[D]%s %s (by: %s)\", super.getMarking(), super.name, this.deadline);","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"DonovanJJ":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":" * @author Donovan Chan Jia Jun","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"     * Temporary data storage to store user text.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"    static ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"    static String line \u003d \"---------------------------------------------------------------------------------------------\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"     * Starting point of the bot.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"     * Says hello - Carries out data storage for user text - Says goodbye","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"     * @param args","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"     * @return void","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"        // Initialise the data storage","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"        Duke.storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"        String chatbotName \u003d \"notDuke\";","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"        String introMessage \u003d \"Hello! I\u0027m \" + chatbotName + \"\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"                        + \"What can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n\", Duke.line, introMessage, Duke.line);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"        Duke.echo();","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"        System.out.printf(\"%s\\n%s\\n\", exitMessage, Duke.line);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"     * Creates the tasks based on String input.","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"     * @param input String input by user","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"     * @return Task Can be Events, Deadlines, Todos","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"     * @throws Exception","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"    public static Task createTask(String input) throws Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"        String[] arrStrings \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"        String command \u003d arrStrings[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"        if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"DonovanJJ"},"content":"            String deadline \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"DonovanJJ"},"content":"            boolean completedName \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"DonovanJJ"},"content":"            for (int i \u003d 1; i \u003c arrStrings.length; i ++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"DonovanJJ"},"content":"                if (arrStrings[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"DonovanJJ"},"content":"                    completedName \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"DonovanJJ"},"content":"                    continue;","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"DonovanJJ"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"DonovanJJ"},"content":"                if (completedName) {","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"DonovanJJ"},"content":"                    deadline +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"DonovanJJ"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"DonovanJJ"},"content":"                    name +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"DonovanJJ"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"DonovanJJ"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"DonovanJJ"},"content":"            return new Deadlines(name.substring(0, name.length() - 1), deadline.substring(0, deadline.length() - 1));","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"DonovanJJ"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"DonovanJJ"},"content":"            if (arrStrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"                throw new Exception(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"            for (int i \u003d 1; i \u003c arrStrings.length; i ++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"                name +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"            return new Todos(name.substring(0, name.length() - 1));","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"            boolean completedName \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"DonovanJJ"},"content":"            boolean completedFrom \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"DonovanJJ"},"content":"            for (int i \u003d 1; i \u003c arrStrings.length; i ++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"DonovanJJ"},"content":"                if (arrStrings[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"DonovanJJ"},"content":"                    completedName \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"DonovanJJ"},"content":"                } else if (arrStrings[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"DonovanJJ"},"content":"                    completedFrom \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"DonovanJJ"},"content":"                } else if (!completedFrom \u0026\u0026 completedName) {","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"DonovanJJ"},"content":"                    from +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"DonovanJJ"},"content":"                } else if (completedFrom \u0026\u0026 completedName) {","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"DonovanJJ"},"content":"                    to +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"DonovanJJ"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"DonovanJJ"},"content":"                    name +\u003d arrStrings[i] + \" \";","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"DonovanJJ"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"DonovanJJ"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"DonovanJJ"},"content":"            return new Events(name.substring(0, name.length() - 1), from.substring(0, from.length() - 1), to.substring(0, to.length() - 1));","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"DonovanJJ"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"DonovanJJ"},"content":"            throw new Exception(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"DonovanJJ"},"content":"     * Encapsulates the Handling and storing of user input.","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"DonovanJJ"},"content":"    public static void echo() {","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"DonovanJJ"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"DonovanJJ"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"DonovanJJ"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"DonovanJJ"},"content":"            String command \u003d userInput.split(\"\\\\s+\")[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"DonovanJJ"},"content":"            int choice;","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"DonovanJJ"},"content":"            switch (command) {","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"DonovanJJ"},"content":"                case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"DonovanJJ"},"content":"                    int counter \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"DonovanJJ"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"DonovanJJ"},"content":"                    for (Task task : Duke.storage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"DonovanJJ"},"content":"                        counter ++;","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"DonovanJJ"},"content":"                        System.out.printf(\"%d.%s\\n\", counter, task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"DonovanJJ"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"DonovanJJ"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"DonovanJJ"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"DonovanJJ"},"content":"                    choice \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"DonovanJJ"},"content":"                    Duke.storage.get(choice - 1).markDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"DonovanJJ"},"content":"                    System.out.printf(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"DonovanJJ"},"content":"                            \"  %s\\n\", Duke.storage.get(choice - 1).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"DonovanJJ"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"DonovanJJ"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"DonovanJJ"},"content":"                    choice \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"DonovanJJ"},"content":"                    Duke.storage.get(choice - 1).markUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"DonovanJJ"},"content":"                    System.out.printf(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"DonovanJJ"},"content":"                            \"  %s\\n\", Duke.storage.get(choice - 1).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"DonovanJJ"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"DonovanJJ"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"DonovanJJ"},"content":"                    choice \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"DonovanJJ"},"content":"//                    System.out.println(Duke.storage.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"DonovanJJ"},"content":"                    Task removedTask \u003d Duke.storage.remove(choice - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"DonovanJJ"},"content":"                    System.out.printf(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"DonovanJJ"},"content":"                                        \"  %s\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"DonovanJJ"},"content":"                                        \"Now you have %d tasks in the list.\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"DonovanJJ"},"content":"                                        , removedTask.toString(), Duke.storage.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"DonovanJJ"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"DonovanJJ"},"content":"                default:","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"DonovanJJ"},"content":"                    Task task \u003d null;","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"DonovanJJ"},"content":"                    try {","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"DonovanJJ"},"content":"                        task \u003d createTask(userInput);","lastModifiedDate":"2023-08-20"},{"lineNumber":134,"author":{"gitId":"DonovanJJ"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"DonovanJJ"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"DonovanJJ"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"DonovanJJ"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"DonovanJJ"},"content":"                        Duke.storage.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"DonovanJJ"},"content":"                        System.out.printf(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"DonovanJJ"},"content":"                                \"  %s\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"DonovanJJ"},"content":"                                \"Now you have %d tasks in the list.\\n\", task.toString(), Duke.storage.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"DonovanJJ"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"DonovanJJ"},"content":"            System.out.println(Duke.line);","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"DonovanJJ"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"DonovanJJ":143,"-":5}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":" * Encapsulates the Events Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":" * @author Donovan Chan Jia Jun","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"    private String from;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"    private String to;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"    public Events(String name, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"        super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"     * Retrieves the String representation of the Events object.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"     * @return String","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"        return String.format(\"[E]%s %s (from: %s to: %s)\", super.getMarking(), super.name, this.from, this.to);","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"DonovanJJ":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":" * Encapsulates the abstract concept of a Task.","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":" * @author Donovan Chan Jia Jun","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"    protected boolean isComplete;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"    protected String name;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"     * Check if task is complete.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"     * @return boolean. True if completed","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"        return this.isComplete;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"     * Marks the task to be completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"     * Marks the task to be incomplete.","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"     * Obtains the String representation of whether task is completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"     * @return String. Symbol of completion","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"    public String getMarking() {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"        if (isComplete()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"            return \"[X]\";","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"        return \"[ ]\";","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"DonovanJJ":45}},{"path":"src/main/java/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":" * Emcapsulates a Todo task","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":" * @author Donovan Chan Jia Jun","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"public class Todos extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"    public Todos(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"        super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"     * Retrieves the string representation of the Todo Object.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"     * @return String Represents the Todo","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"        return String.format(\"[T]%s %s\", super.getMarking(), super.name);","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"DonovanJJ":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"task","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"DonovanJJ":13}}]
