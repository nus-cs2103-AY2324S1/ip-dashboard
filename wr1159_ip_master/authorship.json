[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"# sisyphus.Sisyphus project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"3. After that, locate the `src/main/java/sisyphus.Sisyphus.java` file, right-click it, and choose `Run sisyphus.Sisyphus.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wr1159":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    mainClass.set(\"sisyphus.Sisyphus\")","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    archiveBaseName \u003d \"sisyphus\"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"javafx {","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wr1159":30,"-":40}},{"path":"src/main/java/sisyphus/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private javafx.scene.shape.Rectangle rectangle;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        rectangle.setHeight(dialog.getBoundsInLocal().getHeight() + 20);","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    private void flip() {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"     * Creates User Dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"     * @param text","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * @param img","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     * @return DialogBox with text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"     * Creates Sisyphus Dialog","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"     * @param text","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"     * @param img","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"     * @return DialogBox with text and image for Sisyphus.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    public static DialogBox getSisyphusDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        db.flip();","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        return db;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"wr1159":78}},{"path":"src/main/java/sisyphus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"public class Launcher {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"     * Main function to launch chatbot.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"     * @param args","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"wr1159":17}},{"path":"src/main/java/sisyphus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":" * A GUI for Sisyphus using FXML.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    private Sisyphus sisyphus \u003d new Sisyphus();","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"     * Starts the stage of GUI.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     *              Applications may create other stages, if needed, but they will not be primary stages.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSisyphus(sisyphus);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"            stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"wr1159":36}},{"path":"src/main/java/sisyphus/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private Sisyphus sisyphus;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    private Image sisyphusImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sisyphus.jpg\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public void setSisyphus(Sisyphus s) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        sisyphus \u003d s;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        String response;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        response \u003d sisyphus.getResponse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"                DialogBox.getSisyphusDialog(response, sisyphusImage)","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"wr1159":52}},{"path":"src/main/java/sisyphus/Sisyphus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import sisyphus.parser.Parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import sisyphus.storage.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import sisyphus.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":" * Class for Sisyphus chatbot.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"public class Sisyphus {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"     * Constructor for the Sisyphus chatBot.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    public Sisyphus() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        tasks \u003d storage.loadData();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * Run all components as the driver function.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        boolean isChatting \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        while (isChatting) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"                String fullCommand \u003d ui.readLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"                assert fullCommand !\u003d null : \"Ensure line was read correctly\";","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"                parser.runCommand(fullCommand, tasks, storage, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"                isChatting \u003d parser.getActiveStatus();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"            } catch (SisyphusException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        ui.exit();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"     * Runs CLI version of Sisyphus.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     * @param args","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        Sisyphus sisyphus \u003d new Sisyphus();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        sisyphus.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"     * @param input","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"     * @return Output string after running command","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"            return parser.runCommand(input, tasks, storage, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        } catch (SisyphusException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wr1159":69,"-":2}},{"path":"src/main/java/sisyphus/SisyphusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Class for exceptions related to Sisyphus chatbot.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public class SisyphusException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"    public SisyphusException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"        super(message + \"\\nOtherwise, I can\u0027t be bothered with it.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":11}},{"path":"src/main/java/sisyphus/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import sisyphus.SisyphusException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import sisyphus.storage.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import sisyphus.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":" * Parser class that processes the main logic flow to parse different commands.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    private boolean isChatting;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * Constructor to initialise isChatting as true.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    public Parser() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        isChatting \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"     * Gets whether the parser is still active.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * @return state of isChatting.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        return this.isChatting;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"     * Run different process based on the given command. Commands include","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     * bye, mark, unmark, delete, todo, deadline, event, list.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     * @param fullCommand","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"     * @return output string from UI","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    public String runCommand(String fullCommand, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        String[] inputArray;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        String command;","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        String params \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        inputArray \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        command \u003d inputArray[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        if (inputArray.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"            params \u003d inputArray[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        case (\"bye\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"            isChatting \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        case (\"list\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"            return ui.printTasks(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        case (\"mark\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"            return runMarkCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        case (\"unmark\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"            return runUnmarkCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        case (\"delete\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"            return runDeleteCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        case (\"todo\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"            return runTodoCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        case (\"deadline\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"            return runDeadlineCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        case (\"event\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"            return runEventCommand(params, taskList, storage, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        case (\"find\"): {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"            return runFindCommand(params, taskList, ui);","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        default: {","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"Enter a valid command. Available comments are \"","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"                    + \"bye, find, list, event, deadline, todo, mark, unmark, delete.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after marking a task from the taskList and storage based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"     * @return an output string after marking a task from the taskList and storage based on the params","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    public String runMarkCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"            index \u003d Integer.parseInt(params.split(\" \")[0]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"            taskList.markTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"You must include a valid task number. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"                    + \"Use list to see what is valid.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"        return ui.printMarkTask(taskList, index);","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after unmarking a task from the taskList and storage based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"     * @return an output string after unmarking a task from the taskList and storage based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"    public String runUnmarkCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"        int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"            index \u003d Integer.parseInt(params.split(\" \")[0]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"You must include a valid task number. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"                    + \"Use list to see what is valid.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"        return ui.printUnmarkTask(taskList, index);","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after deleting a task from the taskList and storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"     * @return an output string after deleting a task from the taskList and storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"    public String runDeleteCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"        int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"            index \u003d Integer.parseInt(params.split(\" \")[0]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"            output \u003d ui.printDeleteTask(taskList, index);","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"You must include a valid task number. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"                    + \"Use list to see what is valid.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after adding a ToDo to the taskList and storage based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"     * @return an output string after adding a ToDo to the taskList and storage based on the params","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"wr1159"},"content":"    public String runTodoCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"wr1159"},"content":"        if (params \u003d\u003d \"\" || params \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"Include a description for the sisyphus.task.ToDo. \\nHere is an example: \"","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"wr1159"},"content":"                    + \"todo Roll Boulder\");","lastModifiedDate":"2023-09-08"},{"lineNumber":182,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"wr1159"},"content":"        ToDo todoTask \u003d new ToDo(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"wr1159"},"content":"        assert todoTask !\u003d null : \"Ensure that deadline is created\";","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"wr1159"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"wr1159"},"content":"        return ui.printAddTodo(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after adding an event into the taskList and storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"wr1159"},"content":"     * @return an output string after adding an event into the taskList and storage","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"wr1159"},"content":"    public String runEventCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"wr1159"},"content":"        String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":202,"author":{"gitId":"wr1159"},"content":"        String fromAndToTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":203,"author":{"gitId":"wr1159"},"content":"        String from;","lastModifiedDate":"2023-09-08"},{"lineNumber":204,"author":{"gitId":"wr1159"},"content":"        String to;","lastModifiedDate":"2023-09-08"},{"lineNumber":205,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"wr1159"},"content":"            description \u003d params.split(\" /from \")[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"wr1159"},"content":"            fromAndToTime \u003d params.split(\" /from \")[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"wr1159"},"content":"            from \u003d fromAndToTime.split(\" /to \")[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"wr1159"},"content":"            to \u003d fromAndToTime.split(\" /to \")[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"wr1159"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"Include the description, from and to time for an event. \\nHere is\"","lastModifiedDate":"2023-09-08"},{"lineNumber":212,"author":{"gitId":"wr1159"},"content":"                    + \" an example: event roll boulder /from past /to eternity\");","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"wr1159"},"content":"        Event eventTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"wr1159"},"content":"        assert eventTask !\u003d null : \"Ensure that event is created\";","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"wr1159"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"wr1159"},"content":"        return ui.printAddEvent(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"wr1159"},"content":"     * Returns an output string after adding a deadline into the taskList and storage based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"wr1159"},"content":"     * @param storage","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"wr1159"},"content":"     * @return an output string after adding a deadline into the taskList and storage based on the params","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"wr1159"},"content":"     * @throws SisyphusException","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"wr1159"},"content":"    public String runDeadlineCommand(String params, TaskList taskList, Storage storage, Ui ui) throws SisyphusException {","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"wr1159"},"content":"        String description;","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"wr1159"},"content":"        String deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"wr1159"},"content":"        LocalDate deadlineDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"wr1159"},"content":"            description \u003d params.split(\" /by \")[0];","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"wr1159"},"content":"            deadline \u003d params.split(\" /by \")[1];","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"wr1159"},"content":"            deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"wr1159"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"wr1159"},"content":"            throw new SisyphusException(\"Include both description and deadline for a deadline. \\nHere \"","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"wr1159"},"content":"                    + \"is an example: deadline roll boulder /by 2023-10-15\");","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"wr1159"},"content":"        Deadline deadlineTask \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"wr1159"},"content":"        assert deadlineTask !\u003d null : \"Ensure that deadline is created\";","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":248,"author":{"gitId":"wr1159"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"wr1159"},"content":"        return ui.printAddDeadline(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":250,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"wr1159"},"content":"     * Returns an output string of a list of matching tasks based on the params.","lastModifiedDate":"2023-09-22"},{"lineNumber":254,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":255,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"wr1159"},"content":"     * @param ui","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"wr1159"},"content":"     * @return an output string of a list of matching tasks based on the params","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"wr1159"},"content":"    public String runFindCommand(String params, TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"wr1159"},"content":"        TaskList matchingTaskList \u003d taskList.findMatchingTasks(params);","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"wr1159"},"content":"        return ui.printMatchingTasks(matchingTaskList, params);","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":264}},{"path":"src/main/java/sisyphus/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" * Storage class that stores and reads a local data file in the user\u0027s computer.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    private String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private final String fileName \u003d \"sisyphusData.csv\";","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    private Path filePath \u003d Path.of(currentDirectory, fileName);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     * Attempts to read file in csv format and skip all \"corrupted\" / wrong lines of values.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * If file does not exist, an empty sisyphus.task.TaskList will be returned and a file will be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"     * @return TaskList from the saved file","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public TaskList loadData() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"                FileReader fileReader \u003d new FileReader(filePath.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"                TaskList savedTaskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"                String line;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"                while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"                    String[] params \u003d line.split(\",\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"                    if (params.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"                        continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"                    String type \u003d params[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"                    switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"                    case (\"E\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"                        addEventFromStorage(params, savedTaskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"                    case (\"D\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"                        addDeadlineFromStorage(params, savedTaskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"                    case (\"T\"): {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"                        addToDoFromStorage(params, savedTaskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"                    default: {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"                bufferedReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"                return savedTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"                System.err.println(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"                return new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"            writeFile(new TaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        return new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"     * Takes in a TaskList and writes all tasks in the TaskList to the saved file based on a csv format.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    public void writeFile(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"                stringBuilder.append(taskList.getTask(i).toSaveFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"                stringBuilder.append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"            assert fileWriter !\u003d null : \"Ensure that fileWriter is instantiated to be written\";","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"            fileWriter.write(stringBuilder.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"            System.err.println(\"An error occurred while writing to the file: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"     * Parses the event from the params and saves the event into the savedTaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"     * @param savedTaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"    public void addEventFromStorage(String[] params, TaskList savedTaskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"        if (params.length \u003d\u003d 5) {","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"            Event event \u003d new Event(params[1], params[2].equals(\"1\"), params[3], params[4]);","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"            savedTaskList.addTask(event);","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"     * Parses the deadline from the params and saves the deadline into the savedTaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"     * @param savedTaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"    public void addDeadlineFromStorage(String[] params, TaskList savedTaskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"        if (params.length \u003d\u003d 4) {","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"            LocalDate deadlineDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"                deadlineDate \u003d LocalDate.parse(params[3]);","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"                return;","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"            Deadline deadline \u003d new Deadline(params[1], params[2].equals(\"1\"), deadlineDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"            savedTaskList.addTask(deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"     * Parses the ToDo from the params and saves the ToDo into the savedTaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"     * @param params","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"     * @param savedTaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"    public void addToDoFromStorage(String[] params, TaskList savedTaskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"        if (params.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"            ToDo todo \u003d new ToDo(params[1], params[2].equals(\"1\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"            savedTaskList.addTask(todo);","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":142}},{"path":"src/main/java/sisyphus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":" * Class for deadline to store deadline as localDate.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"     * @param deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description, isDone state and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"     * @param isDone","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     * @param deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    public Deadline(String description, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"     * Formats localDate into MMM d yyyy format.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * @param localDate","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     * @return formatted date in MMM d yyyy format.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    public String formatDate(LocalDate localDate) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"     * Returns string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"     * @return string representation of deadline with status icon and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + formatDate(this.deadline) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"     * Returns string representation used for saveFormat which is csv.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"     * @return string representation with comma as separator.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        return String.format(\"D,%s,%s,%s\", this.description, this.isDone ? \"1\" : \"0\",","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"                this.deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":65}},{"path":"src/main/java/sisyphus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Event class that inherits Task to store events.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"    protected String start;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"    protected String end;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description, start and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"     * @param start","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"     * @param end","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description, isDone state, start and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"     * @param isDone","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     * @param start","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * @param end","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * Returns string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * @return string representation with status icon, start and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (from: \"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"                + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     * Returns string representation used for saveFormat which is csv.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     * @return string representation with comma as separator.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        return String.format(\"E,%s,%s,%s,%s\", description, isDone ? \"1\" : \"0\", start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":57}},{"path":"src/main/java/sisyphus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Abstract class to represent all tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description, isDone will be set to false by default in this case.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description and isDone.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     * @param isDone","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"     * Returns status icon of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"     * @return \"X\" if task is Done and \" \" if Task is not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * Set isDone to the given state.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"     * @param state","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    public void setDone(boolean state) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        this.isDone \u003d state;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     * Returns formatted Task string.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     * @return formatted string with status icon and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * Returns whether task contains keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"     * @param keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"     * @return boolean state.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":69}},{"path":"src/main/java/sisyphus/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":" * Class for TaskList","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"     * Constructor to initialise empty ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * Returns number of items in the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"     * @return number of items","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * Adds the given task into the tasklist","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"     * @param task","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * Gets the task based on the index.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     * @return the task at the given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"     * Mark the task at the given index as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        taskList.get(index).setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"     * Mark the task at the given index as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        taskList.get(index).setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"     * Delete the task at the given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"     * Return the task at the last index.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"     * @return the last task added into the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"    public Task getLastTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        return getTask(getSize() - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"     * Searches through tasks for a taskList with description containing keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"     * @param keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"     * @return taskList with only tasks containing then keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        TaskList matchingTaskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"            // This is C-BetterSearch by using contains","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"            if (this.getTask(i).hasKeyword(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"                matchingTaskList.addTask(this.getTask(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        return matchingTaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":99}},{"path":"src/main/java/sisyphus/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Class for ToDos.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"     * Constructor when provided description and isDone state.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"     * @param description","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * @param isDone","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"     * Returns string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     * @return string representation with status icon and description.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     * Returns string representation used for saveFormat which is csv.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     * @return string representation with comma as separator.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        return String.format(\"T,%s,%s\", description, isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":45}},{"path":"src/main/java/sisyphus/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import sisyphus.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":" * class for UI to print pre-set messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    /** Name of the chatbot */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    private static final String NAME \u003d \"Sisyphus\";","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    /** Horizontal Line string */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    private static final String HORIZONTAL_LINE \u003d \"_________________________________ \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    /** ASCII art that represents sisyphus */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    private static final String LOGO \u003d \"\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"            + \"      ,-\u0027\\\"\\\"\\\"`-.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"            + \"    ,\u0027         `.\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"            + \"   /        `    \\\\\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"            + \"  (    /          )\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"            + \"  |             \\\" |\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"            + \"  (               )\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"            + \" `.\\\\\\\\          \\\\ /\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"            + \"   `:.     , \\\\ ,\\\\ _\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"            + \" WE   `:-.___,-`-.{\\\\)\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"            + \" MUST  `.        |/ \\\\\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"            + \" GO      `.        \\\\ \\\\\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            + \" ON        `-.     _\\\\,)\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"            + \"              `.  |,-||\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"            + \"                `.|| ||\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"     * Constructor to initialise a scanner.","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"     * Return string ofs a horizontal dashed line. Used for separators.","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"     * Reads the next line by scanner.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     * @return line read by scanner","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    public String readLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * Greets user with name.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        System.out.println(\"Hello, I\u0027m \" + NAME + \".\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        System.out.println(\"What can I do for you? Do you want to roll a boulder?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"     * Closes scanner and prints goodbye message.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    public void exit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        System.out.println(\"Goodbye, it was nice chatting with you.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"     * Return string of all the tasks in the given TaskList in a numbered list.","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"    public static String printTasks(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"            output +\u003d i + 1 + \". \" + taskList.getTask(i) + \u0027\\n\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"     * Return string of tasks with the matching keyword.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"     * @param matchingTaskList","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"     * @param keyword","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"    public static String printMatchingTasks(TaskList matchingTaskList, String keyword) {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        output \u003d \"Below is the list of tasks with keyword - \\\"\" + keyword + \"\\\" :\";","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"        for (int i \u003d 0; i \u003c matchingTaskList.getSize(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"            output +\u003d i + 1 + \". \" + matchingTaskList.getTask(i) + \u0027\\n\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"        output +\u003d HORIZONTAL_LINE + \u0027\\n\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"     * Return string of the marked task and the corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"    public static String printMarkTask(TaskList taskList, int index) {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following item has been marked as done. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getTask(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"     * Return string of the unmarked task and the corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    public static String printUnmarkTask(TaskList taskList, int index) {","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following item has been unmarked and is now uncompleted. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getTask(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"     * Return string of the task to be deleted and the corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"    public static String printDeleteTask(TaskList taskList, int index) {","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following item has been deleted from the list. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getTask(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"     * Return string of the most recently added ToDo and a corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"    public static String printAddTodo(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following ToDo has been added. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getLastTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"        output +\u003d \"\\nYou now have \" + taskList.getSize() + \" items in the list. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"     * Return string of the most recent added deadline and a corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"    public static String printAddDeadline(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following deadline has been added. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getLastTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"wr1159"},"content":"        output +\u003d \"\\nYou now have \" + taskList.getSize() + \" items in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"wr1159"},"content":"     * Return string of the most recent added event and a corresponding message.","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"wr1159"},"content":"     * @param taskList","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"wr1159"},"content":"     * @return output string","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"wr1159"},"content":"    public static String printAddEvent(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"wr1159"},"content":"        String output;","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"wr1159"},"content":"        output \u003d \"The following event has been added. \\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"wr1159"},"content":"        output +\u003d taskList.getLastTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"wr1159"},"content":"        output +\u003d \"\\nYou now have \" + taskList.getSize() + \" items in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"wr1159"},"content":"        return output;","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":196}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"      \u003cStackPane prefHeight\u003d\"44.0\" prefWidth\u003d\"265.0\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"            \u003cRectangle fx:id\u003d\"rectangle\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#ffd97a7b\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" width\u003d\"295.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"             \u003cStackPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"                 \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" wrappingWidth\u003d\"272.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"                 \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"                 \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"             \u003c/StackPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"wr1159":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sisyphus.MainWindow\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"wr1159":19}},{"path":"src/test/java/sisyphus/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        LocalDate deadlineDate \u003d LocalDate.of(2023, 9, 15); // Change this to a valid date","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"        String expected \u003d \"[D][ ] Finish project (by: Sep 15 2023)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public void testToSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"        LocalDate deadlineDate \u003d LocalDate.of(2023, 9, 15); // Change this to a valid date","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", false, deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        String expected \u003d \"D,Finish project,0,2023-09-15\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        assertEquals(expected, deadline.toSaveFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    public void testIsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        LocalDate deadlineDate \u003d LocalDate.of(2023, 9, 15); // Change this to a valid date","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", true, deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        assertEquals(true, deadline.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":33}},{"path":"src/test/java/sisyphus/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package sisyphus.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    public void testSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        // Add some tasks and check the size","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(new ToDo(\"Task 2\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    public void testAddTaskAndGetTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        ToDo task \u003d new ToDo(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        // Retrieve the task and check if it\u0027s the same object","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        Task retrievedTask \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        assertEquals(task, retrievedTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        ToDo task \u003d new ToDo(\"Task to be marked\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        assertEquals(false, task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertEquals(true, task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        ToDo task \u003d new ToDo(\"Task to be unmarked\", true);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        assertEquals(true, task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        assertEquals(false, task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        ToDo task \u003d new ToDo(\"Task to be deleted\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    public void testGetLastTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        ToDo task1 \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        ToDo task2 \u003d new ToDo(\"Task 2\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        Task lastTask \u003d taskList.getLastTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        assertEquals(task2, lastTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wr1159":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"todo roll boulder","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"deadline roll boulder /by eternity","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"event roll boulder /from now /to forever","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wr1159":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"java -classpath ..\\bin sisyphus.Sisyphus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wr1159":1,"-":20}}]
