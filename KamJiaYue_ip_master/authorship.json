[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamJiaYue":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    String javaFxVersion \u003d \u002717.0.8\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"    mainClass.set(\"seedu.duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamJiaYue":21,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"T | 1 | read book","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"D | 1 | submit CS2106 lab | 10/09/2023 2359","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"T | 1 | find my car key","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"D | 1 | CS2103T quiz | 13/09/2023 2359","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"T | 0 | upload passport photo to one drive","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"D | 0 | submit CS1101S mission 2 | 23/09/2023 2359","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"T | 0 | buy tomatoes","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"KamJiaYue":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"# DUKE_MASTER Chatbot User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"Welcome to DUKE_MASTER! DUKE_MASTER is a chatbot which helps ","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"you to organize your task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"The purpose of this guide is to brief students of AY 23/24 who are taking","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"CS2103/T about how should this chatbot be used.","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"## Task types","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"### To Do","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"A todo task is a task without any time limitations.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"### Deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"A deadline task is a task that has to be done before the deadline.","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"### Event","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"An event task is an event that has to be attended between ","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"the starting time and the ending time.","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Add ToDo Task","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"Adds a todo task to the task list. ","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"Format: todo YOUR_TASK","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Add Deadline Task","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"Format: deadline YOUR_TASK /by YOUR_DEADLINE","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"YOUR_DEADLINE format: dd/MM/YYYY HHmm","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Add Event Task","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"Adds an event to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"Format: event YOUR_EVENT /from STARTING_TIME /to ENDING_TIME ","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"STARTING_TIME format: dd/MM/YYYY HHmm","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"ENDING_TIME format: dd/MM/YYYY HHmm","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Delete Task","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"Format: delete TASK_INDEX","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"Example: delete 5 (deletes the 5th task in the task list)","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Mark task","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"Marks a task in the task list as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"Format: mark TASK_INDEX","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"Example: mark 5 (marks the 5th task in the task list as done)","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Unmark Task","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"Marks a task in the task list as undone.","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"Format: unmark TASK_INDEX","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"Example: unmark 5 (marks the 5th task in the task list as undone)","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"### Feature - List out all the tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"Lists out all the tasks in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"Format: list","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Find task","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"Finds a task in the task list based on a keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"Format: find KEY_WORD","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"### Feature - Farewell","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"Says bye to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"Format: bye","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"KamJiaYue":74,"-":14}},{"path":"plugin/src/functionalTest/java/ip/IpPluginFunctionalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"/*","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"package ip;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import java.io.Writer;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.testkit.runner.GradleRunner;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.testkit.runner.BuildResult;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":" * A simple functional test for the \u0027ip.greeting\u0027 plugin.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"class IpPluginFunctionalTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"    @TempDir","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    File projectDir;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    private File getBuildFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"        return new File(projectDir, \"build.gradle\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    private File getSettingsFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"        return new File(projectDir, \"settings.gradle\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    @Test void canRunTask() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"        writeString(getSettingsFile(), \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"        writeString(getBuildFile(),","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"            \"plugins {\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"            \"  id(\u0027ip.greeting\u0027)\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"            \"}\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        // Run the build","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        GradleRunner runner \u003d GradleRunner.create();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"        runner.forwardOutput();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"        runner.withPluginClasspath();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"        runner.withArguments(\"greeting\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"        runner.withProjectDir(projectDir);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"        BuildResult result \u003d runner.build();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"        // Verify the result","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"        assertTrue(result.getOutput().contains(\"Hello from plugin \u0027ip.greeting\u0027\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"    private void writeString(File file, String string) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        try (Writer writer \u003d new FileWriter(file)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"            writer.write(string);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":56}},{"path":"plugin/src/main/java/ip/IpPlugin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"/*","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"package ip;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.api.Plugin;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * A simple \u0027hello world\u0027 plugin.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class IpPlugin implements Plugin\u003cProject\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    public void apply(Project project) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"        // Register a task","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"        project.getTasks().register(\"greeting\", task -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"            task.doLast(s -\u003e System.out.println(\"Hello from plugin \u0027ip.greeting\u0027\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":19}},{"path":"plugin/src/test/java/ip/IpPluginTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"/*","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"package ip;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.testfixtures.ProjectBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * A simple unit test for the \u0027ip.greeting\u0027 plugin.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"class IpPluginTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    @Test void pluginRegistersATask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"        // Create a test project and apply the plugin","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"        Project project \u003d ProjectBuilder.builder().build();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"        project.getPlugins().apply(\"ip.greeting\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"        // Verify the result","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"        assertNotNull(project.getTasks().findByName(\"greeting\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":23}},{"path":"src/main/java/seedu/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    private StackPane dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    // private Text dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    // private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for the","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     * DialogBox class.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     * @param text A String representation of","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     *             message.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"     * @param img Image of both parties in the","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"     *            chat.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"        setDialog(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"        setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     * Gets the user dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"     * @param text User\u0027s message.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"     * @param img User\u0027s image.","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"     * @return A DialogBox object containing","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"     *         the user\u0027s message and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"     * Gets Duke\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"     * @param text Duke\u0027s message.","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"     * @return A DialogBox object containing","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"     *         the Duke\u0027s message and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"    //    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"    //     * Sets up this dialog box with various settings.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"    //     *","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"    //     * @param text A String representation of message.","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"    //     */","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"    //    public void setDialog(String text) {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"    //        Font TEXT_FONT \u003d Font.font(\"Andale Mono\", 15.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"    //        int SCROLL_PANE_MAX_WIDTH \u003d 600;","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"    //        int TEXT_BUBBLE_PADDING_X \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"    //        int TEXT_BUBBLE_PADDING_Y \u003d 20;","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"    //        int TEXT_BUBBLE_ARC_WIDTH \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"    //        int TEXT_BUBBLE_ARC_HEIGHT \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"    //        Color TEXT_BUBBLE_COlOR \u003d Color.rgb(255, 255, 255);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"    //        Text message \u003d new Text(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"    //        message.setFont(TEXT_FONT);","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"    //        double messageWidth \u003d message.getLayoutBounds().getWidth();","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"    //        double bubbleWidth \u003d messageWidth + TEXT_BUBBLE_PADDING_X \u003e SCROLL_PANE_MAX_WIDTH","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"    //                ? SCROLL_PANE_MAX_WIDTH","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"    //                : messageWidth + TEXT_BUBBLE_PADDING_X;","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"    //        message.setWrappingWidth(bubbleWidth - TEXT_BUBBLE_PADDING_X);","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"KamJiaYue"},"content":"    //        double messageHeight \u003d message.getLayoutBounds().getHeight();","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"KamJiaYue"},"content":"    //        double bubbleHeight \u003d messageHeight + TEXT_BUBBLE_PADDING_Y;","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"KamJiaYue"},"content":"    //        TextBubble textBubble \u003d new TextBubble();","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"KamJiaYue"},"content":"    //        textBubble.setWidth(bubbleWidth);","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"KamJiaYue"},"content":"    //        textBubble.setHeight(bubbleHeight);","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"KamJiaYue"},"content":"    //        textBubble.setArcWidth(TEXT_BUBBLE_ARC_WIDTH);","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"KamJiaYue"},"content":"    //        textBubble.setArcHeight(TEXT_BUBBLE_ARC_HEIGHT);","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"KamJiaYue"},"content":"    //        textBubble.setFill(TEXT_BUBBLE_COlOR);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"KamJiaYue"},"content":"    //        dialog.getChildren().addAll(textBubble, message);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"KamJiaYue"},"content":"    //    }","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"KamJiaYue"},"content":"     * Sets up this dialog box with various settings.","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"KamJiaYue"},"content":"     * @param text A String representation of message.","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"KamJiaYue"},"content":"    public void setDialog(String text) {","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"KamJiaYue"},"content":"        Font textFont \u003d Font.font(\"Andale Mono\", 15.0);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"KamJiaYue"},"content":"        int scrollPaneMaxWidth \u003d 600;","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"KamJiaYue"},"content":"        int textBubblePaddingX \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"KamJiaYue"},"content":"        int textBubblePaddingY \u003d 20;","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"KamJiaYue"},"content":"        int textBubbleArcWidth \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"KamJiaYue"},"content":"        int textBubbleArcHeight \u003d 30;","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"KamJiaYue"},"content":"        Color textBubbleColor \u003d Color.rgb(255, 255, 255);","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"KamJiaYue"},"content":"        Text message \u003d new Text(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"KamJiaYue"},"content":"        message.setFont(textFont);","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"KamJiaYue"},"content":"        double messageWidth \u003d message.getLayoutBounds().getWidth();","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"KamJiaYue"},"content":"        double bubbleWidth \u003d messageWidth + textBubblePaddingX \u003e scrollPaneMaxWidth","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"KamJiaYue"},"content":"                ? scrollPaneMaxWidth","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"KamJiaYue"},"content":"                : messageWidth + textBubblePaddingX;","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"KamJiaYue"},"content":"        message.setWrappingWidth(bubbleWidth - textBubblePaddingX);","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"KamJiaYue"},"content":"        double messageHeight \u003d message.getLayoutBounds().getHeight();","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"KamJiaYue"},"content":"        double bubbleHeight \u003d messageHeight + textBubblePaddingY;","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"KamJiaYue"},"content":"        TextBubble textBubble \u003d new TextBubble();","lastModifiedDate":"2023-09-09"},{"lineNumber":170,"author":{"gitId":"KamJiaYue"},"content":"        textBubble.setWidth(bubbleWidth);","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"KamJiaYue"},"content":"        textBubble.setHeight(bubbleHeight);","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"KamJiaYue"},"content":"        textBubble.setArcWidth(textBubbleArcWidth);","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"KamJiaYue"},"content":"        textBubble.setArcHeight(textBubbleArcHeight);","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"KamJiaYue"},"content":"        textBubble.setFill(textBubbleColor);","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"KamJiaYue"},"content":"        dialog.getChildren().addAll(textBubble, message);","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"KamJiaYue"},"content":"     * Sets the image of this dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"KamJiaYue"},"content":"     * @param img Image of this dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"KamJiaYue"},"content":"    public void setImage(Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"KamJiaYue"},"content":"        int imgPosX \u003d 50;","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"KamJiaYue"},"content":"        int imgPosY \u003d 55;","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"KamJiaYue"},"content":"        int imgCircleR \u003d 40;","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"KamJiaYue"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"KamJiaYue"},"content":"        displayPicture.setClip(new Circle(","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"KamJiaYue"},"content":"                imgPosX,","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"KamJiaYue"},"content":"                imgPosY,","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"KamJiaYue"},"content":"                imgCircleR));","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":199,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"KamJiaYue"},"content":"    //    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"KamJiaYue"},"content":"    //     * Sets the image of this dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"KamJiaYue"},"content":"    //     *","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"KamJiaYue"},"content":"    //     * @param img Image of this dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"KamJiaYue"},"content":"    //     */","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"KamJiaYue"},"content":"    //    public void setImage(Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"KamJiaYue"},"content":"    //        int IMAGE_POSITION_X \u003d 50;","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"KamJiaYue"},"content":"    //        int IMAGE_POSITION_Y \u003d 55;","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"KamJiaYue"},"content":"    //        int IMAGE_CIRCLE_RADIUS \u003d 40;","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"KamJiaYue"},"content":"    //        displayPicture.setImage(img);","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"KamJiaYue"},"content":"    //","lastModifiedDate":"2023-09-13"},{"lineNumber":212,"author":{"gitId":"KamJiaYue"},"content":"    //        displayPicture.setClip(new Circle(","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"KamJiaYue"},"content":"    //                IMAGE_POSITION_X,","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"KamJiaYue"},"content":"    //                IMAGE_POSITION_Y,","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"KamJiaYue"},"content":"    //                IMAGE_CIRCLE_RADIUS));","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"KamJiaYue"},"content":"    //    }","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":218}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * Represents my version of a chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * It is mainly used for recording tasks like","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * todos, deadlines and events.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class Duke {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        this.startUp(\"./data/duke.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"        return Ui.greet();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * Start and set up the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     * @param filePath Path of the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    public void startUp(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"        this.taskList.setHardDiskFilePath(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"        this.taskList.loadData();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"        String[] response \u003d new String[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"            Command c \u003d this.ui.parseUserInput(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"            c.execute(this.taskList, this.ui, response);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"            response[0] \u003d (e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"        return response[0];","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KamJiaYue":56,"-":2}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":" * Represents a unique type of Exception","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":" * only for the Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * @param message The message of this DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":20}},{"path":"src/main/java/seedu/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"    public static void main(String ... args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":12}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"            stage.setTitle(\"DUKE_MASTER\");","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":30}},{"path":"src/main/java/seedu/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/naruto-smiling.gif\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/minion-dance.gif\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * Initializes the main window of the chat bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"        this.dukeGreet();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"     * Greets the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"    public void dukeGreet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"                DialogBox.getDukeDialog(Duke.greet(), dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":65}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ErrorCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.FindCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.TaskType;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":" * Represents a parser.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":" * A parser is responsible for parsing and making sense of user inputs.","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of this Parser class.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    public Parser() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     * Parses user inputs into valid Commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"     * @return A type of Commands enum to prevent erroneous inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    public Command parse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"            return new AddCommand(input, TaskType.TODO);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"            return new AddCommand(input, TaskType.DEADLINE);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"            return new AddCommand(input, TaskType.EVENT);","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"            return new FindCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        return new ErrorCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"     * Marks a task as checked.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"     * @return The task index of the task to be marked.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"    public int mark(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"            return Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"     * Marks a task as unchecked.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"     * @return The task index of the task to be unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"    public int unmark(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 7) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"            return Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"KamJiaYue"},"content":"     * @return The task index of the task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"KamJiaYue"},"content":"    public int delete(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 7) {","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"KamJiaYue"},"content":"            return Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"KamJiaYue"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates a Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"KamJiaYue"},"content":"     * @return A Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"KamJiaYue"},"content":"    public Task todo(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(Ui.I5 + \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"KamJiaYue"},"content":"        return new Todo(input.substring(5));","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates a Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"KamJiaYue"},"content":"     * @return A Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"KamJiaYue"},"content":"    public Task deadline(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"KamJiaYue"},"content":"            int slashIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"KamJiaYue"},"content":"            String by \u003d input.substring(slashIndex + 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"KamJiaYue"},"content":"            return new Deadline(input.substring(9, slashIndex - 1), by);","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"KamJiaYue"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of a deadline should be \"","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"KamJiaYue"},"content":"                    + \"\u0027deadline YOUR_TASK /by DD/MM/YYYY HHmm\u0027.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"KamJiaYue"},"content":"     * @return An Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"KamJiaYue"},"content":"    public Task event(String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"KamJiaYue"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of an event should be \"","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"KamJiaYue"},"content":"                    + \"\u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"KamJiaYue"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"KamJiaYue"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"KamJiaYue"},"content":"        String eMessage \u003d \"☹ OOPS!!! The format of an event should be \"","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"KamJiaYue"},"content":"                + \"\u0027event YOUR_EVENT /from DD/MM/YYYY HHmm /to DD/MM/YYYY HHmm\u0027.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":210,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":212,"author":{"gitId":"KamJiaYue"},"content":"            String from \u003d input.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"KamJiaYue"},"content":"            String to \u003d input.substring(toIndex + 4);","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":215,"author":{"gitId":"KamJiaYue"},"content":"            LocalDateTime fromTime \u003d parseStringToTime(from);","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"KamJiaYue"},"content":"            LocalDateTime toTime \u003d parseStringToTime(to);","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":218,"author":{"gitId":"KamJiaYue"},"content":"            if (!isValidTimeFrame(fromTime, toTime)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"KamJiaYue"},"content":"                eMessage \u003d \"☹ OOPS!!! \u0027from\u0027 should be before \u0027to\u0027!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":222,"author":{"gitId":"KamJiaYue"},"content":"            return new Event(input.substring(6, fromIndex - 1), from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":223,"author":{"gitId":"KamJiaYue"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(eMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":227,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"KamJiaYue"},"content":"     * Finds the task which the user intends to find.","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input of user.","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"KamJiaYue"},"content":"     * @return The String representation","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"KamJiaYue"},"content":"     *      of the task which the user intends","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"KamJiaYue"},"content":"     *      to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"KamJiaYue"},"content":"    public String find(String input) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify a task to find.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":240,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, \"","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"KamJiaYue"},"content":"                    + \"but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"KamJiaYue"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify a task to find.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":247,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"KamJiaYue"},"content":"        String toFind \u003d input.substring(5);","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"KamJiaYue"},"content":"        return toFind;","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"KamJiaYue"},"content":"     * Parses a time string into a LocalDateTime object.","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"KamJiaYue"},"content":"     * @param timeString Time string to be parsed.","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"KamJiaYue"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"KamJiaYue"},"content":"    public LocalDateTime parseStringToTime(String timeString) {","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"KamJiaYue"},"content":"        return LocalDateTime.parse(timeString, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":263,"author":{"gitId":"KamJiaYue"},"content":"     * Checks if the starting time is before end time.","lastModifiedDate":"2023-10-20"},{"lineNumber":264,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":265,"author":{"gitId":"KamJiaYue"},"content":"     * @param from Starting time of the event.","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"KamJiaYue"},"content":"     * @param to End time of the event.","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"KamJiaYue"},"content":"     * @return true if starting time is before end time, false otherwise.","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"KamJiaYue"},"content":"    public boolean isValidTimeFrame(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"KamJiaYue"},"content":"        return from.isBefore(to);","lastModifiedDate":"2023-10-20"},{"lineNumber":271,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":272,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"KamJiaYue":272}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":" * Represents a storage manager.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":" * A storage manager is responsible for","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":" * reading and writing data into a database","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":" * such as .txt files.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of the Storage class.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    public Storage() {}","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"     * Sets the path of the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     * @param filePath Path of the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"    public void setHardDiskFilePath(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"    };","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"     * Loads data from the storage file to the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"     * @param list Task list to load data to.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"    public void loadData(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        String directoriesPathString \u003d this.getParentDirectoriesPathFromFilePath();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"        Path directoriesPath \u003d Paths.get(directoriesPathString);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"            Files.createDirectories(directoriesPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"            File data \u003d new File(this.filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"            boolean isNewFile \u003d data.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"            if (isNewFile) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"                return;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"            Scanner fileScanner \u003d new Scanner(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"                String input \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"                char taskType \u003d input.charAt(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"                    this.loadTodo(list, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"                    this.loadDeadline(list, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"                    this.loadEvent(list, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"                default:","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"                    throw new DukeException(this.filePath + \" file is corrupted\");","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"     * Loads a Todo task from the storage file to","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"     * the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"     * @param list Task list to load data to.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any file corruptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"    public void loadTodo(List\u003cTask\u003e list, String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"        int[] vLines \u003d newVLines(2, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"        Task task \u003d new Todo(input.substring(vLines[1] + 2));","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"            task.setDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"     * Loads a Deadline task from the storage file to","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"     * the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"     * @param list Task list to load data to.","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any file corruptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"    public void loadDeadline(List\u003cTask\u003e list, String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"        int[] vLines \u003d newVLines(3, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"        String description \u003d input.substring(vLines[1] + 2, vLines[2] - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"        String by \u003d input.substring(vLines[2] + 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"KamJiaYue"},"content":"            task.setDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"KamJiaYue"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"KamJiaYue"},"content":"     * Loads an Event task from the storage file to","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"KamJiaYue"},"content":"     * the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"KamJiaYue"},"content":"     * @param list Task list to load data to.","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any file corruptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"KamJiaYue"},"content":"    public void loadEvent(List\u003cTask\u003e list, String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"KamJiaYue"},"content":"        int[] vLines \u003d newVLines(4, input);","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"KamJiaYue"},"content":"        String description \u003d input.substring(vLines[1] + 2, vLines[2] - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"KamJiaYue"},"content":"        String from \u003d input.substring(vLines[2] + 2, vLines[3] - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"KamJiaYue"},"content":"        String to \u003d input.substring(vLines[3] + 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"KamJiaYue"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"KamJiaYue"},"content":"        if (input.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"KamJiaYue"},"content":"            task.setDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"KamJiaYue"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"KamJiaYue"},"content":"     * Creates an array indicating the indexes of","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"KamJiaYue"},"content":"     * the vertical lines of the user inputs stored","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"KamJiaYue"},"content":"     * in the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"KamJiaYue"},"content":"     * @param size Size of the array to be created.","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"KamJiaYue"},"content":"     * @return An array of a specific size.","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any file corruptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"KamJiaYue"},"content":"    public int[] newVLines(int size, String input) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"KamJiaYue"},"content":"        int[] vLines \u003d new int[size];","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"KamJiaYue"},"content":"        for (int i \u003d 0, j \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"KamJiaYue"},"content":"            if (input.charAt(i) !\u003d \u0027|\u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"KamJiaYue"},"content":"                continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"KamJiaYue"},"content":"            if (input.charAt(i - 1) !\u003d \u0027 \u0027 || input.charAt(i + 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"KamJiaYue"},"content":"                throw new DukeException(this.filePath + \" file is corrupted\");","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"KamJiaYue"},"content":"            vLines[j++] \u003d i;","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"KamJiaYue"},"content":"        return vLines;","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"KamJiaYue"},"content":"     * Gets all the parent directories from the","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"KamJiaYue"},"content":"     * storage file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"KamJiaYue"},"content":"     * @return all the parent directories from the storage file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"KamJiaYue"},"content":"    public String getParentDirectoriesPathFromFilePath() {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"KamJiaYue"},"content":"        String path \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"KamJiaYue"},"content":"        for (int i \u003d this.filePath.length() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"KamJiaYue"},"content":"            if (!this.filePath.substring(i, i + 1).equals(\"/\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"KamJiaYue"},"content":"                continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"KamJiaYue"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"KamJiaYue"},"content":"            path \u003d this.filePath.substring(0, i + 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"KamJiaYue"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"KamJiaYue"},"content":"        return path;","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"KamJiaYue"},"content":"     * Updates the storage file with the latest","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"KamJiaYue"},"content":"     * information in the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"KamJiaYue"},"content":"     * @param list Task list as reference to write data to the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"KamJiaYue"},"content":"    public void updateHardDisk(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"KamJiaYue"},"content":"        File oldFile \u003d new File(this.filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"KamJiaYue"},"content":"        oldFile.delete();","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"KamJiaYue"},"content":"        File newFile \u003d new File(this.filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"KamJiaYue"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"KamJiaYue"},"content":"            Task[] tasks \u003d new Task[list.size()];","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"KamJiaYue"},"content":"            list.toArray(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"KamJiaYue"},"content":"            writeToHardDisk(newFile, tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"KamJiaYue"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"KamJiaYue"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"KamJiaYue"},"content":"     * Writes to the Hard Disk File.","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"KamJiaYue"},"content":"     * @param newFile File to write to.","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"KamJiaYue"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"KamJiaYue"},"content":"     * @throws IOException If there are any IO error.","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"KamJiaYue"},"content":"    public void writeToHardDisk(File newFile, Task ... tasks) throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"KamJiaYue"},"content":"        FileWriter fileWriter \u003d new FileWriter(newFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"KamJiaYue"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"KamJiaYue"},"content":"            fileWriter.write(task.toStringForSave() + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":221,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":222,"author":{"gitId":"KamJiaYue"},"content":"        fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":223,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":224,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"KamJiaYue":224}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * Represents a list of tasks input by users.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for the TaskList class.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     * Sets the path of the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * @param filePath Path of the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    public void setHardDiskFilePath(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.setHardDiskFilePath(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"    };","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     * Loads data to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"    public void loadData() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.loadData(this.list);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"     * Lists out all the tasks in task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"    public String listOutEverything() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"        String tasks \u003d Stream","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"                .iterate(1, i -\u003e i + 1)","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"                .limit(this.list.size())","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"                .map(i -\u003e i + \".\" + this.list.get(i - 1) + \"\\n\")","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"                .reduce(\"\", (x, acc) -\u003e x + acc);","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        return \"Here are the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"     * Checks if the given index is an invalid index","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"     * for operations on the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"     * @param index Index of a task in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"     * @return false if the index is valid, true otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"    public boolean isOutOfRange(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        return index \u003c 0 || this.list.size() \u003c\u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"     * Marks the task as completed and","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"     * updates the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"     * @param index Index of a task in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"    public String mark(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"        String response \u003d this.list.get(index).mark();","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.updateHardDisk(this.list);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"     * Marks the task as not completed and","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"     * updates the storage file.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"     * @param index Index of a task in the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"    public String unmark(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"        String response \u003d this.list.get(index).unmark();","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.updateHardDisk(this.list);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"     * @param task Given task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.updateHardDisk(this.list);","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"                + \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"     * Removes the given task from the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"     * @return A remove task response.","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"    public String remove(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"        Task t \u003d this.list.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"                + t + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"                + \"Now you have \" + this.list.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"        this.storage.updateHardDisk(this.list);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"KamJiaYue"},"content":"     * Finds the task which the user","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"KamJiaYue"},"content":"     * intends to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"KamJiaYue"},"content":"     * @param toFind String representation of what the users","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"KamJiaYue"},"content":"     *               intend to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"KamJiaYue"},"content":"    public String find(String toFind) {","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"KamJiaYue"},"content":"        String matchingTasks \u003d Stream","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"KamJiaYue"},"content":"                .iterate(1, x -\u003e x + 1)","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"KamJiaYue"},"content":"                .limit(this.list.stream()","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"KamJiaYue"},"content":"                        .map(Task::toString)","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"KamJiaYue"},"content":"                        .filter(str -\u003e str.contains(toFind))","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"KamJiaYue"},"content":"                        .count())","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"KamJiaYue"},"content":"                .map(i -\u003e i","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"KamJiaYue"},"content":"                        + \".\"","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"KamJiaYue"},"content":"                        + this.list.stream()","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"KamJiaYue"},"content":"                        .map(Task::toString)","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"KamJiaYue"},"content":"                        .filter(str -\u003e str.contains(toFind))","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"KamJiaYue"},"content":"                        .skip(i - 1)","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"KamJiaYue"},"content":"                        .limit(1)","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"KamJiaYue"},"content":"                        .reduce(\"\", (s, acc) -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"KamJiaYue"},"content":"                                s + acc + \"\\n\"))","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"KamJiaYue"},"content":"                .reduce(\"\", (x, acc) -\u003e x + acc);","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"KamJiaYue"},"content":"        return \"Here are the matching tasks in your list:\\n\" + matchingTasks;","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamJiaYue":146}},{"path":"src/main/java/seedu/duke/TextBubble.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * Represents the text bubble of the","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class TextBubble extends Rectangle {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"KamJiaYue":14}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents the UI used by this chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * A UI is responsible for the managing the","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" * interactions between users and the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    public static final String I4 \u003d \"    \";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    public static final String I5 \u003d Ui.I4 + \" \";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of this Ui class.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    public Ui() {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"        return \"Hello! I\u0027m \" + \"DUKE_MASTER\" + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     * Says bye to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    public String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    public Command parseUserInput(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"     * @return The index of the task to be marked.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"    public int mark(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.mark(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"     * @return The index of the task to be unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"    public int unmark(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.unmark(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"     * Deletes a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     * @return The index of the task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are any user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"    public int delete(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.delete(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates a Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"     * @return A Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"    public Task todo(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.todo(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates a Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"     * @return A Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"    public Task deadline(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.deadline(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"     * Instantiates an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"     * @return An Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"    public Task event(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.event(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"     * Returns the String representation","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"     * of the task which the user intends","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"     * to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"     * @return The String representation","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"     *      of the task which the user intends","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"     *      to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"     * @throws DukeException If there are user input errors.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"    public String find(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"        return this.parser.find(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"KamJiaYue":119}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.TaskType;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" * Represents the add task command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"public class AddCommand extends EditCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    private static final String ADD_TASK_FAILED_MESSAGE \u003d \"☹ OOPS!!! Add task failed.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    private final String input;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    private final TaskType taskType;","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this AddCommand class.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     * @param input Input of user.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskType Type of task to add to task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    public AddCommand(String input, TaskType taskType) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this add command.","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"        Task task;","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"        switch (this.taskType) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"        case TODO:","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"            task \u003d ui.todo(this.input);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"            task \u003d ui.deadline(this.input);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"        case EVENT:","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"            task \u003d ui.event(this.input);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"        default:","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"            task \u003d null;","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"        generateResponse(response, task, taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"     * Generates Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"     * @param task The task to be added to the user\u0027s task list.","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"    public void generateResponse(String[] response, Task task, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"        assert task !\u003d null : AddCommand.ADD_TASK_FAILED_MESSAGE;","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"            response[0] \u003d AddCommand.ADD_TASK_FAILED_MESSAGE;","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"            return;","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":78}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents all sorts of commands input by the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this command.","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    public abstract void execute(TaskList taskList, Ui ui, String[] response) throws Exception;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":23}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * Represents the delete command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class DeleteCommand extends EditCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    private final String input;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this DeleteCommand class.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this delete command.","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"        int deleteIndex \u003d ui.delete(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        assert deleteIndex \u003e\u003d 0 : \"Delete index should be non-negative.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        if (taskList.isOutOfRange(deleteIndex)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.remove(deleteIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":45}},{"path":"src/main/java/seedu/duke/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":" * Represents the commands that requires modifications of user\u0027s task list.","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":10}},{"path":"src/main/java/seedu/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * Represents an error if there are input errors by the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this error command.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":28}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents the exit command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this exit command.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d ui.bye();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":28}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents the find command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    private final String input;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this FindCommand class.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this find command.","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"        String toFind \u003d ui.find(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.find(toFind);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":40}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents the list command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this list command.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.listOutEverything();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":28}},{"path":"src/main/java/seedu/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * Represents the mark command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class MarkCommand extends EditCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    private final String input;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this MarkCommand class.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this mark command.","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"        int markIndex \u003d ui.mark(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        assert markIndex \u003e\u003d 0 : \"Mark index should be non-negative.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        if (taskList.isOutOfRange(markIndex)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.mark(markIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":45}},{"path":"src/main/java/seedu/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * Represents the unmark command input by user.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *  @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *  @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class UnmarkCommand extends EditCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    private final String input;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor for this UnmarkCommand class.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"     * Executes this unmark command.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     * @param taskList User\u0027s task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * @param ui The ui of Duke chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     * @param response The String representation of Duke chat bot\u0027s response after adding this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @throws Exception If there are any user input errors.","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    public void execute(TaskList taskList, Ui ui, String[] response) throws Exception {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"        int unmarkIndex \u003d ui.unmark(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"        assert unmarkIndex \u003e\u003d 0 : \"Unmark index should be non-negative.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"        if (taskList.isOutOfRange(unmarkIndex)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"        response[0] \u003d taskList.unmark(unmarkIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":43}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * This class is inherited from the Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * A Deadline task always have a description and a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of the Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * @param description Description of this Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     * @param by Deadline of this Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"        assert !super.isDone : \"Task should be marked as undone initially.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        this.by \u003d super.parseStringToTime(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this Deadline task when it is saved in the storage.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Deadline task for saving.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"    public String toStringForSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"        return \"D\" + \" | \" + super.toStringForSave() + \" | \" + super.convertTimeForSave(this.by);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this Deadline task when it is printed.","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Deadline task for printing.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.convertTimeToString(this.by) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":49}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * Represents an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * This class is inherited from the Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * An Event task always have a description,","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" * a starting time and an ending time.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of this Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     * @param description Description of this Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     * @param from Starting time of this Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"     * @param to Ending time of this Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"        assert !super.isDone : \"Task should be marked as undone initially.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"        this.from \u003d super.parseStringToTime(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"        this.to \u003d super.parseStringToTime(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this Event task when it is saved in the storage.","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Event task for saving.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    public String toStringForSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        return \"E\" + \" | \" + super.toStringForSave() + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"                + super.convertTimeForSave(this.from) + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"                + super.convertTimeForSave(this.to);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this Event task when it is printed.","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Event task for printing.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"                + \" (from: \" + super.convertTimeToString(this.from)","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"                + \" to: \" + super.convertTimeToString(this.to) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":57}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * Represents a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" * A task must have a description","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" * and a state for recording whether","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * that task is completed or not.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of ths Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"     * @param description Description of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     * Gets the status icon representing the state of this task.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"     * @return \u0027X\u0027 if this task is completed and \u0027 \u0027 otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     * Sets the status of this task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"     * Sets the status of this task as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"     * Marks the status of this task as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"    public String mark() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"        this.setDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + this;","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"     * Marks the status of this task as not completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"        this.setUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + this;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this task when it is saved in the storage.","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this task for saving.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"    public String toStringForSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"        int status \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"     * Parses a time string into a LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"     * @param timeString Time string to be parsed.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"    public LocalDateTime parseStringToTime(String timeString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"        return LocalDateTime.parse(timeString, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"     * Converts a LocalDateTime object into a time string.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"     * @param time LocalDateTime object to be converted.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"     * @return A time string.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"    public String convertTimeToString(LocalDateTime time) {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"     * Converts a LocalDateTime object into a time string when it is saved in the storage.","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"     * @param time LocalDateTime object to be converted.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"     * @return A time string for saving.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"    public String convertTimeForSave(LocalDateTime time) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this task when it is printed.","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this task for printing.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":119}},{"path":"src/main/java/seedu/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":" * Represents various types of user input tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-09-12","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    TODO,","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    EVENT","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"KamJiaYue":13}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":" * This class is inherited from the Task class.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":" * A Deadline task always have a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":" * @author KAM JIA YUE","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"     * The main constructor of the Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"     * @param description Description of this Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"        assert !super.isDone : \"Task should be marked as undone initially.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"     * Todo task when it is saved in the","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"     * storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Todo task for saving.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    public String toStringForSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"        return \"T\" + \" | \" + super.toStringForSave();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"     * Returns a string representation of this","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"     * Todo task when it is printed.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"     * @return a string representation of this Todo task for printing.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"800.0\" style\u003d\"-fx-border-color: #ADDFFF;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"\u003c!--        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-family: \u0027Andale Mono\u0027; -fx-font-size: 15px; -fx-padding: 0px 15px; -fx-border-insets: 15px; -fx-background-insets: 15px;\" /\u003e--\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"\u003c!--        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" style\u003d\"-fx-background-color: #CFECEC; -fx-highlight-text-fill: #CFECEC; -fx-font-family: \u0027Andale Mono\u0027; -fx-font-size: 15px; -fx-padding: 30px; -fx-border-insets: 15px; -fx-background-insets: 15px; \" /\u003e--\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"        \u003cStackPane fx:id\u003d\"dialog\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-font-family: \u0027Andale Mono\u0027;\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: #ADDFFF;\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"788.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"KamJiaYue":19}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    public void testToStringForSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"D | 0 | submit lab | 19/08/2023 1900\",","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"                new Deadline(\"submit lab\", \"19/08/2023 1900\").toStringForSave());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"[D][ ] submit lab (by: 2023-Aug-19 19:00)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"                new Deadline(\"submit lab\", \"19/08/2023 1900\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":23}},{"path":"src/test/java/seedu/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    public void testToStringForSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"E | 0 | NUS GreyHats | 19/09/2023 1800 | 21/09/2023 1800\",","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"                new Event(\"NUS GreyHats\", \"19/09/2023 1800\", \"21/09/2023 1800\").toStringForSave());","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"[E][ ] NUS GreyHats (from: 2023-Sep-19 18:00 to: 2023-Sep-21 18:00)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"                new Event(\"NUS GreyHats\", \"19/09/2023 1800\", \"21/09/2023 1800\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":22}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ErrorCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_bye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_list() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_mark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"mark\") instanceof MarkCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_unmark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"unmark\") instanceof UnmarkCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_delete() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"delete\") instanceof DeleteCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_todo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"todo\") instanceof AddCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_deadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"deadline\") instanceof AddCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_event() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"event\") instanceof AddCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"    public void testParseUserInput_intoCommandsObject_default() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"\") instanceof ErrorCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\"asdf\") instanceof ErrorCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(true, new Parser().parse(\" \") instanceof ErrorCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":64}},{"path":"src/test/java/seedu/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    public void testToStringForSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"T | 0 | read book\", new Todo(\"read book\").toStringForSave());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"        assertEquals(\"[T][ ] read book\", new Todo(\"read book\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"KamJiaYue":19}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"D | 0 | return book | 6/06/2023 1700","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"D | 0 | return book | 23/10/2023 1900","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"E | 0 | project meeting | 11/12/2023 1700 | 11/12/2023 2000","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"KamJiaYue":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"deadline return book /by 06/06/2023 1700","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"event project meeting /from 06/08/2023 1700 /to 06/08/2023 2100","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"unmark 4","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"deadline return book /by 23/10/2023 1900","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"event project meeting /from 11/12/2023 1700 /to 11/12/2023 2000","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"delete 1","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"delete 2","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamJiaYue":1,"-":20}}]
