[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public enum Commands {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"    BYE,","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"    LIST,","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"    MARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"    UNMARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"    DELETE,","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"    TODO,","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"    EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    DEFAULT","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":11}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"import javafx.scene.web.HTMLEditorSkin;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"    private static final String i4 \u003d \"    \";","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    private static final String i5 \u003d Duke.i4 + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"    private static final String i7 \u003d Duke.i5 + \"  \";","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    private static final String line \u003d Duke.i4 + \"——————————————————————————————————————————————————————————————————\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    private String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"    public Duke(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"    public void line() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(Duke.line);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    public void exit() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(Duke.i5 + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"    public void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"KamJiaYue"},"content":"        this.line();","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(Duke.i5 + \"Hello! I\u0027m \" + this.name);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(Duke.i5 + \"What can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"KamJiaYue"},"content":"        this.line();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"KamJiaYue"},"content":"    public void startService() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"KamJiaYue"},"content":"        String input \u003d this.scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"KamJiaYue"},"content":"        boolean exceptionOccurs \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"KamJiaYue"},"content":"        this.line();","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"KamJiaYue"},"content":"        Commands cmd \u003d Commands.DEFAULT;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"KamJiaYue"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"KamJiaYue"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.BYE;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.LIST;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.MARK;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.UNMARK;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.DELETE;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.TODO;","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.DEADLINE;","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"KamJiaYue"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"KamJiaYue"},"content":"            cmd \u003d Commands.EVENT;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"KamJiaYue"},"content":"        switch (cmd) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"KamJiaYue"},"content":"            case BYE:","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"KamJiaYue"},"content":"                this.scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"KamJiaYue"},"content":"                exit();","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"KamJiaYue"},"content":"                this.line();","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"KamJiaYue"},"content":"                return;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"KamJiaYue"},"content":"            case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"KamJiaYue"},"content":"                System.out.println(Duke.i5 + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"KamJiaYue"},"content":"                for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(Duke.i5 + (i + 1) + \".\" + this.list.get(i));","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"KamJiaYue"},"content":"            case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"KamJiaYue"},"content":"                    int index \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"KamJiaYue"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"KamJiaYue"},"content":"                        index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"KamJiaYue"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"KamJiaYue"},"content":"                    if (index \u003c 0 || this.list.size() \u003c\u003d index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be marked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"KamJiaYue"},"content":"                    this.list.get(index).mark();","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"KamJiaYue"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 7) {","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"KamJiaYue"},"content":"                    int index \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"KamJiaYue"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"KamJiaYue"},"content":"                        index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"KamJiaYue"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"KamJiaYue"},"content":"                    if (index \u003c 0 || this.list.size() \u003c\u003d index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be unmarked.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"KamJiaYue"},"content":"                    this.list.get(index).unmark();","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"KamJiaYue"},"content":"            case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 7) {","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"KamJiaYue"},"content":"                    int index \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"KamJiaYue"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"KamJiaYue"},"content":"                        index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"KamJiaYue"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"KamJiaYue"},"content":"                    if (index \u003c 0 || this.list.size() \u003c\u003d index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! Please specify a valid task number to be deleted.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"KamJiaYue"},"content":"                    Task t \u003d this.list.remove(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(Duke.i5 + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(Duke.i7 + t);","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(Duke.i5 + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"KamJiaYue"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"KamJiaYue"},"content":"                    task \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"KamJiaYue"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 9) {","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"KamJiaYue"},"content":"                    if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of a deadline should be \u0027deadline YOUR_TASK /by YOUR_DEADLINE\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"KamJiaYue"},"content":"                    int slashIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003c slashIndex + 4) {","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of a deadline should be \u0027deadline YOUR_TASK /by YOUR_DEADLINE\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"KamJiaYue"},"content":"                    String by \u003d input.substring(slashIndex + 4);","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"KamJiaYue"},"content":"                    if (slashIndex \u003c\u003d 9) {","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The title of your deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":232,"author":{"gitId":"KamJiaYue"},"content":"                    task \u003d new Deadline(input.substring(9, slashIndex - 1), by);","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":234,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":235,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":236,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"KamJiaYue"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":238,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":239,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-22"},{"lineNumber":240,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":241,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":242,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":243,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":244,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":245,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":246,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":247,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-22"},{"lineNumber":248,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":249,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":250,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":251,"author":{"gitId":"KamJiaYue"},"content":"                    if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":252,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":253,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of an event should be \u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":254,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":255,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":256,"author":{"gitId":"KamJiaYue"},"content":"                    int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-22"},{"lineNumber":257,"author":{"gitId":"KamJiaYue"},"content":"                    int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":258,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":259,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(fromIndex + 5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":260,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":261,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of an event should be \u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":262,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":263,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":264,"author":{"gitId":"KamJiaYue"},"content":"                    if (fromIndex \u003e\u003d toIndex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":265,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":266,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of an event should be \u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":267,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":268,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":269,"author":{"gitId":"KamJiaYue"},"content":"                    if (toIndex - 1 - (fromIndex + 6) \u003c 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":270,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":271,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The starting time of an event should not be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":272,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":273,"author":{"gitId":"KamJiaYue"},"content":"                    String from \u003d input.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":274,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":275,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.length() \u003c toIndex + 3) {","lastModifiedDate":"2023-08-22"},{"lineNumber":276,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":277,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The ending time of an event should not be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":278,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":279,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":280,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(toIndex + 3) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":281,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":282,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of an event should be \u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":283,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":284,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":285,"author":{"gitId":"KamJiaYue"},"content":"                    String to \u003d input.substring(toIndex + 4);","lastModifiedDate":"2023-08-22"},{"lineNumber":286,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":287,"author":{"gitId":"KamJiaYue"},"content":"                    if (fromIndex - 1 - 6 \u003c 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":288,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":289,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The title of an event should not be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":290,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":291,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":292,"author":{"gitId":"KamJiaYue"},"content":"                    if (input.charAt(fromIndex - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-22"},{"lineNumber":293,"author":{"gitId":"KamJiaYue"},"content":"                        exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":294,"author":{"gitId":"KamJiaYue"},"content":"                        throw new DukeException(Duke.i5 + \"☹ OOPS!!! The format of an event should be \u0027event YOUR_EVENT /from START_TIME /to END_TIME\u0027.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":295,"author":{"gitId":"KamJiaYue"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":296,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":297,"author":{"gitId":"KamJiaYue"},"content":"                    task \u003d new Event(input.substring(6, fromIndex - 1), from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":298,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":299,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":300,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":301,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":302,"author":{"gitId":"KamJiaYue"},"content":"            default:","lastModifiedDate":"2023-08-22"},{"lineNumber":303,"author":{"gitId":"KamJiaYue"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":304,"author":{"gitId":"KamJiaYue"},"content":"                    exceptionOccurs \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":305,"author":{"gitId":"KamJiaYue"},"content":"                    throw new DukeException(Duke.i5 + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":306,"author":{"gitId":"KamJiaYue"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":307,"author":{"gitId":"KamJiaYue"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":308,"author":{"gitId":"KamJiaYue"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":309,"author":{"gitId":"KamJiaYue"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":310,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":311,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":312,"author":{"gitId":"KamJiaYue"},"content":"        if (!exceptionOccurs \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2023-08-22"},{"lineNumber":313,"author":{"gitId":"KamJiaYue"},"content":"            this.list.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":314,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":315,"author":{"gitId":"KamJiaYue"},"content":"            System.out.println(Duke.i5 + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":316,"author":{"gitId":"KamJiaYue"},"content":"            System.out.println(Duke.i7 + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":317,"author":{"gitId":"KamJiaYue"},"content":"            System.out.println(Duke.i5 + \"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":318,"author":{"gitId":"KamJiaYue"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":319,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":320,"author":{"gitId":"KamJiaYue"},"content":"        this.line();","lastModifiedDate":"2023-08-22"},{"lineNumber":321,"author":{"gitId":"KamJiaYue"},"content":"        startService();","lastModifiedDate":"2023-08-22"},{"lineNumber":322,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":323,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":324,"author":{"gitId":"KamJiaYue"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":325,"author":{"gitId":"KamJiaYue"},"content":"        Duke bot \u003d new Duke(\"Kam_BOT\");","lastModifiedDate":"2023-08-21"},{"lineNumber":326,"author":{"gitId":"KamJiaYue"},"content":"        bot.greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":327,"author":{"gitId":"KamJiaYue"},"content":"        bot.startService();","lastModifiedDate":"2023-08-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KamJiaYue":326,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"KamJiaYue"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(\"       \" + this);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"KamJiaYue"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"KamJiaYue"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"KamJiaYue"},"content":"        System.out.println(\"       \" + this);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"KamJiaYue"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KamJiaYue"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"KamJiaYue"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"KamJiaYue"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"KamJiaYue"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"KamJiaYue"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"KamJiaYue"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"KamJiaYue"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"KamJiaYue"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"KamJiaYue"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"KamJiaYue"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"KamJiaYue"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"KamJiaYue"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"KamJiaYue":12}}]
