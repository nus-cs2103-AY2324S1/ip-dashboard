[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elaineshijie":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"checkstyle {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"    mainClass.set(\"seedu.duke.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"    archiveBaseName \u003d \"lemon-ip-v0.2\"","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"elaineshijie":26}},{"path":"datafile/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"T | 0 | jkdfbvfaobgdbgirebgureignjrgnrkegnrkgnjnjkrgkrngr","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"elaineshijie":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"# User Guide of Lemon ","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"Lemon is a desktop chat bot for managing tasks via a Command Line Interface (CLI) and Graphical User Interface (GUI). ","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"You can categorise your tasks into Event, Deadline and Todo tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"### List","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"List all tasks input by user. ","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"### Todo","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"Add todo tasks by adding task description.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"### Deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"Add deadline tasks by adding task description and deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"### Event","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"Add event tasks by adding task description, start and end date.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"### Mark","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"Mark specified task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"### Unmark","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"Unmark specified task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"### Reschedule","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"Reschedule specified deadline task to new date indicated.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"### Find","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"Find tasks with descriptions that match the specified keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"### `list` - List all tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"List all tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"1. [D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"2. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"### `todo (description)` - Add a todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"Add a todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"`todo Jump 20 times`","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"[T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"1. [D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"2. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"### `deadline(description) /by (YYYY-MM-DD)` - Add a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"Add a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"`deadline Quiz /by 2023-02-12`","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"[D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"1. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"2. [D][] Quiz (by:Feb 12 2023) ","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"### `event(description) /from (YYYY-MM-DD) /to (YYYY-MM-DD)` - Add a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"Add a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"`event Orientation /from 2023-02-12 /to 2023-02-14` ","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"elaineshijie"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"elaineshijie"},"content":"[E][] Orientation (from:Feb 12 2023 to:Feb 14 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"elaineshijie"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"elaineshijie"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"elaineshijie"},"content":"1. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"elaineshijie"},"content":"2. [D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"elaineshijie"},"content":"3. [E][] Orientation (from:Feb 12 2023 to:Feb 14 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"elaineshijie"},"content":"### `mark (task number)` - Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"elaineshijie"},"content":"Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"elaineshijie"},"content":"`mark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"elaineshijie"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"elaineshijie"},"content":"[T][x] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"elaineshijie"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"elaineshijie"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"elaineshijie"},"content":"1. [T][x] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"elaineshijie"},"content":"2. [D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"elaineshijie"},"content":"3. [E][] Orientation (from:Feb 12 2023 to:Feb 14 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"elaineshijie"},"content":"### `unmark (task number)` - Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"elaineshijie"},"content":"Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"elaineshijie"},"content":"`unmark 1`","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"elaineshijie"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"elaineshijie"},"content":"[T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"elaineshijie"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"elaineshijie"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"elaineshijie"},"content":"1. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"elaineshijie"},"content":"2. [D][] Quiz (by:Feb 12 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"elaineshijie"},"content":"3. [E][] Orientation (from:Feb 12 2023 to:Feb 14 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"elaineshijie"},"content":"### `reschedule (task number) /to (YYYY-MM-DD)` - Reschedule a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"elaineshijie"},"content":"Mark a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"elaineshijie"},"content":"`reschedule 1 /to 2023-02-21`","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"elaineshijie"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"elaineshijie"},"content":"[D][] Quiz (by:Feb 21 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"elaineshijie"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":175,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"elaineshijie"},"content":"1. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"elaineshijie"},"content":"2. [D][] Quiz (by:Feb 21 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"elaineshijie"},"content":"3. [E][] Orientation (from:Feb 12 2023 to:Feb 14 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"elaineshijie"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"elaineshijie"},"content":"### `find (keyword)` - Find tasks with matching description.","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"elaineshijie"},"content":"Find a list of tasks with matching description.","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"elaineshijie"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"elaineshijie"},"content":"`find Jump`","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"elaineshijie"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"elaineshijie"},"content":"1. [T][] Jump 20 times","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"elaineshijie"},"content":"2. [T][] Jump 40 times","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"elaineshijie":164,"-":29}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.datafile.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasklist.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":" * Duke is the class representing a chatbot named Lemon.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     * Constructor of Duke that represents the chatbot Lemon with a given filepath that","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"     * stores the tasks that are added by the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"     * @param filePath the file path that stores the task details.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"     * Constructor of Duke that represents the chatbot Lemon with a default filepath that","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"     * stores the tasks that are added by the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"    public Duke() {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"     * Runs the chatbot named Lemon.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"        while (isRunning) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"                isRunning \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"                    Parser.parseTasks(input, tasks, storage, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"                } catch (LemonException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"        ui.bye();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"elaineshijie"},"content":"     * Creates a response based on user\u0027s input","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"     * @param input String of user\u0027s input","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response for user\u0027s command.","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"            return Parser.parseTasks(input, tasks, storage, ui);","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"elaineshijie":104,"-":3}},{"path":"src/main/java/seedu/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.ui.Main;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"elaineshijie":13}},{"path":"src/main/java/seedu/duke/datafile/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.datafile;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":" * The Storage class is responsible for handling the storage and retrieval of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":" * in a text file. It provides methods to save tasks to a file and load tasks from a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new Storage object with a default file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"     * The default file path is \"./datafile/tasks.txt\".","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    public Storage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        this.filePath \u003d \"./datafile/tasks.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new Storage object with a custom file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"     * @param filePath The path of the file where tasks will be stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"     * Saves a list of tasks to the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks An ArrayList of Task objects to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"                System.out.println(\"Creating new file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"            writeToFile(filePath, \"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"            if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"                    addToFile(filePath, tasks.get(i).addDataFormat());","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"            System.out.println(\"Issues saving tasks to storage.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"    private static void addToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"        fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"     * Loads tasks from the data file and returns them as an ArrayList of Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"     * @throws LemonException If the file cannot be found or there is an issue","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"     *                       loading tasks from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"elaineshijie"},"content":"        Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"        // if there is no storage - no tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"            return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"                scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"                    String[] input \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"elaineshijie"},"content":"                    String taskType \u003d input[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"                    System.out.println(taskType);","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"                    switch(taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"                        addT(tasks, input);","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"                        break;","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"elaineshijie"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"elaineshijie"},"content":"                        addD(tasks, input);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"elaineshijie"},"content":"                        break;","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"elaineshijie"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"elaineshijie"},"content":"                        addE(tasks, input);","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"elaineshijie"},"content":"                        break;","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"elaineshijie"},"content":"                    default:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"elaineshijie"},"content":"                        throw new LemonException(\"Failure to load file!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"elaineshijie"},"content":"                    }","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"elaineshijie"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"elaineshijie"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"elaineshijie"},"content":"                throw new LemonException(\"Storage file not available!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"elaineshijie"},"content":"        return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"elaineshijie"},"content":"    private static boolean checkDone(String isDone) {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"elaineshijie"},"content":"        return isDone.equals(\"1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"elaineshijie"},"content":"     * Loads a todo task by adding to the arraylist of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks ArrayList of tasks that was stored previously","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"elaineshijie"},"content":"     * @param input String representation of the todo task stored in Storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"elaineshijie"},"content":"    private static void addT(ArrayList\u003cTask\u003e tasks, String[] input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"elaineshijie"},"content":"        boolean isDoneT \u003d checkDone(input[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"elaineshijie"},"content":"        String descriptionT \u003d input[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"elaineshijie"},"content":"        Task toAddTaskT \u003d new Todo(descriptionT, isDoneT);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"elaineshijie"},"content":"        tasks.add(toAddTaskT);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"elaineshijie"},"content":"     * Loads a deadline task by adding to the arraylist of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks ArrayList of tasks that was stored previously","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"elaineshijie"},"content":"     * @param input String representation of the deadline task stored in Storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"elaineshijie"},"content":"    private static void addD(ArrayList\u003cTask\u003e tasks, String[] input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"elaineshijie"},"content":"        boolean isDoneD \u003d checkDone(input[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"elaineshijie"},"content":"        String descriptionD \u003d input[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"elaineshijie"},"content":"        String by \u003d input[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"elaineshijie"},"content":"            Task toAddTaskD \u003d new Deadline(descriptionD, by, isDoneD);","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"elaineshijie"},"content":"            tasks.add(toAddTaskD);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"elaineshijie"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"elaineshijie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"elaineshijie"},"content":"     * Loads an event task by adding to the arraylist of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks ArrayList of tasks that was stored previously","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"elaineshijie"},"content":"     * @param input String representation of the event task stored in Storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"elaineshijie"},"content":"    private static void addE(ArrayList\u003cTask\u003e tasks, String[] input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"elaineshijie"},"content":"        boolean isDoneE \u003d checkDone(input[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"elaineshijie"},"content":"        String descriptionE \u003d input[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"elaineshijie"},"content":"        String fromE \u003d input[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"elaineshijie"},"content":"        String toE \u003d input[4];","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"elaineshijie"},"content":"            Task toAddTaskE \u003d new Event(descriptionE, fromE, toE, isDoneE);","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"elaineshijie"},"content":"            tasks.add(toAddTaskE);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"elaineshijie"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"elaineshijie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"elaineshijie":174}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The InvalidDeadlineException is thrown when a command that creates a deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * task is not in the correct format.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class InvalidDeadlineException extends LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! Please add a deadline with /by \u0026 date in format yyyy-mm-dd!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The InvalidEventException is thrown when a command that creates a event","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * task is not in the correct format.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class InvalidEventException extends LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! Please add a start and end of the event with /from \u0026 /to!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The InvalidTaskException is thrown when a command is invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"public class InvalidTaskException extends LemonException {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"     * Constructor of InvalidTaskException with the invalid command by user\u0027s input.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"     * @param message the invalid command input.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! I\u0027m sorry, but I don\u0027t know what\" + message + \"means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"elaineshijie":15}},{"path":"src/main/java/seedu/duke/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The InvalidTaskIndexException is thrown when a mark/ unmark command is called","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * on a task that does not exists.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class InvalidTaskIndexException extends LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public InvalidTaskIndexException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! There are no tasks associated with this task number!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The InvalidTodoException is thrown when a command that creates a Todo","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * task is not in the correct format.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class InvalidTodoException extends LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public InvalidTodoException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/KeywordNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The KeywordNotFoundException is thrown when there are no task with","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * the corresponding keyword as task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class KeywordNotFoundException extends LemonException {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public KeywordNotFoundException(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/LemonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The LemonException wraps all exceptions thrown by the commands from the users\u0027 input.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"public class LemonException extends Exception {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"    public LemonException(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"        super(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/exceptions/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * The NoTasksException is thrown when the list command is used and there are no tasks in","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class NoTasksException extends LemonException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public NoTasksException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(\":( OPPS!!! There are no tasks to show in the list!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":11}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.datafile.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidTodoException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.KeywordNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.NoTasksException;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasklist.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":" * The parser class handles all the processing of commands from the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    enum Commands {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"        BYE,","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        MARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"        UNMARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"        DELETE,","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"        LIST,","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"        TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"        DEADLINE,","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"        EVENT,","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"        FIND,","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"        RESCHEDULE","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"     * Calls methods from ui, tasks, storage to handle the actions corresponding to the commands.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"     * @param input the command input by user.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks a TaskList with the tasks by user.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData the Storage that loads, add and delete tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"     * @param ui the Ui object that deals with user input \u0026 output messages to users.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"     * @throws LemonException thrown when commands are invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"    public static String parseTasks(String input, TaskList tasks, Storage tasksData, Ui ui) throws LemonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"        if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"            String commandType \u003d identifyCommand(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"            return doTask(input, tasks, tasksData, ui, commandType);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"            return ui.bye();","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"     * Identifies command based on user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"     * @param input String of user\u0027s input","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of user\u0027s command","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"    private static String identifyCommand(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"        String commandType \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"        return commandType;","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"     * Completed the task by calling other methods in Parser.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"     * @param input String representation of input by user","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage where tasks details are stored.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui used for Lemon.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"     * @param commandType type of command specified by user.","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response to user\u0027s command.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"     * @throws LemonException thrown when command does not exist","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"    private static String doTask(String input, TaskList tasks, Storage tasksData, Ui ui, String commandType)","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"            Commands command \u003d Commands.valueOf(commandType);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"            switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"            case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"                return list(tasks, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"            case MARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"                return mark(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"                return unMark(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"            case TODO:","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"elaineshijie"},"content":"                return todo(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"                return deadline(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"            case EVENT:","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"                return event(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"            case DELETE:","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"                return delete(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"            case FIND:","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"                return find(input, tasks, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"elaineshijie"},"content":"            case RESCHEDULE:","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"                return reschedule(input, tasks, tasksData, ui);","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"                throw new InvalidTaskException(\" \" + input + \" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskException(\" \" + input + \" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"elaineshijie"},"content":"     * To return a list of tasks to users.","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList with all the tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of all the tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"elaineshijie"},"content":"     * @throws NoTasksException thrown when there are no tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"elaineshijie"},"content":"     * @throws LemonException thrown when there is an error loading tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"elaineshijie"},"content":"    private static String list(TaskList tasks, Ui ui) throws NoTasksException, LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"elaineshijie"},"content":"        if (tasks.getTasksSize() \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"elaineshijie"},"content":"            throw new NoTasksException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"elaineshijie"},"content":"        return ui.listAll(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"elaineshijie"},"content":"     * To mark a particular task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"mark\"","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList with all the tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage that stores all the data of user.","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after task is marked done.","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException thrown when users try to mark a non-existent task","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"elaineshijie"},"content":"     *                                  as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"elaineshijie"},"content":"    private static String mark(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"elaineshijie"},"content":"            int indexToMark \u003d Integer.valueOf(input.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"elaineshijie"},"content":"            String taskDescription \u003d tasks.markTask(indexToMark - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"elaineshijie"},"content":"            tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"elaineshijie"},"content":"            return ui.markPrint(taskDescription, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"elaineshijie"},"content":"     * To mark a task as not completed","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"unmark\"","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after task is marked as not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException thrown when users try to mark a non-existent task","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"elaineshijie"},"content":"     *                                  as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"elaineshijie"},"content":"    private static String unMark(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"elaineshijie"},"content":"            int indexToUnmark \u003d Integer.valueOf(input.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"elaineshijie"},"content":"            String unmarkTaskDescription \u003d tasks.unmarkTask(indexToUnmark - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"elaineshijie"},"content":"            tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"elaineshijie"},"content":"            return ui.unmarkPrint(unmarkTaskDescription, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"elaineshijie"},"content":"     * To add a todo task.","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"todo\"","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after todo task is added.","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTodoException thrown when todo task to add is empty","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":180,"author":{"gitId":"elaineshijie"},"content":"    private static String todo(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidTodoException {","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"elaineshijie"},"content":"        String[] taskSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"elaineshijie"},"content":"        if (taskSplit.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTodoException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"elaineshijie"},"content":"        String taskDescription \u003d taskSplit[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"elaineshijie"},"content":"        String taskDescriptionTodo \u003d tasks.addTasks(new Todo(taskDescription));","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"elaineshijie"},"content":"        tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"elaineshijie"},"content":"        return ui.addTasks(taskDescriptionTodo, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"elaineshijie"},"content":"     * To add a deadline task.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"deadline\"","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after deadline task is added.","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidDeadlineException thrown when there is no deadline date added.","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"elaineshijie"},"content":"    private static String deadline(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidDeadlineException {","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"elaineshijie"},"content":"        String task \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"elaineshijie"},"content":"        String[] getDeadlineArray \u003d task.split(\"/by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"elaineshijie"},"content":"        if (getDeadlineArray.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidDeadlineException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"elaineshijie"},"content":"        String taskDesc \u003d getDeadlineArray[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"elaineshijie"},"content":"        String by \u003d getDeadlineArray[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"elaineshijie"},"content":"        Task newDeadlineTask \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"elaineshijie"},"content":"        String taskDescriptionDeadline \u003d tasks.addTasks(newDeadlineTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"elaineshijie"},"content":"        tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"elaineshijie"},"content":"        return ui.addTasks(taskDescriptionDeadline, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":214,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":216,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"elaineshijie"},"content":"     * To add an event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"event\"","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after event task is added.","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidEventException thrown when there is no valid start/ end date of event.","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"elaineshijie"},"content":"    private static String event(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":226,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidEventException {","lastModifiedDate":"2023-09-19"},{"lineNumber":227,"author":{"gitId":"elaineshijie"},"content":"        String inputTask \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"elaineshijie"},"content":"        String[] getEventFromArray \u003d inputTask.split(\"/from \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"elaineshijie"},"content":"        if (getEventFromArray.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidEventException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"elaineshijie"},"content":"        String taskDetails \u003d getEventFromArray[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"elaineshijie"},"content":"        String[] getEventToArray \u003d getEventFromArray[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"elaineshijie"},"content":"        if (getEventToArray.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidEventException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"elaineshijie"},"content":"        String from \u003d getEventToArray[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"elaineshijie"},"content":"        String to \u003d getEventToArray[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"elaineshijie"},"content":"        Task newEventTask \u003d new Event(taskDetails, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"elaineshijie"},"content":"        String taskDescriptionEvent \u003d tasks.addTasks(newEventTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"elaineshijie"},"content":"        tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"elaineshijie"},"content":"        return ui.addTasks(taskDescriptionEvent, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":243,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":245,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":246,"author":{"gitId":"elaineshijie"},"content":"     * To delete a task.","lastModifiedDate":"2023-09-19"},{"lineNumber":247,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"delete\"","lastModifiedDate":"2023-09-19"},{"lineNumber":248,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":249,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of response of Lemon after task is deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException thrown when task to delete does not exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":253,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":254,"author":{"gitId":"elaineshijie"},"content":"    private static String delete(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"elaineshijie"},"content":"            throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-19"},{"lineNumber":256,"author":{"gitId":"elaineshijie"},"content":"        int inputDelete \u003d Integer.valueOf(input.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"elaineshijie"},"content":"            Task taskToDelete \u003d tasks.getTask(inputDelete);","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"elaineshijie"},"content":"            String taskDescriptionDelete \u003d tasks.deleteTask(taskToDelete);","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"elaineshijie"},"content":"            tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"elaineshijie"},"content":"            return ui.deletePrint(taskDescriptionDelete, tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":262,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":266,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":267,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":268,"author":{"gitId":"elaineshijie"},"content":"     * To search for tasks with the keyword in description","lastModifiedDate":"2023-09-19"},{"lineNumber":269,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"delete\"","lastModifiedDate":"2023-09-19"},{"lineNumber":270,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":271,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":272,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of a list of tasks with the keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":273,"author":{"gitId":"elaineshijie"},"content":"     * @throws KeywordNotFoundException thrown when there are no tasks with","lastModifiedDate":"2023-09-19"},{"lineNumber":274,"author":{"gitId":"elaineshijie"},"content":"     *                              description that match keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":275,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":276,"author":{"gitId":"elaineshijie"},"content":"    private static String find(String input, TaskList tasks, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":277,"author":{"gitId":"elaineshijie"},"content":"            throws KeywordNotFoundException {","lastModifiedDate":"2023-09-19"},{"lineNumber":278,"author":{"gitId":"elaineshijie"},"content":"        String[] commandSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":279,"author":{"gitId":"elaineshijie"},"content":"        if (commandSplit.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":280,"author":{"gitId":"elaineshijie"},"content":"            throw new KeywordNotFoundException(\"No Keywords to find!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":281,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":282,"author":{"gitId":"elaineshijie"},"content":"        String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":283,"author":{"gitId":"elaineshijie"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findKeyword(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":284,"author":{"gitId":"elaineshijie"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":285,"author":{"gitId":"elaineshijie"},"content":"            throw new KeywordNotFoundException(\"No Tasks found!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":286,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":287,"author":{"gitId":"elaineshijie"},"content":"        return ui.listMatching(matchingTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":288,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":289,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":290,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":291,"author":{"gitId":"elaineshijie"},"content":"     * To reschedule a deadline task.","lastModifiedDate":"2023-09-19"},{"lineNumber":292,"author":{"gitId":"elaineshijie"},"content":"     * @param input user\u0027s input after command \"reschedule\"","lastModifiedDate":"2023-09-19"},{"lineNumber":293,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks TaskList of user\u0027s tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":294,"author":{"gitId":"elaineshijie"},"content":"     * @param tasksData Storage of user\u0027s tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":295,"author":{"gitId":"elaineshijie"},"content":"     * @param ui Ui instance that is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":296,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that has been rescheduled.","lastModifiedDate":"2023-09-19"},{"lineNumber":297,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskException thrown when task to reschedule does not exist.","lastModifiedDate":"2023-09-19"},{"lineNumber":298,"author":{"gitId":"elaineshijie"},"content":"     * @throws LemonException thrown when reschedule date is not specified.","lastModifiedDate":"2023-09-19"},{"lineNumber":299,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":300,"author":{"gitId":"elaineshijie"},"content":"    private static String reschedule(String input, TaskList tasks, Storage tasksData, Ui ui)","lastModifiedDate":"2023-09-19"},{"lineNumber":301,"author":{"gitId":"elaineshijie"},"content":"            throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":302,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":303,"author":{"gitId":"elaineshijie"},"content":"            String[] indexTask \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":304,"author":{"gitId":"elaineshijie"},"content":"            if (indexTask.length \u003c 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":305,"author":{"gitId":"elaineshijie"},"content":"                throw new LemonException(\"Please include a task number \u0026 date to reschedule to!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":306,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":307,"author":{"gitId":"elaineshijie"},"content":"            String[] getRescheduleTask \u003d indexTask[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":308,"author":{"gitId":"elaineshijie"},"content":"            if (getRescheduleTask.length \u003c 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":309,"author":{"gitId":"elaineshijie"},"content":"                throw new LemonException(\"Please include a date to reschedule to with /to!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":310,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":311,"author":{"gitId":"elaineshijie"},"content":"            int indexToReschedule \u003d Integer.valueOf(getRescheduleTask[0]) - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":312,"author":{"gitId":"elaineshijie"},"content":"            String rescheduleDate \u003d getRescheduleTask[1];","lastModifiedDate":"2023-09-14"},{"lineNumber":313,"author":{"gitId":"elaineshijie"},"content":"            tasks.rescheduleTask(indexToReschedule, rescheduleDate);","lastModifiedDate":"2023-09-14"},{"lineNumber":314,"author":{"gitId":"elaineshijie"},"content":"            tasksData.saveTasks(tasks.getTaskList());","lastModifiedDate":"2023-09-14"},{"lineNumber":315,"author":{"gitId":"elaineshijie"},"content":"            String rescheduleTaskDescription \u003d tasks.getTask(indexToReschedule).toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":316,"author":{"gitId":"elaineshijie"},"content":"            return ui.rescheduleDeadline(rescheduleTaskDescription, tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":317,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":318,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-14"},{"lineNumber":319,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":320,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":321,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"elaineshijie":321}},{"path":"src/main/java/seedu/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasklist;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":" * The TaskList class represents a collection of tasks and provides methods","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":" * for editing tasks, such as adding, marking, unmarking, deleting, and retrieving tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new TaskList with an existing list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The ArrayList of tasks to initialize the TaskList with.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"    public String markTask(Integer index) throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"            Task toMark \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"            toMark.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"            return toMark.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"     * Unmarks a task at the specified index as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that was marked as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"    public String unmarkTask(Integer index) throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"            Task toMark \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"            toMark.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"            return toMark.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"     * Edit the deadline date of a Deadline Task.","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"     * @param newDeadline the new deadline to change to","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException thrown when provided index is invalid","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidDeadlineException thrown when the provided date is invalid","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"    public void rescheduleTask(Integer index, String newDeadline) throws LemonException {","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"            Task toMark \u003d tasks.get(index);","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"            if (toMark instanceof Deadline) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"                Deadline toMarkDeadline \u003d ((Deadline) toMark);","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"                toMarkDeadline.changeDeadline(newDeadline);","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"            } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"                throw new LemonException(\"Only deadline tasks can be rescheduled!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"\");","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"            throw new LemonException(e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"     * @param taskToAdd The Task object to be added to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"    public String addTasks(Task taskToAdd) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"        tasks.add(taskToAdd);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"        return taskToAdd.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"     * @param taskToDelete The Task object to be deleted from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"elaineshijie"},"content":"    public String deleteTask(Task taskToDelete) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"elaineshijie"},"content":"        tasks.remove(taskToDelete);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"elaineshijie"},"content":"        return taskToDelete.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"elaineshijie"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"elaineshijie"},"content":"     * @return Integer that represents the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"elaineshijie"},"content":"    public Integer getTasksSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"elaineshijie"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"elaineshijie"},"content":"     * Retrieves a task at the specified index from the Arraylist of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"elaineshijie"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"elaineshijie"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidTaskIndexException If the provided index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"elaineshijie"},"content":"    public Task getTask(Integer i) throws InvalidTaskIndexException {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"elaineshijie"},"content":"            return tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"elaineshijie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidTaskIndexException(\"Invalid Task Number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"elaineshijie"},"content":"     * Returns the entire list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"elaineshijie"},"content":"     * @return An ArrayList containing all the tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"elaineshijie"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"elaineshijie"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"elaineshijie"},"content":"     * Returns an ArrayList of Tasks with task description that matches the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"elaineshijie"},"content":"     * @param keyword the keyword to find.","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"elaineshijie"},"content":"     * @return An ArrayList of tasks with the matching keyword in task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"elaineshijie"},"content":"    public ArrayList\u003cTask\u003e findKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"elaineshijie"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"elaineshijie"},"content":"        for (Task task : this.getTaskList()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"elaineshijie"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"elaineshijie"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"elaineshijie"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"elaineshijie":161}},{"path":"src/main/java/seedu/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":" * Taken from the Partial Solution given on https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":" * A child class of duke.Tasks, it represents  tasks with a deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"     * Constructor of Deadline object which represents a task with a deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"     * @param description the task description","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidDeadlineException thrown when the deadline is invalid","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    public Deadline(String description, String by) throws InvalidDeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidDeadlineException(\"Invalid data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"     * Constructor of Deadline object which represents a task with a deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"     * This constructor can set isDone of the object and is used to load the","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"     * task list after Lemon is started.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"     * @param description the Deadline task\u0027s description","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     * @param isDone the completion status of the task","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidDeadlineException thrown when deadline is not in correct format.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"    public Deadline(String description, String by, boolean isDone) throws InvalidDeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidDeadlineException(\"Invalid data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"     * To change the deadline to the new deadline indicated by user.","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"     * @param newDeadline date to change deadline of task to.","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidDeadlineException thrown when newDeadline is not","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"     *          in the correct format.","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"    public void changeDeadline(String newDeadline) throws InvalidDeadlineException {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"            this.by \u003d LocalDate.parse(newDeadline);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidDeadlineException(\"Invalid data\");","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    public String addDataFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"        return \"D \" + super.addDataFormat() + \" | \" + by;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":72}},{"path":"src/main/java/seedu/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":" * A child class of duke.Tasks, it represents tasks with a start time \u0026 end time.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"     * Constructor to create an Event object which represents a task with start \u0026 end times.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"     * @param description the Event\u0027s description","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"     * @param start the start date of the description","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"     * @param end the end date of the description","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidEventException thrown when the start \u0026 end date is not in the correct format.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    public Event(String description, String start, String end) throws InvalidEventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"            assert(this.start.compareTo(this.end) \u003c\u003d -1);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidEventException(\"Invalid date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     * Constructor to create an Event object which represents a task with a start and end time.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"     * This constructor can set isDone of the object and is used to load the","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"     * task list after Lemon is started.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"     * @param description the task description","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"     * @param start the start time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"     * @param end the end time of the event","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"     * @param isDone boolean representing whether the task is completed","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"     * @throws InvalidEventException if the command does not have a start, end time","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"    public Event(String description, String start, String end, boolean isDone) throws InvalidEventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"            assert this.start.compareTo(this.end) \u003c\u003d -1 : \"start date should be before end date\";","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"            throw new InvalidEventException(\"Invalid date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"    public String addDataFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"        return \"E \" + super.addDataFormat() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":65}},{"path":"src/main/java/seedu/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * Taken from the Partial Solution given on https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" * A class of duke.Tasks to create tasks that need to be in list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"public class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new Task object with a description.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new Task object with a description and marked status.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"     * @param description String description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"     * @param isDone      Boolean indicating whether the task is done (true) or undone (false).","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"     * Returns a status icon representing the completion status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"     * @return String which is a status icon (\"X\" if done, \" \" if undone).","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"     * Returns a formatted string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"     * The format has the status icon and the task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"     * @return String that represents the task and its completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"     * Returns a formatted string representation of the task\u0027s status for data storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"     * The format has a 1 for done and a 0 for undone and the task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"     * @return String that represents the task to be stored in data file.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"    public String addDataFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"            return \"| 1 | \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"            return \"| 0 | \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"     * Marks the completion status of the task as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"        assert !this.isDone : \"isDone should be not done\";","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"     * Marks the completion status of the task as not done.","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"        assert this.isDone : \"isDone should be done\";","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":85}},{"path":"src/main/java/seedu/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":" * A child class of duke.Tasks, it represents tasks to complete.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"    public String addDataFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"        return \"T \" + super.addDataFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":25}},{"path":"src/main/java/seedu/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"            stage.setTitle(\"LeMon\");","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"elaineshijie":33}},{"path":"src/main/java/seedu/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lemon.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"     * Initialise the main window.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"        displayGreeting();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"     * Creates two dialog boxes, one as the user and capturing input","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"     * and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"                Ui.DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"                Ui.DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"     * Displays the welcome message in a dialog box when Lemon is activated.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"    public void displayGreeting() {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"        Ui.DialogBox greeting \u003d Ui.DialogBox.getDukeDialog(ui.welcomeMessage(), dukeImage);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"        dialogContainer.getChildren().add(greeting);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"elaineshijie":70}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasklist.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":" * The Ui class is responsible for handling user interface interactions and displaying messages to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"     * Displays a welcome message when the application starts.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the welcome message","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"        return (\"Hello! I\u0027m Lemon!\" + System.lineSeparator() + \"What can I do for you?\");","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"     * Displays an error message when there is an issue loading the storage file with tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"        return (\"Error loading storage file!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"     * Returns the message after marking a task as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"     * @param toMarkTask The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the message to display indicating task is completed.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"    public String markPrint(String toMarkTask, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator() + toMarkTask + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"elaineshijie"},"content":"     * Returns the message after unmarking a task as undone.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"elaineshijie"},"content":"     * @param toUnmarkTask The task that was marked as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the message to display indicating task is completed.","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"elaineshijie"},"content":"    public String unmarkPrint(String toUnmarkTask, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"OK, I\u0027ve marked this task as not done yet: \" + System.lineSeparator() + toUnmarkTask + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"elaineshijie"},"content":"     * Returns the message after deleting a task.","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"elaineshijie"},"content":"     * @param toDeleteTask The task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list without the deleted task.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the message to display indicating the task been deleted.","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"elaineshijie"},"content":"    public String deletePrint(String toDeleteTask, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Noted. I\u0027ve removed this task:\" + System.lineSeparator() + toDeleteTask + System.lineSeparator());","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"elaineshijie"},"content":"     * Returns the message after adding a task.","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"elaineshijie"},"content":"     * @param toAddTask The task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list with the added task.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"elaineshijie"},"content":"    public String addTasks(String toAddTask, TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Got it. I\u0027ve added this task: \" + toAddTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\" + System.lineSeparator());","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"elaineshijie"},"content":"     * Returns the message after rescheduling a deadline task.","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"elaineshijie"},"content":"     * @param changeDeadlineTask task to change","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks task list with all tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"elaineshijie"},"content":"     * @return String representation of the task that has been rescheduled.","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"elaineshijie"},"content":"    public String rescheduleDeadline(String changeDeadlineTask, TaskList tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d (\"Got it. I\u0027ve rescheduled this task: \" + System.lineSeparator() + changeDeadlineTask);","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"elaineshijie"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"elaineshijie"},"content":"     * @return String of all the tasks in the TaskList.","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"elaineshijie"},"content":"    public String listAll(TaskList tasks) throws LemonException {","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"elaineshijie"},"content":"            for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"elaineshijie"},"content":"                output +\u003d (i + 1 + \". \" + tasks.getTask(i).toString() + System.lineSeparator());","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"elaineshijie"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"elaineshijie"},"content":"            output +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"elaineshijie"},"content":"            return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"elaineshijie"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"elaineshijie"},"content":"            throw new LemonException(\"Error loading all tasks!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"elaineshijie"},"content":"     * Lists all tasks that matches the keyword in the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"elaineshijie"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"elaineshijie"},"content":"     * @param tasks The TaskList object containing the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"elaineshijie"},"content":"     * @return String of the list of tasks which matches the keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"elaineshijie"},"content":"    public String listMatching(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"elaineshijie"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"elaineshijie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"elaineshijie"},"content":"            output +\u003d (i + 1 + \". \" + tasks.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"elaineshijie"},"content":"        output +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"elaineshijie"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"elaineshijie"},"content":"     * Displays a farewell message when the user exits the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"elaineshijie"},"content":"    public String bye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"elaineshijie"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"elaineshijie"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"elaineshijie"},"content":"     * Creates a Dialog Box in chatbot, for both user\u0027s input \u0026","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"elaineshijie"},"content":"     * the response.","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"elaineshijie"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"elaineshijie"},"content":"    public static class DialogBox extends HBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"elaineshijie"},"content":"        private Text text;","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"elaineshijie"},"content":"        private ImageView displayPicture;","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"elaineshijie"},"content":"        /**","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"elaineshijie"},"content":"         * Constructor of a dialog box","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"elaineshijie"},"content":"         * @param l message input by user or response","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"elaineshijie"},"content":"         * @param iv the image of Lemon or User","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"elaineshijie"},"content":"         */","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"elaineshijie"},"content":"        public DialogBox(String l, Image iv) {","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"elaineshijie"},"content":"            text \u003d new Text(l);","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"elaineshijie"},"content":"            ImageView imageView \u003d new ImageView();","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"elaineshijie"},"content":"            Circle clip \u003d new Circle(30, 30, 30);","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"elaineshijie"},"content":"            imageView.setClip(clip);","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"elaineshijie"},"content":"            imageView.setImage(iv);","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"elaineshijie"},"content":"            displayPicture \u003d imageView;","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"elaineshijie"},"content":"            displayPicture.setFitWidth(60.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"elaineshijie"},"content":"            displayPicture.setFitHeight(60.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"elaineshijie"},"content":"            this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"elaineshijie"},"content":"            this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"elaineshijie"},"content":"        /**","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"elaineshijie"},"content":"         * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"elaineshijie"},"content":"         */","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"elaineshijie"},"content":"        private void flip() {","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"elaineshijie"},"content":"            this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"elaineshijie"},"content":"            ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"elaineshijie"},"content":"            FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"elaineshijie"},"content":"            this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"elaineshijie"},"content":"        public static DialogBox getUserDialog(String l, Image iv) {","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"elaineshijie"},"content":"            return new DialogBox(l, iv);","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"elaineshijie"},"content":"        public static DialogBox getDukeDialog(String l, Image iv) {","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"elaineshijie"},"content":"            var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"elaineshijie"},"content":"            db.flip();","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"elaineshijie"},"content":"            return db;","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"elaineshijie":206}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"        \u003cLabel fx:id\u003d\"text\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"0.20\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"43.0\" fitWidth\u003d\"49.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"elaineshijie":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"            \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"elaineshijie":23}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.datafile.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasklist.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasks.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"        tasks.addTasks(new Todo(\"Jump 20 times\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"    public void listTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"            Parser.parseTasks(\"list\", tasks, storage, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(tasks.getTasksSize(), 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"    public void markTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"            tasks.getTask(0).markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(\"[T][X] Jump 20 times\",","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"                    this.tasks.getTask(0).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"    public void invalidCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"            Parser.parseTasks(\"??\", tasks, storage, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"elaineshijie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(\":( OPPS!!! I\u0027m sorry, but I don\u0027t know what ?? means :-(\" , e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"elaineshijie":60}},{"path":"src/test/java/seedu/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.exceptions.LemonException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"import seedu.duke.tasklist.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"elaineshijie"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"elaineshijie"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"elaineshijie"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"elaineshijie"},"content":"        tasks.addTasks(new Todo(\"Jump 20 times\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"elaineshijie"},"content":"    public void toDoTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(\"[T][ ] Jump 20 times\", this.tasks.getTask(0).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"elaineshijie"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"elaineshijie"},"content":"    public void deadlineTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"elaineshijie"},"content":"            tasks.addTasks(new Deadline(\"Quiz\", \"2022-10-15\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(\"[D][ ] Quiz (by: Oct 15 2022)\", this.tasks.getTask(1).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"elaineshijie"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"elaineshijie"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"elaineshijie"},"content":"    public void eventTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"elaineshijie"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"elaineshijie"},"content":"            tasks.addTasks(new Event(\"Welcome Tea\", \"2022-10-15\", \"2022-10-21\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"elaineshijie"},"content":"            assertEquals(\"[E][ ] Welcome Tea (from: 2022-10-15 to: 2022-10-21)\", this.tasks.getTask(1).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"elaineshijie"},"content":"        } catch (LemonException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"elaineshijie"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"elaineshijie"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"elaineshijie"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"elaineshijie"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"elaineshijie"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"elaineshijie":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elaineshijie"},"content":"todo drink water","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"elaineshijie"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"elaineshijie"},"content":"deadline quiz /by 27 Aug","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"elaineshijie"},"content":"event welcome tea","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"elaineshijie"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"elaineshijie"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"elaineshijie"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"elaineshijie"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"elaineshijie"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"elaineshijie"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"elaineshijie"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"elaineshijie"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"elaineshijie"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"elaineshijie"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"elaineshijie":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"elaineshijie"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"elaineshijie":1}}]
