[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shashahchk":5,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"    mainClass.set(\"core.Launcher\")","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"    archiveFileName\u003d\"duke.jar\"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shashahchk":21,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shashahchk":1}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import core.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Deadlines;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Events;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.ToDos;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import core.Duke.CommandType;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public CommandType getCommandType(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        if (\"bye\".equals(userCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.BYE;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"        } else if (\"list\".equals(userCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.LIST;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.DELETE;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.MARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.UNMARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.TODO;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.DEADLINE;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"event \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.EVENT;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"archive\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"            return CommandType.ARCHIVE;","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"    public List\u003cLocalDateTime\u003e parseDatesFromCommand(String[] parts) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime date \u003d (parts.length \u003e\u003d 4 \u0026\u0026 !parts[3].isEmpty()) ? LocalDateTime.parse(parts[3], formatter)","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime startDate \u003d (parts.length \u003e\u003d 5 \u0026\u0026 !parts[4].isEmpty()) ? LocalDateTime.parse(parts[4], formatter)","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime endDate \u003d (parts.length \u003d\u003d 6 \u0026\u0026 !parts[5].isEmpty()) ? LocalDateTime.parse(parts[5], formatter)","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        return Arrays.asList(date, startDate, endDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"    public Task parseTaskFromFile(String line) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"        boolean isCompleted \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"        List\u003cLocalDateTime\u003e dates \u003d parseDatesFromCommand(parts);","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime date \u003d dates.get(0);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime startDate \u003d dates.get(1);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime endDate \u003d dates.get(2);","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new ToDos(description, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Deadlines(description, date, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Events(description, startDate, endDate, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Invalid task format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"    public Task parseEvent(DateTimeFormatter formatter, String[] parts) throws DukeException{","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Description for the event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"        String[] eventParts \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"        if (eventParts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Start time for event is missing.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"        String[] eventTimes \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"        if (eventTimes.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"End time for event is missing.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime fromDate \u003d LocalDateTime.parse(eventTimes[0], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime toDate \u003d LocalDateTime.parse(eventTimes[1], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"        return new Events(eventParts[0], fromDate, toDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"    public Task parseTodo(String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Description for the todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"        return new ToDos(parts[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"    public Task parseDeadline(DateTimeFormatter formatter, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Description for the deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Deadline timing is missing.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineParts[1], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"        return new Deadlines(deadlineParts[0], deadlineDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"    public Task parseTaskFromCommand(String userCommand) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"        Task task;","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"            case \"event\":","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"                task \u003d parseEvent(formatter, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"                task \u003d parseTodo(parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"                task \u003d parseDeadline(formatter, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"Invalid command. Please enter a valid task type.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"        return task; ","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"    public TaskList parseMatchingTasks(String userCommand, TaskList allTasks) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"        for (Task task : allTasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"        return matchingTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":179}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import Duke.parser.Parser;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Deadlines;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Events;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.ToDos;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    public static String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            return loadFromFile(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Data file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"An error occurred while loading the data.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    public void updateData(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"            saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e loadFromFile(String filename) throws FileNotFoundException {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"            Scanner scanner \u003d new Scanner(new File(filename));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"                if (!isValidFormat(line)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Data file is corrupted. Line not in expected format: \" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d parser.parseTaskFromFile(line);","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"            scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"Data file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"    public boolean isValidFormat(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"        return line.matches(\"^[TDE] \\\\| [01] \\\\| .+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"    public void saveToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) { // Using try-with-resources for automatic closure of","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"                                                              // writer","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"                writer.write(taskToFileString(task) + \"\\n\"); // Convert each task to its file string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"    public String generateTaskStringForFile(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"        if (task instanceof ToDos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"           return (\"T | \");","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Deadlines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"            return (\"D | \");","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"            return (\"E | \");","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"        return \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"    public String generateTaskDatesForFile(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"        String res \u003d\"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"        if (task instanceof Deadlines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"            res +\u003d \" | \" + (((Deadlines) task).getDate().format(outputFormatter));","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"            res +\u003d \" | \" + ((Events) task).getStartDate().format(outputFormatter)","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"            + \" | \" + ((Events) task).getEndDate().format(outputFormatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"        return res;","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"    public String taskToFileString(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"        //append task string","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"        String taskString \u003d generateTaskStringForFile(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"        sb.append(taskString);","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"        //append task completion status","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"        sb.append(task.isCompleted() ? \"1\" : \"0\").append(\" | \");","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"        //append task description","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"        sb.append(task.getDescription());","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"        //append task dates","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"        String dateString \u003d generateTaskDatesForFile(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"        sb.append(dateString);","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"    public String archiveTasksInNewFile(TaskList tasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"        File archiveFile \u003d new File(\"data/archive.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"            FileWriter fw \u003d new FileWriter(archiveFile, true);","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"                fw.write(taskToFileString(task) + System.lineSeparator());","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"            fw.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"            return \"Error archiving tasks \" + e.getMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"        return \"Successfully archived tasks in a new file\";","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"    public String clearFile() {","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"            FileWriter fw \u003d new FileWriter(\"./data\", false);","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"            fw.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"            return \"Error clearing main tasks for archive action \" + e.getMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"        return \"Successfully cleared data from current file.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":160}},{"path":"src/main/java/Duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" * Represents a deadline-based task.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":" * A Deadlines object is a task with a deadline represented by a description and","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":" * a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     * Initializes a new instance of the Deadlines class with a given description","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     * and date.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"     * @param date        Date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if the provided description or date is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public Deadlines(String description, LocalDateTime date) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"date of deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"     * Constructor that creates Deadlines object with three parameters.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"     * @param description description of the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"     * @param date Date of the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"     * @param isCompleted boolean status representing whether task is isisCompleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    public Deadlines(String description, LocalDateTime date, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of deadline cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"date of deadline cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"     * Gets the date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"        return this.date;","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the type of the task. For Deadlines, it returns","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"     *         \"D\".","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        return \"D\";","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"     * Gets a formatted string representation of the Deadlines task.","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the Deadlines task, including its type,","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"     *         completion status, description, and date.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"        String isCompleted \u003d this.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + this.getType() + \"]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        String byMessage \u003d \"by: \" + getDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"        return taskType + isCompleted + this.getDescription() + \"(\" + byMessage + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":89}},{"path":"src/main/java/Duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":" * Represents an event task with a specified start and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" * An Events object is described by a description, start date, and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     * Initializes a new instance of the Events class with the given description, start date, and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if the provided description, start date, or end date is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate)","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"start date of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"end date of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate, boolean isCompleted)","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"start date of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"end date of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        if (startDate.compareTo(endDate) \u003e 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"start date cannot be later than end date.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"     * @return Start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        return this.startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the end date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"     * @return End date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"        return this.endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"     * @return A string indicating the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"        return \"E\";","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"     * Gets a formatted string representation of the Events task.","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the Events task.","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"        String isCompleted \u003d this.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + this.getType() + \"]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        String fromDateString \u003d getStartDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"        String fromMessage \u003d \"from: \" + fromDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"        String toDateString \u003d getEndDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"        String toMessage \u003d \"to: \" + toDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"        return taskType + isCompleted + this.getDescription() + \"(\" + fromMessage + \" \" + toMessage + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":104}},{"path":"src/main/java/Duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    private final String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Creates a new task with a given description.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d false;  // Tasks are unisCompleted by default","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"     * Checks if the task is isCompleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"     * @return true if isCompleted, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the task\u0027s description.","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"     * @return The description.","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d !this.isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"     * Provides a type identifier for the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"     * Since this is a general task, it returns an empty string.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"     * @return Type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        return \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"     * Offers a formatted string showing the task\u0027s type, completion status, and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"     * @return Formatted string of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        String completionStatus \u003d  isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + getType() + \"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"        return taskType + completionStatus + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":71}},{"path":"src/main/java/Duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        return taskList.remove(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    public void clear() {","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        taskList.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        String str \u003d \"There are \" + taskList.size() + \" task[s] in your list\" + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        for (int i\u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"            str +\u003d \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"            for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"                str +\u003d (j + 1) + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"            str +\u003d \"______________________________\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        return str;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":52}},{"path":"src/main/java/Duke/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import Duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import Duke.storage.Storage;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":" * Manages tasks, handling operations like adding, deleting, etc.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    private Parser p \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     * Constructs a TaskManager with a given TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     * @param tasks TaskList to manage.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    public TaskManager(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     * Deletes a task based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the delete operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public String handleDelete(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"        Task removedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid delete command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"            int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"            if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid delete command (this task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"            removedTask \u003d tasks.deleteTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"            return \"Woohoo. I\u0027ve removed this task:\" + removedTask.toString() + updateNumMessage(tasks.size());","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"     * Constructs a message indicating the current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"     * @param numTasks The current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"     * @return A formatted message indicating the count of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"    private String updateNumMessage(int numTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        return \"\\n Now you have \" + numTasks + \" task(s) in the list\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"     * Marks a task as completed based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to mark as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the mark operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    public String handleMark(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"                int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"                if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"invalid mark command (task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d tasks.getTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"                task.toggleCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"                return \"Wow! Good job clearing this task:\" + task;","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid mark command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"           return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"     * Reverts a task to its incomplete status based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the unmark operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"    public String handleUnmark(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"            String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"                int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"                if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"invalid mark command (task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d tasks.getTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"                task.toggleCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"                return \"Okay. I see you haven\u0027t done this task yet\" + (task);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid unmark command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"            return  e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"     * Adds a task based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command describing the task to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the add operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"    public String addTask(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"            Task task \u003d p.parseTaskFromCommand(userCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"            return \"Okay another task added:\" + \"\\n\" + task + updateNumMessage(tasks.size());","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"    public String findTasks(String userCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"            TaskList matchingTasks \u003d p.parseMatchingTasks(userCommand, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"            if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"                return \"No matching tasks.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"            msg.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"            for (Task task : matchingTasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"                msg.append(\"\\n\").append(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"        return msg.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"    public String clearTasks() {","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"        tasks.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"        return \"Success! I\u0027ve cleared all the tasks from the current list\";","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":143}},{"path":"src/main/java/Duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" * Represents a ToDo task without a specific deadline or event date.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":" * A ToDo task is represented by a description.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Creates a new ToDo task with the given description.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @param description The description of ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException If the description is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public ToDos(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"OOPS! The description of ToDo cannot be empty!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    public ToDos(String description, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"OOPS! The description of ToDo cannot be empty!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"     * Indicates that this task is of type \"T\".","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"     * @return The string \"T\" representing a ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        return \"T\";","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":40}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    private static final String horizontal_line \u003d \"_________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        handleStart();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    public String readUserCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"      /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     * Initialises and displays the welcome message for the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public static void handleStart() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        String welcomeMessage \u003d horizontal_line +","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"                \"\\nHello! I\u0027m Blob\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"                horizontal_line;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        String welcomeMessage \u003d horizontal_line +","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"                                \" Hello! I\u0027m Blob\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"                                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"                                horizontal_line;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Bye. Come talk to Blob again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        System.out.println(tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"            System.out.println((i + 1) + \". \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"        System.out.println(message + \"\\n\" + horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Error loading tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    public void showAddTask(Task currTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Got it I have added this task:\" + \"\\n\" + currTask + \"\\n\" + horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":73}},{"path":"src/main/java/core/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import Duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import Duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskManager;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import Duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"import visual.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    private TaskManager tm;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    private final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    private AnchorPane mainLayout;","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        LIST,","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        EVENT,","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        DELETE,","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        UNMARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        BYE,","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        FIND,","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        ARCHIVE,","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        UNKNOWN","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        TODO,","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        EVENT,","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        UNKNOWN","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"        storage \u003d new Storage(FILE_PATH);  ","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        tm \u003d new TaskManager(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"    public void formatWindow(Stage stage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        stage.setResizable(true);","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setTopAnchor(dialogContainer, 0.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setLeftAnchor(dialogContainer, 0.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setRightAnchor(dialogContainer, 0.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(dialogContainer, 40.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setLeftAnchor(userInput , 0.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setRightAnchor(userInput, 60.0);  // leave space for sendButton","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(userInput, 0.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(sendButton, 0.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setRightAnchor(sendButton, 0.0);","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"    public void addHandleUserInputFunctionality() {","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"    public void initializeComponents(Stage stage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"        mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"        stage.show();","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"        initializeComponents(stage);","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"        formatWindow(stage);","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"        addHandleUserInputFunctionality();","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":" * Iteration 1:","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":" * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":" * @param text String containing text to add","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":" * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"    Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"    textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"    return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"    assert userInput !\u003d null : \"UserInput field should be initialized\";","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"    String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"    String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":" ","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"    dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"            DialogBox.getUserDialog(userText,user),","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"            DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"    );","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"    userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"    String response \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"    Parser p \u003d new Parser();","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"    CommandType commandType \u003d p.getCommandType(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"    assert commandType !\u003d CommandType.UNKNOWN : \"Parsed command should always be known\";","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"    switch (commandType) {","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"        case LIST:","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tasks.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"        case BYE:","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"            response \u003d \"Goodbye. See you again\";","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"            storage.updateData(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"        case DELETE:","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.handleDelete(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"        case MARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.handleMark(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.handleUnmark(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"        case EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"        case TODO:","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.addTask(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"        case FIND:","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.findTasks(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"        case ARCHIVE:","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"            response +\u003d storage.archiveTasksInNewFile(tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.clearTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"            response +\u003d storage.clearFile();","lastModifiedDate":"2023-09-19"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"            response +\u003d \"What do you mean? Make sure you speak my language asdfjkasd!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"            break;    ","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"        ","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"    return \"Frodo heard: \" + input + \"\\n\" + response;","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shashahchk":212,"-":2}},{"path":"src/main/java/core/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":" * Represents a custom exception for Duke application.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" * This exception is thrown when Duke-specific conditions are violated.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"     * Constructs a new DukeException with the specified message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"shashahchk":17}},{"path":"src/main/java/core/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":9}},{"path":"src/main/java/core/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import visual.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":32}},{"path":"src/main/java/visual/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package visual;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 0, 0, 10));","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        // Set circular clip on the displayPicture","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        Circle circleClip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 10, 0, 0));","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":72}},{"path":"src/main/java/visual/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package visual;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import core.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(dialogContainer, 30.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setStyle(\"-fx-background-color: red;\");","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #C1E1C1;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"visual.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":19}},{"path":"src/test/java/Duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Events;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import core.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public void parseCommand_WithTodoCommandType_ReturnsCorrectCommandType_ThrowsException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        String command \u003d \"todo run 2 miles\";","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        assertEquals(parser.getCommandType(command), Duke.CommandType.TODO);","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    public void parseCommand_WithInvalidCommandType_ReturnsUnknownCommandType_ThrowsException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        String command \u003d \"Hello\";","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        assertEquals(parser.getCommandType(command), Duke.CommandType.UNKNOWN);","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"shashahchk":33}},{"path":"src/test/java/Duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    public void createDeadLine_WithValidInputs_ReturnsCorrectDescription() throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.parse(\"2023-09-01 05:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        Deadlines deadline \u003d new Deadlines(\"Sample Deadline\", deadlineTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"        assertEquals(\"Sample Deadline\", deadline.getDescription());","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public void createDeadLine_WithValidInputs_ReturnsCorrectMarkStatus() throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime deadlineTime \u003d LocalDateTime.parse(\"2023-09-01 05:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        Deadlines deadline \u003d new Deadlines(\"Sample Deadline\", deadlineTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        assertFalse(deadline.isCompleted(), \"New todo should not be marked as done\");","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"shashahchk":33}},{"path":"src/test/java/Duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of an Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     * Ensures that when an event is created with a specific description,","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     * the getDescription method returns the correct description.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if there is an error during event creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    public void createEvent_WithValidDates_ReturnsCorrectDescription() throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2023-09-01 05:00\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-10-01 06:00\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        Events e \u003d new Events(\"Table tennis\", fromDateTime, toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        assertEquals(\"Table tennis\", e.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    public void createEvent_WithEmptyDescription_ThrowsException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2023-09-01 05:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-10-01 06:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"            new Events(\"\", fromDateTime, toDateTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    public void createEvent_WithStartDateLaterThanEndDate_ThrowsException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2024-09-01 05:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-10-01 06:00\", formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"            new Events(\"\", fromDateTime, toDateTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"shashahchk":52}},{"path":"src/test/java/Duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of a Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Ensures that new event has correct description and is unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if there is an error during creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public void createToDo_WithValidInputs_ReturnsCorrectMarkStatus() throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        ToDos todo \u003d new ToDos(\"Sample Task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"        assertEquals(\"Sample Task\", todo.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        assertFalse(todo.isCompleted(), \"New todo should not be marked as done\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of a Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"     * Ensures that exception is thrown if empty description in creation of Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public void createToDo_WithEmptyDescription_ThrowsException() {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            new ToDos(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"shashahchk":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"todo eat food","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"event table tennis /from 2 pm /to 4 pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"deadline submit hw /by 29 August","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"event interfaculty games /from 9 am /to 7 pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"todo run 2 miles","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"shashahchk":15}}]
