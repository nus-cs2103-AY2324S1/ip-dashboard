[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shashahchk":5,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"    archiveFileName\u003d\"duke.jar\"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shashahchk":20,"-":42}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"shashahchk":1}},{"path":"node_modules/balanced-match/LICENSE.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"(MIT)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2013 Julian Gruber \u0026lt;julian@juliangruber.com\u0026gt;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy of","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"this software and associated documentation files (the \"Software\"), to deal in","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"the Software without restriction, including without limitation the rights to","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"of the Software, and to permit persons to whom the Software is furnished to do","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"so, subject to the following conditions:","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"The above copyright notice and this permission notice shall be included in all","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"copies or substantial portions of the Software.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"SOFTWARE.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":21}},{"path":"node_modules/balanced-match/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# balanced-match","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Match balanced string pairs, like `{` and `}` or `\u003cb\u003e` and `\u003c/b\u003e`. Supports regular expressions as well!","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![build status](https://secure.travis-ci.org/juliangruber/balanced-match.svg)](http://travis-ci.org/juliangruber/balanced-match)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![downloads](https://img.shields.io/npm/dm/balanced-match.svg)](https://www.npmjs.org/package/balanced-match)","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"## Example","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"Get the first matching pair of braces:","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"var balanced \u003d require(\u0027balanced-match\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"console.log(balanced(\u0027{\u0027, \u0027}\u0027, \u0027pre{in{nested}}post\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"console.log(balanced(\u0027{\u0027, \u0027}\u0027, \u0027pre{first}between{second}post\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"console.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, \u0027pre  {   in{nest}   }  post\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"The matches are:","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"```bash","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"$ node example.js","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"{ start: 3, end: 14, pre: \u0027pre\u0027, body: \u0027in{nested}\u0027, post: \u0027post\u0027 }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"{ start: 3,","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  end: 9,","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"  pre: \u0027pre\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"  body: \u0027first\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"  post: \u0027between{second}post\u0027 }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"{ start: 3, end: 17, pre: \u0027pre\u0027, body: \u0027in{nest}\u0027, post: \u0027post\u0027 }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"### var m \u003d balanced(a, b, str)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"For the first non-nested matching pair of `a` and `b` in `str`, return an","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"object with those keys:","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"* **start** the index of the first match of `a`","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"* **end** the index of the matching `b`","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"* **pre** the preamble, `a` and `b` not included","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"* **body** the match, `a` and `b` not included","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"* **post** the postscript, `a` and `b` not included","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"If there\u0027s no match, `undefined` will be returned.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"If the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[\u0027{\u0027, \u0027a\u0027, \u0027\u0027]` and `{a}}` will match `[\u0027\u0027, \u0027a\u0027, \u0027}\u0027]`.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"### var r \u003d balanced.range(a, b, str)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"For the first non-nested matching pair of `a` and `b` in `str`, return an","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"array with indexes: `[ \u003ca index\u003e, \u003cb index\u003e ]`.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"If there\u0027s no match, `undefined` will be returned.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"If the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[ 1, 3 ]` and `{a}}` will match `[0, 2]`.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"With [npm](https://npmjs.org) do:","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"```bash","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"npm install balanced-match","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"## Security contact information","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"To report a security vulnerability, please use the","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"[Tidelift security contact](https://tidelift.com/security).","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"Tidelift will coordinate the fix and disclosure.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"## License","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"(MIT)","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2013 Julian Gruber \u0026lt;julian@juliangruber.com\u0026gt;","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy of","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"this software and associated documentation files (the \"Software\"), to deal in","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"the Software without restriction, including without limitation the rights to","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"of the Software, and to permit persons to whom the Software is furnished to do","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"so, subject to the following conditions:","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"The above copyright notice and this permission notice shall be included in all","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"copies or substantial portions of the Software.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"SOFTWARE.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":97}},{"path":"node_modules/brace-expansion/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# brace-expansion","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), ","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"as known from sh/bash, in JavaScript.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"[![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"## Example","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"var expand \u003d require(\u0027brace-expansion\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file-{a,b,c}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file-a.jpg\u0027, \u0027file-b.jpg\u0027, \u0027file-c.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"expand(\u0027-v{,,}\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027-v\u0027, \u0027-v\u0027, \u0027-v\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file{0..2}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file0.jpg\u0027, \u0027file1.jpg\u0027, \u0027file2.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file-{a..c}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file-a.jpg\u0027, \u0027file-b.jpg\u0027, \u0027file-c.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file{2..0}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file2.jpg\u0027, \u0027file1.jpg\u0027, \u0027file0.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file{0..4..2}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file0.jpg\u0027, \u0027file2.jpg\u0027, \u0027file4.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file-{a..e..2}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file-a.jpg\u0027, \u0027file-c.jpg\u0027, \u0027file-e.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"expand(\u0027file{00..10..5}.jpg\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027file00.jpg\u0027, \u0027file05.jpg\u0027, \u0027file10.jpg\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"expand(\u0027{{A..C},{a..c}}\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027A\u0027, \u0027B\u0027, \u0027C\u0027, \u0027a\u0027, \u0027b\u0027, \u0027c\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"expand(\u0027ppp{,config,oe{,conf}}\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"// \u003d\u003e [\u0027ppp\u0027, \u0027pppconfig\u0027, \u0027pppoe\u0027, \u0027pppoeconf\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"var expand \u003d require(\u0027brace-expansion\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"### var expanded \u003d expand(str)","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"Return an array of all possible and valid expansions of `str`. If none are","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"found, `[str]` is returned.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"Valid expansions are:","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"/^(.*,)+(.+)?$/","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"// {a,b,...}","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"A comma separated list of options, like `{a,b}` or `{a,{b,c}}` or `{,a,}`.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"// {x..y[..incr]}","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"A numeric sequence from `x` to `y` inclusive, with optional increment.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"If `x` or `y` start with a leading `0`, all the numbers will be padded","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"to have equal length. Negative numbers and backwards iteration work too.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"// {x..y[..incr]}","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"An alphabetic sequence from `x` to `y` inclusive, with optional increment.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"`x` and `y` must be exactly one character, and if given, `incr` must be a","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"number.","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"For compatibility reasons, the string `${` is not eligible for brace expansion.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"With [npm](https://npmjs.org) do:","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"```bash","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"npm install brace-expansion","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"## Contributors","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"- [Julian Gruber](https://github.com/juliangruber)","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"- [Isaac Z. Schlueter](https://github.com/isaacs)","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"## Sponsors","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"This module is proudly supported by my [Sponsors](https://github.com/juliangruber/sponsors)!","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my [Patreon](https://www.patreon.com/juliangruber). Not sure how much of my modules you\u0027re using? Try [feross/thanks](https://github.com/feross/thanks)!","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"## License","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"(MIT)","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2013 Julian Gruber \u0026lt;julian@juliangruber.com\u0026gt;","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy of","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"this software and associated documentation files (the \"Software\"), to deal in","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"the Software without restriction, including without limitation the rights to","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"of the Software, and to permit persons to whom the Software is furnished to do","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"so, subject to the following conditions:","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"The above copyright notice and this permission notice shall be included in all","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"copies or substantial portions of the Software.","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"SOFTWARE.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":129}},{"path":"node_modules/buffer-crc32/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# buffer-crc32","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://secure.travis-ci.org/brianloveswords/buffer-crc32.png?branch\u003dmaster)](http://travis-ci.org/brianloveswords/buffer-crc32)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"crc32 that works with binary data and fancy character sets, outputs","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"buffer, signed or unsigned data and has tests.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"Derived from the sample CRC implementation in the PNG specification: http://www.w3.org/TR/PNG/#D-CRCAppendix","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"# install","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"npm install buffer-crc32","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"# example","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"var crc32 \u003d require(\u0027buffer-crc32\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"// works with buffers","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"var buf \u003d Buffer([0x00, 0x73, 0x75, 0x70, 0x20, 0x62, 0x72, 0x6f, 0x00])","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"crc32(buf) // -\u003e \u003cBuffer 94 5a ab 4a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"// has convenience methods for getting signed or unsigned ints","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"crc32.signed(buf) // -\u003e -1805997238","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"crc32.unsigned(buf) // -\u003e 2488970058","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"// will cast to buffer if given a string, so you can","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"// directly use foreign characters safely","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"crc32(\u0027自動販売機\u0027) // -\u003e \u003cBuffer cb 03 1a c5\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"// and works in append mode too","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"var partialCrc \u003d crc32(\u0027hey\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"var partialCrc \u003d crc32(\u0027 \u0027, partialCrc);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"var partialCrc \u003d crc32(\u0027sup\u0027, partialCrc);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"var partialCrc \u003d crc32(\u0027 \u0027, partialCrc);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"var finalCrc \u003d crc32(\u0027bros\u0027, partialCrc); // -\u003e \u003cBuffer 47 fa 55 70\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"# tests","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"This was tested against the output of zlib\u0027s crc32 method. You can run","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"the tests with`npm test` (requires tap)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"# see also","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"https://github.com/alexgorbatchev/node-crc, `crc.buffer.crc32` also","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"supports buffer inputs and return unsigned ints (thanks @tjholowaychuk).","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"# license","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"MIT/X11","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":47}},{"path":"node_modules/chownr/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"Like `chown -R`.","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Takes the same arguments as `fs.chown()`","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":3}},{"path":"node_modules/command-exists-promise/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# command-exists-promise","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"![npm](https://img.shields.io/npm/v/command-exists-promise.svg) ![Travis (.com)](https://img.shields.io/travis/com/raftario/command-exists.svg?label\u003dtravis+build) ![AppVeyor](https://img.shields.io/appveyor/ci/raftario/command-exists.svg?label\u003dappveyor+build)  ","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Node module to check if a command-line command exists.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"Forked from [command-exists](https://github.com/mathisonian/command-exists).","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"```console","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"# For npm users","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"$ npm i command-exists-promise","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"# For yarn users","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"$ yarn add command-exists-promise","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"The function returns a promise that will resolve to `true` if the command exists and `false` if it doesn\u0027t.  ","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"On UNIX, the promise will resolve to `true` if the command is a path to an executable file. On Windows, it will resolve to `true` for any existing file.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"### Promise","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"const commandExists \u003d require(\u0027command-exists-promise\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"commandExists(\u0027ls\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"  .then(exists \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    if (exists) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"      // The command exists","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"      // The command doesn\u0027t exist","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  .catch(err \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    // Should never happen but better handle it just in case","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"### Await","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"const commandExists \u003d require(\u0027command-exists-promise\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"try {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"  const exists \u003d await commandExists(\u0027ls\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"  if (exists) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    // The command exists","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"  } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"    // The command doesn\u0027t exist","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"} catch (err) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"  // Should never happen but better handle it just in case","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":46}},{"path":"node_modules/fd-slicer/CHANGELOG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"### 1.0.1","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":" * use `setImmediate` instead of `nextTick`","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"### 1.0.0","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":" * `new FdSlicer(fd, options)` must now be `fdSlicer.createFromFd(fd, options)`","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":" * fix behavior when `end` is 0.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" * fix `createWriteStream` when using `createFromBuffer`","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"### 0.4.0","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" * add ability to create an FdSlicer instance from a Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"### 0.3.2","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":" * fix write stream and read stream destroy behavior","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"### 0.3.1","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":" * write stream: fix end option behavior","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"### 0.3.0","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":" * write stream emits \u0027progress\u0027 events","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":" * write stream supports \u0027end\u0027 option which causes the stream to emit an error","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"   if a maximum size is exceeded","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":" * improve documentation","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"### 0.2.1","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":" * Update pend dependency to latest bugfix version.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"### 0.2.0","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":" * Add read and write functions","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"### 0.1.0","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":" * Add `autoClose` option and `ref()` and `unref()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"### 0.0.2","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":" * Add API documentation","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":" * read stream: create buffer at last possible moment","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"### 0.0.1","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":" * Initial release","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":49}},{"path":"node_modules/fd-slicer/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# fd-slicer","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/andrewrk/node-fd-slicer.svg?branch\u003dmaster)](https://travis-ci.org/andrewrk/node-fd-slicer)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"Safe `fs.ReadStream` and `fs.WriteStream` using the same fd.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"Let\u0027s say that you want to perform a parallel upload of a file to a remote","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"server. To do this, we want to create multiple read streams. The first thing","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"you might think of is to use the `{start: 0, end: 0}` API of","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"`fs.createReadStream`. This gives you two choices:","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":" 0. Use the same file descriptor for all `fs.ReadStream` objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" 0. Open the file multiple times, resulting in a separate file descriptor","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    for each read stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"Neither of these are acceptable options. The first one is a severe bug,","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"because the API docs for `fs.write` state:","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"\u003e Note that it is unsafe to use `fs.write` multiple times on the same file","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"\u003e without waiting for the callback. For this scenario, `fs.createWriteStream`","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"\u003e is strongly recommended.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"`fs.createWriteStream` will solve the problem if you only create one of them","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"for the file descriptor, but it will exhibit this unsafety if you create","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"multiple write streams per file descriptor.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"The second option suffers from a race condition. For each additional time the","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"file is opened after the first, it is possible that the file is modified. So","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"in our parallel uploading example, we might upload a corrupt file that never","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"existed on the client\u0027s computer.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"This module solves this problem by providing `createReadStream` and","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"`createWriteStream` that operate on a shared file descriptor and provides","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"the convenient stream API while still allowing slicing and dicing.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"This module also gives you some additional power that the builtin","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"`fs.createWriteStream` do not give you. These features are:","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":" * Emitting a \u0027progress\u0027 event on write.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":" * Ability to set a maximum size and emit an error if this size is exceeded.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":" * Ability to create an `FdSlicer` instance from a `Buffer`. This enables you","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"   to provide API for handling files as well as buffers using the same API.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"var fdSlicer \u003d require(\u0027fd-slicer\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"var fs \u003d require(\u0027fs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"fs.open(\"file.txt\", \u0027r\u0027, function(err, fd) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"  if (err) throw err;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"  var slicer \u003d fdSlicer.createFromFd(fd);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"  var firstPart \u003d slicer.createReadStream({start: 0, end: 100});","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"  var secondPart \u003d slicer.createReadStream({start: 100});","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"  var firstOut \u003d fs.createWriteStream(\"first.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"  var secondOut \u003d fs.createWriteStream(\"second.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"  firstPart.pipe(firstOut);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"  secondPart.pipe(secondOut);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"You can also create from a buffer:","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"var fdSlicer \u003d require(\u0027fd-slicer\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"var slicer \u003d FdSlicer.createFromBuffer(someBuffer);","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"var firstPart \u003d slicer.createReadStream({start: 0, end: 100});","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"var secondPart \u003d slicer.createReadStream({start: 100});","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"var firstOut \u003d fs.createWriteStream(\"first.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"var secondOut \u003d fs.createWriteStream(\"second.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"firstPart.pipe(firstOut);","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"secondPart.pipe(secondOut);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"## API Documentation","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"### fdSlicer.createFromFd(fd, [options])","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"var fdSlicer \u003d require(\u0027fd-slicer\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"fs.open(\"file.txt\", \u0027r\u0027, function(err, fd) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"  if (err) throw err;","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"  var slicer \u003d fdSlicer.createFromFd(fd);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"  // ...","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"Make sure `fd` is a properly initialized file descriptor. If you want to","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"use `createReadStream` make sure you open it for reading and if you want","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"to use `createWriteStream` make sure you open it for writing.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"`options` is an optional object which can contain:","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":" * `autoClose` - if set to `true`, the file descriptor will be automatically","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"   closed once the last stream that references it is closed. Defaults to","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"   `false`. `ref()` and `unref()` can be used to increase or decrease the","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"   reference count, respectively.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"### fdSlicer.createFromBuffer(buffer, [options])","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"var fdSlicer \u003d require(\u0027fd-slicer\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"var slicer \u003d fdSlicer.createFromBuffer(someBuffer);","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"// ...","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"`options` is an optional object which can contain:","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":" * `maxChunkSize` - A `Number` of bytes. see `createReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"   If falsey, defaults to unlimited.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"#### Properties","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"##### fd","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"The file descriptor passed in. `undefined` if created from a buffer.","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"#### Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"##### createReadStream(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"Available `options`:","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":" * `start` - Number. The offset into the file to start reading from. Defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"   to 0.","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":" * `end` - Number. Exclusive upper bound offset into the file to stop reading","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"   from.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":" * `highWaterMark` - Number. The maximum number of bytes to store in the","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"   internal buffer before ceasing to read from the underlying resource.","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"   Defaults to 16 KB.","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":" * `encoding` - String. If specified, then buffers will be decoded to strings","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"   using the specified encoding. Defaults to `null`.","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"The ReadableStream that this returns has these additional methods:","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":" * `destroy(err)` - stop streaming. `err` is optional and is the error that","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"   will be emitted in order to cause the streaming to stop. Defaults to","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"   `new Error(\"stream destroyed\")`.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"If `maxChunkSize` was specified (see `createFromBuffer()`), the read stream","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"will provide chunks of at most that size. Normally, the read stream provides","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"the entire range requested in a single chunk, but this can cause performance","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"problems in some circumstances.","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"See [thejoshwolfe/yauzl#87](https://github.com/thejoshwolfe/yauzl/issues/87).","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"##### createWriteStream(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"Available `options`:","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":" * `start` - Number. The offset into the file to start writing to. Defaults to","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"   0.","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":" * `end` - Number. Exclusive upper bound offset into the file. If this offset","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"   is reached, the write stream will emit an \u0027error\u0027 event and stop functioning.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"   In this situation, `err.code \u003d\u003d\u003d \u0027ETOOBIG\u0027`. Defaults to `Infinity`.","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":" * `highWaterMark` - Number. Buffer level when `write()` starts returning","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"   false. Defaults to 16KB.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":" * `decodeStrings` - Boolean. Whether or not to decode strings into Buffers","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"   before passing them to` _write()`. Defaults to `true`.","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"The WritableStream that this returns has these additional methods:","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":" * `destroy()` - stop streaming","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"And these additional properties:","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":" * `bytesWritten` - number of bytes written to the stream","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"And these additional events:","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":" * \u0027progress\u0027 - emitted when `bytesWritten` changes.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"##### read(buffer, offset, length, position, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"Equivalent to `fs.read`, but with concurrency protection.","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"`callback` must be defined.","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"##### write(buffer, offset, length, position, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"Equivalent to `fs.write`, but with concurrency protection.","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"`callback` must be defined.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"##### ref()","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"Increase the `autoClose` reference count by 1.","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"##### unref()","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"Decrease the `autoClose` reference count by 1.","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"#### Events","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"##### \u0027error\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"Emitted if `fs.close` returns an error when auto closing.","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"##### \u0027close\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"Emitted when fd-slicer closes the file descriptor due to `autoClose`. Never","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"emitted if created from a buffer.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":199}},{"path":"node_modules/fs-minipass/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# fs-minipass","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Filesystem streams based on [minipass](http://npm.im/minipass).","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"4 classes are exported:","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"- ReadStream","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"- ReadStreamSync","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"- WriteStream","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"- WriteStreamSync","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"When using `ReadStreamSync`, all of the data is made available","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"immediately upon consuming the stream.  Nothing is buffered in memory","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"when the stream is constructed.  If the stream is piped to a writer,","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"then it will synchronously `read()` and emit data into the writer as","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"fast as the writer can consume it.  (That is, it will respect","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"backpressure.)  If you call `stream.read()` then it will read the","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"entire file and return the contents.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"When using `WriteStreamSync`, every write is flushed to the file","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"synchronously.  If your writes all come in a single tick, then it\u0027ll","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"write it all out in a single tick.  It\u0027s as synchronous as you are.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"The async versions work much like their node builtin counterparts,","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"with the exception of introducing significantly less Stream machinery","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"overhead.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"It\u0027s just streams, you pipe them or read() them or write() to them.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"const fsm \u003d require(\u0027fs-minipass\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"const readStream \u003d new fsm.ReadStream(\u0027file.txt\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"const writeStream \u003d new fsm.WriteStream(\u0027output.txt\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"writeStream.write(\u0027some file header or whatever\\n\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"readStream.pipe(writeStream)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"## ReadStream(path, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"Path string is required, but somewhat irrelevant if an open file","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"descriptor is passed in as an option.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"Options:","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- `fd` Pass in a numeric file descriptor, if the file is already open.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- `readSize` The size of reads to do, defaults to 16MB","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"- `size` The size of the file, if known.  Prevents zero-byte read()","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"  call at the end.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"- `autoClose` Set to `false` to prevent the file descriptor from being","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"  closed when the file is done being read.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"## WriteStream(path, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"Path string is required, but somewhat irrelevant if an open file","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"descriptor is passed in as an option.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"Options:","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- `fd` Pass in a numeric file descriptor, if the file is already open.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- `mode` The mode to create the file with. Defaults to `0o666`.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"- `start` The position in the file to start reading.  If not","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"  specified, then the file will start writing at position zero, and be","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"  truncated by default.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"- `autoClose` Set to `false` to prevent the file descriptor from being","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"  closed when the stream is ended.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"- `flags` Flags to use when opening the file.  Irrelevant if `fd` is","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"  passed in, since file won\u0027t be opened in that case.  Defaults to","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"  `\u0027a\u0027` if a `pos` is specified, or `\u0027w\u0027` otherwise.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":70}},{"path":"node_modules/fs.realpath/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# fs.realpath","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"A backwards-compatible fs.realpath for Node v6 and above","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"In Node v6, the JavaScript implementation of fs.realpath was replaced","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"with a faster (but less resilient) native implementation.  That raises","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"new and platform-specific errors and cannot handle long or excessively","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"symlink-looping paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"This module handles those cases by detecting the new errors and","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"falling back to the JavaScript implementation.  On versions of Node","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"prior to v6, it has no effect.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"var rp \u003d require(\u0027fs.realpath\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"// async version","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"rp.realpath(someLongAndLoopingPath, function (er, real) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"  // the ELOOP was handled, but it was a bit slower","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"// sync version","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"var real \u003d rp.realpathSync(someLongAndLoopingPath)","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"// monkeypatch at your own risk!","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"// This replaces the fs.realpath/fs.realpathSync builtins","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"rp.monkeypatch()","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"// un-do the monkeypatching","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"rp.unmonkeypatch()","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":33}},{"path":"node_modules/function-bind/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003c!--","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"    [![build status][travis-svg]][travis-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"    [![NPM version][npm-badge-svg]][npm-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"    [![Coverage Status][5]][6]","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"    [![gemnasium Dependency Status][7]][8]","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    [![Dependency status][deps-svg]][deps-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    [![Dev Dependency status][dev-deps-svg]][dev-deps-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"\u003c!-- [![browser support][11]][12] --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"Implementation of function.prototype.bind","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"## Example","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"I mainly do this for unit tests I run on phantomjs.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"PhantomJS does not have Function.prototype.bind :(","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"Function.prototype.bind \u003d require(\"function-bind\")","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"`npm install function-bind`","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"## Contributors","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":" - Raynos","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"## MIT Licenced","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"  [travis-svg]: https://travis-ci.org/Raynos/function-bind.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"  [travis-url]: https://travis-ci.org/Raynos/function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"  [npm-badge-svg]: https://badge.fury.io/js/function-bind.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"  [npm-url]: https://npmjs.org/package/function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"  [5]: https://coveralls.io/repos/Raynos/function-bind/badge.png","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"  [6]: https://coveralls.io/r/Raynos/function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"  [7]: https://gemnasium.com/Raynos/function-bind.png","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"  [8]: https://gemnasium.com/Raynos/function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"  [deps-svg]: https://david-dm.org/Raynos/function-bind.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"  [deps-url]: https://david-dm.org/Raynos/function-bind","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"  [dev-deps-svg]: https://david-dm.org/Raynos/function-bind/dev-status.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"  [dev-deps-url]: https://david-dm.org/Raynos/function-bind#info\u003ddevDependencies","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"  [11]: https://ci.testling.com/Raynos/function-bind.png","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"  [12]: https://ci.testling.com/Raynos/function-bind","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":48}},{"path":"node_modules/glob/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Glob","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Match files using the patterns the shell uses, like stars and stuff.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch\u003dmaster)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg\u003dtrue)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch\u003dmaster\u0026service\u003dgithub)](https://coveralls.io/github/isaacs/node-glob?branch\u003dmaster)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"This is a glob implementation in JavaScript.  It uses the `minimatch`","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"library to do its matching.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"![a fun cartoon logo made of glob characters](logo/glob.png)","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"Install with npm","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"npm i glob","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"var glob \u003d require(\"glob\")","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"// options is optional","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"glob(\"**/*.js\", options, function (er, files) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"  // files is an array of filenames.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"  // If the `nonull` option is set, and nothing","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"  // was found, then files is [\"**/*.js\"]","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  // er is an error object or null.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"## Glob Primer","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"\"Globs\" are the patterns you type when you do stuff like `ls *.js` on","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"the command line, or put `build/*` in a `.gitignore` file.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"Before parsing the path part patterns, braced sections are expanded","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"into a set.  Braced sections start with `{` and end with `}`, with any","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"number of comma-delimited sections within.  Braced sections may contain","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"slash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"The following characters have special magic meaning when used in a","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"path portion:","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"* `*` Matches 0 or more characters in a single path portion","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"* `?` Matches 1 character","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"* `[...]` Matches a range of characters, similar to a RegExp range.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"  If the first character of the range is `!` or `^` then it matches","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"  any character not in the range.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"* `!(pattern|pattern|pattern)` Matches anything that does not match","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"  any of the patterns provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"  patterns provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"* `+(pattern|pattern|pattern)` Matches one or more occurrences of the","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"  patterns provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"* `*(a|b|c)` Matches zero or more occurrences of the patterns provided","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"  provided","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"* `**` If a \"globstar\" is alone in a path portion, then it matches","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"  zero or more directories and subdirectories searching for matches.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"  It does not crawl symlinked directories.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"### Dots","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"If a file or directory path portion has a `.` as the first character,","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"then it will not match any glob pattern unless that pattern\u0027s","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"corresponding path part also has a `.` as its first character.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"For example, the pattern `a/.*/c` would match the file at `a/.b/c`.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"However the pattern `a/*/c` would not, because `*` does not start with","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"a dot character.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"You can make glob treat dots as normal characters by setting","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"`dot:true` in the options.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"### Basename Matching","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"If you set `matchBase:true` in the options, and the pattern has no","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"slashes in it, then it will seek for any file anywhere in the tree","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"with a matching basename.  For example, `*.js` would match","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"`test/simple/basic.js`.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"### Empty Sets","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"If no matching files are found, then an empty array is returned.  This","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"differs from the shell, where the pattern itself is returned.  For","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"example:","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"    $ echo a*s*d*f","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"    a*s*d*f","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"To get the bash-style behavior, set the `nonull:true` in the options.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"### See Also:","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"* `man sh`","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"* `man bash` (Search for \"Pattern Matching\")","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"* `man 3 fnmatch`","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"* `man 5 gitignore`","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"* [minimatch documentation](https://github.com/isaacs/minimatch)","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"## glob.hasMagic(pattern, [options])","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"Returns `true` if there are any special characters in the pattern, and","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"`false` otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"Note that the options affect the results.  If `noext:true` is set in","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"the options object, then `+(a|b)` will not be considered a magic","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"pattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"then that is considered magical, unless `nobrace:true` is set in the","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"options.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"## glob(pattern, [options], cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"* `pattern` `{String}` Pattern to be matched","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"* `options` `{Object}`","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"* `cb` `{Function}`","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"  * `err` `{Error | null}`","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"  * `matches` `{Array\u003cString\u003e}` filenames found matching the pattern","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"Perform an asynchronous glob search.","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"## glob.sync(pattern, [options])","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"* `pattern` `{String}` Pattern to be matched","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"* `options` `{Object}`","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"* return: `{Array\u003cString\u003e}` filenames found matching the pattern","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"Perform a synchronous glob search.","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"## Class: glob.Glob","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"Create a Glob object by instantiating the `glob.Glob` class.","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"var Glob \u003d require(\"glob\").Glob","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"var mg \u003d new Glob(pattern, options, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"It\u0027s an EventEmitter, and starts walking the filesystem to find matches","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"immediately.","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"### new glob.Glob(pattern, [options], [cb])","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"* `pattern` `{String}` pattern to search for","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"* `options` `{Object}`","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"* `cb` `{Function}` Called when an error occurs, or matches are found","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"  * `err` `{Error | null}`","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"  * `matches` `{Array\u003cString\u003e}` filenames found matching the pattern","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"Note that if the `sync` flag is set in the options, then matches will","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"be immediately available on the `g.found` member.","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"### Properties","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"* `minimatch` The minimatch object that the glob uses.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"* `options` The options object passed in.","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"* `aborted` Boolean which is set to true when calling `abort()`.  There","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"  is no way at this time to continue a glob search after aborting, but","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"  you can re-use the statCache to avoid having to duplicate syscalls.","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"* `cache` Convenience object.  Each field has the following possible","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"  values:","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"  * `false` - Path does not exist","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"  * `true` - Path exists","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"  * `\u0027FILE\u0027` - Path exists, and is not a directory","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"  * `\u0027DIR\u0027` - Path exists, and is a directory","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"  * `[file, entries, ...]` - Path exists, is a directory, and the","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"    array value is the results of `fs.readdir`","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"* `statCache` Cache of `fs.stat` results, to prevent statting the same","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"  path multiple times.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"* `symlinks` A record of which paths are symbolic links, which is","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"  relevant in resolving `**` patterns.","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"* `realpathCache` An optional object which is passed to `fs.realpath`","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"  to minimize unnecessary syscalls.  It is stored on the instantiated","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"  Glob object, and may be re-used.","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"### Events","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"* `end` When the matching is finished, this is emitted with all the","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"  matches found.  If the `nonull` option is set, and no match was found,","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"  then the `matches` list contains the original pattern.  The matches","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"  are sorted, unless the `nosort` flag is set.","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"* `match` Every time a match is found, this is emitted with the specific","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"  thing that matched. It is not deduplicated or resolved to a realpath.","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"* `error` Emitted when an unexpected error is encountered, or whenever","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"  any fs error occurs if `options.strict` is set.","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"* `abort` When `abort()` is called, this event is raised.","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"### Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"* `pause` Temporarily stop the search","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"* `resume` Resume the search","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"* `abort` Stop the search forever","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"### Options","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"All the options that can be passed to Minimatch can also be passed to","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"Glob to change pattern matching behavior.  Also, some have been added,","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"or have glob-specific ramifications.","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"All options are false by default, unless otherwise noted.","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"All options are added to the Glob object, as well.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"If you are running many `glob` operations, you can pass a Glob object","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"as the `options` argument to a subsequent operation to shortcut some","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"`stat` and `readdir` calls.  At the very least, you may pass in shared","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"parallel glob operations will be sped up by sharing information about","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"the filesystem.","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"* `cwd` The current working directory in which to search.  Defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"  to `process.cwd()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"* `root` The place where patterns starting with `/` will be mounted","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"  systems, and `C:\\` or some such on Windows.)","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"* `dot` Include `.dot` files in normal matches and `globstar` matches.","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"  Note that an explicit dot in a portion of the pattern will always","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"  match dot files.","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"* `nomount` By default, a pattern starting with a forward-slash will be","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"  \"mounted\" onto the root setting, so that a valid filesystem path is","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"  returned.  Set this flag to disable that behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"* `mark` Add a `/` character to directory matches.  Note that this","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"  requires additional stat calls.","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"* `nosort` Don\u0027t sort the results.","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"* `stat` Set to true to stat *all* results.  This reduces performance","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"  somewhat, and is completely unnecessary, unless `readdir` is presumed","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"  to be an untrustworthy indicator of file existence.","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"* `silent` When an unusual error is encountered when attempting to","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"  read a directory, a warning will be printed to stderr.  Set the","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"  `silent` option to true to suppress these warnings.","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"* `strict` When an unusual error is encountered when attempting to","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"  read a directory, the process will just continue on in search of","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"  other matches.  Set the `strict` option to raise an error in these","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"  cases.","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"* `cache` See `cache` property above.  Pass in a previously generated","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"  cache object to save some fs calls.","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"* `statCache` A cache of results of filesystem information, to prevent","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"  unnecessary stat calls.  While it should not normally be necessary","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"  to set this, you may pass the statCache from one glob() call to the","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"  options object of another, if you know that the filesystem will not","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"  change between calls.  (See \"Race Conditions\" below.)","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"* `symlinks` A cache of known symbolic links.  You may pass in a","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"  previously generated `symlinks` object to save `lstat` calls when","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"  resolving `**` matches.","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"* `nounique` In some cases, brace-expanded patterns can result in the","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"  same file showing up multiple times in the result set.  By default,","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"  this implementation prevents duplicates in the result set.  Set this","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"  flag to disable that behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"* `nonull` Set to never return an empty set, instead returning a set","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"  containing the pattern itself.  This is the default in glob(3).","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"* `debug` Set to enable debug logging in minimatch and glob.","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"* `noglobstar` Do not match `**` against multiple filenames.  (Ie,","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"  treat it as a normal `*` instead.)","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"* `noext` Do not match `+(a|b)` \"extglob\" patterns.","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"* `nocase` Perform a case-insensitive match.  Note: on","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"  case-insensitive filesystems, non-magic patterns will match by","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"  default, since `stat` and `readdir` will not raise errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"* `matchBase` Perform a basename-only match if the pattern does not","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"  contain any slash characters.  That is, `*.js` would be treated as","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"  equivalent to `**/*.js`, matching all js files in all directories.","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"* `nodir` Do not match directories, only files.  (Note: to match","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"  *only* directories, simply put a `/` at the end of the pattern.)","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"* `ignore` Add a pattern or an array of glob patterns to exclude matches.","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"  Note: `ignore` patterns are *always* in `dot:true` mode, regardless","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"  of any other settings.","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"* `follow` Follow symlinked directories when expanding `**` patterns.","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"  Note that this can result in a lot of duplicate references in the","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"  presence of cyclic links.","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"* `realpath` Set to true to call `fs.realpath` on all of the results.","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"  In the case of a symlink that cannot be resolved, the full absolute","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"  path to the matched entry is returned (though it will usually be a","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"  broken symlink)","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"* `absolute` Set to true to always receive absolute paths for matched","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"  files.  Unlike `realpath`, this also affects the values returned in","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"  the `match` event.","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"* `fs` File-system object with Node\u0027s `fs` API. By default, the built-in","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"  `fs` module will be used. Set to a volume provided by a library like","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"  `memfs` to avoid using the \"real\" file-system.","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"## Comparisons to other fnmatch/glob implementations","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"While strict compliance with the existing standards is a worthwhile","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"goal, some discrepancies exist between node-glob and other","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"implementations, and are intentional.","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"The double-star character `**` is supported by default, unless the","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"`noglobstar` flag is set.  This is supported in the manner of bsdglob","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"and bash 4.3, where `**` only has special significance if it is the only","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"thing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"`a/**b` will not.","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"Note that symlinked directories are not crawled as part of a `**`,","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"though their contents may match against subsequent portions of the","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"pattern.  This prevents infinite loops and duplicates and the like.","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"If an escaped pattern has no matches, and the `nonull` flag is set,","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"then glob returns the pattern as-provided, rather than","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"interpreting the character escapes.  For example,","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"that it does not resolve escaped pattern characters.","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"If brace expansion is not disabled, then it is performed before any","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"other interpretation of the glob pattern.  Thus, a pattern like","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"checked for validity.  Since those two are valid, matching proceeds.","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"### Comments and Negation","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"Previously, this module let you mark a pattern as a \"comment\" if it","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"started with a `#` character, or a \"negated\" pattern if it started","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"with a `!` character.","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"These options were deprecated in version 5, and removed in version 6.","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"To specify things that should not match, use the `ignore` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"## Windows","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"**Please only use forward-slashes in glob expressions.**","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"Though windows uses either `/` or `\\` as its path separator, only `/`","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"characters are used by this glob implementation.  You must use","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"forward-slashes **only** in glob expressions.  Back-slashes will always","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"be interpreted as escape characters, not path separators.","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"Results from absolute patterns such as `/foo/*` are mounted onto the","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"root setting using `path.join`.  On windows, this will by default result","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"in `/foo/*` matching `C:\\foo\\bar.txt`.","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"## Race Conditions","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"Glob searching, by its very nature, is susceptible to race conditions,","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"since it relies on directory walking and such.","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"As a result, it is possible that a file that exists when glob looks for","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"it may have been deleted or modified by the time it returns the result.","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"As part of its internal implementation, this program caches all stat","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"and readdir calls that it makes, in order to cut down on system","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"overhead.  However, this also makes it even more susceptible to races,","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"especially if the cache or statCache objects are reused between glob","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"calls.","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"Users are thus advised not to use a glob result as a guarantee of","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"filesystem state in the face of rapid changes.  For the vast majority","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"of operations, this is never a problem.","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"## Glob Logo","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"Glob\u0027s logo was created by [Tanya Brassie](http://tanyabrassie.com/). Logo files can be found [here](https://github.com/isaacs/node-glob/tree/master/logo).","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"The logo is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"## Contributing","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"Any change to behavior (including bugfixes) must come with a test.","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"Patches that fail tests or reduce performance will be rejected.","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"# to run tests","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"npm test","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"# to re-generate test fixtures","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"npm run test-regen","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"# to benchmark against bash/zsh","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"npm run bench","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"# to profile javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"npm run prof","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"![](oh-my-glob.gif)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":378}},{"path":"node_modules/has/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# has","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003e Object.prototype.hasOwnProperty.call shortcut","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```sh","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"npm install --save has","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"var has \u003d require(\u0027has\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"has({}, \u0027hasOwnProperty\u0027); // false","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"has(Object.prototype, \u0027hasOwnProperty\u0027); // true","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":18}},{"path":"node_modules/inflight/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# inflight","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Add callbacks to requests in flight to avoid async duplication","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"var inflight \u003d require(\u0027inflight\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"// some request that does some stuff","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"function req(key, callback) {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"  // key is any random string.  like a url or filename or whatever.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"  //","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"  // will return either a falsey value, indicating that the","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"  // request for this key is already in flight, or a new callback","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"  // which when called will call all callbacks passed to inflightk","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"  // with the same key","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"  callback \u003d inflight(key, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"  // If we got a falsey value back, then there\u0027s already a req going","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"  if (!callback) return","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"  // this is where you\u0027d fetch the url or whatever","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"  // callback is also once()-ified, so it can safely be assigned","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"  // to multiple events etc.  First call wins.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"  setTimeout(function() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    callback(null, key)","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  }, 100)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"// only assigns a single setTimeout","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"// when it dings, all cbs get called","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"req(\u0027foo\u0027, cb1)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"req(\u0027foo\u0027, cb2)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"req(\u0027foo\u0027, cb3)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"req(\u0027foo\u0027, cb4)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":37}},{"path":"node_modules/inherits/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"Browser-friendly inheritance fully compatible with standard node.js","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"This package exports standard `inherits` from node.js `util` module in","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"node environment, but also provides alternative browser-friendly","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"implementation through [browser","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"field](https://gist.github.com/shtylman/4339901). Alternative","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"implementation is a literal copy of standard one located in standalone","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"module to avoid requiring of `util`. It also has a shim for old","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"browsers with no `Object.create` support.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"While keeping you sure you are using standard `inherits`","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"implementation in node.js environment, it allows bundlers such as","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"[browserify](https://github.com/substack/node-browserify) to not","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"include full `util` package to your client code if all you need is","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"just `inherits` function. It worth, because browser shim for `util`","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"package is large and `inherits` is often the single function you need","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"from it.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"It\u0027s recommended to use this package instead of","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"`require(\u0027util\u0027).inherits` for any code that has chances to be used","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"not only in node.js but in browser too.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"## usage","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"var inherits \u003d require(\u0027inherits\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"// then use exactly as the standard one","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"## note on version ~1.0","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"Version ~1.0 had completely different motivation and is not compatible","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"neither with 2.0 nor with standard node.js `inherits`.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"If you are using version ~1.0 and planning to switch to ~2.0, be","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"careful:","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"* new version uses `super_` instead of `super` for referencing","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"  superclass","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"* new version overwrites current prototype while old one preserves any","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"  existing fields on it","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":42}},{"path":"node_modules/interpret/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"  \u003ca href\u003d\"http://gulpjs.com\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"    \u003cimg height\u003d\"257\" width\u003d\"114\" src\u003d\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"  \u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"# interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Travis Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"A dictionary of file extensions and associated module loaders.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"## What is it","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"This is used by [Liftoff](http://github.com/tkellen/node-liftoff) to automatically require dependencies for configuration files, and by [rechoir](http://github.com/tkellen/node-rechoir) for registering module loaders.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"### extensions","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"Map file types to modules which provide a [require.extensions] loader.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"  \u0027.babel.js\u0027: [","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"      module: \u0027@babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        // which only captures the final extension (.babel.js -\u003e .js)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.js\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel-register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.js\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel-core/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.js\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.js\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"  ],","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"  \u0027.babel.ts\u0027: [","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"      module: \u0027@babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.ts\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"  ],","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"  \u0027.buble.js\u0027: \u0027buble/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"  \u0027.cirru\u0027: \u0027cirru-script/lib/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"  \u0027.cjsx\u0027: \u0027node-cjsx/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"  \u0027.co\u0027: \u0027coco\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"  \u0027.coffee\u0027: [\u0027coffeescript/register\u0027, \u0027coffee-script/register\u0027, \u0027coffeescript\u0027, \u0027coffee-script\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"  \u0027.coffee.md\u0027: [\u0027coffeescript/register\u0027, \u0027coffee-script/register\u0027, \u0027coffeescript\u0027, \u0027coffee-script\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"  \u0027.csv\u0027: \u0027require-csv\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"  \u0027.eg\u0027: \u0027earlgrey/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"  \u0027.esm.js\u0027: {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    module: \u0027esm\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"    register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"      // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"      // which only captures the final extension (.babel.js -\u003e .js)","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"      var esmLoader \u003d hook(module);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"      require.extensions[\u0027.js\u0027] \u003d esmLoader(\u0027module\u0027)._extensions[\u0027.js\u0027];","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"  },","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"  \u0027.iced\u0027: [\u0027iced-coffee-script/register\u0027, \u0027iced-coffee-script\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"  \u0027.iced.md\u0027: \u0027iced-coffee-script/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"  \u0027.ini\u0027: \u0027require-ini\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"  \u0027.js\u0027: null,","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"  \u0027.json\u0027: null,","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"  \u0027.json5\u0027: \u0027json5/lib/require\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"  \u0027.jsx\u0027: [","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"      module: \u0027@babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.jsx\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel-register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.jsx\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel-core/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.jsx\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"      module: \u0027babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.jsx\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"      module: \u0027node-jsx\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"        hook.install({ extension: \u0027.jsx\u0027, harmony: true });","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"  ],","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"  \u0027.litcoffee\u0027: [\u0027coffeescript/register\u0027, \u0027coffee-script/register\u0027, \u0027coffeescript\u0027, \u0027coffee-script\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"  \u0027.liticed\u0027: \u0027iced-coffee-script/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"  \u0027.ls\u0027: [\u0027livescript\u0027, \u0027LiveScript\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"  \u0027.mjs\u0027: \u0027/absolute/path/to/interpret/mjs-stub.js\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"  \u0027.node\u0027: null,","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"  \u0027.toml\u0027: {","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"    module: \u0027toml-require\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"    register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"      hook.install();","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"  },","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"  \u0027.ts\u0027: [","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"    \u0027ts-node/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"    \u0027typescript-node/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"    \u0027typescript-register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"    \u0027typescript-require\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"    \u0027sucrase/register/ts\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"      module: \u0027@babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.ts\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"  ],","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"  \u0027.tsx\u0027: [","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"    \u0027ts-node/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"    \u0027typescript-node/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"    \u0027sucrase/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"    {","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"      module: \u0027@babel/register\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"      register: function(hook) {","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"        hook({ extensions: \u0027.tsx\u0027 });","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"      },","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"  ],","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"  \u0027.wisp\u0027: \u0027wisp/engine/node\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"  \u0027.xml\u0027: \u0027require-xml\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"  \u0027.yaml\u0027: \u0027require-yaml\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"  \u0027.yml\u0027: \u0027require-yaml\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"### jsVariants","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"Same as above, but only include the extensions which are javascript variants.","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"## How to use it","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"Consumers should use the exported `extensions` or `jsVariants` object to determine which module should be loaded for a given extension. If a matching extension is found, consumers should do the following:","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"1. If the value is null, do nothing.","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"2. If the value is a string, try to require it.","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"3. If the value is an object, try to require the `module` property. If successful, the `register` property (a function) should be called with the module passed as the first argument.","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"4. If the value is an array, iterate over it, attempting step #2 or #3 until one of the attempts does not throw.","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"[require.extensions]: http://nodejs.org/api/globals.html#globals_require_extensions","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"[downloads-image]: http://img.shields.io/npm/dm/interpret.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"[npm-url]: https://www.npmjs.com/package/interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"[npm-image]: http://img.shields.io/npm/v/interpret.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"[travis-url]: https://travis-ci.org/gulpjs/interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"[travis-image]: http://img.shields.io/travis/gulpjs/interpret.svg?label\u003dtravis-ci","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"[appveyor-url]: https://ci.appveyor.com/project/gulpjs/interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/interpret.svg?label\u003dappveyor","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"[coveralls-url]: https://coveralls.io/r/gulpjs/interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"[coveralls-image]: http://img.shields.io/coveralls/gulpjs/interpret/master.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"[gitter-url]: https://gitter.im/gulpjs/gulp","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":187}},{"path":"node_modules/is-core-module/CHANGELOG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Changelog","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"All notable changes to this project will be documented in this file.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"## [v2.13.0](https://github.com/inspect-js/is-core-module/compare/v2.12.1...v2.13.0) - 2023-08-05","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `semver`, `tape` [`c75b263`](https://github.com/inspect-js/is-core-module/commit/c75b263d047cb53430c3970107e5eb64d6cd6c0c)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"- [New] `node:test/reporters` and `wasi`/`node:wasi` are in v18.17 [`d76cbf8`](https://github.com/inspect-js/is-core-module/commit/d76cbf8e9b208acfd98913fed5a5f45cb15fe5dc)","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"## [v2.12.1](https://github.com/inspect-js/is-core-module/compare/v2.12.0...v2.12.1) - 2023-05-16","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- [Fix] `test/reporters` now requires the `node:` prefix as of v20.2 [`12183d0`](https://github.com/inspect-js/is-core-module/commit/12183d0d8e4edf56b6ce18a1b3be54bfce10175b)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"## [v2.12.0](https://github.com/inspect-js/is-core-module/compare/v2.11.0...v2.12.0) - 2023-04-10","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"- [actions] update rebase action to use reusable workflow [`c0a7251`](https://github.com/inspect-js/is-core-module/commit/c0a7251f734f3c621932c5fcdfd1bf966b42ca32)","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`9ae8b7f`](https://github.com/inspect-js/is-core-module/commit/9ae8b7fac03c369861d0991b4a2ce8d4848e6a7d)","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"- [New] `test/reporters` added in v19.9, `wasi` added in v20 [`9d5341a`](https://github.com/inspect-js/is-core-module/commit/9d5341ab32053f25b7fa7db3c0e18461db24a79c)","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] add missing `in-publish` dep [`5980245`](https://github.com/inspect-js/is-core-module/commit/59802456e9ac919fa748f53be9d8fbf304a197df)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"## [v2.11.0](https://github.com/inspect-js/is-core-module/compare/v2.10.0...v2.11.0) - 2022-10-18","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"- [meta] use `npmignore` to autogenerate an npmignore file [`3360011`](https://github.com/inspect-js/is-core-module/commit/33600118857b46177178072fba2affcdeb009d12)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `aud`, `tape` [`651c6b0`](https://github.com/inspect-js/is-core-module/commit/651c6b0cc2799d4130866cf43ad333dcade3d26c)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"- [New] `inspector/promises` and `node:inspector/promises` is now available in node 19 [`22d332f`](https://github.com/inspect-js/is-core-module/commit/22d332fe22ac050305444e0781ff85af819abcb0)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"## [v2.10.0](https://github.com/inspect-js/is-core-module/compare/v2.9.0...v2.10.0) - 2022-08-03","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- [New] `node:test` is now available in node ^16.17 [`e8fd36e`](https://github.com/inspect-js/is-core-module/commit/e8fd36e9b86c917775a07cc473b62a3294f459f2)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- [Tests] improve skip message [`c014a4c`](https://github.com/inspect-js/is-core-module/commit/c014a4c0cd6eb15fff573ae4709191775e70cab4)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"## [v2.9.0](https://github.com/inspect-js/is-core-module/compare/v2.8.1...v2.9.0) - 2022-04-19","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"- [New] add `node:test`, in node 18+ [`f853eca`](https://github.com/inspect-js/is-core-module/commit/f853eca801d0a7d4e1dbb670f1b6d9837d9533c5)","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"- [Tests] use `mock-property` [`03b3644`](https://github.com/inspect-js/is-core-module/commit/03b3644dff4417f4ba5a7d0aa0138f5f6b3e5c46)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`7c0e2d0`](https://github.com/inspect-js/is-core-module/commit/7c0e2d06ed2a89acf53abe2ab34d703ed5b03455)","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"- [meta] simplify \"exports\" [`d6ed201`](https://github.com/inspect-js/is-core-module/commit/d6ed201eba7fbba0e59814a9050fc49a6e9878c8)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"## [v2.8.1](https://github.com/inspect-js/is-core-module/compare/v2.8.0...v2.8.1) - 2022-01-05","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"- [actions] reuse common workflows [`cd2cf9b`](https://github.com/inspect-js/is-core-module/commit/cd2cf9b3b66c8d328f65610efe41e9325db7716d)","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"- [Fix] update node 0.4 results [`062195d`](https://github.com/inspect-js/is-core-module/commit/062195d89f0876a88b95d378b43f7fcc1205bc5b)","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`0790b62`](https://github.com/inspect-js/is-core-module/commit/0790b6222848c6167132f9f73acc3520fa8d1298)","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`7d139a6`](https://github.com/inspect-js/is-core-module/commit/7d139a6d767709eabf0a0251e074ec1fb230c06e)","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- [Tests] run `nyc` in `tests-only`, not `test` [`780e8a0`](https://github.com/inspect-js/is-core-module/commit/780e8a049951c71cf78b1707f0871c48a28bde14)","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"## [v2.8.0](https://github.com/inspect-js/is-core-module/compare/v2.7.0...v2.8.0) - 2021-10-14","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"- [actions] update codecov uploader [`0cfe94e`](https://github.com/inspect-js/is-core-module/commit/0cfe94e106a7d005ea03e008c0a21dec13a77904)","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"- [New] add `readline/promises` to node v17+ [`4f78c30`](https://github.com/inspect-js/is-core-module/commit/4f78c3008b1b58b4db6dc91d99610b1bc859da7e)","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"- [Tests] node ^14.18 supports `node:` prefixes for CJS [`43e2f17`](https://github.com/inspect-js/is-core-module/commit/43e2f177452cea2f0eaf34f61b5407217bbdb6f4)","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"## [v2.7.0](https://github.com/inspect-js/is-core-module/compare/v2.6.0...v2.7.0) - 2021-09-27","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"- [New] node `v14.18` added `node:`-prefixed core modules to `require` [`6d943ab`](https://github.com/inspect-js/is-core-module/commit/6d943abe81382b9bbe344384d80fbfebe1cc0526)","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"- [Tests] add coverage for Object.prototype pollution [`c6baf5f`](https://github.com/inspect-js/is-core-module/commit/c6baf5f942311a1945c1af41167bb80b84df2af7)","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config` [`6717f00`](https://github.com/inspect-js/is-core-module/commit/6717f000d063ea57beb772bded36c2f056ac404c)","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix linter warning [`594c10b`](https://github.com/inspect-js/is-core-module/commit/594c10bb7d39d7eb00925c90924199ff596184b2)","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"- [meta] add `sideEffects` flag [`c32cfa5`](https://github.com/inspect-js/is-core-module/commit/c32cfa5195632944c4dd4284a142b8476e75be13)","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"## [v2.6.0](https://github.com/inspect-js/is-core-module/compare/v2.5.0...v2.6.0) - 2021-08-17","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `tape` [`6cc928f`](https://github.com/inspect-js/is-core-module/commit/6cc928f8a4bba66aeeccc4f6beeac736d4bd3081)","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"- [New] add `stream/consumers` to node `\u0026gt;\u003d 16.7` [`a1a423e`](https://github.com/inspect-js/is-core-module/commit/a1a423e467e4cc27df180234fad5bab45943e67d)","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"- [Refactor] Remove duplicated `\u0026\u0026` operand [`86faea7`](https://github.com/inspect-js/is-core-module/commit/86faea738213a2433c62d1098488dc9314dca832)","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"- [Tests] include prereleases [`a4da7a6`](https://github.com/inspect-js/is-core-module/commit/a4da7a6abf7568e2aa4fd98e69452179f1850963)","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"## [v2.5.0](https://github.com/inspect-js/is-core-module/compare/v2.4.0...v2.5.0) - 2021-07-12","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `auto-changelog`, `eslint` [`6334cc9`](https://github.com/inspect-js/is-core-module/commit/6334cc94f3af7469685bd8f236740991baaf2705)","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"- [New] add `stream/web` to node v16.5+ [`17ac59b`](https://github.com/inspect-js/is-core-module/commit/17ac59b662d63e220a2e5728625f005c24f177b2)","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"## [v2.4.0](https://github.com/inspect-js/is-core-module/compare/v2.3.0...v2.4.0) - 2021-05-09","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"- [readme] add actions and codecov badges [`82b7faa`](https://github.com/inspect-js/is-core-module/commit/82b7faa12b56dbe47fbea67e1a5b9e447027ba40)","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`8096868`](https://github.com/inspect-js/is-core-module/commit/8096868c024a161ccd4d44110b136763e92eace8)","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint` [`6726824`](https://github.com/inspect-js/is-core-module/commit/67268249b88230018c510f6532a8046d7326346f)","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"- [New] add `diagnostics_channel` to node `^14.17` [`86c6563`](https://github.com/inspect-js/is-core-module/commit/86c65634201b8ff9b3e48a9a782594579c7f5c3c)","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"- [meta] fix prepublish script [`697a01e`](https://github.com/inspect-js/is-core-module/commit/697a01e3c9c0be074066520954f30fb28532ec57)","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"## [v2.3.0](https://github.com/inspect-js/is-core-module/compare/v2.2.0...v2.3.0) - 2021-04-24","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"- [meta] do not publish github action workflow files [`060d4bb`](https://github.com/inspect-js/is-core-module/commit/060d4bb971a29451c19ff336eb56bee27f9fa95a)","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"- [New] add support for `node:` prefix, in node 16+ [`7341223`](https://github.com/inspect-js/is-core-module/commit/73412230a769f6e81c05eea50b6520cebf54ed2f)","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"- [actions] use `node/install` instead of `node/run`; use `codecov` action [`016269a`](https://github.com/inspect-js/is-core-module/commit/016269abae9f6657a5254adfbb813f09a05067f9)","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"- [patch] remove unneeded `.0` in version ranges [`cb466a6`](https://github.com/inspect-js/is-core-module/commit/cb466a6d89e52b8389e5c12715efcd550c41cea3)","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`c9f9c39`](https://github.com/inspect-js/is-core-module/commit/c9f9c396ace60ef81906f98059c064e6452473ed)","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"- [actions] update workflows [`3ee4a89`](https://github.com/inspect-js/is-core-module/commit/3ee4a89fd5a02fccd43882d905448ea6a98e9a3c)","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`dee4fed`](https://github.com/inspect-js/is-core-module/commit/dee4fed79690c1d43a22f7fa9426abebdc6d727f)","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`7d046ba`](https://github.com/inspect-js/is-core-module/commit/7d046ba07ae8c9292e43652694ca808d7b309de8)","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"- [meta] use `prepublishOnly` script for npm 7+ [`149e677`](https://github.com/inspect-js/is-core-module/commit/149e6771a5ede6d097e71785b467a9c4b4977cc7)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"- [readme] remove travis badge [`903b51d`](https://github.com/inspect-js/is-core-module/commit/903b51d6b69b98abeabfbc3695c345b02646f19c)","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"## [v2.2.0](https://github.com/inspect-js/is-core-module/compare/v2.1.0...v2.2.0) - 2020-11-26","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"- [Tests] migrate tests to Github Actions [`c919f57`](https://github.com/inspect-js/is-core-module/commit/c919f573c0a92d10a0acad0b650b5aecb033d426)","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"- [patch] `core.json`: %s/    /\\t/g [`db3f685`](https://github.com/inspect-js/is-core-module/commit/db3f68581f53e73cc09cd675955eb1bdd6a5a39b)","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"- [Tests] run `nyc` on all tests [`b2f925f`](https://github.com/inspect-js/is-core-module/commit/b2f925f8866f210ef441f39fcc8cc42692ab89b1)","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`; add `safe-publish-latest` [`89f02a2`](https://github.com/inspect-js/is-core-module/commit/89f02a2b4162246dea303a6ee31bb9a550b05c72)","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"- [New] add `path/posix`, `path/win32`, `util/types` [`77f94f1`](https://github.com/inspect-js/is-core-module/commit/77f94f1e90ffd7c0be2a3f1aa8574ebf7fd981b3)","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"## [v2.1.0](https://github.com/inspect-js/is-core-module/compare/v2.0.0...v2.1.0) - 2020-11-04","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `eslint` [`5e0034e`](https://github.com/inspect-js/is-core-module/commit/5e0034eae57c09c8f1bd769f502486a00f56c6e4)","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"- [New] Add `diagnostics_channel` [`c2d83d0`](https://github.com/inspect-js/is-core-module/commit/c2d83d0a0225a1a658945d9bab7036ea347d29ec)","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"## [v2.0.0](https://github.com/inspect-js/is-core-module/compare/v1.0.2...v2.0.0) - 2020-09-29","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"- v2 implementation [`865aeb5`](https://github.com/inspect-js/is-core-module/commit/865aeb5ca0e90248a3dfff5d7622e4751fdeb9cd)","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"- Only apps should have lockfiles [`5a5e660`](https://github.com/inspect-js/is-core-module/commit/5a5e660d568e37eb44e17fb1ebb12a105205fc2b)","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"- Initial commit for v2 [`5a51524`](https://github.com/inspect-js/is-core-module/commit/5a51524e06f92adece5fbb138c69b7b9748a2348)","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"- Tests [`116eae4`](https://github.com/inspect-js/is-core-module/commit/116eae4fccd01bc72c1fd3cc4b7561c387afc496)","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"- [meta] add `auto-changelog` [`c24388b`](https://github.com/inspect-js/is-core-module/commit/c24388bee828d223040519d1f5b226ca35beee63)","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"- [actions] add \"Automatic Rebase\" and \"require allow edits\" actions [`34292db`](https://github.com/inspect-js/is-core-module/commit/34292dbcbadae0868aff03c22dbd8b7b8a11558a)","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"- [Tests] add `npm run lint` [`4f9eeee`](https://github.com/inspect-js/is-core-module/commit/4f9eeee7ddff10698bbf528620f4dc8d4fa3e697)","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"- [readme] fix travis badges, https all URLs [`e516a73`](https://github.com/inspect-js/is-core-module/commit/e516a73b0dccce20938c432b1ba512eae8eff9e9)","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"- [meta] create FUNDING.yml [`1aabebc`](https://github.com/inspect-js/is-core-module/commit/1aabebca98d01f8a04e46bc2e2520fa93cf21ac6)","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"- [Fix] `domain`: domain landed sometime \u0026gt; v0.7.7 and \u0026lt;\u003d v0.7.12 [`2df7d37`](https://github.com/inspect-js/is-core-module/commit/2df7d37595d41b15eeada732b706b926c2771655)","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"- [Fix] `sys`: worked in 0.6, not 0.7, and 0.8+ [`a75c134`](https://github.com/inspect-js/is-core-module/commit/a75c134229e1e9441801f6b73f6a52489346eb65)","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"## [v1.0.2](https://github.com/inspect-js/is-core-module/compare/v1.0.1...v1.0.2) - 2014-09-28","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"- simpler [`66fe90f`](https://github.com/inspect-js/is-core-module/commit/66fe90f9771581b9adc0c3900baa52c21b5baea2)","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"## [v1.0.1](https://github.com/inspect-js/is-core-module/compare/v1.0.0...v1.0.1) - 2014-09-28","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"- remove stupid [`f21f906`](https://github.com/inspect-js/is-core-module/commit/f21f906f882c2bd656a5fc5ed6fbe48ddaffb2ac)","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"- update readme [`1eff0ec`](https://github.com/inspect-js/is-core-module/commit/1eff0ec69798d1ec65771552d1562911e90a8027)","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"## v1.0.0 - 2014-09-28","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"- init [`48e5e76`](https://github.com/inspect-js/is-core-module/commit/48e5e76cac378fddb8c1f7d4055b8dfc943d6b96)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":173}},{"path":"node_modules/is-core-module/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# is-core-module \u003csup\u003e[![Version Badge][2]][1]\u003c/sup\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![github actions][actions-image]][actions-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![coverage][codecov-image]][codecov-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![dependency status][5]][6]","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![dev dependency status][7]][8]","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[![License][license-image]][license-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![Downloads][downloads-image]][downloads-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"[![npm badge][11]][1]","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"Is this specifier a node.js core module? Optionally provide a node version to check; defaults to the current node version.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"## Example","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"var isCore \u003d require(\u0027is-core-module\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"var assert \u003d require(\u0027assert\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"assert(isCore(\u0027fs\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"assert(!isCore(\u0027butts\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"## Tests","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"Clone the repo, `npm install`, and run `npm test`","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"[1]: https://npmjs.org/package/is-core-module","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"[2]: https://versionbadg.es/inspect-js/is-core-module.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"[5]: https://david-dm.org/inspect-js/is-core-module.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"[6]: https://david-dm.org/inspect-js/is-core-module","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"[7]: https://david-dm.org/inspect-js/is-core-module/dev-status.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"[8]: https://david-dm.org/inspect-js/is-core-module#info\u003ddevDependencies","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"[11]: https://nodei.co/npm/is-core-module.png?downloads\u003dtrue\u0026stars\u003dtrue","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"[license-image]: https://img.shields.io/npm/l/is-core-module.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"[license-url]: LICENSE","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"[downloads-image]: https://img.shields.io/npm/dm/is-core-module.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"[downloads-url]: https://npm-stat.com/charts.html?package\u003dis-core-module","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"[codecov-image]: https://codecov.io/gh/inspect-js/is-core-module/branch/main/graphs/badge.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"[codecov-url]: https://app.codecov.io/gh/inspect-js/is-core-module/","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"[actions-image]: https://img.shields.io/endpoint?url\u003dhttps://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/is-core-module","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"[actions-url]: https://github.com/inspect-js/is-core-module/actions","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":40}},{"path":"node_modules/minimatch/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# minimatch","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"A minimal matching utility.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/isaacs/minimatch.svg?branch\u003dmaster)](http://travis-ci.org/isaacs/minimatch)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"This is the matching library used internally by npm.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"It works by converting glob expressions into JavaScript `RegExp`","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"var minimatch \u003d require(\"minimatch\")","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"minimatch(\"bar.foo\", \"*.foo\") // true!","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"minimatch(\"bar.foo\", \"*.bar\") // false!","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"minimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"## Features","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"Supports these glob features:","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"* Brace Expansion","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"* Extended glob matching","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"* \"Globstar\" `**` matching","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"See:","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"* `man sh`","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"* `man bash`","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"* `man 3 fnmatch`","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"* `man 5 gitignore`","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"## Minimatch Class","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"Create a minimatch object by instantiating the `minimatch.Minimatch` class.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"var Minimatch \u003d require(\"minimatch\").Minimatch","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"var mm \u003d new Minimatch(pattern, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"### Properties","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"* `pattern` The original pattern the minimatch object represents.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"* `options` The options supplied to the constructor.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"* `set` A 2-dimensional array of regexp or string expressions.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"  Each row in the","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"  array corresponds to a brace-expanded pattern.  Each item in the row","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"  corresponds to a single path-part.  For example, the pattern","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"  `{a,b/c}/d` would expand to a set of patterns like:","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        [ [ a, d ]","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        , [ b, c, d ] ]","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    If a portion of the pattern doesn\u0027t have any \"magic\" in it","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"    (that is, it\u0027s something like `\"foo\"` rather than `fo*o?`), then it","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    will be left as a string rather than converted to a regular","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"    expression.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"* `regexp` Created by the `makeRe` method.  A single regular expression","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"  expressing the entire pattern.  This is useful in cases where you wish","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"* `negate` True if the pattern is negated.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"* `comment` True if the pattern is a comment.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"* `empty` True if the pattern is `\"\"`.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"### Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"* `makeRe` Generate the `regexp` member if necessary, and return it.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"  Will return `false` if the pattern is invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"* `match(fname)` Return true if the filename matches the pattern, or","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"  false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"* `matchOne(fileArray, patternArray, partial)` Take a `/`-split","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"  filename, and match it against a single row in the `regExpSet`.  This","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"  method is mainly for internal use, but is exposed so that it can be","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"  used by a glob-walker that needs to avoid excessive filesystem calls.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"All other methods are internal, and will be called as necessary.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"### minimatch(path, pattern, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"Main export.  Tests a path against the pattern using the options.","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"var isJS \u003d minimatch(file, \"*.js\", { matchBase: true })","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"### minimatch.filter(pattern, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"Returns a function that tests its","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"supplied argument, suitable for use with `Array.filter`.  Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"var javascripts \u003d fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"### minimatch.match(list, pattern, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"Match against the list of","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"files, in the style of fnmatch or glob.  If nothing is matched, and","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"options.nonull is set, then return a list containing the pattern itself.","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"var javascripts \u003d minimatch.match(fileList, \"*.js\", {matchBase: true}))","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"### minimatch.makeRe(pattern, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"Make a regular expression object from the pattern.","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"## Options","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"All options are `false` by default.","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"### debug","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"Dump a ton of stuff to stderr.","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"### nobrace","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"Do not expand `{a,b}` and `{1..3}` brace sets.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"### noglobstar","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"Disable `**` matching against multiple folder names.","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"### dot","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"Allow patterns to match filenames starting with a period, even if","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"the pattern does not explicitly have a period in that spot.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"Note that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"is set.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"### noext","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"Disable \"extglob\" style patterns like `+(a|b)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"### nocase","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"Perform a case-insensitive match.","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"### nonull","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"When a match is not found by `minimatch.match`, return a list containing","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"the pattern itself if this option is set.  When not set, an empty list","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"is returned if there are no matches.","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"### matchBase","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"If set, then patterns without slashes will be matched","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"against the basename of the path if it contains slashes.  For example,","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"### nocomment","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"Suppress the behavior of treating `#` at the start of a pattern as a","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"comment.","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"### nonegate","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"Suppress the behavior of treating a leading `!` character as negation.","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"### flipNegate","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"Returns from negate expressions the same as if they were not negated.","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"(Ie, true on a hit, false on a miss.)","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"### partial","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"Compare a partial path to a pattern.  As long as the parts of the path that","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"are present are not contradicted by the pattern, it will be treated as a","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"match.  This is useful in applications where you\u0027re walking through a","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"folder structure, and don\u0027t yet have the full path, but want to ensure that","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"you do not walk down paths that can never be a match.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"For example,","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"minimatch(\u0027/a/b\u0027, \u0027/a/*/c/d\u0027, { partial: true })  // true, might be /a/b/c/d","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"minimatch(\u0027/a/b\u0027, \u0027/**/d\u0027, { partial: true })     // true, might be /a/b/.../d","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"minimatch(\u0027/x/y/z\u0027, \u0027/a/**/z\u0027, { partial: true }) // false, because x !\u003d\u003d a","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"### allowWindowsEscape","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"Windows path separator `\\` is by default converted to `/`, which","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"prohibits the usage of `\\` as a escape character. This flag skips that","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"behavior and allows using the escape character.","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"## Comparisons to other fnmatch/glob implementations","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"While strict compliance with the existing standards is a worthwhile","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"goal, some discrepancies exist between minimatch and other","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"implementations, and are intentional.","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"If the pattern starts with a `!` character, then it is negated.  Set the","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"`nonegate` flag to suppress this behavior, and treat leading `!`","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"characters normally.  This is perhaps relevant if you wish to start the","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"pattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"characters at the start of a pattern will negate the pattern multiple","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"times.","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"If a pattern starts with `#`, then it is treated as a comment, and","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"will not match anything.  Use `\\#` to match a literal `#` at the","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"start of a line, or set the `nocomment` flag to suppress this behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"The double-star character `**` is supported by default, unless the","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"`noglobstar` flag is set.  This is supported in the manner of bsdglob","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"and bash 4.1, where `**` only has special significance if it is the only","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"thing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"`a/**b` will not.","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"If an escaped pattern has no matches, and the `nonull` flag is set,","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"then minimatch.match returns the pattern as-provided, rather than","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"interpreting the character escapes.  For example,","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"`minimatch.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"that it does not resolve escaped pattern characters.","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"If brace expansion is not disabled, then it is performed before any","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"other interpretation of the glob pattern.  Thus, a pattern like","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"checked for validity.  Since those two are valid, matching proceeds.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":230}},{"path":"node_modules/minimist/CHANGELOG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Changelog","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"All notable changes to this project will be documented in this file.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"## [v1.2.8](https://github.com/minimistjs/minimist/compare/v1.2.7...v1.2.8) - 2023-02-09","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"### Merged","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix long option followed by single dash [`#17`](https://github.com/minimistjs/minimist/pull/17)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"- [Tests] Remove duplicate test [`#12`](https://github.com/minimistjs/minimist/pull/12)","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"- [Fix] opt.string works with multiple aliases [`#10`](https://github.com/minimistjs/minimist/pull/10)","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"### Fixed","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix long option followed by single dash (#17) [`#15`](https://github.com/minimistjs/minimist/issues/15)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- [Tests] Remove duplicate test (#12) [`#8`](https://github.com/minimistjs/minimist/issues/8)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix long option followed by single dash [`#15`](https://github.com/minimistjs/minimist/issues/15)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"- [Fix] opt.string works with multiple aliases (#10) [`#9`](https://github.com/minimistjs/minimist/issues/9)","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix handling of short option with non-trivial equals [`#5`](https://github.com/minimistjs/minimist/issues/5)","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"- [Tests] Remove duplicate test [`#8`](https://github.com/minimistjs/minimist/issues/8)","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"- [Fix] opt.string works with multiple aliases [`#9`](https://github.com/minimistjs/minimist/issues/9)","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"- Merge tag \u0027v0.2.3\u0027 [`a026794`](https://github.com/minimistjs/minimist/commit/a0267947c7870fc5847cf2d437fbe33f392767da)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix indentation and whitespace [`5368ca4`](https://github.com/minimistjs/minimist/commit/5368ca4147e974138a54cc0dc4cea8f756546b70)","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix indentation and whitespace [`e5f5067`](https://github.com/minimistjs/minimist/commit/e5f5067259ceeaf0b098d14bec910f87e58708c7)","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"- [eslint] more cleanup [`62fde7d`](https://github.com/minimistjs/minimist/commit/62fde7d935f83417fb046741531a9e2346a36976)","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"- [eslint] more cleanup [`36ac5d0`](https://github.com/minimistjs/minimist/commit/36ac5d0d95e4947d074e5737d94814034ca335d1)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"- [meta] add `auto-changelog` [`73923d2`](https://github.com/minimistjs/minimist/commit/73923d223553fca08b1ba77e3fbc2a492862ae4c)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"- [actions] add reusable workflows [`d80727d`](https://github.com/minimistjs/minimist/commit/d80727df77bfa9e631044d7f16368d8f09242c91)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"- [eslint] add eslint; rules to enable later are warnings [`48bc06a`](https://github.com/minimistjs/minimist/commit/48bc06a1b41f00e9cdf183db34f7a51ba70e98d4)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix indentation [`34b0f1c`](https://github.com/minimistjs/minimist/commit/34b0f1ccaa45183c3c4f06a91f9b405180a6f982)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"- [readme] rename and add badges [`5df0fe4`](https://github.com/minimistjs/minimist/commit/5df0fe49211bd09a3636f8686a7cb3012c3e98f0)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] switch from `covert` to `nyc` [`a48b128`](https://github.com/minimistjs/minimist/commit/a48b128fdb8d427dfb20a15273f83e38d97bef07)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`f0fb958`](https://github.com/minimistjs/minimist/commit/f0fb958e9a1fe980cdffc436a211b0bda58f621b)","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"- [meta] create FUNDING.yml; add `funding` in package.json [`3639e0c`](https://github.com/minimistjs/minimist/commit/3639e0c819359a366387e425ab6eabf4c78d3caa)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"- [meta] use `npmignore` to autogenerate an npmignore file [`be2e038`](https://github.com/minimistjs/minimist/commit/be2e038c342d8333b32f0fde67a0026b79c8150e)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- Only apps should have lockfiles [`282b570`](https://github.com/minimistjs/minimist/commit/282b570e7489d01b03f2d6d3dabf79cd3e5f84cf)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- isConstructorOrProto adapted from PR [`ef9153f`](https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`098873c`](https://github.com/minimistjs/minimist/commit/098873c213cdb7c92e55ae1ef5aa1af3a8192a79)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`3124ed3`](https://github.com/minimistjs/minimist/commit/3124ed3e46306301ebb3c834874ce0241555c2c4)","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"- [meta] add `safe-publish-latest` [`4b927de`](https://github.com/minimistjs/minimist/commit/4b927de696d561c636b4f43bf49d4597cb36d6d6)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- [Tests] add `aud` in `posttest` [`b32d9bd`](https://github.com/minimistjs/minimist/commit/b32d9bd0ab340f4e9f8c3a97ff2a4424f25fab8c)","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- [meta] update repo URLs [`f9fdfc0`](https://github.com/minimistjs/minimist/commit/f9fdfc032c54884d9a9996a390c63cd0719bbe1a)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"- [actions] Avoid 0.6 tests due to build failures [`ba92fe6`](https://github.com/minimistjs/minimist/commit/ba92fe6ebbdc0431cca9a2ea8f27beb492f5e4ec)","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `tape` [`950eaa7`](https://github.com/minimistjs/minimist/commit/950eaa74f112e04d23e9c606c67472c46739b473)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] add missing `npmignore` dev dep [`3226afa`](https://github.com/minimistjs/minimist/commit/3226afaf09e9d127ca369742437fe6e88f752d6b)","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"- Merge tag \u0027v0.2.2\u0027 [`980d7ac`](https://github.com/minimistjs/minimist/commit/980d7ac61a0b4bd552711251ac107d506b23e41f)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"## [v1.2.7](https://github.com/minimistjs/minimist/compare/v1.2.6...v1.2.7) - 2022-10-10","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"- [meta] add `auto-changelog` [`0ebf4eb`](https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83c3c)","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"- [actions] add reusable workflows [`e115b63`](https://github.com/minimistjs/minimist/commit/e115b63fa9d3909f33b00a2db647ff79068388de)","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"- [eslint] add eslint; rules to enable later are warnings [`f58745b`](https://github.com/minimistjs/minimist/commit/f58745b9bb84348e1be72af7dbba5840c7c13013)","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] switch from `covert` to `nyc` [`ab03356`](https://github.com/minimistjs/minimist/commit/ab033567b9c8b31117cb026dc7f1e592ce455c65)","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- [readme] rename and add badges [`236f4a0`](https://github.com/minimistjs/minimist/commit/236f4a07e4ebe5ee44f1496ec6974991ab293ffd)","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"- [meta] create FUNDING.yml; add `funding` in package.json [`783a49b`](https://github.com/minimistjs/minimist/commit/783a49bfd47e8335d3098a8cac75662cf71eb32a)","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"- [meta] use `npmignore` to autogenerate an npmignore file [`f81ece6`](https://github.com/minimistjs/minimist/commit/f81ece6aaec2fa14e69ff4f1e0407a8c4e2635a2)","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"- Only apps should have lockfiles [`56cad44`](https://github.com/minimistjs/minimist/commit/56cad44c7f879b9bb5ec18fcc349308024a89bfc)","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`49c5f9f`](https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded)","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"- [Tests] add `aud` in `posttest` [`228ae93`](https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280)","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"- [meta] add `safe-publish-latest` [`01fc23f`](https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff)","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"- [meta] update repo URLs [`6b164c7`](https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd)","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"## [v1.2.6](https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6) - 2022-03-21","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"- test from prototype pollution PR [`bc8ecee`](https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb)","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"- isConstructorOrProto adapted from PR [`c2b9819`](https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d)","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"- security notice for additional prototype pollution issue [`ef88b93`](https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2)","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"## [v1.2.5](https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5) - 2020-03-12","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"## [v1.2.4](https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4) - 2020-03-11","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"- security notice [`4cf1354`](https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f)","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"- additional test for constructor prototype pollution [`1043d21`](https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b)","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"## [v1.2.3](https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3) - 2020-03-10","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"- more failing proto pollution tests [`13c01a5`](https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc)","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"- even more aggressive checks for protocol pollution [`38a4d1c`](https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab)","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"## [v1.2.2](https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2) - 2020-03-10","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"- failing test for protocol pollution [`0efed03`](https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab)","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"- cleanup [`67d3722`](https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2)","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"- console.dir -\u0026gt; console.log [`47acf72`](https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54)","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"- don\u0027t assign onto __proto__ [`63e7ed0`](https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94)","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"## [v1.2.1](https://github.com/minimistjs/minimist/compare/v1.2.0...v1.2.1) - 2020-03-10","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"### Merged","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"- move the `opts[\u0027--\u0027]` example back where it belongs [`#63`](https://github.com/minimistjs/minimist/pull/63)","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"- add test [`6be5dae`](https://github.com/minimistjs/minimist/commit/6be5dae35a32a987bcf4137fcd6c19c5200ee909)","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"- fix bad boolean regexp [`ac3fc79`](https://github.com/minimistjs/minimist/commit/ac3fc796e63b95128fdbdf67ea7fad71bd59aa76)","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"## [v1.2.0](https://github.com/minimistjs/minimist/compare/v1.1.3...v1.2.0) - 2015-08-24","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"- failing -k\u003dv short test [`63416b8`](https://github.com/minimistjs/minimist/commit/63416b8cd1d0d70e4714564cce465a36e4dd26d7)","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"- kv short fix [`6bbe145`](https://github.com/minimistjs/minimist/commit/6bbe14529166245e86424f220a2321442fe88dc3)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"- failing kv short test [`f72ab7f`](https://github.com/minimistjs/minimist/commit/f72ab7f4572adc52902c9b6873cc969192f01b10)","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"- fixed kv test [`f5a48c3`](https://github.com/minimistjs/minimist/commit/f5a48c3e50e40ca54f00c8e84de4b4d6e9897fa8)","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"- enforce space between arg key and value [`86b321a`](https://github.com/minimistjs/minimist/commit/86b321affe648a8e016c095a4f0efa9d9074f502)","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"## [v1.1.3](https://github.com/minimistjs/minimist/compare/v1.1.2...v1.1.3) - 2015-08-06","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"- add failing test - boolean alias array [`0fa3c5b`](https://github.com/minimistjs/minimist/commit/0fa3c5b3dd98551ddecf5392831b4c21211743fc)","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"- fix boolean values with multiple aliases [`9c0a6e7`](https://github.com/minimistjs/minimist/commit/9c0a6e7de25a273b11bbf9a7464f0bd833779795)","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"## [v1.1.2](https://github.com/minimistjs/minimist/compare/v1.1.1...v1.1.2) - 2015-07-22","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"- Convert boolean arguments to boolean values [`8f3dc27`](https://github.com/minimistjs/minimist/commit/8f3dc27cf833f1d54671b6d0bcb55c2fe19672a9)","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"- use non-ancient npm, node 0.12 and iojs [`61ed1d0`](https://github.com/minimistjs/minimist/commit/61ed1d034b9ec7282764ce76f3992b1a0b4906ae)","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"- an older npm for 0.8 [`25cf778`](https://github.com/minimistjs/minimist/commit/25cf778b1220e7838a526832ad6972f75244054f)","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"## [v1.1.1](https://github.com/minimistjs/minimist/compare/v1.1.0...v1.1.1) - 2015-03-10","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"- check that they type of a value is a boolean, not just that it is currently set to a boolean [`6863198`](https://github.com/minimistjs/minimist/commit/6863198e36139830ff1f20ffdceaddd93f2c1db9)","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"- upgrade tape, fix type issues from old tape version [`806712d`](https://github.com/minimistjs/minimist/commit/806712df91604ed02b8e39aa372b84aea659ee34)","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"- test for setting a boolean to a null default [`8c444fe`](https://github.com/minimistjs/minimist/commit/8c444fe89384ded7d441c120915ea60620b01dd3)","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"- if the previous value was a boolean, without an default (or with an alias) don\u0027t make an array either [`e5f419a`](https://github.com/minimistjs/minimist/commit/e5f419a3b5b3bc3f9e5ac71b7040621af70ed2dd)","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"## [v1.1.0](https://github.com/minimistjs/minimist/compare/v1.0.0...v1.1.0) - 2014-08-10","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"- add support for handling \"unknown\" options not registered with the parser. [`6f3cc5d`](https://github.com/minimistjs/minimist/commit/6f3cc5d4e84524932a6ef2ce3592acc67cdd4383)","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"- reformat package.json [`02ed371`](https://github.com/minimistjs/minimist/commit/02ed37115194d3697ff358e8e25e5e66bab1d9f8)","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"- coverage script [`e5531ba`](https://github.com/minimistjs/minimist/commit/e5531ba0479da3b8138d3d8cac545d84ccb1c8df)","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"- extra fn to get 100% coverage again [`a6972da`](https://github.com/minimistjs/minimist/commit/a6972da89e56bf77642f8ec05a13b6558db93498)","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"## [v1.0.0](https://github.com/minimistjs/minimist/compare/v0.2.3...v1.0.0) - 2014-08-10","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"- added stopEarly option [`471c7e4`](https://github.com/minimistjs/minimist/commit/471c7e4a7e910fc7ad8f9df850a186daf32c64e9)","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"- fix list [`fef6ae7`](https://github.com/minimistjs/minimist/commit/fef6ae79c38b9dc1c49569abb7cd04eb965eac5e)","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"## [v0.2.3](https://github.com/minimistjs/minimist/compare/v0.2.2...v0.2.3) - 2023-02-09","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"### Merged","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix long option followed by single dash [`#17`](https://github.com/minimistjs/minimist/pull/17)","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"- [Tests] Remove duplicate test [`#12`](https://github.com/minimistjs/minimist/pull/12)","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"- [Fix] opt.string works with multiple aliases [`#10`](https://github.com/minimistjs/minimist/pull/10)","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"### Fixed","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"- [Fix] Fix long option followed by single dash (#17) [`#15`](https://github.com/minimistjs/minimist/issues/15)","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"- [Tests] Remove duplicate test (#12) [`#8`](https://github.com/minimistjs/minimist/issues/8)","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"- [Fix] opt.string works with multiple aliases (#10) [`#9`](https://github.com/minimistjs/minimist/issues/9)","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix indentation and whitespace [`e5f5067`](https://github.com/minimistjs/minimist/commit/e5f5067259ceeaf0b098d14bec910f87e58708c7)","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"- [eslint] more cleanup [`36ac5d0`](https://github.com/minimistjs/minimist/commit/36ac5d0d95e4947d074e5737d94814034ca335d1)","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"- [eslint] fix indentation [`34b0f1c`](https://github.com/minimistjs/minimist/commit/34b0f1ccaa45183c3c4f06a91f9b405180a6f982)","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"- isConstructorOrProto adapted from PR [`ef9153f`](https://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11)","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `@ljharb/eslint-config`, `aud` [`098873c`](https://github.com/minimistjs/minimist/commit/098873c213cdb7c92e55ae1ef5aa1af3a8192a79)","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] add missing `npmignore` dev dep [`3226afa`](https://github.com/minimistjs/minimist/commit/3226afaf09e9d127ca369742437fe6e88f752d6b)","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"## [v0.2.2](https://github.com/minimistjs/minimist/compare/v0.2.1...v0.2.2) - 2022-10-10","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"- [meta] add `auto-changelog` [`73923d2`](https://github.com/minimistjs/minimist/commit/73923d223553fca08b1ba77e3fbc2a492862ae4c)","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"- [actions] add reusable workflows [`d80727d`](https://github.com/minimistjs/minimist/commit/d80727df77bfa9e631044d7f16368d8f09242c91)","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"- [eslint] add eslint; rules to enable later are warnings [`48bc06a`](https://github.com/minimistjs/minimist/commit/48bc06a1b41f00e9cdf183db34f7a51ba70e98d4)","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"- [readme] rename and add badges [`5df0fe4`](https://github.com/minimistjs/minimist/commit/5df0fe49211bd09a3636f8686a7cb3012c3e98f0)","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] switch from `covert` to `nyc` [`a48b128`](https://github.com/minimistjs/minimist/commit/a48b128fdb8d427dfb20a15273f83e38d97bef07)","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] update `covert`, `tape`; remove unnecessary `tap` [`f0fb958`](https://github.com/minimistjs/minimist/commit/f0fb958e9a1fe980cdffc436a211b0bda58f621b)","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"- [meta] create FUNDING.yml; add `funding` in package.json [`3639e0c`](https://github.com/minimistjs/minimist/commit/3639e0c819359a366387e425ab6eabf4c78d3caa)","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"- [meta] use `npmignore` to autogenerate an npmignore file [`be2e038`](https://github.com/minimistjs/minimist/commit/be2e038c342d8333b32f0fde67a0026b79c8150e)","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"- Only apps should have lockfiles [`282b570`](https://github.com/minimistjs/minimist/commit/282b570e7489d01b03f2d6d3dabf79cd3e5f84cf)","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"- [meta] add `safe-publish-latest` [`4b927de`](https://github.com/minimistjs/minimist/commit/4b927de696d561c636b4f43bf49d4597cb36d6d6)","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"- [Tests] add `aud` in `posttest` [`b32d9bd`](https://github.com/minimistjs/minimist/commit/b32d9bd0ab340f4e9f8c3a97ff2a4424f25fab8c)","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"- [meta] update repo URLs [`f9fdfc0`](https://github.com/minimistjs/minimist/commit/f9fdfc032c54884d9a9996a390c63cd0719bbe1a)","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"## [v0.2.1](https://github.com/minimistjs/minimist/compare/v0.2.0...v0.2.1) - 2020-03-12","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"## [v0.2.0](https://github.com/minimistjs/minimist/compare/v0.1.0...v0.2.0) - 2014-06-19","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"- support all-boolean mode [`450a97f`](https://github.com/minimistjs/minimist/commit/450a97f6e2bc85c7a4a13185c19a818d9a5ebe69)","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"## [v0.1.0](https://github.com/minimistjs/minimist/compare/v0.0.10...v0.1.0) - 2014-05-12","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"- Provide a mechanism to segregate -- arguments [`ce4a1e6`](https://github.com/minimistjs/minimist/commit/ce4a1e63a7e8d5ab88d2a3768adefa6af98a445a)","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"- documented argv[\u0027--\u0027] [`14db0e6`](https://github.com/minimistjs/minimist/commit/14db0e6dbc6d2b9e472adaa54dad7004b364634f)","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"- Adding a test-case for notFlags segregation [`715c1e3`](https://github.com/minimistjs/minimist/commit/715c1e3714be223f998f6c537af6b505f0236c16)","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"## [v0.0.10](https://github.com/minimistjs/minimist/compare/v0.0.9...v0.0.10) - 2014-05-11","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"- dedicated boolean test [`46e448f`](https://github.com/minimistjs/minimist/commit/46e448f9f513cfeb2bcc8b688b9b47ba1e515c2b)","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"- dedicated num test [`9bf2d36`](https://github.com/minimistjs/minimist/commit/9bf2d36f1d3b8795be90b8f7de0a937f098aa394)","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"- aliased values treated as strings [`1ab743b`](https://github.com/minimistjs/minimist/commit/1ab743bad4484d69f1259bed42f9531de01119de)","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"- cover the case of already numbers, at 100% coverage [`b2bb044`](https://github.com/minimistjs/minimist/commit/b2bb04436599d77a2ce029e8e555e25b3aa55d13)","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"- another test for higher coverage [`3662624`](https://github.com/minimistjs/minimist/commit/3662624be976d5489d486a856849c048d13be903)","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"## [v0.0.9](https://github.com/minimistjs/minimist/compare/v0.0.8...v0.0.9) - 2014-05-08","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"- Eliminate `longest` fn. [`824f642`](https://github.com/minimistjs/minimist/commit/824f642038d1b02ede68b6261d1d65163390929a)","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"## [v0.0.8](https://github.com/minimistjs/minimist/compare/v0.0.7...v0.0.8) - 2014-02-20","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"- return \u0027\u0027 if flag is string and empty [`fa63ed4`](https://github.com/minimistjs/minimist/commit/fa63ed4651a4ef4eefddce34188e0d98d745a263)","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"- handle joined single letters [`66c248f`](https://github.com/minimistjs/minimist/commit/66c248f0241d4d421d193b022e9e365f11178534)","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"## [v0.0.7](https://github.com/minimistjs/minimist/compare/v0.0.6...v0.0.7) - 2014-02-08","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"- another swap of .test for .match [`d1da408`](https://github.com/minimistjs/minimist/commit/d1da40819acbe846d89a5c02721211e3c1260dde)","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"## [v0.0.6](https://github.com/minimistjs/minimist/compare/v0.0.5...v0.0.6) - 2014-02-08","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"- use .test() instead of .match() to not crash on non-string values in the arguments array [`7e0d1ad`](https://github.com/minimistjs/minimist/commit/7e0d1add8c9e5b9b20a4d3d0f9a94d824c578da1)","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5](https://github.com/minimistjs/minimist/compare/v0.0.4...v0.0.5) - 2013-09-18","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"- Improve \u0027--\u0027 handling. [`b11822c`](https://github.com/minimistjs/minimist/commit/b11822c09cc9d2460f30384d12afc0b953c037a4)","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"## [v0.0.4](https://github.com/minimistjs/minimist/compare/v0.0.3...v0.0.4) - 2013-09-17","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"## [v0.0.3](https://github.com/minimistjs/minimist/compare/v0.0.2...v0.0.3) - 2013-09-12","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"- failing test for single dash preceeding a double dash [`b465514`](https://github.com/minimistjs/minimist/commit/b465514b82c9ae28972d714facd951deb2ad762b)","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"- fix for the dot test [`6a095f1`](https://github.com/minimistjs/minimist/commit/6a095f1d364c8fab2d6753d2291a0649315d297a)","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"## [v0.0.2](https://github.com/minimistjs/minimist/compare/v0.0.1...v0.0.2) - 2013-08-28","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"- allow dotted aliases \u0026 defaults [`321c33e`](https://github.com/minimistjs/minimist/commit/321c33e755485faaeb44eeb1c05d33b2e0a5a7c4)","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"- use a better version of ff [`e40f611`](https://github.com/minimistjs/minimist/commit/e40f61114cf7be6f7947f7b3eed345853a67dbbb)","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"## [v0.0.1](https://github.com/minimistjs/minimist/compare/v0.0.0...v0.0.1) - 2013-06-25","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"- remove trailing commas [`6ff0fa0`](https://github.com/minimistjs/minimist/commit/6ff0fa055064f15dbe06d50b89d5173a6796e1db)","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"## v0.0.0 - 2013-06-25","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"- half of the parse test ported [`3079326`](https://github.com/minimistjs/minimist/commit/307932601325087de6cf94188eb798ffc4f3088a)","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"- stripped down code and a passing test from optimist [`7cced88`](https://github.com/minimistjs/minimist/commit/7cced88d82e399d1a03ed23eb667f04d3f320d10)","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"- ported parse tests completely over [`9448754`](https://github.com/minimistjs/minimist/commit/944875452e0820df6830b1408c26a0f7d3e1db04)","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"- docs, package.json [`a5bf46a`](https://github.com/minimistjs/minimist/commit/a5bf46ac9bb3bd114a9c340276c62c1091e538d5)","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"- move more short tests into short.js [`503edb5`](https://github.com/minimistjs/minimist/commit/503edb5c41d89c0d40831ee517154fc13b0f18b9)","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"- default bool test was wrong, not the code [`1b9f5db`](https://github.com/minimistjs/minimist/commit/1b9f5db4741b49962846081b68518de824992097)","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"- passing long tests ripped out of parse.js [`7972c4a`](https://github.com/minimistjs/minimist/commit/7972c4aff1f4803079e1668006658e2a761a0428)","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"- badges [`84c0370`](https://github.com/minimistjs/minimist/commit/84c037063664d42878aace715fe6572ce01b6f3b)","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"- all the tests now ported, some failures [`64239ed`](https://github.com/minimistjs/minimist/commit/64239edfe92c711c4eb0da254fcdfad2a5fdb605)","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"- failing short test [`f8a5341`](https://github.com/minimistjs/minimist/commit/f8a534112dd1138d2fad722def56a848480c446f)","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"- fixed the numeric test [`6b034f3`](https://github.com/minimistjs/minimist/commit/6b034f37c79342c60083ed97fd222e16928aac51)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":298}},{"path":"node_modules/minimist/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# minimist \u003csup\u003e[![Version Badge][npm-version-svg]][package-url]\u003c/sup\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![github actions][actions-image]][actions-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![coverage][codecov-image]][codecov-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![License][license-image]][license-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![Downloads][downloads-image]][downloads-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![npm badge][npm-badge-png]][package-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"parse argument options","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"This module is the guts of optimist\u0027s argument parser without all the","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"fanciful decoration.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"# example","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"``` js","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"var argv \u003d require(\u0027minimist\u0027)(process.argv.slice(2));","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"console.log(argv);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"$ node example/parse.js -a beep -b boop","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"{ _: [], a: \u0027beep\u0027, b: \u0027boop\u0027 }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"$ node example/parse.js -x 3 -y 4 -n5 -abc --beep\u003dboop foo bar baz","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"\t_: [\u0027foo\u0027, \u0027bar\u0027, \u0027baz\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"\tx: 3,","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"\ty: 4,","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"\tn: 5,","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"\ta: true,","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"\tb: true,","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"\tc: true,","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"\tbeep: \u0027boop\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"# security","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"Previous versions had a prototype pollution bug that could cause privilege","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"escalation in some circumstances when handling untrusted user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"Please use version 1.2.6 or later:","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"* https://security.snyk.io/vuln/SNYK-JS-MINIMIST-2429795 (version \u003c\u003d1.2.5)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"* https://snyk.io/vuln/SNYK-JS-MINIMIST-559764 (version \u003c\u003d1.2.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"# methods","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"``` js","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"var parseArgs \u003d require(\u0027minimist\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"## var argv \u003d parseArgs(args, opts\u003d{})","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"Return an argument object `argv` populated with the array arguments from `args`.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"`argv._` contains all the arguments that didn\u0027t have an option associated with","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"them.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"Numeric-looking arguments will be returned as numbers unless `opts.string` or","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"`opts.boolean` is set for that argument name.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"Any arguments after `\u0027--\u0027` will not be parsed and will end up in `argv._`.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"options can be:","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"* `opts.string` - a string or array of strings argument names to always treat as","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"strings","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"* `opts.boolean` - a boolean, string or array of strings to always treat as","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"booleans. if `true` will treat all double hyphenated arguments without equal signs","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"as boolean (e.g. affects `--foo`, not `-f` or `--foo\u003dbar`)","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"* `opts.alias` - an object mapping string names to strings or arrays of string","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"argument names to use as aliases","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"* `opts.default` - an object mapping string argument names to default values","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"* `opts.stopEarly` - when true, populate `argv._` with everything after the","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"first non-option","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"* `opts[\u0027--\u0027]` - when true, populate `argv._` with everything before the `--`","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"and `argv[\u0027--\u0027]` with everything after the `--`. Here\u0027s an example:","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"  ```","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"  \u003e require(\u0027./\u0027)(\u0027one two three -- four five --six\u0027.split(\u0027 \u0027), { \u0027--\u0027: true })","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"  {","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"    _: [\u0027one\u0027, \u0027two\u0027, \u0027three\u0027],","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"    \u0027--\u0027: [\u0027four\u0027, \u0027five\u0027, \u0027--six\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"  ```","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"  Note that with `opts[\u0027--\u0027]` set, parsing for arguments still stops after the","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"  `--`.","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"* `opts.unknown` - a function which is invoked with a command line parameter not","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"defined in the `opts` configuration object. If the function returns `false`, the","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"unknown option is not added to `argv`.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"# install","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"With [npm](https://npmjs.org) do:","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"npm install minimist","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"# license","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"MIT","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"[package-url]: https://npmjs.org/package/minimist","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"[npm-version-svg]: https://versionbadg.es/minimistjs/minimist.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"[npm-badge-png]: https://nodei.co/npm/minimist.png?downloads\u003dtrue\u0026stars\u003dtrue","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"[license-image]: https://img.shields.io/npm/l/minimist.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"[license-url]: LICENSE","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"[downloads-image]: https://img.shields.io/npm/dm/minimist.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"[downloads-url]: https://npm-stat.com/charts.html?package\u003dminimist","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"[codecov-image]: https://codecov.io/gh/minimistjs/minimist/branch/main/graphs/badge.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"[codecov-url]: https://app.codecov.io/gh/minimistjs/minimist/","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"[actions-image]: https://img.shields.io/endpoint?url\u003dhttps://github-actions-badge-u3jn4tfpocch.runkit.sh/minimistjs/minimist","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"[actions-url]: https://github.com/minimistjs/minimist/actions","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":121}},{"path":"node_modules/minipass/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# minipass","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"A _very_ minimal implementation of a [PassThrough","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"stream](https://nodejs.org/api/stream.html#stream_class_stream_passthrough)","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[It\u0027s very","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"fast](https://docs.google.com/spreadsheets/d/1oObKSrVwLX_7Ut4Z6g3fZW-AX1j1-k6w-cDsrkaSbHM/edit#gid\u003d0)","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"for objects, strings, and buffers.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"Supports pipe()ing (including multi-pipe() and backpressure","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"transmission), buffering data until either a `data` event handler or","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"`pipe()` is added (so you don\u0027t lose the first chunk), and most other","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"cases where PassThrough is a good idea.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"There is a `read()` method, but it\u0027s much more efficient to consume","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"data from this stream via `\u0027data\u0027` events or by calling `pipe()` into","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"some other stream.  Calling `read()` requires the buffer to be","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"flattened in some cases, which requires copying memory.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"There is also no `unpipe()` method.  Once you start piping, there is","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"no stopping it!","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"If you set `objectMode: true` in the options, then whatever is written","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"will be emitted.  Otherwise, it\u0027ll do a minimal amount of Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"copying to ensure proper Streams semantics when `read(n)` is called.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"`objectMode` can also be set by doing `stream.objectMode \u003d true`, or by","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"writing any non-string/non-buffer data.  `objectMode` cannot be set to","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"false once it is set.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"This is not a `through` or `through2` stream.  It doesn\u0027t transform","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"the data, it just passes it right through.  If you want to transform","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"the data, extend the class, and override the `write()` method.  Once","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"you\u0027re done transforming the data however you want, call","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"`super.write()` with the transform output.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"For some examples of streams that extend Minipass in various ways, check","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"out:","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"- [minizlib](http://npm.im/minizlib)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"- [fs-minipass](http://npm.im/fs-minipass)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- [tar](http://npm.im/tar)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- [minipass-collect](http://npm.im/minipass-collect)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"- [minipass-flush](http://npm.im/minipass-flush)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"- [minipass-pipeline](http://npm.im/minipass-pipeline)","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"- [tap](http://npm.im/tap)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- [tap-parser](http://npm.im/tap)","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- [treport](http://npm.im/tap)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"## Differences from Node.js Streams","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"There are several things that make Minipass streams different from (and in","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"some ways superior to) Node.js core streams.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"Please read these caveats if you are familiar with noode-core streams and","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"intend to use Minipass streams in your programs.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"### Timing","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"Minipass streams are designed to support synchronous use-cases.  Thus, data","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"is emitted as soon as it is available, always.  It is buffered until read,","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"but no longer.  Another way to look at it is that Minipass streams are","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"exactly as synchronous as the logic that writes into them.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"This can be surprising if your code relies on `PassThrough.write()` always","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"providing data on the next tick rather than the current one, or being able","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"to call `resume()` and not have the entire buffer disappear immediately.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"However, without this synchronicity guarantee, there would be no way for","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"Minipass to achieve the speeds it does, or support the synchronous use","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"cases that it does.  Simply put, waiting takes time.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"This non-deferring approach makes Minipass streams much easier to reason","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"about, especially in the context of Promises and other flow-control","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"mechanisms.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"### No High/Low Water Marks","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"Node.js core streams will optimistically fill up a buffer, returning `true`","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"on all writes until the limit is hit, even if the data has nowhere to go.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"Then, they will not attempt to draw more data in until the buffer size dips","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"below a minimum value.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"Minipass streams are much simpler.  The `write()` method will return `true`","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"if the data has somewhere to go (which is to say, given the timing","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"guarantees, that the data is already there by the time `write()` returns).","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"If the data has nowhere to go, then `write()` returns false, and the data","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"sits in a buffer, to be drained out immediately as soon as anyone consumes","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"it.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"### Hazards of Buffering (or: Why Minipass Is So Fast)","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"Since data written to a Minipass stream is immediately written all the way","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"through the pipeline, and `write()` always returns true/false based on","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"whether the data was fully flushed, backpressure is communicated","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"immediately to the upstream caller.  This minimizes buffering.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"Consider this case:","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"const {PassThrough} \u003d require(\u0027stream\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"const p1 \u003d new PassThrough({ highWaterMark: 1024 })","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"const p2 \u003d new PassThrough({ highWaterMark: 1024 })","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"const p3 \u003d new PassThrough({ highWaterMark: 1024 })","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"const p4 \u003d new PassThrough({ highWaterMark: 1024 })","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"p1.pipe(p2).pipe(p3).pipe(p4)","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"p4.on(\u0027data\u0027, () \u003d\u003e console.log(\u0027made it through\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"// this returns false and buffers, then writes to p2 on next tick (1)","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"// p2 returns false and buffers, pausing p1, then writes to p3 on next tick (2)","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"// p3 returns false and buffers, pausing p2, then writes to p4 on next tick (3)","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"// p4 returns false and buffers, pausing p3, then emits \u0027data\u0027 and \u0027drain\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"// on next tick (4)","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"// p3 sees p4\u0027s \u0027drain\u0027 event, and calls resume(), emitting \u0027resume\u0027 and","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"// \u0027drain\u0027 on next tick (5)","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"// p2 sees p3\u0027s \u0027drain\u0027, calls resume(), emits \u0027resume\u0027 and \u0027drain\u0027 on next tick (6)","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"// p1 sees p2\u0027s \u0027drain\u0027, calls resume(), emits \u0027resume\u0027 and \u0027drain\u0027 on next","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"// tick (7)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"p1.write(Buffer.alloc(2048)) // returns false","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"Along the way, the data was buffered and deferred at each stage, and","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"multiple event deferrals happened, for an unblocked pipeline where it was","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"perfectly safe to write all the way through!","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"Furthermore, setting a `highWaterMark` of `1024` might lead someone reading","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"the code to think an advisory maximum of 1KiB is being set for the","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"pipeline.  However, the actual advisory buffering level is the _sum_ of","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"`highWaterMark` values, since each one has its own bucket.","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"Consider the Minipass case:","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"const m1 \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"const m2 \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"const m3 \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"const m4 \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"m1.pipe(m2).pipe(m3).pipe(m4)","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"m4.on(\u0027data\u0027, () \u003d\u003e console.log(\u0027made it through\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"// m1 is flowing, so it writes the data to m2 immediately","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"// m2 is flowing, so it writes the data to m3 immediately","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"// m3 is flowing, so it writes the data to m4 immediately","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"// m4 is flowing, so it fires the \u0027data\u0027 event immediately, returns true","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"// m4\u0027s write returned true, so m3 is still flowing, returns true","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"// m3\u0027s write returned true, so m2 is still flowing, returns true","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"// m2\u0027s write returned true, so m1 is still flowing, returns true","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"// No event deferrals or buffering along the way!","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"m1.write(Buffer.alloc(2048)) // returns true","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"It is extremely unlikely that you _don\u0027t_ want to buffer any data written,","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"or _ever_ buffer data that can be flushed all the way through.  Neither","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"node-core streams nor Minipass ever fail to buffer written data, but","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"node-core streams do a lot of unnecessary buffering and pausing.","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"As always, the faster implementation is the one that does less stuff and","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"waits less time to do it.","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"### Immediately emit `end` for empty streams (when not paused)","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"If a stream is not paused, and `end()` is called before writing any data","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"into it, then it will emit `end` immediately.","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"If you have logic that occurs on the `end` event which you don\u0027t want to","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"potentially happen immediately (for example, closing file descriptors,","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"moving on to the next entry in an archive parse stream, etc.) then be sure","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"to call `stream.pause()` on creation, and then `stream.resume()` once you","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"are ready to respond to the `end` event.","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"### Emit `end` When Asked","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"One hazard of immediately emitting `\u0027end\u0027` is that you may not yet have had","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"a chance to add a listener.  In order to avoid this hazard, Minipass","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"streams safely re-emit the `\u0027end\u0027` event if a new listener is added after","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"`\u0027end\u0027` has been emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"Ie, if you do `stream.on(\u0027end\u0027, someFunction)`, and the stream has already","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"emitted `end`, then it will call the handler right away.  (You can think of","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"this somewhat like attaching a new `.then(fn)` to a previously-resolved","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"Promise.)","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"To prevent calling handlers multiple times who would not expect multiple","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"ends to occur, all listeners are removed from the `\u0027end\u0027` event whenever it","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"is emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"### Impact of \"immediate flow\" on Tee-streams","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"A \"tee stream\" is a stream piping to multiple destinations:","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"const tee \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"t.pipe(dest1)","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"t.pipe(dest2)","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"t.write(\u0027foo\u0027) // goes to both destinations","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"Since Minipass streams _immediately_ process any pending data through the","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"pipeline when a new pipe destination is added, this can have surprising","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"effects, especially when a stream comes in from some other function and may","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"or may not have data in its buffer.","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"// WARNING! WILL LOSE DATA!","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"const src \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"src.write(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"src.pipe(dest1) // \u0027foo\u0027 chunk flows to dest1 immediately, and is gone","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"src.pipe(dest2) // gets nothing!","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"The solution is to create a dedicated tee-stream junction that pipes to","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"both locations, and then pipe to _that_ instead.","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"// Safe example: tee to both places","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"const src \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"src.write(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"const tee \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"tee.pipe(dest1)","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"tee.pipe(dest2)","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"stream.pipe(tee) // tee gets \u0027foo\u0027, pipes to both locations","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"The same caveat applies to `on(\u0027data\u0027)` event listeners.  The first one","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"added will _immediately_ receive all of the data, leaving nothing for the","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"second:","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"// WARNING! WILL LOSE DATA!","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"const src \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"src.write(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"src.on(\u0027data\u0027, handler1) // receives \u0027foo\u0027 right away","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"src.on(\u0027data\u0027, handler2) // nothing to see here!","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"Using a dedicated tee-stream can be used in this case as well:","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"// Safe example: tee to both data handlers","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"const src \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"src.write(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"const tee \u003d new Minipass()","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"tee.on(\u0027data\u0027, handler1)","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"tee.on(\u0027data\u0027, handler2)","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"src.pipe(tee)","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"It\u0027s a stream!  Use it like a stream and it\u0027ll most likely do what you want.","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"const Minipass \u003d require(\u0027minipass\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"const mp \u003d new Minipass(options) // optional: { encoding, objectMode }","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"mp.pipe(someOtherStream)","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"mp.end(\u0027bar\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"### OPTIONS","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"* `encoding` How would you like the data coming _out_ of the stream to be","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"  encoded?  Accepts any values that can be passed to `Buffer.toString()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"* `objectMode` Emit data exactly as it comes in.  This will be flipped on","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"  by default if you write() something other than a string or Buffer at any","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"  point.  Setting `objectMode: true` will prevent setting any encoding","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"  value.","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"### API","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"Implements the user-facing portions of Node.js\u0027s `Readable` and `Writable`","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"streams.","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"### Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"* `write(chunk, [encoding], [callback])` - Put data in.  (Note that, in the","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"  base Minipass class, the same data will come out.)  Returns `false` if","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"  the stream will buffer the next write, or true if it\u0027s still in","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"  \"flowing\" mode.","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"* `end([chunk, [encoding]], [callback])` - Signal that you have no more","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"  data to write.  This will queue an `end` event to be fired when all the","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"  data has been consumed.","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"* `setEncoding(encoding)` - Set the encoding for data coming of the","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"  stream.  This can only be done once.","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"* `pause()` - No more data for a while, please.  This also prevents `end`","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"  from being emitted for empty streams until the stream is resumed.","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"* `resume()` - Resume the stream.  If there\u0027s data in the buffer, it is","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"  all discarded.  Any buffered events are immediately emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"* `pipe(dest)` - Send all output to the stream provided.  There is no way","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"  to unpipe.  When data is emitted, it is immediately written to any and","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"  all pipe destinations.","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"* `on(ev, fn)`, `emit(ev, fn)` - Minipass streams are EventEmitters.","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"  Some events are given special treatment, however.  (See below under","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"  \"events\".)","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"* `promise()` - Returns a Promise that resolves when the stream emits","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"  `end`, or rejects if the stream emits `error`.","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"* `collect()` - Return a Promise that resolves on `end` with an array","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"  containing each chunk of data that was emitted, or rejects if the","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"  stream emits `error`.  Note that this consumes the stream data.","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"* `concat()` - Same as `collect()`, but concatenates the data into a","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"  single Buffer object.  Will reject the returned promise if the stream is","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"  in objectMode, or if it goes into objectMode by the end of the data.","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"* `read(n)` - Consume `n` bytes of data out of the buffer.  If `n` is not","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"  provided, then consume all of it.  If `n` bytes are not available, then","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"  it returns null.  **Note** consuming streams in this way is less","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"  efficient, and can lead to unnecessary Buffer copying.","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"* `destroy([er])` - Destroy the stream.  If an error is provided, then an","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"  `\u0027error\u0027` event is emitted.  If the stream has a `close()` method, and","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"  has not emitted a `\u0027close\u0027` event yet, then `stream.close()` will be","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"  called.  Any Promises returned by `.promise()`, `.collect()` or","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"  `.concat()` will be rejected.  After being destroyed, writing to the","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"  stream will emit an error.  No more data will be emitted if the stream is","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"  destroyed, even if it was previously buffered.","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"### Properties","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"* `bufferLength` Read-only.  Total number of bytes buffered, or in the case","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"  of objectMode, the total number of objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"* `encoding` The encoding that has been set.  (Setting this is equivalent","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"  to calling `setEncoding(enc)` and has the same prohibition against","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"  setting multiple times.)","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"* `flowing` Read-only.  Boolean indicating whether a chunk written to the","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"  stream will be immediately emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"* `emittedEnd` Read-only.  Boolean indicating whether the end-ish events","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"  (ie, `end`, `prefinish`, `finish`) have been emitted.  Note that","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"  listening on any end-ish event will immediateyl re-emit it if it has","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"  already been emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"* `writable` Whether the stream is writable.  Default `true`.  Set to","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"  `false` when `end()`","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"* `readable` Whether the stream is readable.  Default `true`.","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"* `buffer` A [yallist](http://npm.im/yallist) linked list of chunks written","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"  to the stream that have not yet been emitted.  (It\u0027s probably a bad idea","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"  to mess with this.)","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"* `pipes` A [yallist](http://npm.im/yallist) linked list of streams that","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"  this stream is piping into.  (It\u0027s probably a bad idea to mess with","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"  this.)","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"* `destroyed` A getter that indicates whether the stream was destroyed.","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"* `paused` True if the stream has been explicitly paused, otherwise false.","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"* `objectMode` Indicates whether the stream is in `objectMode`.  Once set","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"  to `true`, it cannot be set to `false`.","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"### Events","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"* `data` Emitted when there\u0027s data to read.  Argument is the data to read.","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"  This is never emitted while not flowing.  If a listener is attached, that","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"  will resume the stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"* `end` Emitted when there\u0027s no more data to read.  This will be emitted","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"  immediately for empty streams when `end()` is called.  If a listener is","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"  attached, and `end` was already emitted, then it will be emitted again.","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"  All listeners are removed when `end` is emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"* `prefinish` An end-ish event that follows the same logic as `end` and is","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"  emitted in the same conditions where `end` is emitted.  Emitted after","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"  `\u0027end\u0027`.","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"* `finish` An end-ish event that follows the same logic as `end` and is","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"  emitted in the same conditions where `end` is emitted.  Emitted after","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"  `\u0027prefinish\u0027`.","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"* `close` An indication that an underlying resource has been released.","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"  Minipass does not emit this event, but will defer it until after `end`","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"  has been emitted, since it throws off some stream libraries otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"* `drain` Emitted when the internal buffer empties, and it is again","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"  suitable to `write()` into the stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"* `readable` Emitted when data is buffered and ready to be read by a","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"  consumer.","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"* `resume` Emitted when stream changes state from buffering to flowing","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"  mode.  (Ie, when `resume` is called, `pipe` is called, or a `data` event","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"  listener is added.)","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"### Static Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"* `Minipass.isStream(stream)` Returns `true` if the argument is a stream,","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"  and false otherwise.  To be considered a stream, the object must be","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"  either an instance of Minipass, or an EventEmitter that has either a","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"  `pipe()` method, or both `write()` and `end()` methods.  (Pretty much any","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"  stream in node-land will return `true` for this.)","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"## EXAMPLES","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"Here are some examples of things you can do with Minipass streams.","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"### simple \"are you done yet\" promise","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"mp.promise().then(() \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"  // stream is finished","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"}, er \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"  // stream emitted an error","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"### collecting","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"mp.collect().then(all \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"  // all is an array of all the data emitted","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"  // encoding is supported in this case, so","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"  // so the result will be a collection of strings if","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"  // an encoding is specified, or buffers/objects if not.","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"  //","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"  // In an async function, you may do","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"  // const data \u003d await stream.collect()","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"### collecting into a single blob","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"This is a bit slower because it concatenates the data into one chunk for","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"you, but if you\u0027re going to do it yourself anyway, it\u0027s convenient this","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"way:","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"mp.concat().then(onebigchunk \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"  // onebigchunk is a string if the stream","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"  // had an encoding set, or a buffer otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"### iteration","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"You can iterate over streams synchronously or asynchronously in","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"platforms that support it.","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"Synchronous iteration will end when the currently available data is","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"consumed, even if the `end` event has not been reached.  In string and","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"buffer mode, the data is concatenated, so unless multiple writes are","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"occurring in the same tick as the `read()`, sync iteration loops will","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"generally only have a single iteration.","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"To consume chunks in this way exactly as they have been written, with","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"no flattening, create the stream with the `{ objectMode: true }`","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"option.","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"const mp \u003d new Minipass({ objectMode: true })","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027a\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027b\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"for (let letter of mp) {","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"  console.log(letter) // a, b","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027c\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027d\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"for (let letter of mp) {","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"  console.log(letter) // c, d","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"mp.write(\u0027e\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"mp.end()","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"for (let letter of mp) {","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"  console.log(letter) // e","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"for (let letter of mp) {","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"  console.log(letter) // nothing","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"Asynchronous iteration will continue until the end event is reached,","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"consuming all of the data.","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"const mp \u003d new Minipass({ encoding: \u0027utf8\u0027 })","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"// some source of some data","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"let i \u003d 5","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"const inter \u003d setInterval(() \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"  if (i --\u003e 0)","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"    mp.write(Buffer.from(\u0027foo\\n\u0027, \u0027utf8\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"  else {","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"    mp.end()","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"    clearInterval(inter)","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"}, 100)","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"// consume the data with asynchronous iteration","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"async function consume () {","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"  for await (let chunk of mp) {","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"    console.log(chunk)","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"  return \u0027ok\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"consume().then(res \u003d\u003e console.log(res))","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"// logs `foo\\n` 5 times, and then `ok`","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"### subclass that `console.log()`s everything written into it","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"class Logger extends Minipass {","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"  write (chunk, encoding, callback) {","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"    console.log(\u0027WRITE\u0027, chunk, encoding)","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"    return super.write(chunk, encoding, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"  end (chunk, encoding, callback) {","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"    console.log(\u0027END\u0027, chunk, encoding)","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"    return super.end(chunk, encoding, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"someSource.pipe(new Logger()).pipe(someDest)","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"### same thing, but using an inline anonymous class","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"// js classes are fun","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"someSource","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"  .pipe(new (class extends Minipass {","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"    emit (ev, ...data) {","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"      // let\u0027s also log events, because debugging some weird thing","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"      console.log(\u0027EMIT\u0027, ev)","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"      return super.emit(ev, ...data)","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"    write (chunk, encoding, callback) {","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"      console.log(\u0027WRITE\u0027, chunk, encoding)","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"      return super.write(chunk, encoding, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"    end (chunk, encoding, callback) {","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"      console.log(\u0027END\u0027, chunk, encoding)","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"      return super.end(chunk, encoding, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"  }))","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"  .pipe(someDest)","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"### subclass that defers \u0027end\u0027 for some reason","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"class SlowEnd extends Minipass {","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"  emit (ev, ...args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"    if (ev \u003d\u003d\u003d \u0027end\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"      console.log(\u0027going to end, hold on a sec\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"      setTimeout(() \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"        console.log(\u0027ok, ready to end now\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"        super.emit(\u0027end\u0027, ...args)","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"      }, 100)","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"    } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"      return super.emit(ev, ...args)","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"### transform that creates newline-delimited JSON","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"class NDJSONEncode extends Minipass {","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"  write (obj, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"    try {","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"      // JSON.stringify can throw, emit an error on that","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"      return super.write(JSON.stringify(obj) + \u0027\\n\u0027, \u0027utf8\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"    } catch (er) {","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"      this.emit(\u0027error\u0027, er)","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"  end (obj, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"    if (typeof obj \u003d\u003d\u003d \u0027function\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"      cb \u003d obj","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"      obj \u003d undefined","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"    if (obj !\u003d\u003d undefined) {","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"      this.write(obj)","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"    return super.end(cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"### transform that parses newline-delimited JSON","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"class NDJSONDecode extends Minipass {","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"  constructor (options) {","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"    // always be in object mode, as far as Minipass is concerned","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"    super({ objectMode: true })","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"    this._jsonBuffer \u003d \u0027\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"  write (chunk, encoding, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"    if (typeof chunk \u003d\u003d\u003d \u0027string\u0027 \u0026\u0026","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"        typeof encoding \u003d\u003d\u003d \u0027string\u0027 \u0026\u0026","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"        encoding !\u003d\u003d \u0027utf8\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"      chunk \u003d Buffer.from(chunk, encoding).toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"    } else if (Buffer.isBuffer(chunk))","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"      chunk \u003d chunk.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"    if (typeof encoding \u003d\u003d\u003d \u0027function\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"      cb \u003d encoding","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"    const jsonData \u003d (this._jsonBuffer + chunk).split(\u0027\\n\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"    this._jsonBuffer \u003d jsonData.pop()","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"    for (let i \u003d 0; i \u003c jsonData.length; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"      let parsed","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"      try {","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"        super.write(parsed)","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"      } catch (er) {","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"        this.emit(\u0027error\u0027, er)","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"        continue","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"      }","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"    if (cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"      cb()","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":606}},{"path":"node_modules/minizlib/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# minizlib","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"A fast zlib stream built on [minipass](http://npm.im/minipass) and","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"Node.js\u0027s zlib binding.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"This module was created to serve the needs of","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[node-tar](http://npm.im/tar) and","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[minipass-fetch](http://npm.im/minipass-fetch).","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"Brotli is supported in versions of node with a Brotli binding.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"## How does this differ from the streams in `require(\u0027zlib\u0027)`?","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"First, there are no convenience methods to compress or decompress a","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"buffer.  If you want those, use the built-in `zlib` module.  This is","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"only streams.  That being said, Minipass streams to make it fairly easy to","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"use as one-liners: `new zlib.Deflate().end(data).read()` will return the","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"deflate compressed result.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"This module compresses and decompresses the data as fast as you feed","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"it in.  It is synchronous, and runs on the main process thread.  Zlib","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"and Brotli operations can be high CPU, but they\u0027re very fast, and doing it","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"this way means much less bookkeeping and artificial deferral.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"Node\u0027s built in zlib streams are built on top of `stream.Transform`.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"They do the maximally safe thing with respect to consistent","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"asynchrony, buffering, and backpressure.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"See [Minipass](http://npm.im/minipass) for more on the differences between","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"Node.js core streams and Minipass streams, and the convenience methods","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"provided by that class.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"## Classes","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"- Deflate","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"- Inflate","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"- Gzip","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"- Gunzip","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"- DeflateRaw","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"- InflateRaw","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"- Unzip","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- BrotliCompress (Node v10 and higher)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- BrotliDecompress (Node v10 and higher)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"const zlib \u003d require(\u0027minizlib\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"const input \u003d sourceOfCompressedData()","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"const decode \u003d new zlib.BrotliDecompress()","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"const output \u003d whereToWriteTheDecodedData()","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"input.pipe(decode).pipe(output)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":53}},{"path":"node_modules/njre/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# njre","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"![npm](https://img.shields.io/npm/v/njre.svg) ![David](https://img.shields.io/david/raftario/njre.svg) ![npm bundle size](https://img.shields.io/bundlephobia/minzip/njre.svg) ![AppVeyor](https://img.shields.io/appveyor/ci/raftario/njre.svg?label\u003dappveyor+build) ![Travis (.com)](https://img.shields.io/travis/com/raftario/njre.svg?label\u003dtravis+build)","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"Easily install and use JRE from a Node application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"## [Docs](DOCS.md)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":6}},{"path":"node_modules/node-fetch/LICENSE.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"The MIT License (MIT)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2016 David Frank","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"of this software and associated documentation files (the \"Software\"), to deal","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"in the Software without restriction, including without limitation the rights","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"copies of the Software, and to permit persons to whom the Software is","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"furnished to do so, subject to the following conditions:","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"The above copyright notice and this permission notice shall be included in all","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"copies or substantial portions of the Software.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"SOFTWARE.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":22}},{"path":"node_modules/node-fetch/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![npm version][npm-image]][npm-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![build status][travis-image]][travis-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![coverage status][codecov-image]][codecov-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[![install size][install-size-image]][install-size-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![Discord][discord-image]][discord-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"A light-weight module that brings `window.fetch` to Node.js","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"(We are looking for [v2 maintainers and collaborators](https://github.com/bitinn/node-fetch/issues/567))","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"[![Backers][opencollective-image]][opencollective-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"- [Motivation](#motivation)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"- [Difference from client-side fetch](#difference-from-client-side-fetch)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"- [Installation](#installation)","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"- [Loading and configuring the module](#loading-and-configuring-the-module)","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"- [Common Usage](#common-usage)","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    - [Plain text or HTML](#plain-text-or-html)","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    - [JSON](#json)","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    - [Simple Post](#simple-post)","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    - [Post with JSON](#post-with-json)","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    - [Post with form parameters](#post-with-form-parameters)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    - [Handling exceptions](#handling-exceptions)","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    - [Handling client and server errors](#handling-client-and-server-errors)","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"- [Advanced Usage](#advanced-usage)","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    - [Streams](#streams)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"    - [Buffer](#buffer)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    - [Accessing Headers and other Meta data](#accessing-headers-and-other-meta-data)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    - [Extract Set-Cookie Header](#extract-set-cookie-header)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    - [Post data using a file stream](#post-data-using-a-file-stream)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    - [Post with form-data (detect multipart)](#post-with-form-data-detect-multipart)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    - [Request cancellation with AbortSignal](#request-cancellation-with-abortsignal)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"- [API](#api)","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    - [fetch(url[, options])](#fetchurl-options)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"    - [Options](#options)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"    - [Class: Request](#class-request)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    - [Class: Response](#class-response)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"    - [Class: Headers](#class-headers)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    - [Interface: Body](#interface-body)","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    - [Class: FetchError](#class-fetcherror)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- [License](#license)","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- [Acknowledgement](#acknowledgement)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"\u003c!-- /TOC --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"## Motivation","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"Instead of implementing `XMLHttpRequest` in Node.js to run browser-specific [Fetch polyfill](https://github.com/github/fetch), why not go from native `http` to `fetch` API directly? Hence, `node-fetch`, minimal code for a `window.fetch` compatible API on Node.js runtime.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"See Matt Andrews\u0027 [isomorphic-fetch](https://github.com/matthew-andrews/isomorphic-fetch) or Leonardo Quixada\u0027s [cross-fetch](https://github.com/lquixada/cross-fetch) for isomorphic usage (exports `node-fetch` for server-side, `whatwg-fetch` for client-side).","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"## Features","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"- Stay consistent with `window.fetch` API.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- Make conscious trade-off when following [WHATWG fetch spec][whatwg-fetch] and [stream spec](https://streams.spec.whatwg.org/) implementation details, document known differences.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- Use native promise but allow substituting it with [insert your favorite promise library].","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"- Use native Node streams for body on both request and response.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"- Decode content encoding (gzip/deflate) properly and convert string output (such as `res.text()` and `res.json()`) to UTF-8 automatically.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"- Useful extensions such as timeout, redirect limit, response size limit, [explicit errors](ERROR-HANDLING.md) for troubleshooting.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"## Difference from client-side fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"- See [Known Differences](LIMITS.md) for details.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"- If you happen to use a missing feature that `window.fetch` offers, feel free to open an issue.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"- Pull requests are welcomed too!","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"## Installation","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"Current stable release (`2.x`)","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"```sh","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"$ npm install node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"## Loading and configuring the module","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"We suggest you load the module via `require` until the stabilization of ES modules in node:","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"const fetch \u003d require(\u0027node-fetch\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"If you are using a Promise library other than native, set it through `fetch.Promise`:","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"const Bluebird \u003d require(\u0027bluebird\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"fetch.Promise \u003d Bluebird;","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"## Common Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"NOTE: The documentation below is up-to-date with `2.x` releases; see the [`1.x` readme](https://github.com/bitinn/node-fetch/blob/1.x/README.md), [changelog](https://github.com/bitinn/node-fetch/blob/1.x/CHANGELOG.md) and [2.x upgrade guide](UPGRADE-GUIDE.md) for the differences.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"#### Plain text or HTML","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://github.com/\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.text())","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"    .then(body \u003d\u003e console.log(body));","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"#### JSON","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://api.github.com/users/github\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"#### Simple Post","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, { method: \u0027POST\u0027, body: \u0027a\u003d1\u0027 })","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json()) // expecting a json response","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"#### Post with JSON","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"const body \u003d { a: 1 };","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, {","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"        method: \u0027post\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"        body:    JSON.stringify(body),","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"        headers: { \u0027Content-Type\u0027: \u0027application/json\u0027 },","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"    })","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"#### Post with form parameters","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"`URLSearchParams` is available in Node.js as of v7.5.0. See [official documentation](https://nodejs.org/api/url.html#url_class_urlsearchparams) for more usage methods.","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"NOTE: The `Content-Type` header is only set automatically to `x-www-form-urlencoded` when an instance of `URLSearchParams` is given as such:","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"const { URLSearchParams } \u003d require(\u0027url\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"const params \u003d new URLSearchParams();","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"params.append(\u0027a\u0027, 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, { method: \u0027POST\u0027, body: params })","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"#### Handling exceptions","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"NOTE: 3xx-5xx responses are *NOT* exceptions and should be handled in `then()`; see the next section for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"Adding a catch to the fetch promise chain will catch *all* exceptions, such as errors originating from node core libraries, network errors and operational errors, which are instances of FetchError. See the [error handling document](ERROR-HANDLING.md)  for more details.","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://domain.invalid/\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"    .catch(err \u003d\u003e console.error(err));","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"#### Handling client and server errors","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"It is common to create a helper function to check that the response contains no client (4xx) or server (5xx) error responses:","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"function checkStatus(res) {","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"    if (res.ok) { // res.status \u003e\u003d 200 \u0026\u0026 res.status \u003c 300","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"        return res;","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"    } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"        throw MyCustomError(res.statusText);","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/status/400\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"    .then(checkStatus)","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e console.log(\u0027will not get here...\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"## Advanced Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"#### Streams","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"The \"Node.js way\" is to use streams when possible:","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://assets-cdn.github.com/images/modules/logos_page/Octocat.png\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"        const dest \u003d fs.createWriteStream(\u0027./octocat.png\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"        res.body.pipe(dest);","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"In Node.js 14 you can also use async iterators to read `body`; however, be careful to catch","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"errors -- the longer a response runs, the more likely it is to encounter an error.","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"const fetch \u003d require(\u0027node-fetch\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"const response \u003d await fetch(\u0027https://httpbin.org/stream/3\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"try {","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"\tfor await (const chunk of response.body) {","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"\t\tconsole.dir(JSON.parse(chunk.toString()));","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"\t}","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"} catch (err) {","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"\tconsole.error(err.stack);","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"In Node.js 12 you can also use async iterators to read `body`; however, async iterators with streams","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"did not mature until Node.js 14, so you need to do some extra work to ensure you handle errors","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"directly from the stream and wait on it response to fully close.","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"const fetch \u003d require(\u0027node-fetch\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"const read \u003d async body \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"    let error;","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"    body.on(\u0027error\u0027, err \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"        error \u003d err;","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"    for await (const chunk of body) {","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"        console.dir(JSON.parse(chunk.toString()));","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"    return new Promise((resolve, reject) \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"        body.on(\u0027close\u0027, () \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"            error ? reject(error) : resolve();","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"};","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"try {","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"    const response \u003d await fetch(\u0027https://httpbin.org/stream/3\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"    await read(response.body);","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"} catch (err) {","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"    console.error(err.stack);","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"#### Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"If you prefer to cache binary data in full, use buffer(). (NOTE: `buffer()` is a `node-fetch`-only API)","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"const fileType \u003d require(\u0027file-type\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://assets-cdn.github.com/images/modules/logos_page/Octocat.png\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.buffer())","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"    .then(buffer \u003d\u003e fileType(buffer))","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"    .then(type \u003d\u003e { /* ... */ });","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"#### Accessing Headers and other Meta data","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://github.com/\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"        console.log(res.ok);","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"        console.log(res.status);","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"        console.log(res.statusText);","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"        console.log(res.headers.raw());","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"        console.log(res.headers.get(\u0027content-type\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"#### Extract Set-Cookie Header","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"Unlike browsers, you can access raw `Set-Cookie` headers manually using `Headers.raw()`. This is a `node-fetch` only API.","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"fetch(url).then(res \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"    // returns an array of values, instead of a string of comma-separated values","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"    console.log(res.headers.raw()[\u0027set-cookie\u0027]);","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"#### Post data using a file stream","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"const { createReadStream } \u003d require(\u0027fs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"const stream \u003d createReadStream(\u0027input.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, { method: \u0027POST\u0027, body: stream })","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"#### Post with form-data (detect multipart)","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"const FormData \u003d require(\u0027form-data\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"const form \u003d new FormData();","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"form.append(\u0027a\u0027, 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, { method: \u0027POST\u0027, body: form })","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"// OR, using custom headers","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"// NOTE: getHeaders() is non-standard API","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"const form \u003d new FormData();","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"form.append(\u0027a\u0027, 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"const options \u003d {","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"    method: \u0027POST\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"    body: form,","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"    headers: form.getHeaders()","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"fetch(\u0027https://httpbin.org/post\u0027, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"    .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"    .then(json \u003d\u003e console.log(json));","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"#### Request cancellation with AbortSignal","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"\u003e NOTE: You may cancel streamed requests only on Node \u003e\u003d v8.0.0","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"You may cancel requests with `AbortController`. A suggested implementation is [`abort-controller`](https://www.npmjs.com/package/abort-controller).","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"An example of timing out a request after 150ms could be achieved as the following:","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"import AbortController from \u0027abort-controller\u0027;","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"const controller \u003d new AbortController();","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"const timeout \u003d setTimeout(","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"  () \u003d\u003e { controller.abort(); },","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"  150,","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":");","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"fetch(url, { signal: controller.signal })","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"  .then(res \u003d\u003e res.json())","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"  .then(","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"    data \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"      useData(data)","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"    err \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"      if (err.name \u003d\u003d\u003d \u0027AbortError\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"        // request was aborted","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"      }","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"    },","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"  )","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"  .finally(() \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"    clearTimeout(timeout);","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"  });","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"See [test cases](https://github.com/bitinn/node-fetch/blob/master/test/test.js) for more examples.","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"### fetch(url[, options])","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"- `url` A string representing the URL for fetching","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"- `options` [Options](#fetch-options) for the HTTP(S) request","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"- Returns: \u003ccode\u003ePromise\u0026lt;[Response](#class-response)\u0026gt;\u003c/code\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"Perform an HTTP(S) fetch.","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"fetch-options\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"### Options","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"The default values are shown after each option key.","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"    // These properties are part of the Fetch Standard","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"    method: \u0027GET\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"    headers: {},        // request headers. format is the identical to that accepted by the Headers constructor (see below)","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"    body: null,         // request body. can be null, a string, a Buffer, a Blob, or a Node.js Readable stream","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"    redirect: \u0027follow\u0027, // set to `manual` to extract redirect headers, `error` to reject redirect","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"    signal: null,       // pass an instance of AbortSignal to optionally abort requests","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"    // The following properties are node-fetch extensions","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"    follow: 20,         // maximum redirect count. 0 to not follow redirect","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"    timeout: 0,         // req/res timeout in ms, it resets on redirect. 0 to disable (OS limit applies). Signal is recommended instead.","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"    compress: true,     // support gzip/deflate content encoding. false to disable","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"    size: 0,            // maximum response body size in bytes. 0 to disable","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"    agent: null         // http(s).Agent instance or function that returns an instance (see below)","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"##### Default Headers","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"If no values are set, the following request headers will be sent automatically:","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"Header              | Value","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"------------------- | --------------------------------------------------------","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"`Accept-Encoding`   | `gzip,deflate` _(when `options.compress \u003d\u003d\u003d true`)_","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"`Accept`            | `*/*`","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"`Content-Length`    | _(automatically calculated, if possible)_","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"`Transfer-Encoding` | `chunked` _(when `req.body` is a stream)_","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"`User-Agent`        | `node-fetch/1.0 (+https://github.com/bitinn/node-fetch)`","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"Note: when `body` is a `Stream`, `Content-Length` is not set automatically.","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"##### Custom Agent","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"The `agent` option allows you to specify networking related options which are out of the scope of Fetch, including and not limited to the following:","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"- Support self-signed certificate","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"- Use only IPv4 or IPv6","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"- Custom DNS Lookup","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"See [`http.Agent`](https://nodejs.org/api/http.html#http_new_agent_options) for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"If no agent is specified, the default agent provided by Node.js is used. Note that [this changed in Node.js 19](https://github.com/nodejs/node/blob/4267b92604ad78584244488e7f7508a690cb80d0/lib/_http_agent.js#L564) to have `keepalive` true by default. If you wish to enable `keepalive` in an earlier version of Node.js, you can override the agent as per the following code sample. ","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"In addition, the `agent` option accepts a function that returns `http`(s)`.Agent` instance given current [URL](https://nodejs.org/api/url.html), this is useful during a redirection chain across HTTP and HTTPS protocol.","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"const httpAgent \u003d new http.Agent({","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"    keepAlive: true","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"const httpsAgent \u003d new https.Agent({","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"    keepAlive: true","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"const options \u003d {","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"    agent: function (_parsedURL) {","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"        if (_parsedURL.protocol \u003d\u003d \u0027http:\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"            return httpAgent;","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"            return httpsAgent;","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"class-request\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"### Class: Request","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"An HTTP(S) request containing information about URL, method, headers, and the body. This class implements the [Body](#iface-body) interface.","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"Due to the nature of Node.js, the following properties are not implemented at this moment:","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"- `type`","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"- `destination`","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"- `referrer`","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"- `referrerPolicy`","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"- `mode`","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"- `credentials`","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"- `cache`","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"- `integrity`","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"- `keepalive`","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"The following node-fetch extension properties are provided:","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"- `follow`","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"- `compress`","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"- `counter`","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"- `agent`","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"See [options](#fetch-options) for exact meaning of these extensions.","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"#### new Request(input[, options])","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"- `input` A string representing a URL, or another `Request` (which will be cloned)","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"- `options` [Options][#fetch-options] for the HTTP(S) request","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"Constructs a new `Request` object. The constructor is identical to that in the [browser](https://developer.mozilla.org/en-US/docs/Web/API/Request/Request).","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"In most cases, directly `fetch(url, options)` is simpler than creating a `Request` object.","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"class-response\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"### Class: Response","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"An HTTP(S) response. This class implements the [Body](#iface-body) interface.","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"The following properties are not implemented in node-fetch at this moment:","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"- `Response.error()`","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"- `Response.redirect()`","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"- `type`","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"- `trailer`","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"#### new Response([body[, options]])","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"- `body` A `String` or [`Readable` stream][node-readable]","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"- `options` A [`ResponseInit`][response-init] options dictionary","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"Constructs a new `Response` object. The constructor is identical to that in the [browser](https://developer.mozilla.org/en-US/docs/Web/API/Response/Response).","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"Because Node.js does not implement service workers (for which this class was designed), one rarely has to construct a `Response` directly.","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"#### response.ok","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"Convenience property representing if the request ended normally. Will evaluate to true if the response status was greater than or equal to 200 but smaller than 300.","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"#### response.redirected","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"Convenience property representing if the request has been redirected at least once. Will evaluate to true if the internal redirect counter is greater than 0.","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"class-headers\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"### Class: Headers","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"This class allows manipulating and iterating over a set of HTTP headers. All methods specified in the [Fetch Standard][whatwg-fetch] are implemented.","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"#### new Headers([init])","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"- `init` Optional argument to pre-fill the `Headers` object","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"Construct a new `Headers` object. `init` can be either `null`, a `Headers` object, an key-value map object or any iterable object.","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"// Example adapted from https://fetch.spec.whatwg.org/#example-headers-class","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"const meta \u003d {","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"  \u0027Content-Type\u0027: \u0027text/xml\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"  \u0027Breaking-Bad\u0027: \u0027\u003c3\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"};","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"const headers \u003d new Headers(meta);","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"// The above is equivalent to","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"const meta \u003d [","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"  [ \u0027Content-Type\u0027, \u0027text/xml\u0027 ],","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"  [ \u0027Breaking-Bad\u0027, \u0027\u003c3\u0027 ]","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"];","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"const headers \u003d new Headers(meta);","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"// You can in fact use any iterable objects, like a Map or even another Headers","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"const meta \u003d new Map();","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"meta.set(\u0027Content-Type\u0027, \u0027text/xml\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"meta.set(\u0027Breaking-Bad\u0027, \u0027\u003c3\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"const headers \u003d new Headers(meta);","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"const copyOfHeaders \u003d new Headers(headers);","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"iface-body\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"### Interface: Body","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"`Body` is an abstract interface with methods that are applicable to both `Request` and `Response` classes.","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"The following methods are not yet implemented in node-fetch at this moment:","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"- `formData()`","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"#### body.body","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(deviation from spec)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"* Node.js [`Readable` stream][node-readable]","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"Data are encapsulated in the `Body` object. Note that while the [Fetch Standard][whatwg-fetch] requires the property to always be a WHATWG `ReadableStream`, in node-fetch it is a Node.js [`Readable` stream][node-readable].","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"#### body.bodyUsed","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"* `Boolean`","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"A boolean property for if this body has been consumed. Per the specs, a consumed body cannot be used again.","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"#### body.arrayBuffer()","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"#### body.blob()","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"#### body.json()","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"#### body.text()","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(spec-compliant)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"* Returns: \u003ccode\u003ePromise\u003c/code\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"Consume the body and return a promise that will resolve to one of these formats.","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"#### body.buffer()","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(node-fetch extension)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"* Returns: \u003ccode\u003ePromise\u0026lt;Buffer\u0026gt;\u003c/code\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"Consume the body and return a promise that will resolve to a Buffer.","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"#### body.textConverted()","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(node-fetch extension)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"* Returns: \u003ccode\u003ePromise\u0026lt;String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"Identical to `body.text()`, except instead of always converting to UTF-8, encoding sniffing will be performed and text converted to UTF-8 if possible.","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"(This API requires an optional dependency of the npm package [encoding](https://www.npmjs.com/package/encoding), which you need to install manually. `webpack` users may see [a warning message](https://github.com/bitinn/node-fetch/issues/412#issuecomment-379007792) due to this optional dependency.)","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"class-fetcherror\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"### Class: FetchError","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(node-fetch extension)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"An operational error in the fetching process. See [ERROR-HANDLING.md][] for more info.","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"\u003ca id\u003d\"class-aborterror\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"### Class: AbortError","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"\u003csmall\u003e*(node-fetch extension)*\u003c/small\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"An Error thrown when the request is aborted in response to an `AbortSignal`\u0027s `abort` event. It has a `name` property of `AbortError`. See [ERROR-HANDLING.MD][] for more info.","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"## Acknowledgement","lastModifiedDate":"2023-09-05"},{"lineNumber":607,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":608,"author":{"gitId":"shashahchk"},"content":"Thanks to [github/fetch](https://github.com/github/fetch) for providing a solid implementation reference.","lastModifiedDate":"2023-09-05"},{"lineNumber":609,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":610,"author":{"gitId":"shashahchk"},"content":"`node-fetch` v1 was maintained by [@bitinn](https://github.com/bitinn); v2 was maintained by [@TimothyGu](https://github.com/timothygu), [@bitinn](https://github.com/bitinn) and [@jimmywarting](https://github.com/jimmywarting); v2 readme is written by [@jkantr](https://github.com/jkantr).","lastModifiedDate":"2023-09-05"},{"lineNumber":611,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":612,"author":{"gitId":"shashahchk"},"content":"## License","lastModifiedDate":"2023-09-05"},{"lineNumber":613,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":614,"author":{"gitId":"shashahchk"},"content":"MIT","lastModifiedDate":"2023-09-05"},{"lineNumber":615,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":616,"author":{"gitId":"shashahchk"},"content":"[npm-image]: https://flat.badgen.net/npm/v/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":617,"author":{"gitId":"shashahchk"},"content":"[npm-url]: https://www.npmjs.com/package/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":618,"author":{"gitId":"shashahchk"},"content":"[travis-image]: https://flat.badgen.net/travis/bitinn/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":619,"author":{"gitId":"shashahchk"},"content":"[travis-url]: https://travis-ci.org/bitinn/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":620,"author":{"gitId":"shashahchk"},"content":"[codecov-image]: https://flat.badgen.net/codecov/c/github/bitinn/node-fetch/master","lastModifiedDate":"2023-09-05"},{"lineNumber":621,"author":{"gitId":"shashahchk"},"content":"[codecov-url]: https://codecov.io/gh/bitinn/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":622,"author":{"gitId":"shashahchk"},"content":"[install-size-image]: https://flat.badgen.net/packagephobia/install/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":623,"author":{"gitId":"shashahchk"},"content":"[install-size-url]: https://packagephobia.now.sh/result?p\u003dnode-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":624,"author":{"gitId":"shashahchk"},"content":"[discord-image]: https://img.shields.io/discord/619915844268326952?color\u003d%237289DA\u0026label\u003dDiscord\u0026style\u003dflat-square","lastModifiedDate":"2023-09-05"},{"lineNumber":625,"author":{"gitId":"shashahchk"},"content":"[discord-url]: https://discord.gg/Zxbndcm","lastModifiedDate":"2023-09-05"},{"lineNumber":626,"author":{"gitId":"shashahchk"},"content":"[opencollective-image]: https://opencollective.com/node-fetch/backers.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":627,"author":{"gitId":"shashahchk"},"content":"[opencollective-url]: https://opencollective.com/node-fetch","lastModifiedDate":"2023-09-05"},{"lineNumber":628,"author":{"gitId":"shashahchk"},"content":"[whatwg-fetch]: https://fetch.spec.whatwg.org/","lastModifiedDate":"2023-09-05"},{"lineNumber":629,"author":{"gitId":"shashahchk"},"content":"[response-init]: https://fetch.spec.whatwg.org/#responseinit","lastModifiedDate":"2023-09-05"},{"lineNumber":630,"author":{"gitId":"shashahchk"},"content":"[node-readable]: https://nodejs.org/api/stream.html#stream_readable_streams","lastModifiedDate":"2023-09-05"},{"lineNumber":631,"author":{"gitId":"shashahchk"},"content":"[mdn-headers]: https://developer.mozilla.org/en-US/docs/Web/API/Headers","lastModifiedDate":"2023-09-05"},{"lineNumber":632,"author":{"gitId":"shashahchk"},"content":"[LIMITS.md]: https://github.com/bitinn/node-fetch/blob/master/LIMITS.md","lastModifiedDate":"2023-09-05"},{"lineNumber":633,"author":{"gitId":"shashahchk"},"content":"[ERROR-HANDLING.md]: https://github.com/bitinn/node-fetch/blob/master/ERROR-HANDLING.md","lastModifiedDate":"2023-09-05"},{"lineNumber":634,"author":{"gitId":"shashahchk"},"content":"[UPGRADE-GUIDE.md]: https://github.com/bitinn/node-fetch/blob/master/UPGRADE-GUIDE.md","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":634}},{"path":"node_modules/once/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# once","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Only call a function once.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## usage","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"var once \u003d require(\u0027once\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"function load (file, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"  cb \u003d once(cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"  loader.load(\u0027file\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"  loader.once(\u0027load\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"  loader.once(\u0027error\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"Or add to the Function.prototype in a responsible way:","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"// only has to be done once","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"require(\u0027once\u0027).proto()","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"function load (file, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"  cb \u003d cb.once()","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"  loader.load(\u0027file\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"  loader.once(\u0027load\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  loader.once(\u0027error\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"Ironically, the prototype feature makes this module twice as","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"complicated as necessary.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"To check whether you function has been called, use `fn.called`. Once the","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"function is called for the first time the return value of the original","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"function is saved in `fn.value` and subsequent calls will continue to","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"return this value.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"var once \u003d require(\u0027once\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"function load (cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"  cb \u003d once(cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"  var stream \u003d createStream()","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"  stream.once(\u0027data\u0027, cb)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"  stream.once(\u0027end\u0027, function () {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"    if (!cb.called) cb(new Error(\u0027not found\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"## `once.strict(func)`","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"Throw an error if the function is called twice.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"Some functions are expected to be called only once. Using `once` for them would","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"potentially hide logical errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"In the example below, the `greet` function has to call the callback only once:","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"function greet (name, cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"  // return is missing from the if statement","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"  // when no name is passed, the callback is called twice","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"  if (!name) cb(\u0027Hello anonymous\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"  cb(\u0027Hello \u0027 + name)","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"function log (msg) {","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"  console.log(msg)","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"// this will print \u0027Hello anonymous\u0027 but the logical error will be missed","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"greet(null, once(msg))","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"// once.strict will print \u0027Hello anonymous\u0027 and throw an error when the callback will be called the second time","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"greet(null, once.strict(msg))","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":79}},{"path":"node_modules/path-is-absolute/readme.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# path-is-absolute [![Build Status](https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch\u003dmaster)](https://travis-ci.org/sindresorhus/path-is-absolute)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003e Node.js 0.12 [`path.isAbsolute()`](http://nodejs.org/api/path.html#path_path_isabsolute_path) [ponyfill](https://ponyfill.com)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"## Install","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"$ npm install --save path-is-absolute","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"const pathIsAbsolute \u003d require(\u0027path-is-absolute\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"// Running on Linux","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute(\u0027/home/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e true","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute(\u0027C:/Users/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e false","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"// Running on Windows","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute(\u0027C:/Users/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e true","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute(\u0027/home/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e false","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"// Running on any OS","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute.posix(\u0027/home/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e true","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute.posix(\u0027C:/Users/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e false","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute.win32(\u0027C:/Users/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e true","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"pathIsAbsolute.win32(\u0027/home/foo\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e false","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"See the [`path.isAbsolute()` docs](http://nodejs.org/api/path.html#path_path_isabsolute_path).","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"### pathIsAbsolute(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"### pathIsAbsolute.posix(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"POSIX specific version.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"### pathIsAbsolute.win32(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"Windows specific version.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"## License","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"MIT © [Sindre Sorhus](https://sindresorhus.com)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":59}},{"path":"node_modules/path-parse/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# path-parse [![Build Status](https://travis-ci.org/jbgutierrez/path-parse.svg?branch\u003dmaster)](https://travis-ci.org/jbgutierrez/path-parse)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003e Node.js [`path.parse(pathString)`](https://nodejs.org/api/path.html#path_path_parse_pathstring) [ponyfill](https://ponyfill.com).","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## Install","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"$ npm install --save path-parse","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"var pathParse \u003d require(\u0027path-parse\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"pathParse(\u0027/home/user/dir/file.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"//\u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"//       root : \"/\",","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"//       dir : \"/home/user/dir\",","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"//       base : \"file.txt\",","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"//       ext : \".txt\",","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"//       name : \"file\"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"//   }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"See [`path.parse(pathString)`](https://nodejs.org/api/path.html#path_path_parse_pathstring) docs.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"### pathParse(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"### pathParse.posix(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"The Posix specific version.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"### pathParse.win32(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"The Windows specific version.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"## License","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"MIT © [Javier Blanco](http://jbgutierrez.info)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":42}},{"path":"node_modules/pend/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Pend","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Dead-simple optimistic async helper.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"var Pend \u003d require(\u0027pend\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"var pend \u003d new Pend();","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"pend.max \u003d 10; // defaults to Infinity","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"setTimeout(pend.hold(), 1000); // pend.wait will have to wait for this hold to finish","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"pend.go(function(cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"  console.log(\"this function is immediately executed\");","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"  setTimeout(function() {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    console.log(\"calling cb 1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    cb();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"  }, 500);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"pend.go(function(cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"  console.log(\"this function is also immediately executed\");","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"  setTimeout(function() {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    console.log(\"calling cb 2\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    cb();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"  }, 1000);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"pend.wait(function(err) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"  console.log(\"this is excuted when the first 2 have returned.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"  console.log(\"err is a possible error in the standard callback style.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"Output:","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"this function is immediately executed","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"this function is also immediately executed","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"calling cb 1","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"calling cb 2","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"this is excuted when the first 2 have returned.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"err is a possible error in the standard callback style.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":41}},{"path":"node_modules/rechoir/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# rechoir [![Build Status](https://secure.travis-ci.org/tkellen/js-rechoir.png)](http://travis-ci.org/tkellen/js-rechoir)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"\u003e Require any supported file as a node module.","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![NPM](https://nodei.co/npm/rechoir.png)](https://nodei.co/npm/rechoir/)","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"## What is it?","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"This module, in conjunction with [interpret]-like objects can register any file type the npm ecosystem has a module loader for. This library is a dependency of [Liftoff].","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"### prepare(config, filepath, requireFrom)","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"Look for a module loader associated with the provided file and attempt require it.  If necessary, run any setup required to inject it into [require.extensions](http://nodejs.org/api/globals.html#globals_require_extensions).","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"`config` An [interpret]-like configuration object.  ","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"`filepath` A file whose type you\u0027d like to register a module loader for.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"`requireFrom` An optional path to start searching for the module required to load the requested file.  Defaults to the directory of `filepath`.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"If calling this method is successful (aka: it doesn\u0027t throw), you can now require files of the type you requested natively.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"An error with a `failures` property will be thrown if the module loader(s) configured for a given extension cannot be registered.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"If a loader is already registered, this will simply return `true`.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"**Note:** While rechoir will automatically load and register transpilers like `coffee-script`, you must provide a local installation. The transpilers are **not** bundled with this module.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"#### Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"const config \u003d require(\u0027interpret\u0027).extensions;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"const rechoir \u003d require(\u0027rechoir\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"rechoir.prepare(config, \u0027./test/fixtures/test.coffee\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"rechoir.prepare(config, \u0027./test/fixtures/test.csv\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"rechoir.prepare(config, \u0027./test/fixtures/test.toml\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"console.log(require(\u0027./test/fixtures/test.coffee\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"console.log(require(\u0027./test/fixtures/test.csv\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"console.log(require(\u0027./test/fixtures/test.toml\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"[interpret]: http://github.com/tkellen/js-interpret","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"[Liftoff]: http://github.com/tkellen/js-liftoff","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":42}},{"path":"node_modules/resolve/SECURITY.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Security","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Please email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":3}},{"path":"node_modules/safe-buffer/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[travis-url]: https://travis-ci.org/feross/safe-buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[npm-url]: https://npmjs.org/package/safe-buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[downloads-url]: https://npmjs.org/package/safe-buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"[standard-url]: https://standardjs.com","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"#### Safer Node.js Buffer API","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"**Uses the built-in implementation when available.**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"## install","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"npm install safe-buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"## usage","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"The goal of this package is to provide a safe replacement for the node.js `Buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"It\u0027s a drop-in replacement for `Buffer`. You can use it by adding one `require` line to","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"the top of your node.js modules:","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"var Buffer \u003d require(\u0027safe-buffer\u0027).Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"// Existing buffer code will continue to work without issues:","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"new Buffer(\u0027hey\u0027, \u0027utf8\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"new Buffer([1, 2, 3], \u0027utf8\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"new Buffer(obj)","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"new Buffer(16) // create an uninitialized buffer (potentially unsafe)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"// But you can use these new explicit APIs to make clear what you want:","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"Buffer.from(\u0027hey\u0027, \u0027utf8\u0027) // convert from many types to a Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"Buffer.alloc(16) // create a zero-filled buffer (safe)","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"Buffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"## api","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.from(array)","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"added: v3.0.0","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"* `array` {Array}","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"Allocates a new `Buffer` using an `array` of octets.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"  // creates a new Buffer containing ASCII bytes","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"  // [\u0027b\u0027,\u0027u\u0027,\u0027f\u0027,\u0027f\u0027,\u0027e\u0027,\u0027r\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `array` is not an `Array`.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"added: v5.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"  a `new ArrayBuffer()`","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"* `byteOffset` {Number} Default: `0`","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"* `length` {Number} Default: `arrayBuffer.length - byteOffset`","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"When passed a reference to the `.buffer` property of a `TypedArray` instance,","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"the newly created `Buffer` will share the same allocated memory as the","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"TypedArray.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"const arr \u003d new Uint16Array(2);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"arr[0] \u003d 5000;","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"arr[1] \u003d 4000;","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.from(arr.buffer); // shares the memory with arr;","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"  // Prints: \u003cBuffer 88 13 a0 0f\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"// changing the TypedArray changes the Buffer also","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"arr[1] \u003d 6000;","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"  // Prints: \u003cBuffer 88 13 70 17\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"The optional `byteOffset` and `length` arguments specify a memory range within","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"the `arrayBuffer` that will be shared by the `Buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"const ab \u003d new ArrayBuffer(10);","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.from(ab, 0, 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"console.log(buf.length);","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"  // Prints: 2","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.from(buffer)","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"added: v3.0.0","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"* `buffer` {Buffer}","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"Copies the passed `buffer` data onto a new `Buffer` instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"const buf1 \u003d Buffer.from(\u0027buffer\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"const buf2 \u003d Buffer.from(buf1);","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"buf1[0] \u003d 0x61;","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"console.log(buf1.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"  // \u0027auffer\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"console.log(buf2.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"  // \u0027buffer\u0027 (copy is not changed)","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `buffer` is not a `Buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.from(str[, encoding])","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"added: v5.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"* `str` {String} String to encode.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"* `encoding` {String} Encoding to use, Default: `\u0027utf8\u0027`","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"Creates a new `Buffer` containing the given JavaScript string `str`. If","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"provided, the `encoding` parameter identifies the character encoding.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"If not provided, `encoding` defaults to `\u0027utf8\u0027`.","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"const buf1 \u003d Buffer.from(\u0027this is a tést\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"console.log(buf1.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"  // prints: this is a tést","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"console.log(buf1.toString(\u0027ascii\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"  // prints: this is a tC)st","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"const buf2 \u003d Buffer.from(\u00277468697320697320612074c3a97374\u0027, \u0027hex\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"console.log(buf2.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"  // prints: this is a tést","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `str` is not a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.alloc(size[, fill[, encoding]])","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"added: v5.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"* `size` {Number}","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"* `fill` {Value} Default: `undefined`","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"* `encoding` {String} Default: `utf8`","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"Allocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"`Buffer` will be *zero-filled*.","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.alloc(5);","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"  // \u003cBuffer 00 00 00 00 00\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"The `size` must be less than or equal to the value of","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"`require(\u0027buffer\u0027).kMaxLength` (on 64-bit architectures, `kMaxLength` is","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"be created if a `size` less than or equal to 0 is specified.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"If `fill` is specified, the allocated `Buffer` will be initialized by calling","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"`buf.fill(fill)`. See [`buf.fill()`][] for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.alloc(5, \u0027a\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"  // \u003cBuffer 61 61 61 61 61\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"If both `fill` and `encoding` are specified, the allocated `Buffer` will be","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"initialized by calling `buf.fill(fill, encoding)`. For example:","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.alloc(11, \u0027aGVsbG8gd29ybGQ\u003d\u0027, \u0027base64\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"  // \u003cBuffer 68 65 6c 6c 6f 20 77 6f 72 6c 64\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"Calling `Buffer.alloc(size)` can be significantly slower than the alternative","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"contents will *never contain sensitive data*.","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `size` is not a number.","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.allocUnsafe(size)","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"added: v5.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"* `size` {Number}","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"Allocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"be less than or equal to the value of `require(\u0027buffer\u0027).kMaxLength` (on 64-bit","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"architectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"thrown. A zero-length Buffer will be created if a `size` less than or equal to","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"0 is specified.","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"The underlying memory for `Buffer` instances created in this way is *not","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"initialized*. The contents of the newly created `Buffer` are unknown and","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"`Buffer` instances to zeroes.","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"const buf \u003d Buffer.allocUnsafe(5);","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"  // \u003cBuffer 78 e0 82 02 01\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"  // (octets will be different, every time)","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"buf.fill(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"console.log(buf);","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"  // \u003cBuffer 00 00 00 00 00\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `size` is not a number.","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"Note that the `Buffer` module pre-allocates an internal `Buffer` instance of","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"size `Buffer.poolSize` that is used as a pool for the fast allocation of new","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"`new Buffer(size)` constructor) only when `size` is less than or equal to","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"`Buffer.poolSize \u003e\u003e 1` (floor of `Buffer.poolSize` divided by two). The default","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"value of `Buffer.poolSize` is `8192` but can be modified.","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"Use of this pre-allocated internal memory pool is a key difference between","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"calling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"Specifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"pool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"Buffer pool if `size` is less than or equal to half `Buffer.poolSize`. The","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"difference is subtle but can be important when an application requires the","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"additional performance that `Buffer.allocUnsafe(size)` provides.","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"### Class Method: Buffer.allocUnsafeSlow(size)","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"\u003c!-- YAML","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"added: v5.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"* `size` {Number}","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"Allocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"`size` must be less than or equal to the value of","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"`require(\u0027buffer\u0027).kMaxLength` (on 64-bit architectures, `kMaxLength` is","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"be created if a `size` less than or equal to 0 is specified.","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"The underlying memory for `Buffer` instances created in this way is *not","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"initialized*. The contents of the newly created `Buffer` are unknown and","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"`Buffer` instances to zeroes.","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"When using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"allocations under 4KB are, by default, sliced from a single pre-allocated","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"`Buffer`. This allows applications to avoid the garbage collection overhead of","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"creating many individually allocated Buffers. This approach improves both","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"performance and memory usage by eliminating the need to track and cleanup as","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"many `Persistent` objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"However, in the case where a developer may need to retain a small chunk of","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"memory from a pool for an indeterminate amount of time, it may be appropriate","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"to create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"copy out the relevant bits.","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"// need to keep around a few small chunks of memory","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"const store \u003d [];","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"socket.on(\u0027readable\u0027, () \u003d\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"  const data \u003d socket.read();","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"  // allocate for retained data","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"  const sb \u003d Buffer.allocUnsafeSlow(10);","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"  // copy the data into the new allocation","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"  data.copy(sb, 0, 0, 10);","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"  store.push(sb);","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"Use of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"a developer has observed undue memory retention in their applications.","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"A `TypeError` will be thrown if `size` is not a number.","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"### All the Rest","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"The rest of the `Buffer` API is exactly the same as in node.js.","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"[See the docs](https://nodejs.org/api/buffer.html).","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"## Related links","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"## Why is `Buffer` unsafe?","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"Today, the node.js `Buffer` constructor is overloaded to handle many different argument","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"types like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"`ArrayBuffer`, and also `Number`.","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"The API is optimized for convenience: you can throw any type at it, and it will try to do","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"what you want.","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"Because the Buffer constructor is so powerful, you often see code like this:","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"// Convert UTF-8 strings to hex","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"function toHex (str) {","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"  return new Buffer(str).toString(\u0027hex\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"***But what happens if `toHex` is called with a `Number` argument?***","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"### Remote Memory Disclosure","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"If an attacker can make your program call the `Buffer` constructor with a `Number`","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"argument, then they can make it allocate uninitialized memory from the node.js process.","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"This could potentially disclose TLS private keys, user data, or database passwords.","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"When the `Buffer` constructor is passed a `Number` argument, it returns an","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"this, you **MUST** overwrite the contents before returning it to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"From the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"\u003e `new Buffer(size)`","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"\u003e - `size` Number","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"\u003e The underlying memory for `Buffer` instances created in this way is not initialized.","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"\u003e **The contents of a newly created `Buffer` are unknown and could contain sensitive","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"\u003e data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"(Emphasis our own.)","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"Whenever the programmer intended to create an uninitialized `Buffer` you often see code","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"like this:","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"var buf \u003d new Buffer(16)","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"// Immediately overwrite the uninitialized buffer with data from another buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"for (var i \u003d 0; i \u003c buf.length; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"  buf[i] \u003d otherBuf[i]","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"### Would this ever be a problem in real code?","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"Yes. It\u0027s surprisingly common to forget to check the type of your variables in a","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"dynamically-typed language like JavaScript.","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"Usually the consequences of assuming the wrong type is that your program crashes with an","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"uncaught exception. But the failure mode for forgetting to check the type of arguments to","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"the `Buffer` constructor is more catastrophic.","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"Here\u0027s an example of a vulnerable service that takes a JSON payload and converts it to","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"hex:","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"// Take a JSON payload {str: \"some string\"} and convert it to hex","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"var server \u003d http.createServer(function (req, res) {","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"  var data \u003d \u0027\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"  req.setEncoding(\u0027utf8\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"  req.on(\u0027data\u0027, function (chunk) {","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"    data +\u003d chunk","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"  req.on(\u0027end\u0027, function () {","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"    var body \u003d JSON.parse(data)","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"    res.end(new Buffer(body.str).toString(\u0027hex\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"server.listen(8080)","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"In this example, an http client just has to send:","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"```json","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"  \"str\": 1000","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"and it will get back 1,000 bytes of uninitialized memory from the server.","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"This is a very serious bug. It\u0027s similar in severity to the","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"memory by remote attackers.","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"### Which real-world packages were vulnerable?","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"[Mathias Buus](https://github.com/mafintosh) and I","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"anyone on the internet to send a series of messages to a user of `bittorrent-dht` and get","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"them to reveal 20 bytes at a time of uninitialized memory from the node.js process.","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"Here\u0027s","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"that fixed it. We released a new fixed version, created a","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"vulnerable versions on npm so users will get a warning to upgrade to a newer version.","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"#### [`ws`](https://www.npmjs.com/package/ws)","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"That got us wondering if there were other vulnerable packages. Sure enough, within a short","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"period of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"most popular WebSocket implementation in node.js.","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"If certain APIs were called with `Number` parameters instead of `String` or `Buffer` as","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"expected, then uninitialized server memory would be disclosed to the remote peer.","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"These were the vulnerable methods:","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"socket.send(number)","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"socket.ping(number)","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"socket.pong(number)","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"Here\u0027s a vulnerable socket server with some echo functionality:","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"server.on(\u0027connection\u0027, function (socket) {","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"  socket.on(\u0027message\u0027, function (message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"    message \u003d JSON.parse(message)","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"    if (message.type \u003d\u003d\u003d \u0027echo\u0027) {","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"      socket.send(message.data) // send back the user\u0027s message","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"`socket.send(number)` called on the server, will disclose server memory.","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"Here\u0027s [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"was fixed, with a more detailed explanation. Props to","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here\u0027s the","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"[Node Security Project disclosure](https://nodesecurity.io/advisories/67).","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"### What\u0027s the solution?","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"It\u0027s important that node.js offers a fast way to get memory otherwise performance-critical","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"applications would needlessly get a lot slower.","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"But we need a better way to *signal our intent* as programmers. **When we want","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"uninitialized memory, we should request it explicitly.**","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"Sensitive functionality should not be packed into a developer-friendly API that loosely","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"accepts many different types. This type of API encourages the lazy practice of passing","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"variables in without checking the type very carefully.","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"#### A new API: `Buffer.allocUnsafe(number)`","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"The functionality of creating buffers with uninitialized memory should be part of another","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"API. We propose `Buffer.allocUnsafe(number)`. This way, it\u0027s not part of an API that","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"frequently gets user input of all sorts of different types passed into it.","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"var buf \u003d Buffer.allocUnsafe(16) // careful, uninitialized memory!","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"// Immediately overwrite the uninitialized buffer with data from another buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"for (var i \u003d 0; i \u003c buf.length; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"  buf[i] \u003d otherBuf[i]","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"### How do we fix node.js core?","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"We sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"`semver-major`) which defends against one case:","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"var str \u003d 16","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"new Buffer(str, \u0027utf8\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"In this situation, it\u0027s implied that the programmer intended the first argument to be a","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"string, since they passed an encoding as a second argument. Today, node.js will allocate","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"uninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"what the programmer intended.","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"But this is only a partial solution, since if the programmer does `new Buffer(variable)`","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"(without an `encoding` parameter) there\u0027s no way to know what they intended. If `variable`","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"is sometimes a number, then uninitialized memory will sometimes be returned.","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"### What\u0027s the real long-term fix?","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"We could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"we need uninitialized memory. But that would break 1000s of packages.","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"~~We believe the best solution is to:~~","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"#### Update","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"We now support adding three new APIs:","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"- `Buffer.from(value)` - convert from any type to a buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"- `Buffer.alloc(size)` - create a zero-filled buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"This solves the core problem that affected `ws` and `bittorrent-dht` which is","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"`Buffer(variable)` getting tricked into taking a number argument.","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"This way, existing code continues working and the impact on the npm ecosystem will be","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"minimal. Over time, npm maintainers can migrate performance-critical code to use","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"### Conclusion","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"We think there\u0027s a serious design issue with the `Buffer` API as it exists today. It","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"promotes insecure software by putting high-risk functionality into a convenient API","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"with friendly \"developer ergonomics\".","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"This wasn\u0027t merely a theoretical exercise because we found the issue in some of the","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"most popular npm packages.","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"Fortunately, there\u0027s an easy fix that can be applied today. Use `safe-buffer` in place of","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"`buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"var Buffer \u003d require(\u0027safe-buffer\u0027).Buffer","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"Eventually, we hope that node.js core can switch to this new, safer behavior. We believe","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"the impact on the ecosystem would be minimal since it\u0027s not a breaking change.","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"Well-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"older, insecure packages would magically become safe from this attack vector.","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"## links","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"## credit","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"The original issues in `bittorrent-dht`","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"([disclosure](https://nodesecurity.io/advisories/68)) and","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"[Mathias Buus](https://github.com/mafintosh) and","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"[Feross Aboukhadijeh](http://feross.org/).","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"Thanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"and for his work running the [Node Security Project](https://nodesecurity.io/).","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"Thanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"auditing the code.","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"## license","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"MIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":584}},{"path":"node_modules/shelljs/CHANGELOG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Change Log","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"## [Unreleased](https://github.com/shelljs/shelljs/tree/HEAD)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.2...HEAD)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"- Shelljs print stderr to console even if exec-only \"silent\" is true [\\#905](https://github.com/shelljs/shelljs/issues/905)","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"- refactor: remove common.state.tempDir [\\#902](https://github.com/shelljs/shelljs/issues/902)","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"- Can\u0027t suppress stdout for echo [\\#899](https://github.com/shelljs/shelljs/issues/899)","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"- exec\\(\\) doesn\u0027t apply the arguments correctly [\\#895](https://github.com/shelljs/shelljs/issues/895)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"- Travis CI currently broken [\\#893](https://github.com/shelljs/shelljs/issues/893)","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"- shell.exec\\(\u0027npm pack\u0027\\) painfully slow [\\#885](https://github.com/shelljs/shelljs/issues/885)","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"- shelljs.exec cannot find app.asar/node\\_modules/shelljs/src/exec-child.js [\\#881](https://github.com/shelljs/shelljs/issues/881)","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"- test infra: mocks and skipOnWin conflict [\\#862](https://github.com/shelljs/shelljs/issues/862)","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"- Support for shell function completion on IDE [\\#859](https://github.com/shelljs/shelljs/issues/859)","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"- echo command shows options in stdout [\\#855](https://github.com/shelljs/shelljs/issues/855)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- silent does not always work [\\#851](https://github.com/shelljs/shelljs/issues/851)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"- Appveyor installs the latest npm, instead of the latest compatible npm [\\#844](https://github.com/shelljs/shelljs/issues/844)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"- Force symbolic link \\(ln -sf\\) does not overwrite/recreate existing destination [\\#830](https://github.com/shelljs/shelljs/issues/830)","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"- inconsistent result when trying to echo to a file [\\#798](https://github.com/shelljs/shelljs/issues/798)","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"- Prevent require\\(\\)ing executable-only files [\\#789](https://github.com/shelljs/shelljs/issues/789)","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"- Cannot set property to of \\[object String\\] which has only a getter [\\#752](https://github.com/shelljs/shelljs/issues/752)","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"- which\\(\\) should check executability before returning a value [\\#657](https://github.com/shelljs/shelljs/issues/657)","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"- Bad encoding experience [\\#456](https://github.com/shelljs/shelljs/issues/456)","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"- phpcs very slow [\\#440](https://github.com/shelljs/shelljs/issues/440)","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"- Error shown when triggering a sigint during shelljs.exec if process.on sigint is defined [\\#254](https://github.com/shelljs/shelljs/issues/254)","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"- `.to\\(file\\)` does not mute STDIO output [\\#146](https://github.com/shelljs/shelljs/issues/146)","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"- Escaping shell arguments to exec\\(\\) [\\#143](https://github.com/shelljs/shelljs/issues/143)","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"- Allow multiple string arguments for exec\\(\\) [\\#103](https://github.com/shelljs/shelljs/issues/103)","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"- cp does not recursively copy from readonly location  [\\#98](https://github.com/shelljs/shelljs/issues/98)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"- Handling permissions errors on file I/O [\\#64](https://github.com/shelljs/shelljs/issues/64)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"- refactor: don\u0027t expose tempdir in common.state [\\#903](https://github.com/shelljs/shelljs/pull/903) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"- chore\\(ci\\): fix codecov on travis [\\#897](https://github.com/shelljs/shelljs/pull/897) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"- chore\\(npm\\): add ci-or-install script [\\#896](https://github.com/shelljs/shelljs/pull/896) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"- Fix silent exec [\\#892](https://github.com/shelljs/shelljs/pull/892) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"- chore\\(appveyor\\): run entire test matrix [\\#886](https://github.com/shelljs/shelljs/pull/886) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- docs: remove gitter badge [\\#880](https://github.com/shelljs/shelljs/pull/880) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- grep includes the i flag [\\#876](https://github.com/shelljs/shelljs/pull/876) ([ppsleep](https://github.com/ppsleep))","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"- Fix\\(which\\): match only executable files \\(\\#657\\) [\\#874](https://github.com/shelljs/shelljs/pull/874) ([termosa](https://github.com/termosa))","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"- chore: rename some tests [\\#871](https://github.com/shelljs/shelljs/pull/871) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"- Fix cp from readonly source [\\#870](https://github.com/shelljs/shelljs/pull/870) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- chore: bump dev dependencies and add package-lock [\\#864](https://github.com/shelljs/shelljs/pull/864) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- fix\\(mocks\\): fix conflict between mocks and skip [\\#863](https://github.com/shelljs/shelljs/pull/863) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"- chore: output npm version in travis [\\#850](https://github.com/shelljs/shelljs/pull/850) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"- Prevent require-ing bin/shjs [\\#848](https://github.com/shelljs/shelljs/pull/848) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"- chore\\(appveyor\\): do not use latest npm [\\#847](https://github.com/shelljs/shelljs/pull/847) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"- chore: update shelljs-release version [\\#846](https://github.com/shelljs/shelljs/pull/846) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"## [v0.8.2](https://github.com/shelljs/shelljs/tree/v0.8.2) (2018-05-08)","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.1...v0.8.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"- High severity vulnerability in shelljs 0.8.1 [\\#842](https://github.com/shelljs/shelljs/issues/842)","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"- Add test for ls\\(\\) on a symlink to a directory [\\#795](https://github.com/shelljs/shelljs/issues/795)","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- Harden shell.exec by writing the child process in a source file [\\#782](https://github.com/shelljs/shelljs/issues/782)","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- shell.exec\\(\\) doesn\u0027t respond correctly to config.fatal \u003d true [\\#735](https://github.com/shelljs/shelljs/issues/735)","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"- Merge \u0027exec: internal error\u0027 with ShellJSInternalError [\\#734](https://github.com/shelljs/shelljs/issues/734)","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"- exec returning null from command [\\#724](https://github.com/shelljs/shelljs/issues/724)","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"- Only Get Stderr from Exec [\\#371](https://github.com/shelljs/shelljs/issues/371)","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"- Execute child.stdout.on before child.on\\(\"exit\"\\)  [\\#224](https://github.com/shelljs/shelljs/issues/224)","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"- Workaround codecov bug of miscalculation of coverage \\(\\#795\\) [\\#838](https://github.com/shelljs/shelljs/pull/838) ([dwi2](https://github.com/dwi2))","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"- Update doc comments and regenerate README.md. [\\#825](https://github.com/shelljs/shelljs/pull/825) ([Zearin](https://github.com/Zearin))","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"- chore: update contributing guidelines [\\#817](https://github.com/shelljs/shelljs/pull/817) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"- chore\\(lint\\): don\u0027t allow excess trailing newlines [\\#816](https://github.com/shelljs/shelljs/pull/816) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"- Remove separate \"internal error\" from exec [\\#802](https://github.com/shelljs/shelljs/pull/802) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"## [v0.8.1](https://github.com/shelljs/shelljs/tree/v0.8.1) (2018-01-20)","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.8.0...v0.8.1)","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"- Exec failing with internal error when piping large output [\\#818](https://github.com/shelljs/shelljs/issues/818)","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"- Revert \"refactor\\(exec\\): remove paramsFile \\(\\#807\\)\" [\\#819](https://github.com/shelljs/shelljs/pull/819) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"## [v0.8.0](https://github.com/shelljs/shelljs/tree/v0.8.0) (2018-01-12)","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.8...v0.8.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"- Snyk vulnerability DB reporting command injection vulnerability in ShellJS [\\#810](https://github.com/shelljs/shelljs/issues/810)","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"- chore: upgrade nyc [\\#803](https://github.com/shelljs/shelljs/issues/803)","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"- Update CI to use Node v9 [\\#799](https://github.com/shelljs/shelljs/issues/799)","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"- Link to FAQ wiki section in our issue template [\\#787](https://github.com/shelljs/shelljs/issues/787)","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"- Is it possible to get a js library\\(file\\) for ShellJS [\\#776](https://github.com/shelljs/shelljs/issues/776)","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"- 48, [\\#774](https://github.com/shelljs/shelljs/issues/774)","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"- 47 [\\#773](https://github.com/shelljs/shelljs/issues/773)","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"- Exec function calls JSON.stringify on command [\\#772](https://github.com/shelljs/shelljs/issues/772)","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"- getting different result from terminal and with shelljs  [\\#769](https://github.com/shelljs/shelljs/issues/769)","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"- test\\(\\) does not support -w and -x options [\\#768](https://github.com/shelljs/shelljs/issues/768)","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"- Snyk \"high severity\" issue [\\#766](https://github.com/shelljs/shelljs/issues/766)","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"- Snyk \"high security [\\#765](https://github.com/shelljs/shelljs/issues/765)","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"- ShellJS doesn\u0027t respect NPM Registry being set outside of it [\\#761](https://github.com/shelljs/shelljs/issues/761)","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"- Run second shell script [\\#756](https://github.com/shelljs/shelljs/issues/756)","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"- shelljs seems NOT compatible with nexe under CentOS 6.5 [\\#754](https://github.com/shelljs/shelljs/issues/754)","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"- Feature request: pushd/popd -q option [\\#753](https://github.com/shelljs/shelljs/issues/753)","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"- cat doesn\u0027t support \u0027-n\u0027 option [\\#750](https://github.com/shelljs/shelljs/issues/750)","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"- shelljs run xcodebuild error [\\#749](https://github.com/shelljs/shelljs/issues/749)","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"- Add wrappers around fs.statSync and fs.lstatSync [\\#745](https://github.com/shelljs/shelljs/issues/745)","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"- Improve coverage for exec\\(\\) [\\#742](https://github.com/shelljs/shelljs/issues/742)","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"- Improve coverage for head\\(\\) [\\#741](https://github.com/shelljs/shelljs/issues/741)","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"- shelljs is no longer used in PDF.js [\\#737](https://github.com/shelljs/shelljs/issues/737)","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"- ls doesn\u0027t follow links to directories [\\#733](https://github.com/shelljs/shelljs/issues/733)","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"- Add test for `ls regular-file.txt` [\\#732](https://github.com/shelljs/shelljs/issues/732)","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"- Clean up common tests [\\#714](https://github.com/shelljs/shelljs/issues/714)","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"- Cant get encoding buffer to work on exec [\\#675](https://github.com/shelljs/shelljs/issues/675)","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"- Set up Codecov for the project [\\#671](https://github.com/shelljs/shelljs/issues/671)","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"- ShellJS: internal error Error: EBUSY: resource busy or locked, lstat \u0027C:\\pagefile.sys\u0027 [\\#514](https://github.com/shelljs/shelljs/issues/514)","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"- Feature request: provide a way to skip option parsing [\\#778](https://github.com/shelljs/shelljs/issues/778)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"- Switch to os.homedir\\(\\) when we move to v4+ [\\#683](https://github.com/shelljs/shelljs/issues/683)","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"- Drop support for v0.12 [\\#647](https://github.com/shelljs/shelljs/issues/647)","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"- feature: echo -n [\\#559](https://github.com/shelljs/shelljs/issues/559)","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"- Don\u0027t kill the node process upon unexpected error [\\#483](https://github.com/shelljs/shelljs/issues/483)","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"- Echo doesn\u0027t return value ending in a trailing newline [\\#476](https://github.com/shelljs/shelljs/issues/476)","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"- Synchronous exec stalls permenantly when there is an error/w the shell [\\#7](https://github.com/shelljs/shelljs/issues/7)","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"- docs: announce plugin API [\\#812](https://github.com/shelljs/shelljs/pull/812) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"- chore: update CI to Node v9 [\\#811](https://github.com/shelljs/shelljs/pull/811) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"- refactor\\(exec\\): remove paramsFile [\\#807](https://github.com/shelljs/shelljs/pull/807) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"- chore: update nyc dependency [\\#805](https://github.com/shelljs/shelljs/pull/805) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"- refactor: harden plugins against unknown options [\\#804](https://github.com/shelljs/shelljs/pull/804) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"- chore\\(eslint\\): use words instead of numbers [\\#797](https://github.com/shelljs/shelljs/pull/797) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"- Add note to issue template about FAQ [\\#794](https://github.com/shelljs/shelljs/pull/794) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"- Remove codeFile parameter [\\#791](https://github.com/shelljs/shelljs/pull/791) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"- Use execFileSync to launch child process [\\#790](https://github.com/shelljs/shelljs/pull/790) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"- refactor\\(exec\\): move child process to source file [\\#786](https://github.com/shelljs/shelljs/pull/786) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"- Remove unnecessary shell.error checks from common tests [\\#785](https://github.com/shelljs/shelljs/pull/785) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"- Add a test for ls for a single file [\\#784](https://github.com/shelljs/shelljs/pull/784) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"- Wrap fs.statSync and fs.lstatSync [\\#783](https://github.com/shelljs/shelljs/pull/783) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"- chore: set AVA options [\\#780](https://github.com/shelljs/shelljs/pull/780) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"- chore: clean up refs to unsupported node versions [\\#779](https://github.com/shelljs/shelljs/pull/779) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"- Added `-q` \\(quiet\\) option to `push`, `popd`, `dirs` functions. [\\#777](https://github.com/shelljs/shelljs/pull/777) ([alexreg](https://github.com/alexreg))","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"- feat\\(cat\\): number output lines \\(\\#750\\) [\\#775](https://github.com/shelljs/shelljs/pull/775) ([gcca](https://github.com/gcca))","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"- refactor\\(test\\): update AVA and refactor tests [\\#760](https://github.com/shelljs/shelljs/pull/760) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"- chore: add skipOnWin and skipOnUnix test helpers [\\#746](https://github.com/shelljs/shelljs/pull/746) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"- test\\(exec\\): add tests for coverage [\\#744](https://github.com/shelljs/shelljs/pull/744) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"- test\\(head\\): improve coverage [\\#743](https://github.com/shelljs/shelljs/pull/743) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"- Remove PDF.js mention from README.md [\\#738](https://github.com/shelljs/shelljs/pull/738) ([voy](https://github.com/voy))","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"- Provide an API to pass parameters which resemble options [\\#792](https://github.com/shelljs/shelljs/pull/792) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"- Fix ls not following links to directories by default [\\#764](https://github.com/shelljs/shelljs/pull/764) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"- Add \"encoding\" option to exec [\\#763](https://github.com/shelljs/shelljs/pull/763) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"- Merge dev into master [\\#731](https://github.com/shelljs/shelljs/pull/731) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"- Deprecate common.getUserHome, advise using os.homedir instead [\\#725](https://github.com/shelljs/shelljs/pull/725) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"- Echo test mocks [\\#708](https://github.com/shelljs/shelljs/pull/708) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"- Safely exit by throwing an error [\\#546](https://github.com/shelljs/shelljs/pull/546) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"- chore\\(make\\): depreciate shelljs/make [\\#431](https://github.com/shelljs/shelljs/pull/431) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"## [v0.7.8](https://github.com/shelljs/shelljs/tree/v0.7.8) (2017-06-07)","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.7...v0.7.8)","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"- Add node v8 to CI [\\#729](https://github.com/shelljs/shelljs/issues/729)","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"- Exec not working in Electron ! [\\#726](https://github.com/shelljs/shelljs/issues/726)","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"- is rechoir used anywhere? [\\#723](https://github.com/shelljs/shelljs/issues/723)","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"- ShellJS: internal error on shelljs.mkdir\\(\u0027myFile/myDir\u0027\\) [\\#720](https://github.com/shelljs/shelljs/issues/720)","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"- Can\u0027t make sed perform global replace [\\#719](https://github.com/shelljs/shelljs/issues/719)","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"- grep: option not recognized: l [\\#717](https://github.com/shelljs/shelljs/issues/717)","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"- Problems getting code, stdout, stderr [\\#715](https://github.com/shelljs/shelljs/issues/715)","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"- Copying hidden files fails on Windows 10 [\\#711](https://github.com/shelljs/shelljs/issues/711)","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"- How am I suppose to handle errors with ShellJS? [\\#707](https://github.com/shelljs/shelljs/issues/707)","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"- use cp\\(\u0027-r\u0027, \u0027./src\u0027, \u0027./dist\u0027\\) bug [\\#705](https://github.com/shelljs/shelljs/issues/705)","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"- Way to ignore files in globs. [\\#699](https://github.com/shelljs/shelljs/issues/699)","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"- Buffer constructor is deprecated [\\#694](https://github.com/shelljs/shelljs/issues/694)","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"- source command not working via exec method. [\\#693](https://github.com/shelljs/shelljs/issues/693)","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"- Would you be interested in a PR for `open`? [\\#692](https://github.com/shelljs/shelljs/issues/692)","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"- Get rid of common.platform in favor of process.platform [\\#670](https://github.com/shelljs/shelljs/issues/670)","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"- Passing empty string to cp throws internal error [\\#664](https://github.com/shelljs/shelljs/issues/664)","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"- Why does sed split files into an array, call replace on each line and rejoin? [\\#645](https://github.com/shelljs/shelljs/issues/645)","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"- feat: cp \u0026 mv should not overwrite recently created files [\\#631](https://github.com/shelljs/shelljs/issues/631)","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"- Echo tests unnecessarily run tests in own process [\\#622](https://github.com/shelljs/shelljs/issues/622)","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"- rm -rf on a symbolic link to a dir deletes its contents [\\#587](https://github.com/shelljs/shelljs/issues/587)","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"- \"Cannot extract package\" with node-webkit [\\#181](https://github.com/shelljs/shelljs/issues/181)","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"- EBADF, bad file descriptor [\\#180](https://github.com/shelljs/shelljs/issues/180)","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"- Add node 8 to CI [\\#730](https://github.com/shelljs/shelljs/pull/730) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"- fix\\(mkdir\\): improve error handling around files [\\#721](https://github.com/shelljs/shelljs/pull/721) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"- Properly handle directories as arguments [\\#713](https://github.com/shelljs/shelljs/pull/713) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"- Add common.buffer [\\#710](https://github.com/shelljs/shelljs/pull/710) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"- Fix common.expand error [\\#709](https://github.com/shelljs/shelljs/pull/709) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"- refactor: remove unnecessary common.js imports [\\#703](https://github.com/shelljs/shelljs/pull/703) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"- Fix \\#631 throw error when overwriting recently created file [\\#702](https://github.com/shelljs/shelljs/pull/702) ([uttpal](https://github.com/uttpal))","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"- Small clarification of verbose flag [\\#691](https://github.com/shelljs/shelljs/pull/691) ([zommerfelds](https://github.com/zommerfelds))","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"- fix\\(grep, sed, sort, uniq\\): Split only on newline characters [\\#690](https://github.com/shelljs/shelljs/pull/690) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"- Refactor: Use process.platform across codebase [\\#689](https://github.com/shelljs/shelljs/pull/689) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"- Remove contents of symlink to dir with rm -rf [\\#688](https://github.com/shelljs/shelljs/pull/688) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"- Echo stdout [\\#677](https://github.com/shelljs/shelljs/pull/677) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"## [v0.7.7](https://github.com/shelljs/shelljs/tree/v0.7.7) (2017-03-09)","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.6...v0.7.7)","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"- Error output should be consistent across all platforms. [\\#681](https://github.com/shelljs/shelljs/issues/681)","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"- \\*CRITICAL data loss\\* shell.cp\\(\\) Content of file is erased when trying to copy it to the folder it already belongs to [\\#678](https://github.com/shelljs/shelljs/issues/678)","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"- Use with webpack broken in 0.7.6 [\\#667](https://github.com/shelljs/shelljs/issues/667)","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"- Difference between bash ls -R and ShellJS ls -R with symlinks [\\#666](https://github.com/shelljs/shelljs/issues/666)","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"- Refactor which\\(\\) \\(too many repeated code blocks\\) [\\#656](https://github.com/shelljs/shelljs/issues/656)","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"- find\\(\\) raises error when unable to find any files matching, expected to return empty array. [\\#653](https://github.com/shelljs/shelljs/issues/653)","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"- Reformat the markdown in RELEASE.md [\\#642](https://github.com/shelljs/shelljs/issues/642)","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"- rm -rf doesn\u0027t work if the directory contains an asar archive in Electron [\\#618](https://github.com/shelljs/shelljs/issues/618)","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"- Add support for other file types in rm [\\#617](https://github.com/shelljs/shelljs/issues/617)","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"- Feature request: ls -L option [\\#563](https://github.com/shelljs/shelljs/issues/563)","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"- How to send SIGINT signal to child process launched with exec [\\#518](https://github.com/shelljs/shelljs/issues/518)","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"- feature request: option to add node\\_modules to the path for shelljs scripts [\\#469](https://github.com/shelljs/shelljs/issues/469)","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"- high cpu usage during synchronous exec [\\#167](https://github.com/shelljs/shelljs/issues/167)","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"- Add support for removing fifos [\\#687](https://github.com/shelljs/shelljs/pull/687) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"- chore: add codecov script to appveyor CI [\\#686](https://github.com/shelljs/shelljs/pull/686) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"- Refactor tests to improve readability [\\#685](https://github.com/shelljs/shelljs/pull/685) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"- fix: convert error output to be consistent cross-platform [\\#684](https://github.com/shelljs/shelljs/pull/684) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"- chore: add codecov [\\#682](https://github.com/shelljs/shelljs/pull/682) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"- Fix cp overwriting identical files [\\#679](https://github.com/shelljs/shelljs/pull/679) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"- Modified glob pattern. Fixes \\#666 [\\#676](https://github.com/shelljs/shelljs/pull/676) ([frandiox](https://github.com/frandiox))","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"- refactor\\(parseOptions\\): better handle errors [\\#674](https://github.com/shelljs/shelljs/pull/674) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"- test: add misc. tests to improve coverage [\\#673](https://github.com/shelljs/shelljs/pull/673) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"- test: don\u0027t count hard-to-test lines for coverage [\\#672](https://github.com/shelljs/shelljs/pull/672) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"- fix: switch commands.json -\\\u003e commands.js [\\#668](https://github.com/shelljs/shelljs/pull/668) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"- ls -L \\(follow symlinks\\) [\\#665](https://github.com/shelljs/shelljs/pull/665) ([frandiox](https://github.com/frandiox))","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"- docs\\(chmod\\): document `options` argument [\\#663](https://github.com/shelljs/shelljs/pull/663) ([gkalpak](https://github.com/gkalpak))","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"- docs: clean up RELEASE.md [\\#662](https://github.com/shelljs/shelljs/pull/662) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"- docs: miscellaneous README changes [\\#661](https://github.com/shelljs/shelljs/pull/661) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"- Fix typo in README [\\#660](https://github.com/shelljs/shelljs/pull/660) ([faheel](https://github.com/faheel))","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"- refactor: reduce repeated code in which\\(\\) [\\#659](https://github.com/shelljs/shelljs/pull/659) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"- feature: add -a option for which command [\\#655](https://github.com/shelljs/shelljs/pull/655) ([termosa](https://github.com/termosa))","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"- Fix find ENOENT [\\#654](https://github.com/shelljs/shelljs/pull/654) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"- Safely exit by throwing an error [\\#649](https://github.com/shelljs/shelljs/pull/649) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"- Chore drop 0.12 [\\#648](https://github.com/shelljs/shelljs/pull/648) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"- chore\\(lint\\): Enforce a trailing comma for multi-line [\\#646](https://github.com/shelljs/shelljs/pull/646) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"- docs\\(release\\): use bulleted list [\\#643](https://github.com/shelljs/shelljs/pull/643) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"## [v0.7.6](https://github.com/shelljs/shelljs/tree/v0.7.6) (2017-01-08)","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.5...v0.7.6)","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"- unable to execute ionic command with shell js  [\\#640](https://github.com/shelljs/shelljs/issues/640)","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"- How to increase ShellJS buffer size? [\\#639](https://github.com/shelljs/shelljs/issues/639)","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"- mkdir fails with non-normalized path [\\#634](https://github.com/shelljs/shelljs/issues/634)","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"- Move execPath into common [\\#633](https://github.com/shelljs/shelljs/issues/633)","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"- QUESTION: Feedback while an operation is running? [\\#629](https://github.com/shelljs/shelljs/issues/629)","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"- Test setup/cleanup is broken [\\#621](https://github.com/shelljs/shelljs/issues/621)","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"- Ignore temp directories when running lint [\\#620](https://github.com/shelljs/shelljs/issues/620)","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"- parseOptions should throw an error if the option string doesn\u0027t start with \u0027-\u0027 [\\#614](https://github.com/shelljs/shelljs/issues/614)","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"- chore: LGTM.co is gone [\\#595](https://github.com/shelljs/shelljs/issues/595)","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"- refactor: objectAssign should refer to Object.assign if it exists, or the internal polyfill otherwise [\\#592](https://github.com/shelljs/shelljs/issues/592)","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"- parseOptions: allow a way to keep errors silent \\(exception only\\) [\\#591](https://github.com/shelljs/shelljs/issues/591)","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"- \\[Question\\] commands with multiple options / arguments? [\\#589](https://github.com/shelljs/shelljs/issues/589)","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"- feature: GNU Parallel  [\\#585](https://github.com/shelljs/shelljs/issues/585)","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"- write to file [\\#568](https://github.com/shelljs/shelljs/issues/568)","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"- Cannot figure out how to disable globbing for rm [\\#567](https://github.com/shelljs/shelljs/issues/567)","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"- Switch to the ava test framework [\\#560](https://github.com/shelljs/shelljs/issues/560)","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"- Option not recognized [\\#556](https://github.com/shelljs/shelljs/issues/556)","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"- chore: add @freitagbr to LGTM maintainers [\\#552](https://github.com/shelljs/shelljs/issues/552)","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"- chore: set up dev branch [\\#548](https://github.com/shelljs/shelljs/issues/548)","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"- bug: cp\\(\\) doesn\u0027t always copy everything [\\#547](https://github.com/shelljs/shelljs/issues/547)","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"- User-friendly lint command [\\#544](https://github.com/shelljs/shelljs/issues/544)","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"- Lint warning [\\#542](https://github.com/shelljs/shelljs/issues/542)","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"- chore: add nodejs v7 to CI [\\#537](https://github.com/shelljs/shelljs/issues/537)","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"- error.code is not always available [\\#536](https://github.com/shelljs/shelljs/issues/536)","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"- Add shx as a dependency for testing [\\#525](https://github.com/shelljs/shelljs/issues/525)","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"- Feature request: allow `common.error\\(\\)` to optionally not insert a prefix and optionally not print to console [\\#523](https://github.com/shelljs/shelljs/issues/523)","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"- Feature request: Add \"shelljs.unlink\" [\\#519](https://github.com/shelljs/shelljs/issues/519)","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"- Sed should allow a replacement string to contain `\\1` for match groups [\\#507](https://github.com/shelljs/shelljs/issues/507)","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"- Usage with neodoc [\\#445](https://github.com/shelljs/shelljs/issues/445)","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"- \\[ Feature idea \\] synchronous sleep command [\\#441](https://github.com/shelljs/shelljs/issues/441)","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"- Improve test coverage [\\#347](https://github.com/shelljs/shelljs/issues/347)","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"- Add a way to prevent shell-expansion on commands \\(this issue is not for exec\\) [\\#345](https://github.com/shelljs/shelljs/issues/345)","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"- Chown [\\#183](https://github.com/shelljs/shelljs/issues/183)","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"- spawn EMFILE [\\#81](https://github.com/shelljs/shelljs/issues/81)","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"- Rewrite exec using execsync-ng \\(which uses node-ffi\\) [\\#66](https://github.com/shelljs/shelljs/issues/66)","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"- `exec` gets stuck on my Debian box [\\#51](https://github.com/shelljs/shelljs/issues/51)","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"- 100% cpu usage when a nodejs script goes side ways executing a command. [\\#5](https://github.com/shelljs/shelljs/issues/5)","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"- refactor: add config.reset\\(\\) and .resetForTesting\\(\\) [\\#641](https://github.com/shelljs/shelljs/pull/641) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"- chore: set up test coverage [\\#638](https://github.com/shelljs/shelljs/pull/638) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"- refactor: create common.execPath [\\#636](https://github.com/shelljs/shelljs/pull/636) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"- fix: allow non-normalized paths as input to mkdir [\\#635](https://github.com/shelljs/shelljs/pull/635) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"- Finalize moving to ava [\\#630](https://github.com/shelljs/shelljs/pull/630) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"- test: refactor pushd tests to AVA [\\#627](https://github.com/shelljs/shelljs/pull/627) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"- test: refactor popd tests to AVA [\\#626](https://github.com/shelljs/shelljs/pull/626) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"- test: refactor shjs tests to AVA [\\#625](https://github.com/shelljs/shelljs/pull/625) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"- test: remove tests for make \\(deprecated\\) [\\#624](https://github.com/shelljs/shelljs/pull/624) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"- Ignore test temp directories during linting [\\#623](https://github.com/shelljs/shelljs/pull/623) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"- refactor: list all commands in commands.json [\\#616](https://github.com/shelljs/shelljs/pull/616) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"- Throw an error if the options string does not start with \u0027-\u0027 [\\#615](https://github.com/shelljs/shelljs/pull/615) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"- chore: switch to files attribute from npmignore [\\#613](https://github.com/shelljs/shelljs/pull/613) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"- test: refactor \u0027test\u0027 command tests to AVA [\\#612](https://github.com/shelljs/shelljs/pull/612) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"- test: refactor find tests to AVA [\\#611](https://github.com/shelljs/shelljs/pull/611) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"- test: refactor ln tests to AVA [\\#610](https://github.com/shelljs/shelljs/pull/610) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"- test: refactor ls to use AVA [\\#609](https://github.com/shelljs/shelljs/pull/609) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"- test: refactor pipe tests to AVA [\\#608](https://github.com/shelljs/shelljs/pull/608) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"- test: refactor sed tests to AVA [\\#607](https://github.com/shelljs/shelljs/pull/607) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"- test: refactor grep tests to AVA [\\#606](https://github.com/shelljs/shelljs/pull/606) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"- test: refactor global tests to AVA [\\#605](https://github.com/shelljs/shelljs/pull/605) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"- test: refactor touch tests to AVA [\\#604](https://github.com/shelljs/shelljs/pull/604) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"- test: refactor uniq tests to AVA [\\#603](https://github.com/shelljs/shelljs/pull/603) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"- test: refactor sort tests to AVA [\\#602](https://github.com/shelljs/shelljs/pull/602) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"- test: refactor tail tests to AVA [\\#601](https://github.com/shelljs/shelljs/pull/601) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"- test: refactor head tests to AVA [\\#600](https://github.com/shelljs/shelljs/pull/600) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"- test: refactor mkdir tests to AVA [\\#599](https://github.com/shelljs/shelljs/pull/599) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"- Fix: rm behavior regarding symlinks [\\#598](https://github.com/shelljs/shelljs/pull/598) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"- test: refactor mv tests to AVA [\\#597](https://github.com/shelljs/shelljs/pull/597) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"- Remove files related to lgtm.co [\\#596](https://github.com/shelljs/shelljs/pull/596) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"- Add ability to configure error from parseOptions [\\#594](https://github.com/shelljs/shelljs/pull/594) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"- Use Object.assign if possible [\\#593](https://github.com/shelljs/shelljs/pull/593) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"- Add \"-n\" option to echo [\\#590](https://github.com/shelljs/shelljs/pull/590) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"- test: refactor rm tests to AVA [\\#586](https://github.com/shelljs/shelljs/pull/586) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"- test: refactor pwd tests to AVA [\\#582](https://github.com/shelljs/shelljs/pull/582) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"- test: refactor tempdir tests to AVA [\\#581](https://github.com/shelljs/shelljs/pull/581) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"- test: refactor \u0027which\u0027 tests to AVA [\\#580](https://github.com/shelljs/shelljs/pull/580) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"- test: refactor plugin tests to AVA [\\#579](https://github.com/shelljs/shelljs/pull/579) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"- test: refactor toEnd tests to AVA [\\#578](https://github.com/shelljs/shelljs/pull/578) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"- test: refactor to tests to AVA [\\#577](https://github.com/shelljs/shelljs/pull/577) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"- test: refactor \u0027set\u0027 tests to AVA [\\#576](https://github.com/shelljs/shelljs/pull/576) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"- test: refactor echo tests to AVA [\\#575](https://github.com/shelljs/shelljs/pull/575) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"- test: refactor exec tests to AVA [\\#574](https://github.com/shelljs/shelljs/pull/574) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"- test: refactor env tests to AVA [\\#573](https://github.com/shelljs/shelljs/pull/573) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"- test: refactor dirs tests to AVA [\\#572](https://github.com/shelljs/shelljs/pull/572) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"- test: refactor config tests to AVA [\\#571](https://github.com/shelljs/shelljs/pull/571) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"- test: refactor common tests to AVA [\\#570](https://github.com/shelljs/shelljs/pull/570) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"- test: refactor chmod tests to AVA [\\#569](https://github.com/shelljs/shelljs/pull/569) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"- test: refactor cp tests to ava [\\#565](https://github.com/shelljs/shelljs/pull/565) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"- test: refactor cat tests to ava [\\#564](https://github.com/shelljs/shelljs/pull/564) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"- test: set up ava and move cd.js [\\#561](https://github.com/shelljs/shelljs/pull/561) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"- Update sed documentation regarding capture groups [\\#558](https://github.com/shelljs/shelljs/pull/558) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"- Add newline to output of echo [\\#557](https://github.com/shelljs/shelljs/pull/557) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"- fix: handle code-less errors more carefully in exec [\\#554](https://github.com/shelljs/shelljs/pull/554) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"- Add Brandon Freitag to maintainers/contributors [\\#553](https://github.com/shelljs/shelljs/pull/553) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"- Get pipe tests running on Windows. [\\#550](https://github.com/shelljs/shelljs/pull/550) ([binki](https://github.com/binki))","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"- fix: maxdepth doesn\u0027t limit total number of copies [\\#549](https://github.com/shelljs/shelljs/pull/549) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"- Fix lint warning [\\#543](https://github.com/shelljs/shelljs/pull/543) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"- chore: remove v0.10 from Travis CI [\\#540](https://github.com/shelljs/shelljs/pull/540) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"- chore: add Node v7 for CI [\\#539](https://github.com/shelljs/shelljs/pull/539) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"## [v0.7.5](https://github.com/shelljs/shelljs/tree/v0.7.5) (2016-10-27)","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.4...v0.7.5)","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"- Project objectives: there is some higher goal to achieve? [\\#533](https://github.com/shelljs/shelljs/issues/533)","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"- fs.existsSync is un-deprecated [\\#531](https://github.com/shelljs/shelljs/issues/531)","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"- Inadvertent breaking change to shell.test\\(\\) [\\#529](https://github.com/shelljs/shelljs/issues/529)","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"- Add -u flag support for cp [\\#526](https://github.com/shelljs/shelljs/issues/526)","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"- API request: allow `plugin.error\\(\\)` to take an options parameter [\\#522](https://github.com/shelljs/shelljs/issues/522)","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"- FS Real Path error thrown when requiring shelljs [\\#521](https://github.com/shelljs/shelljs/issues/521)","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"- Question: passing code via pipe? [\\#520](https://github.com/shelljs/shelljs/issues/520)","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"- The performance in `cp` is different between `0.6.0` and `0.7.4` [\\#517](https://github.com/shelljs/shelljs/issues/517)","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"- ShellJS in Electron package don\u0027t find ffmpeg anymore [\\#516](https://github.com/shelljs/shelljs/issues/516)","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"- Exec issues with string option introduced in 0.7.4 [\\#515](https://github.com/shelljs/shelljs/issues/515)","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"- \\[ Feature \\] SSH command [\\#435](https://github.com/shelljs/shelljs/issues/435)","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"- feat: plugin.error\\(\\) takes an options parameter [\\#535](https://github.com/shelljs/shelljs/pull/535) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"- Revert \"refactor: replace fs.existsSync\" fixes\\(\\#531\\) [\\#532](https://github.com/shelljs/shelljs/pull/532) ([gyandeeps](https://github.com/gyandeeps))","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"- Fix: Remove default glob from shell.test \\(fixes \\#529\\) [\\#530](https://github.com/shelljs/shelljs/pull/530) ([gyandeeps](https://github.com/gyandeeps))","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"- feat: cp -u option [\\#527](https://github.com/shelljs/shelljs/pull/527) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"- chore: add downloads per month on README [\\#513](https://github.com/shelljs/shelljs/pull/513) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"## [v0.7.4](https://github.com/shelljs/shelljs/tree/v0.7.4) (2016-08-26)","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.3...v0.7.4)","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"- fix: echo -e should not print \"-e\" [\\#510](https://github.com/shelljs/shelljs/issues/510)","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"- Wrong method signature in doc [\\#498](https://github.com/shelljs/shelljs/issues/498)","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"- readFromPipe should be a function with no arguments [\\#485](https://github.com/shelljs/shelljs/issues/485)","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"- TypeError: Cannot read property \u0027toString\u0027 of undefined [\\#471](https://github.com/shelljs/shelljs/issues/471)","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"- fix: echo supports -e option properly [\\#511](https://github.com/shelljs/shelljs/pull/511) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"- refactor: replace fs.existsSync [\\#509](https://github.com/shelljs/shelljs/pull/509) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"- refactor: readFromPipe\\(\\) requires no arguments [\\#506](https://github.com/shelljs/shelljs/pull/506) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"- chore: switch to eslint [\\#504](https://github.com/shelljs/shelljs/pull/504) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"- feat: add overWrite option for commands [\\#503](https://github.com/shelljs/shelljs/pull/503) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"- chore: update issue template [\\#502](https://github.com/shelljs/shelljs/pull/502) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"- fixed head/tail readme [\\#499](https://github.com/shelljs/shelljs/pull/499) ([charlesread](https://github.com/charlesread))","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"## [v0.7.3](https://github.com/shelljs/shelljs/tree/v0.7.3) (2016-07-27)","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.2...v0.7.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"- expose execSync [\\#494](https://github.com/shelljs/shelljs/issues/494)","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"- Add a way to create commands that can receive from a pipe without being standalone commands [\\#487](https://github.com/shelljs/shelljs/issues/487)","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"- cp -r breaks when the directory contains a softlink [\\#193](https://github.com/shelljs/shelljs/issues/193)","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"- Redirect output to file fails [\\#60](https://github.com/shelljs/shelljs/issues/60)","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"- We need sed -n ? [\\#38](https://github.com/shelljs/shelljs/issues/38)","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"- refactor: allow pipeOnly commands \\(methods on ShellStrings\\) [\\#493](https://github.com/shelljs/shelljs/pull/493) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"- refactor: glob by default for commands [\\#492](https://github.com/shelljs/shelljs/pull/492) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"- refactor: switch from notUnix to unix in wrap\\(\\) [\\#491](https://github.com/shelljs/shelljs/pull/491) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"- refactor: switch common.extend\\(\\) to Object.assign ponyfill [\\#490](https://github.com/shelljs/shelljs/pull/490) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"- fix: conflicting options now properly override each other [\\#489](https://github.com/shelljs/shelljs/pull/489) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"- refactor: expose plugin utils \u0026 add initial tests [\\#484](https://github.com/shelljs/shelljs/pull/484) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"## [v0.7.2](https://github.com/shelljs/shelljs/tree/v0.7.2) (2016-07-25)","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.1...v0.7.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"- shelljs should not kill process if node call throws exception [\\#473](https://github.com/shelljs/shelljs/issues/473)","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"- `cp` work incorrectly when folder name contains \u0027@\u0027 [\\#463](https://github.com/shelljs/shelljs/issues/463)","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"- Something went wrong [\\#158](https://github.com/shelljs/shelljs/issues/158)","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"- fix: resolve a cylcic-dependency problem [\\#482](https://github.com/shelljs/shelljs/pull/482) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"- refactor: add wrapOutput option to auto-ShellString-ify command output [\\#481](https://github.com/shelljs/shelljs/pull/481) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"- refactor: move option parsing into common.wrap\\(\\) [\\#479](https://github.com/shelljs/shelljs/pull/479) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"- refactor: hook new uniq\\(\\) command using new format [\\#478](https://github.com/shelljs/shelljs/pull/478) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"- Fix mkdir malformed path [\\#477](https://github.com/shelljs/shelljs/pull/477) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"- fix: mkdir for invalid perms does not kill process [\\#474](https://github.com/shelljs/shelljs/pull/474) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"- feat\\(command\\): new command: uniq\\(\\) [\\#453](https://github.com/shelljs/shelljs/pull/453) ([joshi-sh](https://github.com/joshi-sh))","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"## [v0.7.1](https://github.com/shelljs/shelljs/tree/v0.7.1) (2016-07-22)","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.7.0...v0.7.1)","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"- cp -n doesn\u0027t work correctly [\\#465](https://github.com/shelljs/shelljs/issues/465)","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"- how can i run sudo apt-get install xtodotool by your plugin? [\\#448](https://github.com/shelljs/shelljs/issues/448)","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"- shell.js grep: internal error,  Invalid regular expression [\\#447](https://github.com/shelljs/shelljs/issues/447)","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"- Stdout is empty on Git log command [\\#439](https://github.com/shelljs/shelljs/issues/439)","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"- Cannot read toString of null when using execSync [\\#415](https://github.com/shelljs/shelljs/issues/415)","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"- cp -R dir/ target fails to copy hidden files in dir [\\#140](https://github.com/shelljs/shelljs/issues/140)","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"- \\#mv Won\u0027t Work Across Disks [\\#1](https://github.com/shelljs/shelljs/issues/1)","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"- refactor: commands now register themselves [\\#475](https://github.com/shelljs/shelljs/pull/475) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"- chore: switch to shields.io, and add npm badge [\\#470](https://github.com/shelljs/shelljs/pull/470) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"- fix\\(cp\\): -n option no longer raises error [\\#466](https://github.com/shelljs/shelljs/pull/466) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"- refactor: expose pipe-ability to command configuration [\\#464](https://github.com/shelljs/shelljs/pull/464) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"- fix\\(mv\\): works across partitions [\\#461](https://github.com/shelljs/shelljs/pull/461) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"- chore: switch to shelljs-changelog [\\#460](https://github.com/shelljs/shelljs/pull/460) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"- chore: update release process [\\#459](https://github.com/shelljs/shelljs/pull/459) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"- chore: revert depreciate shelljs/make \\(\\#431\\) [\\#458](https://github.com/shelljs/shelljs/pull/458) ([zephraph](https://github.com/zephraph))","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"- chore: clarify message for when docs are not generated [\\#457](https://github.com/shelljs/shelljs/pull/457) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"- chore\\(gendocs\\): add `npm run gendocs` command [\\#455](https://github.com/shelljs/shelljs/pull/455) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"- chore: update jshint and move it to an npm script [\\#454](https://github.com/shelljs/shelljs/pull/454) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"- test\\(ls\\): add case for trailing slash on dir name [\\#450](https://github.com/shelljs/shelljs/pull/450) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"- docs\\(exec\\): explicitly mention the `shell` option [\\#449](https://github.com/shelljs/shelljs/pull/449) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"- chore: setup changelog [\\#443](https://github.com/shelljs/shelljs/pull/443) ([levithomason](https://github.com/levithomason))","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"- docs: comment code better to help contributors [\\#437](https://github.com/shelljs/shelljs/pull/437) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"- chore\\(CI\\): update appveyor [\\#436](https://github.com/shelljs/shelljs/pull/436) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"- chore: test against node v6 [\\#433](https://github.com/shelljs/shelljs/pull/433) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"- docs: warn that README contains newest features [\\#410](https://github.com/shelljs/shelljs/pull/410) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"## [v0.7.0](https://github.com/shelljs/shelljs/tree/v0.7.0) (2016-04-25)","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.6.0...v0.7.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"- exec\\(\u0027nohup node some.js \u0026\u0027\\) [\\#426](https://github.com/shelljs/shelljs/issues/426)","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"- shelljs Breaks SemVer for Alpha and Pre-Release Versions [\\#390](https://github.com/shelljs/shelljs/issues/390)","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"- Copy not accepting source end with wildcards \\* when using -r on v0.6.0 [\\#389](https://github.com/shelljs/shelljs/issues/389)","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"- Support globbing in `shjs` [\\#388](https://github.com/shelljs/shelljs/issues/388)","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"- Refactor more commands to return ShellString [\\#373](https://github.com/shelljs/shelljs/issues/373)","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"- ln\\(\u0027-sf\u0027, \u0027./\u0027, \u0027\\\u003cdestination\\\u003e\u0027\\) is not linking the right folder [\\#363](https://github.com/shelljs/shelljs/issues/363)","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"- v0.6.0 - shell.cp\\(\u0027r\u0027, \u0027/foo/\\*, \u0027/bar\u0027\\) fails with /foo/\\* no such file or directory [\\#342](https://github.com/shelljs/shelljs/issues/342)","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"- Add documentup as a webhook [\\#327](https://github.com/shelljs/shelljs/issues/327)","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"- Dir glob breaks when in the middle of path [\\#245](https://github.com/shelljs/shelljs/issues/245)","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"- could you switch off wiki page? [\\#233](https://github.com/shelljs/shelljs/issues/233)","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"- ls globbing does not behave like shell, consider using glob.sync [\\#225](https://github.com/shelljs/shelljs/issues/225)","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"- Cannot run shell.exec\\(\u0027heroku config:push\u0027\\) -- just hangs  [\\#218](https://github.com/shelljs/shelljs/issues/218)","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"- `cp` does not overwrite files by default [\\#210](https://github.com/shelljs/shelljs/issues/210)","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"- exec failed to return [\\#208](https://github.com/shelljs/shelljs/issues/208)","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"- CLI Version [\\#202](https://github.com/shelljs/shelljs/issues/202)","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"- Bracket expansion not working [\\#176](https://github.com/shelljs/shelljs/issues/176)","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"- \"exec\" causes LiveScript interpreter \\(lsc\\) to hang [\\#160](https://github.com/shelljs/shelljs/issues/160)","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"- Don\u0027t modify string prototype [\\#159](https://github.com/shelljs/shelljs/issues/159)","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"- `exec\\(...\\).to\\(file\\)` should work [\\#154](https://github.com/shelljs/shelljs/issues/154)","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"- Can\u0027t install shelljs locally instead of globally [\\#136](https://github.com/shelljs/shelljs/issues/136)","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"- shelljs and node 0.10.28 [\\#125](https://github.com/shelljs/shelljs/issues/125)","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"- Use case for global installed shelljs [\\#123](https://github.com/shelljs/shelljs/issues/123)","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"- Only get stdout from `exec` [\\#92](https://github.com/shelljs/shelljs/issues/92)","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"- What about other commands? [\\#90](https://github.com/shelljs/shelljs/issues/90)","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"- Flesh out example of exit\\(\\) [\\#73](https://github.com/shelljs/shelljs/issues/73)","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"- exec doesn\u0027t work with qualified paths on windows [\\#41](https://github.com/shelljs/shelljs/issues/41)","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"- exec does not working in mingw bash in windows [\\#17](https://github.com/shelljs/shelljs/issues/17)","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"- Add support for cp -P option [\\#413](https://github.com/shelljs/shelljs/issues/413)","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"- cp -L: Incorrect behavior for symlinks to regular files [\\#407](https://github.com/shelljs/shelljs/issues/407)","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"- Edit the docs to emphasize ShellStrings and Pipes [\\#398](https://github.com/shelljs/shelljs/issues/398)","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"- Error message isn\u0027t always printed [\\#372](https://github.com/shelljs/shelljs/issues/372)","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"- Standardize command output [\\#356](https://github.com/shelljs/shelljs/issues/356)","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"- exec\\(\\) doesn\u0027t clean up all temp files [\\#353](https://github.com/shelljs/shelljs/issues/353)","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"- Document that exec\\(\\) options don\u0027t work on early versions of node [\\#350](https://github.com/shelljs/shelljs/issues/350)","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"- Add -f option to set\\(\\) [\\#344](https://github.com/shelljs/shelljs/issues/344)","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"- Glob commands by default [\\#343](https://github.com/shelljs/shelljs/issues/343)","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"- rm -rf incorrect behaviour [\\#332](https://github.com/shelljs/shelljs/issues/332)","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"- Switch `exec\\(\\)` to use bash by default [\\#281](https://github.com/shelljs/shelljs/issues/281)","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"- pipe to proc [\\#148](https://github.com/shelljs/shelljs/issues/148)","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"- shell builtin [\\#138](https://github.com/shelljs/shelljs/issues/138)","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"- add timeout option for exec [\\#132](https://github.com/shelljs/shelljs/issues/132)","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"- shelljs cp handling symlinks badly [\\#69](https://github.com/shelljs/shelljs/issues/69)","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"- chore: add \"Team\" section to README [\\#423](https://github.com/shelljs/shelljs/pull/423) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"- Contributing guidelines [\\#422](https://github.com/shelljs/shelljs/pull/422) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"- feat\\(glob\\): expose config.globOptions. [\\#400](https://github.com/shelljs/shelljs/pull/400) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"- Add shelljs as a keyword in package.json [\\#393](https://github.com/shelljs/shelljs/pull/393) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"- docs: add link to wiki page [\\#392](https://github.com/shelljs/shelljs/pull/392) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"- refactor\\(cd\\): use process.env.OLDPWD to store previous dir [\\#383](https://github.com/shelljs/shelljs/pull/383) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"- chore\\(appveyor\\): add in node 4 for appveyor [\\#381](https://github.com/shelljs/shelljs/pull/381) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"- Add Cash cross-reference [\\#375](https://github.com/shelljs/shelljs/pull/375) ([dthree](https://github.com/dthree))","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"- Ignore gitattributes from npm package [\\#361](https://github.com/shelljs/shelljs/pull/361) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"- Consistently use LF line endings [\\#355](https://github.com/shelljs/shelljs/pull/355) ([TimothyGu](https://github.com/TimothyGu))","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"- Release v0.7.0 [\\#429](https://github.com/shelljs/shelljs/pull/429) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"- fix: null is no longer confused for an object [\\#428](https://github.com/shelljs/shelljs/pull/428) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"- fix\\(ls\\): no trailing newline for empty directories [\\#425](https://github.com/shelljs/shelljs/pull/425) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"- feat\\(cp\\): -P option, plus better handling of symlinks [\\#421](https://github.com/shelljs/shelljs/pull/421) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"- docs\\(exec\\): fix docs about exec return type [\\#419](https://github.com/shelljs/shelljs/pull/419) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"- docs\\(error\\): deprecate relying on string value [\\#418](https://github.com/shelljs/shelljs/pull/418) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"- fix: error message now printed for fatal failures [\\#417](https://github.com/shelljs/shelljs/pull/417) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"- issue-407: Add regular files unit tests and fix symlink copy behavior [\\#409](https://github.com/shelljs/shelljs/pull/409) ([charlesverge](https://github.com/charlesverge))","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"- refactor\\(rm\\): Remove duplicate code [\\#408](https://github.com/shelljs/shelljs/pull/408) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"- docs: wildcards for all commands, other docs cleanups [\\#404](https://github.com/shelljs/shelljs/pull/404) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"- test\\(rm\\): add tests to prevent a future regression [\\#403](https://github.com/shelljs/shelljs/pull/403) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"- refactor\\(string\\): modify string protoype, but only for shelljs/global [\\#401](https://github.com/shelljs/shelljs/pull/401) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"- feat: adding error codes to ShellJS [\\#394](https://github.com/shelljs/shelljs/pull/394) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"- feature: use rechoir [\\#384](https://github.com/shelljs/shelljs/pull/384) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"- refactor\\(cp\\): clean up code and fix \\#376 [\\#380](https://github.com/shelljs/shelljs/pull/380) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"- New commands: sort\\(\\), head\\(\\), and tail\\(\\) [\\#379](https://github.com/shelljs/shelljs/pull/379) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"- Add unit tests to prevent regression \\(see \\#376\\) [\\#378](https://github.com/shelljs/shelljs/pull/378) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"- feat\\(pipe\\): add support for pipes between commands [\\#370](https://github.com/shelljs/shelljs/pull/370) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"- refactor\\(ls\\): greatly simplify ls implimentation [\\#369](https://github.com/shelljs/shelljs/pull/369) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"- chore: drop node v0.10 support [\\#368](https://github.com/shelljs/shelljs/pull/368) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"- perf\\(cd\\): only run `stat` once [\\#367](https://github.com/shelljs/shelljs/pull/367) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"- fix\\(exec\\): properly handles paths with spaces and quotes [\\#365](https://github.com/shelljs/shelljs/pull/365) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"- test\\(ln\\): add tests for linking to cwd [\\#364](https://github.com/shelljs/shelljs/pull/364) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"- fix\\(verbose\\): verbose-style logging is consistent [\\#362](https://github.com/shelljs/shelljs/pull/362) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"- Refactor shellstring [\\#360](https://github.com/shelljs/shelljs/pull/360) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"- feat\\(glob\\): use glob module for globbing [\\#359](https://github.com/shelljs/shelljs/pull/359) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"- feat\\(set\\): add -f option to disable globbing [\\#358](https://github.com/shelljs/shelljs/pull/358) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"- config.fatal now throws an exception [\\#357](https://github.com/shelljs/shelljs/pull/357) ([jrmclaurin](https://github.com/jrmclaurin))","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"- fix\\(exec\\): temp files are now cleaned up [\\#354](https://github.com/shelljs/shelljs/pull/354) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"- feat\\(glob\\): glob support for \\(almost\\) all commands [\\#352](https://github.com/shelljs/shelljs/pull/352) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"- feat\\(grep\\): add -l option [\\#349](https://github.com/shelljs/shelljs/pull/349) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"- fix\\(exec\\): now actually supports shell option [\\#348](https://github.com/shelljs/shelljs/pull/348) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"- feat\\(touch\\): supports multiple files [\\#346](https://github.com/shelljs/shelljs/pull/346) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"## [v0.6.0](https://github.com/shelljs/shelljs/tree/v0.6.0) (2016-02-05)","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.3...v0.6.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"- option not recognized [\\#334](https://github.com/shelljs/shelljs/issues/334)","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"- Feature request: Metadata with `ls` [\\#323](https://github.com/shelljs/shelljs/issues/323)","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"- Gen-docs is broken [\\#309](https://github.com/shelljs/shelljs/issues/309)","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"- `link -s` is broken for files on Windows [\\#301](https://github.com/shelljs/shelljs/issues/301)","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"- Shelljs quits unexpectedly: [\\#300](https://github.com/shelljs/shelljs/issues/300)","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"- Failing tests on Windows [\\#296](https://github.com/shelljs/shelljs/issues/296)","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"- run-tests.js is broken for cmd.exe [\\#294](https://github.com/shelljs/shelljs/issues/294)","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"- Support echo-ing environment variables [\\#291](https://github.com/shelljs/shelljs/issues/291)","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"- Add Windows CI [\\#287](https://github.com/shelljs/shelljs/issues/287)","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"- Add tests for the shjs utility [\\#280](https://github.com/shelljs/shelljs/issues/280)","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"- Allow shjs utility to infer the extension for \"filename.\" [\\#278](https://github.com/shelljs/shelljs/issues/278)","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"- Ability to read the stdout buffer line-by-line [\\#277](https://github.com/shelljs/shelljs/issues/277)","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"- Poor output for commands with multiple errors [\\#267](https://github.com/shelljs/shelljs/issues/267)","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"- Travis ci build status says \"unknown\" [\\#266](https://github.com/shelljs/shelljs/issues/266)","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"- wild card characters in filename not working as expected [\\#262](https://github.com/shelljs/shelljs/issues/262)","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"- shell.exec - read internal variable [\\#260](https://github.com/shelljs/shelljs/issues/260)","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"- cp and rename directory with -r doesn\u0027t match unix behavior [\\#256](https://github.com/shelljs/shelljs/issues/256)","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"- console.log.apply throwing TypeError: Illegal Invocation [\\#255](https://github.com/shelljs/shelljs/issues/255)","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"- How to exit on first error [\\#253](https://github.com/shelljs/shelljs/issues/253)","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"- why not support set \u0027cwd\u0027  when invoke execAsync ? [\\#250](https://github.com/shelljs/shelljs/issues/250)","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"- Not possible to check the failure of cd? [\\#247](https://github.com/shelljs/shelljs/issues/247)","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"- By default shelljs runs command in root  [\\#246](https://github.com/shelljs/shelljs/issues/246)","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"- /usr/bin/env: node: No such file or directory [\\#243](https://github.com/shelljs/shelljs/issues/243)","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"- \"Which\" command not working properly on Windows Platform. [\\#238](https://github.com/shelljs/shelljs/issues/238)","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"- Arguments [\\#237](https://github.com/shelljs/shelljs/issues/237)","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"- sed\\(\\) should accept multiple file arguments [\\#231](https://github.com/shelljs/shelljs/issues/231)","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"- shelljs.exec\\(\u0027aaa \u0026\u0026 bbb\u0027\\) blocks [\\#229](https://github.com/shelljs/shelljs/issues/229)","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"- Consider creating a GitHub Organization with more maintainers [\\#223](https://github.com/shelljs/shelljs/issues/223)","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"- \\[idea\\] Add chmodr function. [\\#219](https://github.com/shelljs/shelljs/issues/219)","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"- Execute a file [\\#211](https://github.com/shelljs/shelljs/issues/211)","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"- Where is standard error going to? [\\#209](https://github.com/shelljs/shelljs/issues/209)","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"- boolean return value for string.to\\(\\) [\\#205](https://github.com/shelljs/shelljs/issues/205)","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"- `common.error` doesn\u0027t throw [\\#199](https://github.com/shelljs/shelljs/issues/199)","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"- Problems with exec \\(sync\\) on 0.12/io.js [\\#197](https://github.com/shelljs/shelljs/issues/197)","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"- cp --update flag [\\#172](https://github.com/shelljs/shelljs/issues/172)","lastModifiedDate":"2023-09-05"},{"lineNumber":607,"author":{"gitId":"shashahchk"},"content":"- Is there a way to suppress pushd/popd output? [\\#171](https://github.com/shelljs/shelljs/issues/171)","lastModifiedDate":"2023-09-05"},{"lineNumber":608,"author":{"gitId":"shashahchk"},"content":"- Cannot recursively list all \\*.js files [\\#162](https://github.com/shelljs/shelljs/issues/162)","lastModifiedDate":"2023-09-05"},{"lineNumber":609,"author":{"gitId":"shashahchk"},"content":"- exec\\(\\) breaks if executed in a deleted directory [\\#157](https://github.com/shelljs/shelljs/issues/157)","lastModifiedDate":"2023-09-05"},{"lineNumber":610,"author":{"gitId":"shashahchk"},"content":"- shjs command always exits with zero code [\\#133](https://github.com/shelljs/shelljs/issues/133)","lastModifiedDate":"2023-09-05"},{"lineNumber":611,"author":{"gitId":"shashahchk"},"content":"- touch command [\\#122](https://github.com/shelljs/shelljs/issues/122)","lastModifiedDate":"2023-09-05"},{"lineNumber":612,"author":{"gitId":"shashahchk"},"content":"- Symbolic links are broken! [\\#100](https://github.com/shelljs/shelljs/issues/100)","lastModifiedDate":"2023-09-05"},{"lineNumber":613,"author":{"gitId":"shashahchk"},"content":"- interpret `--` as stdin [\\#55](https://github.com/shelljs/shelljs/issues/55)","lastModifiedDate":"2023-09-05"},{"lineNumber":614,"author":{"gitId":"shashahchk"},"content":"- Error ENOTEMPTY when deleting a directory recursively. [\\#49](https://github.com/shelljs/shelljs/issues/49)","lastModifiedDate":"2023-09-05"},{"lineNumber":615,"author":{"gitId":"shashahchk"},"content":"- Cross-platform way to add to PATH [\\#32](https://github.com/shelljs/shelljs/issues/32)","lastModifiedDate":"2023-09-05"},{"lineNumber":616,"author":{"gitId":"shashahchk"},"content":"- `mv` fails on block, character, fifo [\\#25](https://github.com/shelljs/shelljs/issues/25)","lastModifiedDate":"2023-09-05"},{"lineNumber":617,"author":{"gitId":"shashahchk"},"content":"- ls -l [\\#22](https://github.com/shelljs/shelljs/issues/22)","lastModifiedDate":"2023-09-05"},{"lineNumber":618,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":619,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":620,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":621,"author":{"gitId":"shashahchk"},"content":"- feat\\(set\\): add new set\\(\\) command [\\#329](https://github.com/shelljs/shelljs/pull/329) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":622,"author":{"gitId":"shashahchk"},"content":"- Fix symlinking on Windows [\\#322](https://github.com/shelljs/shelljs/pull/322) ([BYK](https://github.com/BYK))","lastModifiedDate":"2023-09-05"},{"lineNumber":623,"author":{"gitId":"shashahchk"},"content":"- Rewrite .gitignore to be more comprehensive [\\#321](https://github.com/shelljs/shelljs/pull/321) ([BYK](https://github.com/BYK))","lastModifiedDate":"2023-09-05"},{"lineNumber":624,"author":{"gitId":"shashahchk"},"content":"- chore\\(gitter/travis\\): add gitter webhook to travis [\\#313](https://github.com/shelljs/shelljs/pull/313) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":625,"author":{"gitId":"shashahchk"},"content":"- chore\\(LGTM\\): add LGTM config files [\\#312](https://github.com/shelljs/shelljs/pull/312) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":626,"author":{"gitId":"shashahchk"},"content":"- feat\\(ls\\): add -d flag to ls\\(\\) [\\#311](https://github.com/shelljs/shelljs/pull/311) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":627,"author":{"gitId":"shashahchk"},"content":"- fix\\(gen-docs\\): fix issue where docs are generated wrong [\\#310](https://github.com/shelljs/shelljs/pull/310) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":628,"author":{"gitId":"shashahchk"},"content":"- chore\\(package\\): remove v0.8 from engines list [\\#308](https://github.com/shelljs/shelljs/pull/308) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":629,"author":{"gitId":"shashahchk"},"content":"- travis: Mark as not using `sudo` and do not test 0.11 [\\#307](https://github.com/shelljs/shelljs/pull/307) ([TimothyGu](https://github.com/TimothyGu))","lastModifiedDate":"2023-09-05"},{"lineNumber":630,"author":{"gitId":"shashahchk"},"content":"- fix: jshint works on Windows [\\#295](https://github.com/shelljs/shelljs/pull/295) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":631,"author":{"gitId":"shashahchk"},"content":"- feat: add tilde expansion to expand\\(\\) [\\#293](https://github.com/shelljs/shelljs/pull/293) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":632,"author":{"gitId":"shashahchk"},"content":"- style: make docs more consistent [\\#292](https://github.com/shelljs/shelljs/pull/292) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":633,"author":{"gitId":"shashahchk"},"content":"- update `exec` docs to match implemented behaviour [\\#289](https://github.com/shelljs/shelljs/pull/289) ([vise890](https://github.com/vise890))","lastModifiedDate":"2023-09-05"},{"lineNumber":634,"author":{"gitId":"shashahchk"},"content":"- chore: update github URL in package.json [\\#288](https://github.com/shelljs/shelljs/pull/288) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":635,"author":{"gitId":"shashahchk"},"content":"- docs\\(spelling\\): fix typo in source comment [\\#285](https://github.com/shelljs/shelljs/pull/285) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":636,"author":{"gitId":"shashahchk"},"content":"- chore\\(travis\\): add OS X to Travis CI [\\#283](https://github.com/shelljs/shelljs/pull/283) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":637,"author":{"gitId":"shashahchk"},"content":"- Don\u0027t do `console.log.apply\\(this, ...\\)`. [\\#274](https://github.com/shelljs/shelljs/pull/274) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":638,"author":{"gitId":"shashahchk"},"content":"- Implementing cd\\(\u0027-\u0027\\) to behave like Bash\u0027s \"cd -\" [\\#273](https://github.com/shelljs/shelljs/pull/273) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":639,"author":{"gitId":"shashahchk"},"content":"- Fix cp to match unix behavior [\\#271](https://github.com/shelljs/shelljs/pull/271) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":640,"author":{"gitId":"shashahchk"},"content":"- Commands that have multiple errors now produce cleaner log output [\\#268](https://github.com/shelljs/shelljs/pull/268) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":641,"author":{"gitId":"shashahchk"},"content":"- Support exit code in shjs. [\\#252](https://github.com/shelljs/shelljs/pull/252) ([bryce-gibson](https://github.com/bryce-gibson))","lastModifiedDate":"2023-09-05"},{"lineNumber":642,"author":{"gitId":"shashahchk"},"content":"- add touch\\(1\\) [\\#249](https://github.com/shelljs/shelljs/pull/249) ([blockloop](https://github.com/blockloop))","lastModifiedDate":"2023-09-05"},{"lineNumber":643,"author":{"gitId":"shashahchk"},"content":"- Fix `os.tmpdir` bug [\\#240](https://github.com/shelljs/shelljs/pull/240) ([BYK](https://github.com/BYK))","lastModifiedDate":"2023-09-05"},{"lineNumber":644,"author":{"gitId":"shashahchk"},"content":"- Make sure Which\\(\\) on Windows platform always return the command with … [\\#239](https://github.com/shelljs/shelljs/pull/239) ([TingluoHuang](https://github.com/TingluoHuang))","lastModifiedDate":"2023-09-05"},{"lineNumber":645,"author":{"gitId":"shashahchk"},"content":"- Add target node.js \\(iojs v1, v2, v3\\) [\\#230](https://github.com/shelljs/shelljs/pull/230) ([sanemat](https://github.com/sanemat))","lastModifiedDate":"2023-09-05"},{"lineNumber":646,"author":{"gitId":"shashahchk"},"content":"- feat-multisymbolic + Support for directory entry \\(capital X in chmod terms\\) [\\#228](https://github.com/shelljs/shelljs/pull/228) ([rezonant](https://github.com/rezonant))","lastModifiedDate":"2023-09-05"},{"lineNumber":647,"author":{"gitId":"shashahchk"},"content":"- Fixes an issue with multi-symbolic mode specification \\(ie a-rwx,u+rw\\) [\\#227](https://github.com/shelljs/shelljs/pull/227) ([rezonant](https://github.com/rezonant))","lastModifiedDate":"2023-09-05"},{"lineNumber":648,"author":{"gitId":"shashahchk"},"content":"- Memoized the result of target invocation [\\#216](https://github.com/shelljs/shelljs/pull/216) ([rizowski](https://github.com/rizowski))","lastModifiedDate":"2023-09-05"},{"lineNumber":649,"author":{"gitId":"shashahchk"},"content":"- remove empty for loop and leaked i var [\\#166](https://github.com/shelljs/shelljs/pull/166) ([ratbeard](https://github.com/ratbeard))","lastModifiedDate":"2023-09-05"},{"lineNumber":650,"author":{"gitId":"shashahchk"},"content":"- Wrap script name in double quotes [\\#135](https://github.com/shelljs/shelljs/pull/135) ([ndelitski](https://github.com/ndelitski))","lastModifiedDate":"2023-09-05"},{"lineNumber":651,"author":{"gitId":"shashahchk"},"content":"- Fixed coffeescript syntax in top example [\\#99](https://github.com/shelljs/shelljs/pull/99) ([maxnordlund](https://github.com/maxnordlund))","lastModifiedDate":"2023-09-05"},{"lineNumber":652,"author":{"gitId":"shashahchk"},"content":"- fix\\(touch\\): enhance parseOptions and fix touch\u0027s -r flag [\\#341](https://github.com/shelljs/shelljs/pull/341) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":653,"author":{"gitId":"shashahchk"},"content":"- chore\\(.npmignore\\): update npmignore [\\#339](https://github.com/shelljs/shelljs/pull/339) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":654,"author":{"gitId":"shashahchk"},"content":"- Release v0.6.0 [\\#338](https://github.com/shelljs/shelljs/pull/338) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":655,"author":{"gitId":"shashahchk"},"content":"- docs\\(README\\): remove coffeescript from README [\\#337](https://github.com/shelljs/shelljs/pull/337) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":656,"author":{"gitId":"shashahchk"},"content":"- fix\\(cp\\): add -n option, make -f default behavior [\\#336](https://github.com/shelljs/shelljs/pull/336) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":657,"author":{"gitId":"shashahchk"},"content":"- feat\\(exec\\): allow all exec options to pass through [\\#335](https://github.com/shelljs/shelljs/pull/335) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":658,"author":{"gitId":"shashahchk"},"content":"- fix\\(mv\\): add -n option, make -f default behavior [\\#328](https://github.com/shelljs/shelljs/pull/328) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":659,"author":{"gitId":"shashahchk"},"content":"- fix\\(cat\\): make behavior more like unix [\\#326](https://github.com/shelljs/shelljs/pull/326) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":660,"author":{"gitId":"shashahchk"},"content":"- feat\\(ls\\): add -l  option [\\#324](https://github.com/shelljs/shelljs/pull/324) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":661,"author":{"gitId":"shashahchk"},"content":"- style\\(test/which\\): make test/which.js conform to the style guidelines [\\#320](https://github.com/shelljs/shelljs/pull/320) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":662,"author":{"gitId":"shashahchk"},"content":"- chore\\(appveyor\\): add badge [\\#316](https://github.com/shelljs/shelljs/pull/316) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":663,"author":{"gitId":"shashahchk"},"content":"- fix\\(windows\\): fix shjs commands for windows [\\#315](https://github.com/shelljs/shelljs/pull/315) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":664,"author":{"gitId":"shashahchk"},"content":"- feat\\(sed\\): support multiple file names [\\#314](https://github.com/shelljs/shelljs/pull/314) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":665,"author":{"gitId":"shashahchk"},"content":"- feat\\(cd\\): cd\\(\\) \\(no args\\) changes to home directory [\\#306](https://github.com/shelljs/shelljs/pull/306) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":666,"author":{"gitId":"shashahchk"},"content":"- test\\(shjs\\): add tests for shjs [\\#304](https://github.com/shelljs/shelljs/pull/304) ([ariporad](https://github.com/ariporad))","lastModifiedDate":"2023-09-05"},{"lineNumber":667,"author":{"gitId":"shashahchk"},"content":"- fix: regexes are more consistent with sed and grep [\\#303](https://github.com/shelljs/shelljs/pull/303) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":668,"author":{"gitId":"shashahchk"},"content":"- Add appveyor.yml config file [\\#299](https://github.com/shelljs/shelljs/pull/299) ([nfischer](https://github.com/nfischer))","lastModifiedDate":"2023-09-05"},{"lineNumber":669,"author":{"gitId":"shashahchk"},"content":"- Fix tests on Windows [\\#297](https://github.com/shelljs/shelljs/pull/297) ([BYK](https://github.com/BYK))","lastModifiedDate":"2023-09-05"},{"lineNumber":670,"author":{"gitId":"shashahchk"},"content":"- Search PATHEXT instead of 3 hardcoded values [\\#290](https://github.com/shelljs/shelljs/pull/290) ([isiahmeadows](https://github.com/isiahmeadows))","lastModifiedDate":"2023-09-05"},{"lineNumber":671,"author":{"gitId":"shashahchk"},"content":"- Fix relative symlinks [\\#282](https://github.com/shelljs/shelljs/pull/282) ([freitagbr](https://github.com/freitagbr))","lastModifiedDate":"2023-09-05"},{"lineNumber":672,"author":{"gitId":"shashahchk"},"content":"- Make to and toEnd chainable [\\#276](https://github.com/shelljs/shelljs/pull/276) ([TimothyGu](https://github.com/TimothyGu))","lastModifiedDate":"2023-09-05"},{"lineNumber":673,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":674,"author":{"gitId":"shashahchk"},"content":"## [v0.5.3](https://github.com/shelljs/shelljs/tree/v0.5.3) (2015-08-11)","lastModifiedDate":"2023-09-05"},{"lineNumber":675,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.2...v0.5.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":676,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":677,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":678,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":679,"author":{"gitId":"shashahchk"},"content":"- Manually closing streams [\\#222](https://github.com/shelljs/shelljs/pull/222) ([JulianLaval](https://github.com/JulianLaval))","lastModifiedDate":"2023-09-05"},{"lineNumber":680,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":681,"author":{"gitId":"shashahchk"},"content":"## [v0.5.2](https://github.com/shelljs/shelljs/tree/v0.5.2) (2015-08-10)","lastModifiedDate":"2023-09-05"},{"lineNumber":682,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.1...v0.5.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":683,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":684,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":685,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":686,"author":{"gitId":"shashahchk"},"content":"- Cannot run shell.exec [\\#217](https://github.com/shelljs/shelljs/issues/217)","lastModifiedDate":"2023-09-05"},{"lineNumber":687,"author":{"gitId":"shashahchk"},"content":"- write after end: internal error [\\#206](https://github.com/shelljs/shelljs/issues/206)","lastModifiedDate":"2023-09-05"},{"lineNumber":688,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":689,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":690,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":691,"author":{"gitId":"shashahchk"},"content":"- Update README.md [\\#221](https://github.com/shelljs/shelljs/pull/221) ([giosh94mhz](https://github.com/giosh94mhz))","lastModifiedDate":"2023-09-05"},{"lineNumber":692,"author":{"gitId":"shashahchk"},"content":"- prevent internal error: write after end [\\#214](https://github.com/shelljs/shelljs/pull/214) ([charlierudolph](https://github.com/charlierudolph))","lastModifiedDate":"2023-09-05"},{"lineNumber":693,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":694,"author":{"gitId":"shashahchk"},"content":"## [v0.5.1](https://github.com/shelljs/shelljs/tree/v0.5.1) (2015-06-05)","lastModifiedDate":"2023-09-05"},{"lineNumber":695,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.5.0...v0.5.1)","lastModifiedDate":"2023-09-05"},{"lineNumber":696,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":697,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":698,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":699,"author":{"gitId":"shashahchk"},"content":"- cd into home directory [\\#9](https://github.com/shelljs/shelljs/issues/9)","lastModifiedDate":"2023-09-05"},{"lineNumber":700,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":701,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":702,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":703,"author":{"gitId":"shashahchk"},"content":"- Fix issue \\#49: Retry rmdirSync on Windows for up to 1 second if files still exist. [\\#179](https://github.com/shelljs/shelljs/pull/179) ([andreialecu](https://github.com/andreialecu))","lastModifiedDate":"2023-09-05"},{"lineNumber":704,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":705,"author":{"gitId":"shashahchk"},"content":"## [v0.5.0](https://github.com/shelljs/shelljs/tree/v0.5.0) (2015-05-19)","lastModifiedDate":"2023-09-05"},{"lineNumber":706,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.3.0...v0.5.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":707,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":708,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":709,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":710,"author":{"gitId":"shashahchk"},"content":"- Enter text to prompt [\\#203](https://github.com/shelljs/shelljs/issues/203)","lastModifiedDate":"2023-09-05"},{"lineNumber":711,"author":{"gitId":"shashahchk"},"content":"- Find which shell is being used [\\#195](https://github.com/shelljs/shelljs/issues/195)","lastModifiedDate":"2023-09-05"},{"lineNumber":712,"author":{"gitId":"shashahchk"},"content":"- Pass command line params to the make tool [\\#188](https://github.com/shelljs/shelljs/issues/188)","lastModifiedDate":"2023-09-05"},{"lineNumber":713,"author":{"gitId":"shashahchk"},"content":"- Is it possible to call exec with a command containing new lines ? [\\#177](https://github.com/shelljs/shelljs/issues/177)","lastModifiedDate":"2023-09-05"},{"lineNumber":714,"author":{"gitId":"shashahchk"},"content":"- The installation would break on Windows 7 [\\#161](https://github.com/shelljs/shelljs/issues/161)","lastModifiedDate":"2023-09-05"},{"lineNumber":715,"author":{"gitId":"shashahchk"},"content":"- Q.ninvoke\\(\\) returns undefined [\\#153](https://github.com/shelljs/shelljs/issues/153)","lastModifiedDate":"2023-09-05"},{"lineNumber":716,"author":{"gitId":"shashahchk"},"content":"- installed shelljs on osx but reported error: npm ERR! 404 \u0027%5B-g%5D\u0027 is not in the npm registry. [\\#124](https://github.com/shelljs/shelljs/issues/124)","lastModifiedDate":"2023-09-05"},{"lineNumber":717,"author":{"gitId":"shashahchk"},"content":"- \"ln\" not found \\(OS X\\) [\\#106](https://github.com/shelljs/shelljs/issues/106)","lastModifiedDate":"2023-09-05"},{"lineNumber":718,"author":{"gitId":"shashahchk"},"content":"- Using shelljs in a CLI app. [\\#91](https://github.com/shelljs/shelljs/issues/91)","lastModifiedDate":"2023-09-05"},{"lineNumber":719,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":720,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":721,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":722,"author":{"gitId":"shashahchk"},"content":"- Breaking: Allow -- as args separators \\(fixes \\#188\\) [\\#207](https://github.com/shelljs/shelljs/pull/207) ([nzakas](https://github.com/nzakas))","lastModifiedDate":"2023-09-05"},{"lineNumber":723,"author":{"gitId":"shashahchk"},"content":"- Update .travis.yml [\\#190](https://github.com/shelljs/shelljs/pull/190) ([arturadib](https://github.com/arturadib))","lastModifiedDate":"2023-09-05"},{"lineNumber":724,"author":{"gitId":"shashahchk"},"content":"- Use new child\\_process.execSync instead of busywaiting [\\#189](https://github.com/shelljs/shelljs/pull/189) ([madd512](https://github.com/madd512))","lastModifiedDate":"2023-09-05"},{"lineNumber":725,"author":{"gitId":"shashahchk"},"content":"- Update README.md: explains how to access \"config\" [\\#145](https://github.com/shelljs/shelljs/pull/145) ([kerphi](https://github.com/kerphi))","lastModifiedDate":"2023-09-05"},{"lineNumber":726,"author":{"gitId":"shashahchk"},"content":"- Fix to set state.error before throw the exception [\\#120](https://github.com/shelljs/shelljs/pull/120) ([abdul-martinez](https://github.com/abdul-martinez))","lastModifiedDate":"2023-09-05"},{"lineNumber":727,"author":{"gitId":"shashahchk"},"content":"- Add -l and -s support to grep. [\\#116](https://github.com/shelljs/shelljs/pull/116) ([idearat](https://github.com/idearat))","lastModifiedDate":"2023-09-05"},{"lineNumber":728,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":729,"author":{"gitId":"shashahchk"},"content":"## [v0.3.0](https://github.com/shelljs/shelljs/tree/v0.3.0) (2014-05-08)","lastModifiedDate":"2023-09-05"},{"lineNumber":730,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.6...v0.3.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":731,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":732,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":733,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":734,"author":{"gitId":"shashahchk"},"content":"- grep\\(\\) should fully support globing [\\#118](https://github.com/shelljs/shelljs/issues/118)","lastModifiedDate":"2023-09-05"},{"lineNumber":735,"author":{"gitId":"shashahchk"},"content":"- sed\\(\\) could support replacement function [\\#115](https://github.com/shelljs/shelljs/issues/115)","lastModifiedDate":"2023-09-05"},{"lineNumber":736,"author":{"gitId":"shashahchk"},"content":"- How would you close an exec process that runs indefinitely? [\\#113](https://github.com/shelljs/shelljs/issues/113)","lastModifiedDate":"2023-09-05"},{"lineNumber":737,"author":{"gitId":"shashahchk"},"content":"- listen for intermittent output of a long-running child process [\\#111](https://github.com/shelljs/shelljs/issues/111)","lastModifiedDate":"2023-09-05"},{"lineNumber":738,"author":{"gitId":"shashahchk"},"content":"-  Cannot find module \u0027shelljs\u0027 after installing shelljs with npm [\\#109](https://github.com/shelljs/shelljs/issues/109)","lastModifiedDate":"2023-09-05"},{"lineNumber":739,"author":{"gitId":"shashahchk"},"content":"- Massive CPU usage on exec\\(\\) windows [\\#108](https://github.com/shelljs/shelljs/issues/108)","lastModifiedDate":"2023-09-05"},{"lineNumber":740,"author":{"gitId":"shashahchk"},"content":"- cp skipping dot files? [\\#79](https://github.com/shelljs/shelljs/issues/79)","lastModifiedDate":"2023-09-05"},{"lineNumber":741,"author":{"gitId":"shashahchk"},"content":"- $variables in exec\\(\\) aren\u0027t handled correctly [\\#11](https://github.com/shelljs/shelljs/issues/11)","lastModifiedDate":"2023-09-05"},{"lineNumber":742,"author":{"gitId":"shashahchk"},"content":"- debug flag that prints commands instead of executing [\\#8](https://github.com/shelljs/shelljs/issues/8)","lastModifiedDate":"2023-09-05"},{"lineNumber":743,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":744,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":745,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":746,"author":{"gitId":"shashahchk"},"content":"- grep\\(\\) support for globing, fixes \\#118 [\\#119](https://github.com/shelljs/shelljs/pull/119) ([utensil](https://github.com/utensil))","lastModifiedDate":"2023-09-05"},{"lineNumber":747,"author":{"gitId":"shashahchk"},"content":"- make sed\\(\\) support replacement function, fixes \\#115 [\\#117](https://github.com/shelljs/shelljs/pull/117) ([utensil](https://github.com/utensil))","lastModifiedDate":"2023-09-05"},{"lineNumber":748,"author":{"gitId":"shashahchk"},"content":"- which\\(\\) should only find files, not directories [\\#110](https://github.com/shelljs/shelljs/pull/110) ([panrafal](https://github.com/panrafal))","lastModifiedDate":"2023-09-05"},{"lineNumber":749,"author":{"gitId":"shashahchk"},"content":"- Added the New BSD license to the package.json. [\\#105](https://github.com/shelljs/shelljs/pull/105) ([keskival](https://github.com/keskival))","lastModifiedDate":"2023-09-05"},{"lineNumber":750,"author":{"gitId":"shashahchk"},"content":"- Added win32 support to ln [\\#104](https://github.com/shelljs/shelljs/pull/104) ([jamon](https://github.com/jamon))","lastModifiedDate":"2023-09-05"},{"lineNumber":751,"author":{"gitId":"shashahchk"},"content":"- Fix ln using bad paths when given abspaths. [\\#89](https://github.com/shelljs/shelljs/pull/89) ([Schoonology](https://github.com/Schoonology))","lastModifiedDate":"2023-09-05"},{"lineNumber":752,"author":{"gitId":"shashahchk"},"content":"- Add ln support, including both -s and -f options. [\\#88](https://github.com/shelljs/shelljs/pull/88) ([Schoonology](https://github.com/Schoonology))","lastModifiedDate":"2023-09-05"},{"lineNumber":753,"author":{"gitId":"shashahchk"},"content":"- add support for symlinking \\(junctions\\) on win32 [\\#87](https://github.com/shelljs/shelljs/pull/87) ([jamon](https://github.com/jamon))","lastModifiedDate":"2023-09-05"},{"lineNumber":754,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":755,"author":{"gitId":"shashahchk"},"content":"## [v0.2.6](https://github.com/shelljs/shelljs/tree/v0.2.6) (2013-09-22)","lastModifiedDate":"2023-09-05"},{"lineNumber":756,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.5...v0.2.6)","lastModifiedDate":"2023-09-05"},{"lineNumber":757,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":758,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":759,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":760,"author":{"gitId":"shashahchk"},"content":"- Versions 0.2.4 and 0.2.3 keep throwing strange errors [\\#82](https://github.com/shelljs/shelljs/issues/82)","lastModifiedDate":"2023-09-05"},{"lineNumber":761,"author":{"gitId":"shashahchk"},"content":"- Add global pollution tests [\\#33](https://github.com/shelljs/shelljs/issues/33)","lastModifiedDate":"2023-09-05"},{"lineNumber":762,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":763,"author":{"gitId":"shashahchk"},"content":"## [v0.2.5](https://github.com/shelljs/shelljs/tree/v0.2.5) (2013-09-11)","lastModifiedDate":"2023-09-05"},{"lineNumber":764,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.4...v0.2.5)","lastModifiedDate":"2023-09-05"},{"lineNumber":765,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":766,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":767,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":768,"author":{"gitId":"shashahchk"},"content":"- shelljs.exec stalls on Red Hat when script is invoked with \u0027sudo -u username\u0027 [\\#72](https://github.com/shelljs/shelljs/issues/72)","lastModifiedDate":"2023-09-05"},{"lineNumber":769,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":770,"author":{"gitId":"shashahchk"},"content":"## [v0.2.4](https://github.com/shelljs/shelljs/tree/v0.2.4) (2013-09-11)","lastModifiedDate":"2023-09-05"},{"lineNumber":771,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.3...v0.2.4)","lastModifiedDate":"2023-09-05"},{"lineNumber":772,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":773,"author":{"gitId":"shashahchk"},"content":"## [v0.2.3](https://github.com/shelljs/shelljs/tree/v0.2.3) (2013-09-09)","lastModifiedDate":"2023-09-05"},{"lineNumber":774,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.2.2...v0.2.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":775,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":776,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":777,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":778,"author":{"gitId":"shashahchk"},"content":"- Make shell.exec\\(\\) treat process error return codes as shelljs errors [\\#80](https://github.com/shelljs/shelljs/pull/80) ([nilsbunger](https://github.com/nilsbunger))","lastModifiedDate":"2023-09-05"},{"lineNumber":779,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":780,"author":{"gitId":"shashahchk"},"content":"## [v0.2.2](https://github.com/shelljs/shelljs/tree/v0.2.2) (2013-09-02)","lastModifiedDate":"2023-09-05"},{"lineNumber":781,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.4...v0.2.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":782,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":783,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":784,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":785,"author":{"gitId":"shashahchk"},"content":"- which and node\\_modules [\\#63](https://github.com/shelljs/shelljs/issues/63)","lastModifiedDate":"2023-09-05"},{"lineNumber":786,"author":{"gitId":"shashahchk"},"content":"- cannot install with nodejs 0.10.2 [\\#57](https://github.com/shelljs/shelljs/issues/57)","lastModifiedDate":"2023-09-05"},{"lineNumber":787,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":788,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":789,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":790,"author":{"gitId":"shashahchk"},"content":"- Addition of a toEnd\\(\\) function modeled after the Unix \\\u003e\\\u003e pipe. [\\#78](https://github.com/shelljs/shelljs/pull/78) ([a10y](https://github.com/a10y))","lastModifiedDate":"2023-09-05"},{"lineNumber":791,"author":{"gitId":"shashahchk"},"content":"- Added appendTo\\(\\) function to imitate \u0027\\\u003e\\\u003e\u0027 redirect-and-append pipe. [\\#75](https://github.com/shelljs/shelljs/pull/75) ([a10y](https://github.com/a10y))","lastModifiedDate":"2023-09-05"},{"lineNumber":792,"author":{"gitId":"shashahchk"},"content":"- Fix a small typo in README.md [\\#71](https://github.com/shelljs/shelljs/pull/71) ([asmblah](https://github.com/asmblah))","lastModifiedDate":"2023-09-05"},{"lineNumber":793,"author":{"gitId":"shashahchk"},"content":"- adding an `.npmignore` file [\\#70](https://github.com/shelljs/shelljs/pull/70) ([stephenmathieson](https://github.com/stephenmathieson))","lastModifiedDate":"2023-09-05"},{"lineNumber":794,"author":{"gitId":"shashahchk"},"content":"- tempdir: use `os.tmpDir` when possible [\\#67](https://github.com/shelljs/shelljs/pull/67) ([stephenmathieson](https://github.com/stephenmathieson))","lastModifiedDate":"2023-09-05"},{"lineNumber":795,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":796,"author":{"gitId":"shashahchk"},"content":"## [v0.1.4](https://github.com/shelljs/shelljs/tree/v0.1.4) (2013-05-10)","lastModifiedDate":"2023-09-05"},{"lineNumber":797,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.3...v0.1.4)","lastModifiedDate":"2023-09-05"},{"lineNumber":798,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":799,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":800,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":801,"author":{"gitId":"shashahchk"},"content":"- removing extra fs calls [\\#62](https://github.com/shelljs/shelljs/pull/62) ([stephenmathieson](https://github.com/stephenmathieson))","lastModifiedDate":"2023-09-05"},{"lineNumber":802,"author":{"gitId":"shashahchk"},"content":"- moving \\_jshint\\_ to a development dependency [\\#61](https://github.com/shelljs/shelljs/pull/61) ([stephenmathieson](https://github.com/stephenmathieson))","lastModifiedDate":"2023-09-05"},{"lineNumber":803,"author":{"gitId":"shashahchk"},"content":"- Make the maximum buffersize 20 MB. [\\#59](https://github.com/shelljs/shelljs/pull/59) ([waddlesplash](https://github.com/waddlesplash))","lastModifiedDate":"2023-09-05"},{"lineNumber":804,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":805,"author":{"gitId":"shashahchk"},"content":"## [v0.1.3](https://github.com/shelljs/shelljs/tree/v0.1.3) (2013-04-21)","lastModifiedDate":"2023-09-05"},{"lineNumber":806,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.2...v0.1.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":807,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":808,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":809,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":810,"author":{"gitId":"shashahchk"},"content":"- test\\(\u0027-L\u0027, badlink\\) should return true [\\#56](https://github.com/shelljs/shelljs/pull/56) ([lge88](https://github.com/lge88))","lastModifiedDate":"2023-09-05"},{"lineNumber":811,"author":{"gitId":"shashahchk"},"content":"- exec options now allows `silent:true` with callback. [\\#54](https://github.com/shelljs/shelljs/pull/54) ([iapain](https://github.com/iapain))","lastModifiedDate":"2023-09-05"},{"lineNumber":812,"author":{"gitId":"shashahchk"},"content":"- Add Zepto to README [\\#53](https://github.com/shelljs/shelljs/pull/53) ([madrobby](https://github.com/madrobby))","lastModifiedDate":"2023-09-05"},{"lineNumber":813,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":814,"author":{"gitId":"shashahchk"},"content":"## [v0.1.2](https://github.com/shelljs/shelljs/tree/v0.1.2) (2013-01-08)","lastModifiedDate":"2023-09-05"},{"lineNumber":815,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.1...v0.1.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":816,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":817,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":818,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":819,"author":{"gitId":"shashahchk"},"content":"- pushd/popd [\\#24](https://github.com/shelljs/shelljs/issues/24)","lastModifiedDate":"2023-09-05"},{"lineNumber":820,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":821,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":822,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":823,"author":{"gitId":"shashahchk"},"content":"- Implemented chmod command.  Github issue 35 [\\#48](https://github.com/shelljs/shelljs/pull/48) ([brandonramirez](https://github.com/brandonramirez))","lastModifiedDate":"2023-09-05"},{"lineNumber":824,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":825,"author":{"gitId":"shashahchk"},"content":"## [v0.1.1](https://github.com/shelljs/shelljs/tree/v0.1.1) (2013-01-01)","lastModifiedDate":"2023-09-05"},{"lineNumber":826,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.1.0...v0.1.1)","lastModifiedDate":"2023-09-05"},{"lineNumber":827,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":828,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":829,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":830,"author":{"gitId":"shashahchk"},"content":"- Work in progress: pushd/popd/dirs [\\#47](https://github.com/shelljs/shelljs/pull/47) ([mstade](https://github.com/mstade))","lastModifiedDate":"2023-09-05"},{"lineNumber":831,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":832,"author":{"gitId":"shashahchk"},"content":"## [v0.1.0](https://github.com/shelljs/shelljs/tree/v0.1.0) (2012-12-26)","lastModifiedDate":"2023-09-05"},{"lineNumber":833,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.9...v0.1.0)","lastModifiedDate":"2023-09-05"},{"lineNumber":834,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":835,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":836,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":837,"author":{"gitId":"shashahchk"},"content":"- test\\(\\) for binary file? [\\#45](https://github.com/shelljs/shelljs/issues/45)","lastModifiedDate":"2023-09-05"},{"lineNumber":838,"author":{"gitId":"shashahchk"},"content":"- Inconsistent behaviour of cp command with directories. [\\#44](https://github.com/shelljs/shelljs/issues/44)","lastModifiedDate":"2023-09-05"},{"lineNumber":839,"author":{"gitId":"shashahchk"},"content":"- Executing SSH with ShellJs [\\#43](https://github.com/shelljs/shelljs/issues/43)","lastModifiedDate":"2023-09-05"},{"lineNumber":840,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":841,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":842,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":843,"author":{"gitId":"shashahchk"},"content":"- Fix for \\#44 [\\#46](https://github.com/shelljs/shelljs/pull/46) ([mstade](https://github.com/mstade))","lastModifiedDate":"2023-09-05"},{"lineNumber":844,"author":{"gitId":"shashahchk"},"content":"- Fix single/double quotes in exec [\\#42](https://github.com/shelljs/shelljs/pull/42) ([danielepolencic](https://github.com/danielepolencic))","lastModifiedDate":"2023-09-05"},{"lineNumber":845,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":846,"author":{"gitId":"shashahchk"},"content":"## [v0.0.9](https://github.com/shelljs/shelljs/tree/v0.0.9) (2012-12-01)","lastModifiedDate":"2023-09-05"},{"lineNumber":847,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.8...v0.0.9)","lastModifiedDate":"2023-09-05"},{"lineNumber":848,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":849,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":850,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":851,"author":{"gitId":"shashahchk"},"content":"- silent output [\\#40](https://github.com/shelljs/shelljs/issues/40)","lastModifiedDate":"2023-09-05"},{"lineNumber":852,"author":{"gitId":"shashahchk"},"content":"- asynchronous exec [\\#34](https://github.com/shelljs/shelljs/issues/34)","lastModifiedDate":"2023-09-05"},{"lineNumber":853,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":854,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":855,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":856,"author":{"gitId":"shashahchk"},"content":"- Passed process arguments to executable script [\\#36](https://github.com/shelljs/shelljs/pull/36) ([Zanisimo](https://github.com/Zanisimo))","lastModifiedDate":"2023-09-05"},{"lineNumber":857,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":858,"author":{"gitId":"shashahchk"},"content":"## [v0.0.8](https://github.com/shelljs/shelljs/tree/v0.0.8) (2012-10-11)","lastModifiedDate":"2023-09-05"},{"lineNumber":859,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.7...v0.0.8)","lastModifiedDate":"2023-09-05"},{"lineNumber":860,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":861,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":862,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":863,"author":{"gitId":"shashahchk"},"content":"- exec with callback should automatically be async [\\#31](https://github.com/shelljs/shelljs/issues/31)","lastModifiedDate":"2023-09-05"},{"lineNumber":864,"author":{"gitId":"shashahchk"},"content":"- Exporting variables. [\\#30](https://github.com/shelljs/shelljs/issues/30)","lastModifiedDate":"2023-09-05"},{"lineNumber":865,"author":{"gitId":"shashahchk"},"content":"- Detecting shelljs/node [\\#27](https://github.com/shelljs/shelljs/issues/27)","lastModifiedDate":"2023-09-05"},{"lineNumber":866,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":867,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":868,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":869,"author":{"gitId":"shashahchk"},"content":"- fix: global leak \u0027stats\u0027 [\\#29](https://github.com/shelljs/shelljs/pull/29) ([ando-takahiro](https://github.com/ando-takahiro))","lastModifiedDate":"2023-09-05"},{"lineNumber":870,"author":{"gitId":"shashahchk"},"content":"- -a includes . and ..; -A does not [\\#28](https://github.com/shelljs/shelljs/pull/28) ([aeosynth](https://github.com/aeosynth))","lastModifiedDate":"2023-09-05"},{"lineNumber":871,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":872,"author":{"gitId":"shashahchk"},"content":"## [v0.0.7](https://github.com/shelljs/shelljs/tree/v0.0.7) (2012-09-23)","lastModifiedDate":"2023-09-05"},{"lineNumber":873,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6...v0.0.7)","lastModifiedDate":"2023-09-05"},{"lineNumber":874,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":875,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":876,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":877,"author":{"gitId":"shashahchk"},"content":"- gh-pages: clicking \u0027fork me\u0027 just reloads the page [\\#26](https://github.com/shelljs/shelljs/issues/26)","lastModifiedDate":"2023-09-05"},{"lineNumber":878,"author":{"gitId":"shashahchk"},"content":"- Not declared local var implies possible memory leak [\\#21](https://github.com/shelljs/shelljs/issues/21)","lastModifiedDate":"2023-09-05"},{"lineNumber":879,"author":{"gitId":"shashahchk"},"content":"- Cannot echo a string that starts with - [\\#20](https://github.com/shelljs/shelljs/issues/20)","lastModifiedDate":"2023-09-05"},{"lineNumber":880,"author":{"gitId":"shashahchk"},"content":"- Unexpected cp behaviour with directories [\\#15](https://github.com/shelljs/shelljs/issues/15)","lastModifiedDate":"2023-09-05"},{"lineNumber":881,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":882,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":883,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":884,"author":{"gitId":"shashahchk"},"content":"- add primaries to \\_test [\\#23](https://github.com/shelljs/shelljs/pull/23) ([aeosynth](https://github.com/aeosynth))","lastModifiedDate":"2023-09-05"},{"lineNumber":885,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":886,"author":{"gitId":"shashahchk"},"content":"## [v0.0.6](https://github.com/shelljs/shelljs/tree/v0.0.6) (2012-08-07)","lastModifiedDate":"2023-09-05"},{"lineNumber":887,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6pre2...v0.0.6)","lastModifiedDate":"2023-09-05"},{"lineNumber":888,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":889,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":890,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":891,"author":{"gitId":"shashahchk"},"content":"- Fixed a global variable leak [\\#16](https://github.com/shelljs/shelljs/pull/16) ([dallonf](https://github.com/dallonf))","lastModifiedDate":"2023-09-05"},{"lineNumber":892,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":893,"author":{"gitId":"shashahchk"},"content":"## [v0.0.6pre2](https://github.com/shelljs/shelljs/tree/v0.0.6pre2) (2012-05-25)","lastModifiedDate":"2023-09-05"},{"lineNumber":894,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.6pre1...v0.0.6pre2)","lastModifiedDate":"2023-09-05"},{"lineNumber":895,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":896,"author":{"gitId":"shashahchk"},"content":"## [v0.0.6pre1](https://github.com/shelljs/shelljs/tree/v0.0.6pre1) (2012-05-25)","lastModifiedDate":"2023-09-05"},{"lineNumber":897,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5...v0.0.6pre1)","lastModifiedDate":"2023-09-05"},{"lineNumber":898,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":899,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5](https://github.com/shelljs/shelljs/tree/v0.0.5) (2012-05-24)","lastModifiedDate":"2023-09-05"},{"lineNumber":900,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre4...v0.0.5)","lastModifiedDate":"2023-09-05"},{"lineNumber":901,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":902,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":903,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":904,"author":{"gitId":"shashahchk"},"content":"- global.key assigned value \u0027async\u0027 as a result of shell.exec\\(...\\) [\\#12](https://github.com/shelljs/shelljs/issues/12)","lastModifiedDate":"2023-09-05"},{"lineNumber":905,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":906,"author":{"gitId":"shashahchk"},"content":"**Merged pull requests:**","lastModifiedDate":"2023-09-05"},{"lineNumber":907,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":908,"author":{"gitId":"shashahchk"},"content":"- Add support for grep option -v. [\\#13](https://github.com/shelljs/shelljs/pull/13) ([kkujala](https://github.com/kkujala))","lastModifiedDate":"2023-09-05"},{"lineNumber":909,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":910,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5pre4](https://github.com/shelljs/shelljs/tree/v0.0.5pre4) (2012-03-27)","lastModifiedDate":"2023-09-05"},{"lineNumber":911,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre3...v0.0.5pre4)","lastModifiedDate":"2023-09-05"},{"lineNumber":912,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":913,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5pre3](https://github.com/shelljs/shelljs/tree/v0.0.5pre3) (2012-03-27)","lastModifiedDate":"2023-09-05"},{"lineNumber":914,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre2...v0.0.5pre3)","lastModifiedDate":"2023-09-05"},{"lineNumber":915,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":916,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5pre2](https://github.com/shelljs/shelljs/tree/v0.0.5pre2) (2012-03-26)","lastModifiedDate":"2023-09-05"},{"lineNumber":917,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.5pre1...v0.0.5pre2)","lastModifiedDate":"2023-09-05"},{"lineNumber":918,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":919,"author":{"gitId":"shashahchk"},"content":"## [v0.0.5pre1](https://github.com/shelljs/shelljs/tree/v0.0.5pre1) (2012-03-26)","lastModifiedDate":"2023-09-05"},{"lineNumber":920,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.4...v0.0.5pre1)","lastModifiedDate":"2023-09-05"},{"lineNumber":921,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":922,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":923,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":924,"author":{"gitId":"shashahchk"},"content":"- rm\\(\\) does not respect read/write modes [\\#6](https://github.com/shelljs/shelljs/issues/6)","lastModifiedDate":"2023-09-05"},{"lineNumber":925,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":926,"author":{"gitId":"shashahchk"},"content":"## [v0.0.4](https://github.com/shelljs/shelljs/tree/v0.0.4) (2012-03-22)","lastModifiedDate":"2023-09-05"},{"lineNumber":927,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.3...v0.0.4)","lastModifiedDate":"2023-09-05"},{"lineNumber":928,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":929,"author":{"gitId":"shashahchk"},"content":"**Closed issues:**","lastModifiedDate":"2023-09-05"},{"lineNumber":930,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":931,"author":{"gitId":"shashahchk"},"content":"- \"For convenient iteration via `for in`, ...\"? [\\#4](https://github.com/shelljs/shelljs/issues/4)","lastModifiedDate":"2023-09-05"},{"lineNumber":932,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":933,"author":{"gitId":"shashahchk"},"content":"## [v0.0.3](https://github.com/shelljs/shelljs/tree/v0.0.3) (2012-03-21)","lastModifiedDate":"2023-09-05"},{"lineNumber":934,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.2...v0.0.3)","lastModifiedDate":"2023-09-05"},{"lineNumber":935,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":936,"author":{"gitId":"shashahchk"},"content":"## [v0.0.2](https://github.com/shelljs/shelljs/tree/v0.0.2) (2012-03-15)","lastModifiedDate":"2023-09-05"},{"lineNumber":937,"author":{"gitId":"shashahchk"},"content":"[Full Changelog](https://github.com/shelljs/shelljs/compare/v0.0.2pre1...v0.0.2)","lastModifiedDate":"2023-09-05"},{"lineNumber":938,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":939,"author":{"gitId":"shashahchk"},"content":"## [v0.0.2pre1](https://github.com/shelljs/shelljs/tree/v0.0.2pre1) (2012-03-03)","lastModifiedDate":"2023-09-05"},{"lineNumber":940,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":941,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":942,"author":{"gitId":"shashahchk"},"content":"\\* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":942}},{"path":"node_modules/shelljs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# ShellJS - Unix shell commands for Node.js","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![Travis](https://img.shields.io/travis/shelljs/shelljs/master.svg?style\u003dflat-square\u0026label\u003dunix)](https://travis-ci.org/shelljs/shelljs)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![AppVeyor](https://img.shields.io/appveyor/ci/shelljs/shelljs/master.svg?style\u003dflat-square\u0026label\u003dwindows)](https://ci.appveyor.com/project/shelljs/shelljs/branch/master)","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![Codecov](https://img.shields.io/codecov/c/github/shelljs/shelljs/master.svg?style\u003dflat-square\u0026label\u003dcoverage)](https://codecov.io/gh/shelljs/shelljs)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![npm version](https://img.shields.io/npm/v/shelljs.svg?style\u003dflat-square)](https://www.npmjs.com/package/shelljs)","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[![npm downloads](https://img.shields.io/npm/dm/shelljs.svg?style\u003dflat-square)](https://www.npmjs.com/package/shelljs)","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"ShellJS is a portable **(Windows/Linux/OS X)** implementation of Unix shell","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"commands on top of the Node.js API. You can use it to eliminate your shell","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"script\u0027s dependency on Unix while still keeping its familiar and powerful","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"commands. You can also install it globally so you can run it from outside Node","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"projects - say goodbye to those gnarly Bash scripts!","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"ShellJS is proudly tested on every node release since `v4`!","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"The project is [unit-tested](http://travis-ci.org/shelljs/shelljs) and battle-tested in projects like:","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"+ [Firebug](http://getfirebug.com/) - Firefox\u0027s infamous debugger","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"+ [JSHint](http://jshint.com) \u0026 [ESLint](http://eslint.org/) - popular JavaScript linters","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"+ [Yeoman](http://yeoman.io/) - Web application stack and development tool","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"+ And [many more](https://npmjs.org/browse/depended/shelljs).","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"If you have feedback, suggestions, or need help, feel free to post in our [issue","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"tracker](https://github.com/shelljs/shelljs/issues).","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"Think ShellJS is cool? Check out some related projects in our [Wiki","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"page](https://github.com/shelljs/shelljs/wiki)!","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"Upgrading from an older version? Check out our [breaking","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"changes](https://github.com/shelljs/shelljs/wiki/Breaking-Changes) page to see","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"what changes to watch out for while upgrading.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"## Command line use","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"If you just want cross platform UNIX commands, checkout our new project","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"[shelljs/shx](https://github.com/shelljs/shx), a utility to expose `shelljs` to","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"the command line.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"For example:","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"$ shx mkdir -p foo","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"$ shx touch foo/bar.txt","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"$ shx rm -rf foo","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"## Plugin API","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"ShellJS now supports third-party plugins! You can learn more about using plugins","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"and writing your own ShellJS commands in [the","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"wiki](https://github.com/shelljs/shelljs/wiki/Using-ShellJS-Plugins).","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"## A quick note about the docs","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"For documentation on all the latest features, check out our","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"[README](https://github.com/shelljs/shelljs). To read docs that are consistent","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"with the latest release, check out [the npm","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"page](https://www.npmjs.com/package/shelljs) or","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"[shelljs.org](http://documentup.com/shelljs/shelljs).","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"## Installing","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"Via npm:","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"```bash","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"$ npm install [-g] shelljs","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"## Examples","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"var shell \u003d require(\u0027shelljs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"if (!shell.which(\u0027git\u0027)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"  shell.echo(\u0027Sorry, this script requires git\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"  shell.exit(1);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"// Copy files to release dir","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"shell.rm(\u0027-rf\u0027, \u0027out/Release\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"shell.cp(\u0027-R\u0027, \u0027stuff/\u0027, \u0027out/Release\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"// Replace macros in each .js file","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"shell.cd(\u0027lib\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"shell.ls(\u0027*.js\u0027).forEach(function (file) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"  shell.sed(\u0027-i\u0027, \u0027BUILD_VERSION\u0027, \u0027v0.1.2\u0027, file);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"  shell.sed(\u0027-i\u0027, /^.*REMOVE_THIS_LINE.*$/, \u0027\u0027, file);","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"  shell.sed(\u0027-i\u0027, /.*REPLACE_LINE_WITH_MACRO.*\\n/, shell.cat(\u0027macro.js\u0027), file);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"shell.cd(\u0027..\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"// Run external tool synchronously","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"if (shell.exec(\u0027git commit -am \"Auto-commit\"\u0027).code !\u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"  shell.echo(\u0027Error: Git commit failed\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"  shell.exit(1);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"## Exclude options","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"If you need to pass a parameter that looks like an option, you can do so like:","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"shell.grep(\u0027--\u0027, \u0027-v\u0027, \u0027path/to/file\u0027); // Search for \"-v\", no grep options","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"shell.cp(\u0027-R\u0027, \u0027-dir\u0027, \u0027outdir\u0027); // If already using an option, you\u0027re done","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"## Global vs. Local","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"We no longer recommend using a global-import for ShellJS (i.e.","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"`require(\u0027shelljs/global\u0027)`). While still supported for convenience, this","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"pollutes the global namespace, and should therefore only be used with caution.","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"Instead, we recommend a local import (standard for npm packages):","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"var shell \u003d require(\u0027shelljs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"shell.echo(\u0027hello world\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"\u003c!-- DO NOT MODIFY BEYOND THIS POINT - IT\u0027S AUTOMATICALLY GENERATED --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"## Command reference","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"All commands run synchronously, unless otherwise stated.","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"All commands accept standard bash globbing characters (`*`, `?`, etc.),","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"compatible with the [node `glob` module](https://github.com/isaacs/node-glob).","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"For less-commonly used commands and features, please check out our [wiki","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"page](https://github.com/shelljs/shelljs/wiki).","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"### cat([options,] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"### cat([options,] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"+ `-n`: number all output lines","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"var str \u003d cat(\u0027file*.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"var str \u003d cat(\u0027file1\u0027, \u0027file2\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"var str \u003d cat([\u0027file1\u0027, \u0027file2\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"Returns a string containing the given file, or a concatenated string","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"containing the files if more than one file is given (a new line character is","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"introduced between each file).","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"### cd([dir])","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"Changes to directory `dir` for the duration of the script. Changes to home","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"directory if no argument is supplied.","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"### chmod([options,] octal_mode || octal_string, file)","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"### chmod([options,] symbolic_mode, file)","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"+ `-v`: output a diagnostic for every file processed","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"+ `-c`: like verbose, but report only when a change is made","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"+ `-R`: change files and directories recursively","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"chmod(755, \u0027/Users/brandon\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"chmod(\u0027755\u0027, \u0027/Users/brandon\u0027); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"chmod(\u0027u+x\u0027, \u0027/Users/brandon\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"chmod(\u0027-R\u0027, \u0027a-w\u0027, \u0027/Users/brandon\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"Alters the permissions of a file or directory by either specifying the","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"absolute permissions in octal form or expressing the changes in symbols.","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"This command tries to mimic the POSIX behavior as much as possible.","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"Notable exceptions:","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"+ In symbolic modes, `a-r` and `-r` are identical.  No consideration is","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"  given to the `umask`.","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"+ There is no \"quiet\" option, since default behavior is to run silent.","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"### cp([options,] source [, source ...], dest)","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"### cp([options,] source_array, dest)","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"+ `-f`: force (default behavior)","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"+ `-n`: no-clobber","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"+ `-u`: only copy if `source` is newer than `dest`","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"+ `-r`, `-R`: recursive","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"+ `-L`: follow symlinks","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"+ `-P`: don\u0027t follow symlinks","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"cp(\u0027file1\u0027, \u0027dir1\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"cp(\u0027-R\u0027, \u0027path/to/dir/\u0027, \u0027~/newCopy/\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"cp(\u0027-Rf\u0027, \u0027/tmp/*\u0027, \u0027/usr/local/*\u0027, \u0027/home/tmp\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"cp(\u0027-Rf\u0027, [\u0027/tmp/*\u0027, \u0027/usr/local/*\u0027], \u0027/home/tmp\u0027); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"Copies files.","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"### pushd([options,] [dir | \u0027-N\u0027 | \u0027+N\u0027])","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"+ `-q`: Supresses output to the console.","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"Arguments:","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"+ `dir`: Sets the current working directory to the top of the stack, then executes the equivalent of `cd dir`.","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"// process.cwd() \u003d\u003d\u003d \u0027/usr\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"pushd(\u0027/etc\u0027); // Returns /etc /usr","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"pushd(\u0027+1\u0027);   // Returns /usr /etc","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"Save the current directory on the top of the directory stack and then `cd` to `dir`. With no arguments, `pushd` exchanges the top two directories. Returns an array of paths in the stack.","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"### popd([options,] [\u0027-N\u0027 | \u0027+N\u0027])","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"+ `-n`: Suppress the normal directory change when removing directories from the stack, so that only the stack is manipulated.","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"+ `-q`: Supresses output to the console.","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"Arguments:","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"echo(process.cwd()); // \u0027/usr\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"pushd(\u0027/etc\u0027);       // \u0027/etc /usr\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"echo(process.cwd()); // \u0027/etc\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"popd();              // \u0027/usr\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"echo(process.cwd()); // \u0027/usr\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"When no arguments are given, `popd` removes the top directory from the stack and performs a `cd` to the new top directory. The elements are numbered from 0, starting at the first directory listed with dirs (i.e., `popd` is equivalent to `popd +0`). Returns an array of paths in the stack.","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"### dirs([options | \u0027+N\u0027 | \u0027-N\u0027])","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"+ `-c`: Clears the directory stack by deleting all of the elements.","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"+ `-q`: Supresses output to the console.","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"Arguments:","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"Display the list of currently remembered directories. Returns an array of paths in the stack, or a single path if `+N` or `-N` was specified.","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"See also: `pushd`, `popd`","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"### echo([options,] string [, string ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"+ `-e`: interpret backslash escapes (default)","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"+ `-n`: remove trailing newline from output","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"echo(\u0027hello world\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"var str \u003d echo(\u0027hello world\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"echo(\u0027-n\u0027, \u0027no newline at end\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"Prints `string` to stdout, and returns string with additional utility methods","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"like `.to()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"### exec(command [, options] [, callback])","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"+ `async`: Asynchronous execution. If a callback is provided, it will be set to","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"  `true`, regardless of the passed value (default: `false`).","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"+ `silent`: Do not echo program output to console (default: `false`).","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"+ `encoding`: Character encoding to use. Affects the values returned to stdout and stderr, and","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"  what is written to stdout and stderr when not in silent mode (default: `\u0027utf8\u0027`).","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"+ and any option available to Node.js\u0027s","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"  [`child_process.exec()`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"var version \u003d exec(\u0027node --version\u0027, {silent:true}).stdout;","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"var child \u003d exec(\u0027some_long_running_process\u0027, {async:true});","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"child.stdout.on(\u0027data\u0027, function(data) {","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"  /* ... do something with data ... */","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"exec(\u0027some_long_running_process\u0027, function(code, stdout, stderr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"  console.log(\u0027Exit code:\u0027, code);","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"  console.log(\u0027Program output:\u0027, stdout);","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"  console.log(\u0027Program stderr:\u0027, stderr);","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"Executes the given `command` _synchronously_, unless otherwise specified.  When in synchronous","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"mode, this returns a `ShellString` (compatible with ShellJS v0.6.x, which returns an object","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"of the form `{ code:..., stdout:... , stderr:... }`). Otherwise, this returns the child process","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"object, and the `callback` receives the arguments `(code, stdout, stderr)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"Not seeing the behavior you want? `exec()` runs everything through `sh`","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"by default (or `cmd.exe` on Windows), which differs from `bash`. If you","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"need bash-specific behavior, try out the `{shell: \u0027path/to/bash\u0027}` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"### find(path [, path ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"### find(path_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"find(\u0027src\u0027, \u0027lib\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"find([\u0027src\u0027, \u0027lib\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"find(\u0027.\u0027).filter(function(file) { return file.match(/\\.js$/); });","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"Returns array of all files (however deep) in the given paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"The main difference from `ls(\u0027-R\u0027, path)` is that the resulting file names","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"include the base directories (e.g., `lib/resources/file1` instead of just `file1`).","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"### grep([options,] regex_filter, file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"### grep([options,] regex_filter, file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"+ `-v`: Invert `regex_filter` (only print non-matching lines).","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"+ `-l`: Print only filenames of matching files.","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"+ `-i`: Ignore case.","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"grep(\u0027-v\u0027, \u0027GLOBAL_VARIABLE\u0027, \u0027*.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"grep(\u0027GLOBAL_VARIABLE\u0027, \u0027*.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"Reads input string from given files and returns a string containing all lines of the","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"file that match the given `regex_filter`.","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"### head([{\u0027-n\u0027: \\\u003cnum\\\u003e},] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"### head([{\u0027-n\u0027: \\\u003cnum\\\u003e},] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"+ `-n \u003cnum\u003e`: Show the first `\u003cnum\u003e` lines of the files","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"var str \u003d head({\u0027-n\u0027: 1}, \u0027file*.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"var str \u003d head(\u0027file1\u0027, \u0027file2\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"var str \u003d head([\u0027file1\u0027, \u0027file2\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"Read the start of a file.","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"### ln([options,] source, dest)","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"+ `-s`: symlink","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"+ `-f`: force","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"ln(\u0027file\u0027, \u0027newlink\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"ln(\u0027-sf\u0027, \u0027file\u0027, \u0027existing\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"Links `source` to `dest`. Use `-f` to force the link, should `dest` already exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"### ls([options,] [path, ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"### ls([options,] path_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"+ `-R`: recursive","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"+ `-L`: follow symlinks","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"+ `-d`: list directories themselves, not their contents","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"+ `-l`: list objects representing each file, each with fields containing `ls","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"        -l` output fields. See","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"        [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats)","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"        for more info","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"ls(\u0027projs/*.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"ls(\u0027-R\u0027, \u0027/users/me\u0027, \u0027/tmp\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"ls(\u0027-R\u0027, [\u0027/users/me\u0027, \u0027/tmp\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"ls(\u0027-l\u0027, \u0027file.txt\u0027); // { name: \u0027file.txt\u0027, mode: 33188, nlink: 1, ...}","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"Returns array of files in the given `path`, or files in","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"the current directory if no `path` is  provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"### mkdir([options,] dir [, dir ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"### mkdir([options,] dir_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"+ `-p`: full path (and create intermediate directories, if necessary)","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"mkdir(\u0027-p\u0027, \u0027/tmp/a/b/c/d\u0027, \u0027/tmp/e/f/g\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"mkdir(\u0027-p\u0027, [\u0027/tmp/a/b/c/d\u0027, \u0027/tmp/e/f/g\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"Creates directories.","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"### mv([options ,] source [, source ...], dest\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"### mv([options ,] source_array, dest\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"+ `-f`: force (default behavior)","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"+ `-n`: no-clobber","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"mv(\u0027-n\u0027, \u0027file\u0027, \u0027dir/\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"mv(\u0027file1\u0027, \u0027file2\u0027, \u0027dir/\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"mv([\u0027file1\u0027, \u0027file2\u0027], \u0027dir/\u0027); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"Moves `source` file(s) to `dest`.","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"### pwd()","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"Returns the current directory.","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"### rm([options,] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"### rm([options,] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"+ `-f`: force","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"+ `-r, -R`: recursive","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"rm(\u0027-rf\u0027, \u0027/tmp/*\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"rm(\u0027some_file.txt\u0027, \u0027another_file.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"rm([\u0027some_file.txt\u0027, \u0027another_file.txt\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"Removes files.","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"### sed([options,] search_regex, replacement, file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"### sed([options,] search_regex, replacement, file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"+ `-i`: Replace contents of `file` in-place. _Note that no backups will be created!_","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"sed(\u0027-i\u0027, \u0027PROGRAM_VERSION\u0027, \u0027v0.1.3\u0027, \u0027source.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"sed(/.*DELETE_THIS_LINE.*\\n/, \u0027\u0027, \u0027source.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"Reads an input string from `file`s, and performs a JavaScript `replace()` on the input","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"using the given `search_regex` and `replacement` string or function. Returns the new string after replacement.","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"Note:","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"Like unix `sed`, ShellJS `sed` supports capture groups. Capture groups are specified","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"using the `$n` syntax:","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"sed(/(\\w+)\\s(\\w+)/, \u0027$2, $1\u0027, \u0027file.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"### set(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"+ `+/-e`: exit upon error (`config.fatal`)","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"+ `+/-v`: verbose: show all commands (`config.verbose`)","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"+ `+/-f`: disable filename expansion (globbing)","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"set(\u0027-e\u0027); // exit upon first error","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"set(\u0027+e\u0027); // this undoes a \"set(\u0027-e\u0027)\"","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"Sets global configuration variables.","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"### sort([options,] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"### sort([options,] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"+ `-r`: Reverse the results","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"+ `-n`: Compare according to numerical value","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"sort(\u0027foo.txt\u0027, \u0027bar.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"sort(\u0027-r\u0027, \u0027foo.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"Return the contents of the `file`s, sorted line-by-line. Sorting multiple","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"files mixes their content (just as unix `sort` does).","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"### tail([{\u0027-n\u0027: \\\u003cnum\\\u003e},] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"### tail([{\u0027-n\u0027: \\\u003cnum\\\u003e},] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"+ `-n \u003cnum\u003e`: Show the last `\u003cnum\u003e` lines of `file`s","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"var str \u003d tail({\u0027-n\u0027: 1}, \u0027file*.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"var str \u003d tail(\u0027file1\u0027, \u0027file2\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"var str \u003d tail([\u0027file1\u0027, \u0027file2\u0027]); // same as above","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"Read the end of a `file`.","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"### tempdir()","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"var tmp \u003d tempdir(); // \"/tmp\" for most *nix platforms","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"Searches and returns string containing a writeable, platform-dependent temporary directory.","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"Follows Python\u0027s [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"### test(expression)","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"Available expression primaries:","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-b\u0027, \u0027path\u0027`: true if path is a block device","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-c\u0027, \u0027path\u0027`: true if path is a character device","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-d\u0027, \u0027path\u0027`: true if path is a directory","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-e\u0027, \u0027path\u0027`: true if path exists","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-f\u0027, \u0027path\u0027`: true if path is a regular file","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-L\u0027, \u0027path\u0027`: true if path is a symbolic link","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-p\u0027, \u0027path\u0027`: true if path is a pipe (FIFO)","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"+ `\u0027-S\u0027, \u0027path\u0027`: true if path is a socket","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":607,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":608,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":609,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":610,"author":{"gitId":"shashahchk"},"content":"if (test(\u0027-d\u0027, path)) { /* do something with dir */ };","lastModifiedDate":"2023-09-05"},{"lineNumber":611,"author":{"gitId":"shashahchk"},"content":"if (!test(\u0027-f\u0027, path)) continue; // skip if it\u0027s a regular file","lastModifiedDate":"2023-09-05"},{"lineNumber":612,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":613,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":614,"author":{"gitId":"shashahchk"},"content":"Evaluates `expression` using the available primaries and returns corresponding value.","lastModifiedDate":"2023-09-05"},{"lineNumber":615,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":616,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":617,"author":{"gitId":"shashahchk"},"content":"### ShellString.prototype.to(file)","lastModifiedDate":"2023-09-05"},{"lineNumber":618,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":619,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":620,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":621,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":622,"author":{"gitId":"shashahchk"},"content":"cat(\u0027input.txt\u0027).to(\u0027output.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":623,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":624,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":625,"author":{"gitId":"shashahchk"},"content":"Analogous to the redirection operator `\u003e` in Unix, but works with","lastModifiedDate":"2023-09-05"},{"lineNumber":626,"author":{"gitId":"shashahchk"},"content":"`ShellStrings` (such as those returned by `cat`, `grep`, etc.). _Like Unix","lastModifiedDate":"2023-09-05"},{"lineNumber":627,"author":{"gitId":"shashahchk"},"content":"redirections, `to()` will overwrite any existing file!_","lastModifiedDate":"2023-09-05"},{"lineNumber":628,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":629,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":630,"author":{"gitId":"shashahchk"},"content":"### ShellString.prototype.toEnd(file)","lastModifiedDate":"2023-09-05"},{"lineNumber":631,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":632,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":633,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":634,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":635,"author":{"gitId":"shashahchk"},"content":"cat(\u0027input.txt\u0027).toEnd(\u0027output.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":636,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":637,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":638,"author":{"gitId":"shashahchk"},"content":"Analogous to the redirect-and-append operator `\u003e\u003e` in Unix, but works with","lastModifiedDate":"2023-09-05"},{"lineNumber":639,"author":{"gitId":"shashahchk"},"content":"`ShellStrings` (such as those returned by `cat`, `grep`, etc.).","lastModifiedDate":"2023-09-05"},{"lineNumber":640,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":641,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":642,"author":{"gitId":"shashahchk"},"content":"### touch([options,] file [, file ...])","lastModifiedDate":"2023-09-05"},{"lineNumber":643,"author":{"gitId":"shashahchk"},"content":"### touch([options,] file_array)","lastModifiedDate":"2023-09-05"},{"lineNumber":644,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":645,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":646,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":647,"author":{"gitId":"shashahchk"},"content":"+ `-a`: Change only the access time","lastModifiedDate":"2023-09-05"},{"lineNumber":648,"author":{"gitId":"shashahchk"},"content":"+ `-c`: Do not create any files","lastModifiedDate":"2023-09-05"},{"lineNumber":649,"author":{"gitId":"shashahchk"},"content":"+ `-m`: Change only the modification time","lastModifiedDate":"2023-09-05"},{"lineNumber":650,"author":{"gitId":"shashahchk"},"content":"+ `-d DATE`: Parse `DATE` and use it instead of current time","lastModifiedDate":"2023-09-05"},{"lineNumber":651,"author":{"gitId":"shashahchk"},"content":"+ `-r FILE`: Use `FILE`\u0027s times instead of current time","lastModifiedDate":"2023-09-05"},{"lineNumber":652,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":653,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":654,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":655,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":656,"author":{"gitId":"shashahchk"},"content":"touch(\u0027source.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":657,"author":{"gitId":"shashahchk"},"content":"touch(\u0027-c\u0027, \u0027/path/to/some/dir/source.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":658,"author":{"gitId":"shashahchk"},"content":"touch({ \u0027-r\u0027: FILE }, \u0027/path/to/some/dir/source.js\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":659,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":660,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":661,"author":{"gitId":"shashahchk"},"content":"Update the access and modification times of each `FILE` to the current time.","lastModifiedDate":"2023-09-05"},{"lineNumber":662,"author":{"gitId":"shashahchk"},"content":"A `FILE` argument that does not exist is created empty, unless `-c` is supplied.","lastModifiedDate":"2023-09-05"},{"lineNumber":663,"author":{"gitId":"shashahchk"},"content":"This is a partial implementation of [`touch(1)`](http://linux.die.net/man/1/touch).","lastModifiedDate":"2023-09-05"},{"lineNumber":664,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":665,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":666,"author":{"gitId":"shashahchk"},"content":"### uniq([options,] [input, [output]])","lastModifiedDate":"2023-09-05"},{"lineNumber":667,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":668,"author":{"gitId":"shashahchk"},"content":"Available options:","lastModifiedDate":"2023-09-05"},{"lineNumber":669,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":670,"author":{"gitId":"shashahchk"},"content":"+ `-i`: Ignore case while comparing","lastModifiedDate":"2023-09-05"},{"lineNumber":671,"author":{"gitId":"shashahchk"},"content":"+ `-c`: Prefix lines by the number of occurrences","lastModifiedDate":"2023-09-05"},{"lineNumber":672,"author":{"gitId":"shashahchk"},"content":"+ `-d`: Only print duplicate lines, one for each group of identical lines","lastModifiedDate":"2023-09-05"},{"lineNumber":673,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":674,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":675,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":676,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":677,"author":{"gitId":"shashahchk"},"content":"uniq(\u0027foo.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":678,"author":{"gitId":"shashahchk"},"content":"uniq(\u0027-i\u0027, \u0027foo.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":679,"author":{"gitId":"shashahchk"},"content":"uniq(\u0027-cd\u0027, \u0027foo.txt\u0027, \u0027bar.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":680,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":681,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":682,"author":{"gitId":"shashahchk"},"content":"Filter adjacent matching lines from `input`.","lastModifiedDate":"2023-09-05"},{"lineNumber":683,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":684,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":685,"author":{"gitId":"shashahchk"},"content":"### which(command)","lastModifiedDate":"2023-09-05"},{"lineNumber":686,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":687,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":688,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":689,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":690,"author":{"gitId":"shashahchk"},"content":"var nodeExec \u003d which(\u0027node\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":691,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":692,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":693,"author":{"gitId":"shashahchk"},"content":"Searches for `command` in the system\u0027s `PATH`. On Windows, this uses the","lastModifiedDate":"2023-09-05"},{"lineNumber":694,"author":{"gitId":"shashahchk"},"content":"`PATHEXT` variable to append the extension if it\u0027s not already executable.","lastModifiedDate":"2023-09-05"},{"lineNumber":695,"author":{"gitId":"shashahchk"},"content":"Returns string containing the absolute path to `command`.","lastModifiedDate":"2023-09-05"},{"lineNumber":696,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":697,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":698,"author":{"gitId":"shashahchk"},"content":"### exit(code)","lastModifiedDate":"2023-09-05"},{"lineNumber":699,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":700,"author":{"gitId":"shashahchk"},"content":"Exits the current process with the given exit `code`.","lastModifiedDate":"2023-09-05"},{"lineNumber":701,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":702,"author":{"gitId":"shashahchk"},"content":"### error()","lastModifiedDate":"2023-09-05"},{"lineNumber":703,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":704,"author":{"gitId":"shashahchk"},"content":"Tests if error occurred in the last command. Returns a truthy value if an","lastModifiedDate":"2023-09-05"},{"lineNumber":705,"author":{"gitId":"shashahchk"},"content":"error returned, or a falsy value otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":706,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":707,"author":{"gitId":"shashahchk"},"content":"**Note**: do not rely on the","lastModifiedDate":"2023-09-05"},{"lineNumber":708,"author":{"gitId":"shashahchk"},"content":"return value to be an error message. If you need the last error message, use","lastModifiedDate":"2023-09-05"},{"lineNumber":709,"author":{"gitId":"shashahchk"},"content":"the `.stderr` attribute from the last command\u0027s return value instead.","lastModifiedDate":"2023-09-05"},{"lineNumber":710,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":711,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":712,"author":{"gitId":"shashahchk"},"content":"### ShellString(str)","lastModifiedDate":"2023-09-05"},{"lineNumber":713,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":714,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":715,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":716,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":717,"author":{"gitId":"shashahchk"},"content":"var foo \u003d ShellString(\u0027hello world\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":718,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":719,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":720,"author":{"gitId":"shashahchk"},"content":"Turns a regular string into a string-like object similar to what each","lastModifiedDate":"2023-09-05"},{"lineNumber":721,"author":{"gitId":"shashahchk"},"content":"command returns. This has special methods, like `.to()` and `.toEnd()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":722,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":723,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":724,"author":{"gitId":"shashahchk"},"content":"### env[\u0027VAR_NAME\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":725,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":726,"author":{"gitId":"shashahchk"},"content":"Object containing environment variables (both getter and setter). Shortcut","lastModifiedDate":"2023-09-05"},{"lineNumber":727,"author":{"gitId":"shashahchk"},"content":"to `process.env`.","lastModifiedDate":"2023-09-05"},{"lineNumber":728,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":729,"author":{"gitId":"shashahchk"},"content":"### Pipes","lastModifiedDate":"2023-09-05"},{"lineNumber":730,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":731,"author":{"gitId":"shashahchk"},"content":"Examples:","lastModifiedDate":"2023-09-05"},{"lineNumber":732,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":733,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":734,"author":{"gitId":"shashahchk"},"content":"grep(\u0027foo\u0027, \u0027file1.txt\u0027, \u0027file2.txt\u0027).sed(/o/g, \u0027a\u0027).to(\u0027output.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":735,"author":{"gitId":"shashahchk"},"content":"echo(\u0027files with o\\\u0027s in the name:\\n\u0027 + ls().grep(\u0027o\u0027));","lastModifiedDate":"2023-09-05"},{"lineNumber":736,"author":{"gitId":"shashahchk"},"content":"cat(\u0027test.js\u0027).exec(\u0027node\u0027); // pipe to exec() call","lastModifiedDate":"2023-09-05"},{"lineNumber":737,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":738,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":739,"author":{"gitId":"shashahchk"},"content":"Commands can send their output to another command in a pipe-like fashion.","lastModifiedDate":"2023-09-05"},{"lineNumber":740,"author":{"gitId":"shashahchk"},"content":"`sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand","lastModifiedDate":"2023-09-05"},{"lineNumber":741,"author":{"gitId":"shashahchk"},"content":"side of a pipe. Pipes can be chained.","lastModifiedDate":"2023-09-05"},{"lineNumber":742,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":743,"author":{"gitId":"shashahchk"},"content":"## Configuration","lastModifiedDate":"2023-09-05"},{"lineNumber":744,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":745,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":746,"author":{"gitId":"shashahchk"},"content":"### config.silent","lastModifiedDate":"2023-09-05"},{"lineNumber":747,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":748,"author":{"gitId":"shashahchk"},"content":"Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":749,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":750,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":751,"author":{"gitId":"shashahchk"},"content":"var sh \u003d require(\u0027shelljs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":752,"author":{"gitId":"shashahchk"},"content":"var silentState \u003d sh.config.silent; // save old silent state","lastModifiedDate":"2023-09-05"},{"lineNumber":753,"author":{"gitId":"shashahchk"},"content":"sh.config.silent \u003d true;","lastModifiedDate":"2023-09-05"},{"lineNumber":754,"author":{"gitId":"shashahchk"},"content":"/* ... */","lastModifiedDate":"2023-09-05"},{"lineNumber":755,"author":{"gitId":"shashahchk"},"content":"sh.config.silent \u003d silentState; // restore old silent state","lastModifiedDate":"2023-09-05"},{"lineNumber":756,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":757,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":758,"author":{"gitId":"shashahchk"},"content":"Suppresses all command output if `true`, except for `echo()` calls.","lastModifiedDate":"2023-09-05"},{"lineNumber":759,"author":{"gitId":"shashahchk"},"content":"Default is `false`.","lastModifiedDate":"2023-09-05"},{"lineNumber":760,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":761,"author":{"gitId":"shashahchk"},"content":"### config.fatal","lastModifiedDate":"2023-09-05"},{"lineNumber":762,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":763,"author":{"gitId":"shashahchk"},"content":"Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":764,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":765,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":766,"author":{"gitId":"shashahchk"},"content":"require(\u0027shelljs/global\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":767,"author":{"gitId":"shashahchk"},"content":"config.fatal \u003d true; // or set(\u0027-e\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":768,"author":{"gitId":"shashahchk"},"content":"cp(\u0027this_file_does_not_exist\u0027, \u0027/dev/null\u0027); // throws Error here","lastModifiedDate":"2023-09-05"},{"lineNumber":769,"author":{"gitId":"shashahchk"},"content":"/* more commands... */","lastModifiedDate":"2023-09-05"},{"lineNumber":770,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":771,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":772,"author":{"gitId":"shashahchk"},"content":"If `true`, the script will throw a Javascript error when any shell.js","lastModifiedDate":"2023-09-05"},{"lineNumber":773,"author":{"gitId":"shashahchk"},"content":"command encounters an error. Default is `false`. This is analogous to","lastModifiedDate":"2023-09-05"},{"lineNumber":774,"author":{"gitId":"shashahchk"},"content":"Bash\u0027s `set -e`.","lastModifiedDate":"2023-09-05"},{"lineNumber":775,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":776,"author":{"gitId":"shashahchk"},"content":"### config.verbose","lastModifiedDate":"2023-09-05"},{"lineNumber":777,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":778,"author":{"gitId":"shashahchk"},"content":"Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":779,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":780,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":781,"author":{"gitId":"shashahchk"},"content":"config.verbose \u003d true; // or set(\u0027-v\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":782,"author":{"gitId":"shashahchk"},"content":"cd(\u0027dir/\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":783,"author":{"gitId":"shashahchk"},"content":"rm(\u0027-rf\u0027, \u0027foo.txt\u0027, \u0027bar.txt\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":784,"author":{"gitId":"shashahchk"},"content":"exec(\u0027echo hello\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":785,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":786,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":787,"author":{"gitId":"shashahchk"},"content":"Will print each command as follows:","lastModifiedDate":"2023-09-05"},{"lineNumber":788,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":789,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":790,"author":{"gitId":"shashahchk"},"content":"cd dir/","lastModifiedDate":"2023-09-05"},{"lineNumber":791,"author":{"gitId":"shashahchk"},"content":"rm -rf foo.txt bar.txt","lastModifiedDate":"2023-09-05"},{"lineNumber":792,"author":{"gitId":"shashahchk"},"content":"exec echo hello","lastModifiedDate":"2023-09-05"},{"lineNumber":793,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":794,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":795,"author":{"gitId":"shashahchk"},"content":"### config.globOptions","lastModifiedDate":"2023-09-05"},{"lineNumber":796,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":797,"author":{"gitId":"shashahchk"},"content":"Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":798,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":799,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":800,"author":{"gitId":"shashahchk"},"content":"config.globOptions \u003d {nodir: true};","lastModifiedDate":"2023-09-05"},{"lineNumber":801,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":802,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":803,"author":{"gitId":"shashahchk"},"content":"Use this value for calls to `glob.sync()` instead of the default options.","lastModifiedDate":"2023-09-05"},{"lineNumber":804,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":805,"author":{"gitId":"shashahchk"},"content":"### config.reset()","lastModifiedDate":"2023-09-05"},{"lineNumber":806,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":807,"author":{"gitId":"shashahchk"},"content":"Example:","lastModifiedDate":"2023-09-05"},{"lineNumber":808,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":809,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":810,"author":{"gitId":"shashahchk"},"content":"var shell \u003d require(\u0027shelljs\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":811,"author":{"gitId":"shashahchk"},"content":"// Make changes to shell.config, and do stuff...","lastModifiedDate":"2023-09-05"},{"lineNumber":812,"author":{"gitId":"shashahchk"},"content":"/* ... */","lastModifiedDate":"2023-09-05"},{"lineNumber":813,"author":{"gitId":"shashahchk"},"content":"shell.config.reset(); // reset to original state","lastModifiedDate":"2023-09-05"},{"lineNumber":814,"author":{"gitId":"shashahchk"},"content":"// Do more stuff, but with original settings","lastModifiedDate":"2023-09-05"},{"lineNumber":815,"author":{"gitId":"shashahchk"},"content":"/* ... */","lastModifiedDate":"2023-09-05"},{"lineNumber":816,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":817,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":818,"author":{"gitId":"shashahchk"},"content":"Reset `shell.config` to the defaults:","lastModifiedDate":"2023-09-05"},{"lineNumber":819,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":820,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":821,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":822,"author":{"gitId":"shashahchk"},"content":"  fatal: false,","lastModifiedDate":"2023-09-05"},{"lineNumber":823,"author":{"gitId":"shashahchk"},"content":"  globOptions: {},","lastModifiedDate":"2023-09-05"},{"lineNumber":824,"author":{"gitId":"shashahchk"},"content":"  maxdepth: 255,","lastModifiedDate":"2023-09-05"},{"lineNumber":825,"author":{"gitId":"shashahchk"},"content":"  noglob: false,","lastModifiedDate":"2023-09-05"},{"lineNumber":826,"author":{"gitId":"shashahchk"},"content":"  silent: false,","lastModifiedDate":"2023-09-05"},{"lineNumber":827,"author":{"gitId":"shashahchk"},"content":"  verbose: false,","lastModifiedDate":"2023-09-05"},{"lineNumber":828,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":829,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":830,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":831,"author":{"gitId":"shashahchk"},"content":"## Team","lastModifiedDate":"2023-09-05"},{"lineNumber":832,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":833,"author":{"gitId":"shashahchk"},"content":"| [![Nate Fischer](https://avatars.githubusercontent.com/u/5801521?s\u003d130)](https://github.com/nfischer) | [![Brandon Freitag](https://avatars1.githubusercontent.com/u/5988055?v\u003d3\u0026s\u003d130)](http://github.com/freitagbr) |","lastModifiedDate":"2023-09-05"},{"lineNumber":834,"author":{"gitId":"shashahchk"},"content":"|:---:|:---:|","lastModifiedDate":"2023-09-05"},{"lineNumber":835,"author":{"gitId":"shashahchk"},"content":"| [Nate Fischer](https://github.com/nfischer) | [Brandon Freitag](http://github.com/freitagbr) |","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":835}},{"path":"node_modules/supports-preserve-symlinks-flag/CHANGELOG.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# Changelog","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"All notable changes to this project will be documented in this file.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"## v1.0.0 - 2022-01-02","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"### Commits","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"- Tests [`e2f59ad`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/e2f59ad74e2ae0f5f4899fcde6a6f693ab7cc074)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"- Initial commit [`dc222aa`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/dc222aad3c0b940d8d3af1ca9937d108bd2dc4b9)","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"- [meta] do not publish workflow files [`5ef77f7`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/5ef77f7cb6946d16ee38672be9ec0f1bbdf63262)","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"- npm init [`992b068`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/992b068503a461f7e8676f40ca2aab255fd8d6ff)","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"- read me [`6c9afa9`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/6c9afa9fabc8eaf0814aaed6dd01e6df0931b76d)","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"- Initial implementation [`2f98925`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/2f9892546396d4ab0ad9f1ff83e76c3f01234ae8)","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"- [meta] add `auto-changelog` [`6c476ae`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/6c476ae1ed7ce68b0480344f090ac2844f35509d)","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- [Dev Deps] add `eslint`, `@ljharb/eslint-config` [`d0fffc8`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/d0fffc886d25fba119355520750a909d64da0087)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"- Only apps should have lockfiles [`ab318ed`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/ab318ed7ae62f6c2c0e80a50398d40912afd8f69)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"- [meta] add `safe-publish-latest` [`2bb23b3`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/2bb23b3ebab02dc4135c4cdf0217db82835b9fca)","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"- [meta] add `sideEffects` flag [`600223b`](https://github.com/inspect-js/node-supports-preserve-symlinks-flag/commit/600223ba24f30779f209d9097721eff35ed62741)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":22}},{"path":"node_modules/supports-preserve-symlinks-flag/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# node-supports-preserve-symlinks-flag \u003csup\u003e[![Version Badge][npm-version-svg]][package-url]\u003c/sup\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![github actions][actions-image]][actions-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![coverage][codecov-image]][codecov-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[![dependency status][deps-svg]][deps-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"[![dev dependency status][dev-deps-svg]][dev-deps-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[![License][license-image]][license-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"[![Downloads][downloads-image]][downloads-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"[![npm badge][npm-badge-png]][package-url]","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"Determine if the current node version supports the `--preserve-symlinks` flag.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"## Example","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"var supportsPreserveSymlinks \u003d require(\u0027node-supports-preserve-symlinks-flag\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"var assert \u003d require(\u0027assert\u0027);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"assert.equal(supportsPreserveSymlinks, null); // in a browser","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"assert.equal(supportsPreserveSymlinks, false); // in node \u003c v6.2","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"assert.equal(supportsPreserveSymlinks, true); // in node v6.2+","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"## Tests","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"Simply clone the repo, `npm install`, and run `npm test`","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"[package-url]: https://npmjs.org/package/node-supports-preserve-symlinks-flag","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"[npm-version-svg]: https://versionbadg.es/inspect-js/node-supports-preserve-symlinks-flag.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"[deps-svg]: https://david-dm.org/inspect-js/node-supports-preserve-symlinks-flag.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"[deps-url]: https://david-dm.org/inspect-js/node-supports-preserve-symlinks-flag","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"[dev-deps-svg]: https://david-dm.org/inspect-js/node-supports-preserve-symlinks-flag/dev-status.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"[dev-deps-url]: https://david-dm.org/inspect-js/node-supports-preserve-symlinks-flag#info\u003ddevDependencies","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"[npm-badge-png]: https://nodei.co/npm/node-supports-preserve-symlinks-flag.png?downloads\u003dtrue\u0026stars\u003dtrue","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"[license-image]: https://img.shields.io/npm/l/node-supports-preserve-symlinks-flag.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"[license-url]: LICENSE","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"[downloads-image]: https://img.shields.io/npm/dm/node-supports-preserve-symlinks-flag.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"[downloads-url]: https://npm-stat.com/charts.html?package\u003dnode-supports-preserve-symlinks-flag","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"[codecov-image]: https://codecov.io/gh/inspect-js/node-supports-preserve-symlinks-flag/branch/main/graphs/badge.svg","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"[codecov-url]: https://app.codecov.io/gh/inspect-js/node-supports-preserve-symlinks-flag/","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"[actions-image]: https://img.shields.io/endpoint?url\u003dhttps://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/node-supports-preserve-symlinks-flag","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"[actions-url]: https://github.com/inspect-js/node-supports-preserve-symlinks-flag/actions","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":42}},{"path":"node_modules/tar/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# node-tar","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/npm/node-tar.svg?branch\u003dmaster)](https://travis-ci.org/npm/node-tar)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"[Fast](./benchmarks) and full-featured Tar for Node.js","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"The API is designed to mimic the behavior of `tar(1)` on unix systems.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"If you are familiar with how tar works, most of this will hopefully be","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"straightforward for you.  If not, then hopefully this module can teach","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"you useful unix skills that may come in handy someday :)","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"## Background","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"A \"tar file\" or \"tarball\" is an archive of file system entries","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"(directories, files, links, etc.)  The name comes from \"tape archive\".","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"If you run `man tar` on almost any Unix command line, you\u0027ll learn","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"quite a bit about what it can do, and its history.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"Tar has 5 main top-level commands:","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"* `c` Create an archive","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"* `r` Replace entries within an archive","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"* `u` Update entries within an archive (ie, replace if they\u0027re newer)","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"* `t` List out the contents of an archive","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"* `x` Extract an archive to disk","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"The other flags and options modify how this top level function works.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"## High-Level API","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"These 5 functions are the high-level API.  All of them have a","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"single-character name (for unix nerds familiar with `tar(1)`) as well","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"as a long name (for everyone else).","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"All the high-level functions take the following arguments, all three","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"of which are optional and may be omitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"1. `options` - An optional object specifying various options","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"2. `paths` - An array of paths to add or extract","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"3. `callback` - Called when the command is completed, if async.  (If","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"   sync or no file specified, providing a callback throws a","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"   `TypeError`.)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"If the command is sync (ie, if `options.sync\u003dtrue`), then the","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"callback is not allowed, since the action will be completed immediately.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"If a `file` argument is specified, and the command is async, then a","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"`Promise` is returned.  In this case, if async, a callback may be","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"provided which is called when the command is completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"If a `file` option is not specified, then a stream is returned.  For","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"`create`, this is a readable stream of the generated archive.  For","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"`list` and `extract` this is a writable stream that an archive should","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"be written into.  If a file is not specified, then a callback is not","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"allowed, because you\u0027re already getting a stream to work with.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"`replace` and `update` only work on existing archives, and so require","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"a `file` argument.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"Sync commands without a file argument return a stream that acts on its","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"input immediately in the same tick.  For readable streams, this means","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"that all of the data is immediately available by calling","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"`stream.read()`.  For writable streams, it will be acted upon as soon","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"as it is provided, but this can be at any time.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"### Warnings","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"Some things cause tar to emit a warning, but should usually not cause","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"the entire operation to fail.  There are three ways to handle","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"warnings:","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"1. **Ignore them** (default) Invalid entries won\u0027t be put in the","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"   archive, and invalid entries won\u0027t be unpacked.  This is usually","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"   fine, but can hide failures that you might care about.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"2. **Notice them**  Add an `onwarn` function to the options, or listen","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"   to the `\u0027warn\u0027` event on any tar stream.  The function will get","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"   called as `onwarn(message, data)`.  Handle as appropriate.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"3. **Explode them.**  Set `strict: true` in the options object, and","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"   `warn` messages will be emitted as `\u0027error\u0027` events instead.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"   there\u0027s no `error` handler, this causes the program to crash.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"   used with a promise-returning/callback-taking method, then it\u0027ll","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"   send the error to the promise/callback.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"### Examples","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"The API mimics the `tar(1)` command line functionality, with aliases","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"for more human-readable option and function names.  The goal is that","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"if you know how to use `tar(1)` in Unix, then you know how to use","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"`require(\u0027tar\u0027)` in JavaScript.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"To replicate `tar czf my-tarball.tgz files and folders`, you\u0027d do:","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"tar.c(","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"  {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"    gzip: \u003ctrue|gzip options\u003e,","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"    file: \u0027my-tarball.tgz\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"  },","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"  [\u0027some\u0027, \u0027files\u0027, \u0027and\u0027, \u0027folders\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":").then(_ \u003d\u003e { .. tarball has been created .. })","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"To replicate `tar cz files and folders \u003e my-tarball.tgz`, you\u0027d do:","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"tar.c( // or tar.create","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"  {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"    gzip: \u003ctrue|gzip options\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"  },","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"  [\u0027some\u0027, \u0027files\u0027, \u0027and\u0027, \u0027folders\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":").pipe(fs.createWriteStream(\u0027my-tarball.tgz\u0027))","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"To replicate `tar xf my-tarball.tgz` you\u0027d do:","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"tar.x(  // or tar.extract(","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"  {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"    file: \u0027my-tarball.tgz\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":").then(_\u003d\u003e { .. tarball has been dumped in cwd .. })","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"To replicate `cat my-tarball.tgz | tar x -C some-dir --strip\u003d1`:","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"fs.createReadStream(\u0027my-tarball.tgz\u0027).pipe(","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"  tar.x({","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"    strip: 1,","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"    C: \u0027some-dir\u0027 // alias for cwd:\u0027some-dir\u0027, also ok","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"  })","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":")","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"To replicate `tar tf my-tarball.tgz`, do this:","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"tar.t({","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"  file: \u0027my-tarball.tgz\u0027,","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"  onentry: entry \u003d\u003e { .. do whatever with it .. }","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"To replicate `cat my-tarball.tgz | tar t` do:","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"fs.createReadStream(\u0027my-tarball.tgz\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"  .pipe(tar.t())","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"  .on(\u0027entry\u0027, entry \u003d\u003e { .. do whatever with it .. })","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"To do anything synchronous, add `sync: true` to the options.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"that sync functions don\u0027t take a callback and don\u0027t return a promise.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"When the function returns, it\u0027s already done.  Sync methods without a","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"file argument return a sync stream, which flushes immediately.  But,","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"of course, it still won\u0027t be done until you `.end()` it.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"To filter entries, add `filter: \u003cfunction\u003e` to the options.","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"Tar-creating methods call the filter with `filter(path, stat)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"Tar-reading methods (including extraction) call the filter with","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"`filter(path, entry)`.  The filter is called in the `this`-context of","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"the `Pack` or `Unpack` stream object.","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"The arguments list to `tar t` and `tar x` specify a list of filenames","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"to extract or list, so they\u0027re equivalent to a filter that tests if","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"the file is in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"For those who _aren\u0027t_ fans of tar\u0027s single-character command names:","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"tar.c \u003d\u003d\u003d tar.create","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"tar.r \u003d\u003d\u003d tar.replace (appends to archive, file is required)","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"tar.u \u003d\u003d\u003d tar.update (appends if newer, file is required)","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"tar.x \u003d\u003d\u003d tar.extract","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"tar.t \u003d\u003d\u003d tar.list","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"Keep reading for all the command descriptions and options, as well as","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"the low-level API that they are built on.","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"### tar.c(options, fileList, callback) [alias: tar.create]","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"Create a tarball archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"The `fileList` is an array of paths to add to the tarball.  Adding a","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"directory also adds its children recursively.","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"An entry in `fileList` that starts with an `@` symbol is a tar archive","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"whose entries will be added.  To add a file that starts with `@`,","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"prepend it with `./`.","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"- `file` Write the tarball archive to the specified filename.  If this","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"  is specified, then the callback will be fired when the file has been","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"  written, and a promise will be returned that resolves when the file","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"  is written.  If a filename is not specified, then a Readable Stream","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"  will be returned which will emit the file data. [Alias: `f`]","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"- `sync` Act synchronously.  If this is set, then any provided file","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"  will be fully written after the call to `tar.c`.  If this is set,","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"  and a file is not provided, then the resulting stream will already","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"  have the data ready to `read` or `emit(\u0027data\u0027)` as soon as you","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"  request it.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for creating the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"  Defaults to `process.cwd()`.  [Alias: `C`]","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"- `prefix` A path portion to prefix onto the entries in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"- `gzip` Set to any truthy value to create a gzipped archive, or an","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"  object with settings for `zlib.Gzip()` [Alias: `z`]","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, stat)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"  entry being added.  Return `true` to add the entry to the archive,","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"  or `false` to omit it.","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"  from absolute paths. [Alias: `P`]","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"- `mode` The mode to set on the created file archive","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"- `noDirRecurse` Do not recursively archive the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"  directories. [Alias: `n`]","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"- `follow` Set to true to pack the targets of symbolic links.  Without","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"  this option, symbolic links are archived as such. [Alias: `L`, `h`]","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"- `noPax` Suppress pax extended headers.  Note that this means that","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"  long paths and linkpaths will be truncated, and large or negative","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"  numeric values may be interpreted incorrectly.","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"  [Alias: `m`, `no-mtime`]","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"- `mtime` Set to a `Date` object to force a specific `mtime` for","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"  everything added to the archive.  Overridden by `noMtime`.","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"The following options are mostly internal, but can be modified in some","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"advanced use cases, such as re-using caches between runs.","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"- `linkCache` A Map object containing the device and inode value for","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"  any file whose nlink is \u003e 1, to identify hard links.","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"- `statCache` A Map object that caches calls `lstat`.","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"- `readdirCache` A Map object that caches calls to `readdir`.","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"- `jobs` A number specifying how many concurrent jobs to run.","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"  Defaults to 4.","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"### tar.x(options, fileList, callback) [alias: tar.extract]","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"Extract a tarball archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"The `fileList` is an array of paths to extract from the tarball.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"no paths are provided, then all the entries are extracted.","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"If the archive is gzipped, then tar will detect this and unzip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"Note that all directories that are created will be forced to be","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"writable, readable, and listable by their owner, to avoid cases where","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"a directory prevents extraction of child entries by virtue of its","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"mode.","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"Most extraction errors will cause a `warn` event to be emitted.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"the `cwd` is missing, or not a directory, then the extraction will","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"fail completely.","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"- `cwd` Extract files relative to the specified directory.  Defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"  to `process.cwd()`.  If provided, this must exist and must be a","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"  directory. [Alias: `C`]","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"- `file` The archive file to extract.  If not specified, then a","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"  Writable stream is returned where the archive data should be","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"  written. [Alias: `f`]","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"- `sync` Create files and directories synchronously.","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, entry)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"  entry being unpacked.  Return `true` to unpack the entry from the","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"  archive, or `false` to skip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"- `newer` Set to true to keep the existing file on disk if it\u0027s newer","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"  than the file in the archive. [Alias: `keep-newer`,","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"  `keep-newer-files`]","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"- `keep` Do not overwrite existing files.  In particular, if a file","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"  appears more than once in an archive, later copies will not","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"  overwrite earlier copies. [Alias: `k`, `keep-existing`]","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths, paths containing `..`, and","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"  extracting through symbolic links.  By default, `/` is stripped from","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"  absolute paths, `..` paths are not extracted, and any file whose","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"  location would be modified by a symbolic link is not extracted.","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"  [Alias: `P`]","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"- `unlink` Unlink files before creating them.  Without this option,","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"  tar overwrites existing files, which preserves existing hardlinks.","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"  With this option, existing hardlinks will be broken, as will any","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"  symlink that would affect the location of an extracted file. [Alias:","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"  `U`]","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"- `strip` Remove the specified number of leading path elements.","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"  Pathnames with fewer elements will be silently skipped.  Note that","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"  the pathname is edited after applying the filter, but before","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"  security checks. [Alias: `strip-components`, `stripComponents`]","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"- `preserveOwner` If true, tar will set the `uid` and `gid` of","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"  extracted entries to the `uid` and `gid` fields in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"  This defaults to true when run as root, and false otherwise.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"  false, then files and directories will be set with the owner and","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"  group of the user running the process.  This is similar to `-p` in","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"  `tar(1)`, but ACLs and other system-specific data is never unpacked","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"  in this implementation, and modes are set by default already.","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"  [Alias: `p`]","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"- `uid` Set to a number to force ownership of all extracted files and","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"  folders, and all implicitly created directories, to be owned by the","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"  specified user id, regardless of the `uid` field in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"  Cannot be used along with `preserveOwner`.  Requires also setting a","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"  `gid` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"- `gid` Set to a number to force ownership of all extracted files and","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"  folders, and all implicitly created directories, to be owned by the","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"  specified group id, regardless of the `gid` field in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"  Cannot be used along with `preserveOwner`.  Requires also setting a","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"  `uid` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` value for extracted","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"  entries. [Alias: `m`, `no-mtime`]","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"- `transform` Provide a function that takes an `entry` object, and","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"  returns a stream, or any falsey value.  If a stream is provided,","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"  then that stream\u0027s data will be written instead of the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"  the archive entry.  If a falsey value is provided, then the entry is","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"  written to disk as normal.  (To exclude items from extraction, use","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"  the `filter` option described above.)","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"- `onentry` A function that gets called with `(entry)` for each entry","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"  that passes the filter.","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"The following options are mostly internal, but can be modified in some","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"advanced use cases, such as re-using caches between runs.","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"- `umask` Filter the modes of entries like `process.umask()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"- `dmode` Default mode for directories","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"- `fmode` Default mode for files","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":"- `dirCache` A Map object of which directories exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":"- `maxMetaEntrySize` The maximum size of meta entries that is","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":"  supported.  Defaults to 1 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":"Note that using an asynchronous stream type with the `transform`","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":"option will cause undefined behavior in sync extractions.","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":"[MiniPass](http://npm.im/minipass)-based streams are designed for this","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":"use case.","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":"### tar.t(options, fileList, callback) [alias: tar.list]","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":"List the contents of a tarball archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":"The `fileList` is an array of paths to list from the tarball.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":"no paths are provided, then all the entries are listed.","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"If the archive is gzipped, then tar will detect this and unzip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"Returns an event emitter that emits `entry` events with","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"`tar.ReadEntry` objects.  However, they don\u0027t emit `\u0027data\u0027` or `\u0027end\u0027`","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"events.  (If you want to get actual readable entries, use the","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"`tar.Parse` class instead.)","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"- `cwd` Extract files relative to the specified directory.  Defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"  to `process.cwd()`. [Alias: `C`]","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"- `file` The archive file to list.  If not specified, then a","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"  Writable stream is returned where the archive data should be","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"  written. [Alias: `f`]","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"- `sync` Read the specified file synchronously.  (This has no effect","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"  when a file option isn\u0027t specified, because entries are emitted as","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"  fast as they are parsed from the stream anyway.)","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, entry)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"  entry being listed.  Return `true` to emit the entry from the","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"  archive, or `false` to skip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"- `onentry` A function that gets called with `(entry)` for each entry","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"  that passes the filter.  This is important for when both `file` and","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"  `sync` are set, because it will be called synchronously.","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"- `noResume` By default, `entry` streams are resumed immediately after","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"  the call to `onentry`.  Set `noResume: true` to suppress this","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"  behavior.  Note that by opting into this, the stream will never","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"  complete until the entry data is consumed.","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"### tar.u(options, fileList, callback) [alias: tar.update]","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"Add files to an archive if they are newer than the entry already in","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"the tarball archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"The `fileList` is an array of paths to add to the tarball.  Adding a","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"directory also adds its children recursively.","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"An entry in `fileList` that starts with an `@` symbol is a tar archive","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"whose entries will be added.  To add a file that starts with `@`,","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"prepend it with `./`.","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"- `file` Required. Write the tarball archive to the specified","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"  filename. [Alias: `f`]","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"- `sync` Act synchronously.  If this is set, then any provided file","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"  will be fully written after the call to `tar.c`.","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for adding entries to the","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"  archive.  Defaults to `process.cwd()`.  [Alias: `C`]","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"- `prefix` A path portion to prefix onto the entries in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"- `gzip` Set to any truthy value to create a gzipped archive, or an","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"  object with settings for `zlib.Gzip()` [Alias: `z`]","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, stat)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"  entry being added.  Return `true` to add the entry to the archive,","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"  or `false` to omit it.","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"  from absolute paths. [Alias: `P`]","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"- `noDirRecurse` Do not recursively archive the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"  directories. [Alias: `n`]","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"- `follow` Set to true to pack the targets of symbolic links.  Without","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"  this option, symbolic links are archived as such. [Alias: `L`, `h`]","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"- `noPax` Suppress pax extended headers.  Note that this means that","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"  long paths and linkpaths will be truncated, and large or negative","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"  numeric values may be interpreted incorrectly.","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"  [Alias: `m`, `no-mtime`]","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"- `mtime` Set to a `Date` object to force a specific `mtime` for","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"  everything added to the archive.  Overridden by `noMtime`.","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"### tar.r(options, fileList, callback) [alias: tar.replace]","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"Add files to an existing archive.  Because later entries override","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"earlier entries, this effectively replaces any existing entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"The `fileList` is an array of paths to add to the tarball.  Adding a","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"directory also adds its children recursively.","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"An entry in `fileList` that starts with an `@` symbol is a tar archive","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"whose entries will be added.  To add a file that starts with `@`,","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"prepend it with `./`.","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"- `file` Required. Write the tarball archive to the specified","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"  filename. [Alias: `f`]","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"- `sync` Act synchronously.  If this is set, then any provided file","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"  will be fully written after the call to `tar.c`.","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for adding entries to the","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"  archive.  Defaults to `process.cwd()`.  [Alias: `C`]","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"- `prefix` A path portion to prefix onto the entries in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"- `gzip` Set to any truthy value to create a gzipped archive, or an","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"  object with settings for `zlib.Gzip()` [Alias: `z`]","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, stat)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"  entry being added.  Return `true` to add the entry to the archive,","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"  or `false` to omit it.","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"  from absolute paths. [Alias: `P`]","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"- `noDirRecurse` Do not recursively archive the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"  directories. [Alias: `n`]","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"- `follow` Set to true to pack the targets of symbolic links.  Without","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"  this option, symbolic links are archived as such. [Alias: `L`, `h`]","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"- `noPax` Suppress pax extended headers.  Note that this means that","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"  long paths and linkpaths will be truncated, and large or negative","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"  numeric values may be interpreted incorrectly.","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"  [Alias: `m`, `no-mtime`]","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"- `mtime` Set to a `Date` object to force a specific `mtime` for","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":"  everything added to the archive.  Overridden by `noMtime`.","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"## Low-Level API","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"### class tar.Pack","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"A readable tar stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"Has all the standard readable stream interface stuff.  `\u0027data\u0027` and","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"`\u0027end\u0027` events, `read()` method, `pause()` and `resume()`, etc.","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"#### constructor(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for creating the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"  Defaults to `process.cwd()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"- `prefix` A path portion to prefix onto the entries in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"- `gzip` Set to any truthy value to create a gzipped archive, or an","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"  object with settings for `zlib.Gzip()`","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, stat)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"  entry being added.  Return `true` to add the entry to the archive,","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"  or `false` to omit it.","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"  from absolute paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"- `linkCache` A Map object containing the device and inode value for","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"  any file whose nlink is \u003e 1, to identify hard links.","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"- `statCache` A Map object that caches calls `lstat`.","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"- `readdirCache` A Map object that caches calls to `readdir`.","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"- `jobs` A number specifying how many concurrent jobs to run.","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"  Defaults to 4.","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"  Defaults to 16 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"- `noDirRecurse` Do not recursively archive the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"  directories.","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"- `follow` Set to true to pack the targets of symbolic links.  Without","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"  this option, symbolic links are archived as such.","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"- `noPax` Suppress pax extended headers.  Note that this means that","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"  long paths and linkpaths will be truncated, and large or negative","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"  numeric values may be interpreted incorrectly.","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"- `mtime` Set to a `Date` object to force a specific `mtime` for","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"  everything added to the archive.  Overridden by `noMtime`.","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"#### add(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"Adds an entry to the archive.  Returns the Pack stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"#### write(path)","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"Adds an entry to the archive.  Returns true if flushed.","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"#### end()","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"Finishes the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":"### class tar.Pack.Sync","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":"Synchronous version of `tar.Pack`.","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"### class tar.Unpack","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"A writable stream that unpacks a tar archive onto the file system.","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"All the normal writable stream stuff is supported.  `write()` and","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"`end()` methods, `\u0027drain\u0027` events, etc.","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"Note that all directories that are created will be forced to be","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"writable, readable, and listable by their owner, to avoid cases where","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"a directory prevents extraction of child entries by virtue of its","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"mode.","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"`\u0027close\u0027` is emitted when it\u0027s done writing stuff to the file system.","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"Most unpack errors will cause a `warn` event to be emitted.  If the","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"`cwd` is missing, or not a directory, then an error will be emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"#### constructor(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"- `cwd` Extract files relative to the specified directory.  Defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"  to `process.cwd()`.  If provided, this must exist and must be a","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"  directory.","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, entry)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"  entry being unpacked.  Return `true` to unpack the entry from the","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"  archive, or `false` to skip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"- `newer` Set to true to keep the existing file on disk if it\u0027s newer","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"  than the file in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"- `keep` Do not overwrite existing files.  In particular, if a file","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"  appears more than once in an archive, later copies will not","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"  overwrite earlier copies.","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths, paths containing `..`, and","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"  extracting through symbolic links.  By default, `/` is stripped from","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"  absolute paths, `..` paths are not extracted, and any file whose","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"  location would be modified by a symbolic link is not extracted.","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"- `unlink` Unlink files before creating them.  Without this option,","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"  tar overwrites existing files, which preserves existing hardlinks.","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"  With this option, existing hardlinks will be broken, as will any","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"  symlink that would affect the location of an extracted file.","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"- `strip` Remove the specified number of leading path elements.","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"  Pathnames with fewer elements will be silently skipped.  Note that","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"  the pathname is edited after applying the filter, but before","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"  security checks.","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"- `umask` Filter the modes of entries like `process.umask()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"- `dmode` Default mode for directories","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"- `fmode` Default mode for files","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"- `dirCache` A Map object of which directories exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"- `maxMetaEntrySize` The maximum size of meta entries that is","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"  supported.  Defaults to 1 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"- `preserveOwner` If true, tar will set the `uid` and `gid` of","lastModifiedDate":"2023-09-05"},{"lineNumber":607,"author":{"gitId":"shashahchk"},"content":"  extracted entries to the `uid` and `gid` fields in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":608,"author":{"gitId":"shashahchk"},"content":"  This defaults to true when run as root, and false otherwise.  If","lastModifiedDate":"2023-09-05"},{"lineNumber":609,"author":{"gitId":"shashahchk"},"content":"  false, then files and directories will be set with the owner and","lastModifiedDate":"2023-09-05"},{"lineNumber":610,"author":{"gitId":"shashahchk"},"content":"  group of the user running the process.  This is similar to `-p` in","lastModifiedDate":"2023-09-05"},{"lineNumber":611,"author":{"gitId":"shashahchk"},"content":"  `tar(1)`, but ACLs and other system-specific data is never unpacked","lastModifiedDate":"2023-09-05"},{"lineNumber":612,"author":{"gitId":"shashahchk"},"content":"  in this implementation, and modes are set by default already.","lastModifiedDate":"2023-09-05"},{"lineNumber":613,"author":{"gitId":"shashahchk"},"content":"- `win32` True if on a windows platform.  Causes behavior where","lastModifiedDate":"2023-09-05"},{"lineNumber":614,"author":{"gitId":"shashahchk"},"content":"  filenames containing `\u003c|\u003e?` chars are converted to","lastModifiedDate":"2023-09-05"},{"lineNumber":615,"author":{"gitId":"shashahchk"},"content":"  windows-compatible values while being unpacked.","lastModifiedDate":"2023-09-05"},{"lineNumber":616,"author":{"gitId":"shashahchk"},"content":"- `uid` Set to a number to force ownership of all extracted files and","lastModifiedDate":"2023-09-05"},{"lineNumber":617,"author":{"gitId":"shashahchk"},"content":"  folders, and all implicitly created directories, to be owned by the","lastModifiedDate":"2023-09-05"},{"lineNumber":618,"author":{"gitId":"shashahchk"},"content":"  specified user id, regardless of the `uid` field in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":619,"author":{"gitId":"shashahchk"},"content":"  Cannot be used along with `preserveOwner`.  Requires also setting a","lastModifiedDate":"2023-09-05"},{"lineNumber":620,"author":{"gitId":"shashahchk"},"content":"  `gid` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":621,"author":{"gitId":"shashahchk"},"content":"- `gid` Set to a number to force ownership of all extracted files and","lastModifiedDate":"2023-09-05"},{"lineNumber":622,"author":{"gitId":"shashahchk"},"content":"  folders, and all implicitly created directories, to be owned by the","lastModifiedDate":"2023-09-05"},{"lineNumber":623,"author":{"gitId":"shashahchk"},"content":"  specified group id, regardless of the `gid` field in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":624,"author":{"gitId":"shashahchk"},"content":"  Cannot be used along with `preserveOwner`.  Requires also setting a","lastModifiedDate":"2023-09-05"},{"lineNumber":625,"author":{"gitId":"shashahchk"},"content":"  `uid` option.","lastModifiedDate":"2023-09-05"},{"lineNumber":626,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` value for extracted","lastModifiedDate":"2023-09-05"},{"lineNumber":627,"author":{"gitId":"shashahchk"},"content":"  entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":628,"author":{"gitId":"shashahchk"},"content":"- `transform` Provide a function that takes an `entry` object, and","lastModifiedDate":"2023-09-05"},{"lineNumber":629,"author":{"gitId":"shashahchk"},"content":"  returns a stream, or any falsey value.  If a stream is provided,","lastModifiedDate":"2023-09-05"},{"lineNumber":630,"author":{"gitId":"shashahchk"},"content":"  then that stream\u0027s data will be written instead of the contents of","lastModifiedDate":"2023-09-05"},{"lineNumber":631,"author":{"gitId":"shashahchk"},"content":"  the archive entry.  If a falsey value is provided, then the entry is","lastModifiedDate":"2023-09-05"},{"lineNumber":632,"author":{"gitId":"shashahchk"},"content":"  written to disk as normal.  (To exclude items from extraction, use","lastModifiedDate":"2023-09-05"},{"lineNumber":633,"author":{"gitId":"shashahchk"},"content":"  the `filter` option described above.)","lastModifiedDate":"2023-09-05"},{"lineNumber":634,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":635,"author":{"gitId":"shashahchk"},"content":"- `onentry` A function that gets called with `(entry)` for each entry","lastModifiedDate":"2023-09-05"},{"lineNumber":636,"author":{"gitId":"shashahchk"},"content":"  that passes the filter.","lastModifiedDate":"2023-09-05"},{"lineNumber":637,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":638,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":639,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":640,"author":{"gitId":"shashahchk"},"content":"### class tar.Unpack.Sync","lastModifiedDate":"2023-09-05"},{"lineNumber":641,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":642,"author":{"gitId":"shashahchk"},"content":"Synchronous version of `tar.Unpack`.","lastModifiedDate":"2023-09-05"},{"lineNumber":643,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":644,"author":{"gitId":"shashahchk"},"content":"Note that using an asynchronous stream type with the `transform`","lastModifiedDate":"2023-09-05"},{"lineNumber":645,"author":{"gitId":"shashahchk"},"content":"option will cause undefined behavior in sync unpack streams.","lastModifiedDate":"2023-09-05"},{"lineNumber":646,"author":{"gitId":"shashahchk"},"content":"[MiniPass](http://npm.im/minipass)-based streams are designed for this","lastModifiedDate":"2023-09-05"},{"lineNumber":647,"author":{"gitId":"shashahchk"},"content":"use case.","lastModifiedDate":"2023-09-05"},{"lineNumber":648,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":649,"author":{"gitId":"shashahchk"},"content":"### class tar.Parse","lastModifiedDate":"2023-09-05"},{"lineNumber":650,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":651,"author":{"gitId":"shashahchk"},"content":"A writable stream that parses a tar archive stream.  All the standard","lastModifiedDate":"2023-09-05"},{"lineNumber":652,"author":{"gitId":"shashahchk"},"content":"writable stream stuff is supported.","lastModifiedDate":"2023-09-05"},{"lineNumber":653,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":654,"author":{"gitId":"shashahchk"},"content":"If the archive is gzipped, then tar will detect this and unzip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":655,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":656,"author":{"gitId":"shashahchk"},"content":"Emits `\u0027entry\u0027` events with `tar.ReadEntry` objects, which are","lastModifiedDate":"2023-09-05"},{"lineNumber":657,"author":{"gitId":"shashahchk"},"content":"themselves readable streams that you can pipe wherever.","lastModifiedDate":"2023-09-05"},{"lineNumber":658,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":659,"author":{"gitId":"shashahchk"},"content":"Each `entry` will not emit until the one before it is flushed through,","lastModifiedDate":"2023-09-05"},{"lineNumber":660,"author":{"gitId":"shashahchk"},"content":"so make sure to either consume the data (with `on(\u0027data\u0027, ...)` or","lastModifiedDate":"2023-09-05"},{"lineNumber":661,"author":{"gitId":"shashahchk"},"content":"`.pipe(...)`) or throw it away with `.resume()` to keep the stream","lastModifiedDate":"2023-09-05"},{"lineNumber":662,"author":{"gitId":"shashahchk"},"content":"flowing.","lastModifiedDate":"2023-09-05"},{"lineNumber":663,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":664,"author":{"gitId":"shashahchk"},"content":"#### constructor(options)","lastModifiedDate":"2023-09-05"},{"lineNumber":665,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":666,"author":{"gitId":"shashahchk"},"content":"Returns an event emitter that emits `entry` events with","lastModifiedDate":"2023-09-05"},{"lineNumber":667,"author":{"gitId":"shashahchk"},"content":"`tar.ReadEntry` objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":668,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":669,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":670,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":671,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":672,"author":{"gitId":"shashahchk"},"content":"- `filter` A function that gets called with `(path, entry)` for each","lastModifiedDate":"2023-09-05"},{"lineNumber":673,"author":{"gitId":"shashahchk"},"content":"  entry being listed.  Return `true` to emit the entry from the","lastModifiedDate":"2023-09-05"},{"lineNumber":674,"author":{"gitId":"shashahchk"},"content":"  archive, or `false` to skip it.","lastModifiedDate":"2023-09-05"},{"lineNumber":675,"author":{"gitId":"shashahchk"},"content":"- `onentry` A function that gets called with `(entry)` for each entry","lastModifiedDate":"2023-09-05"},{"lineNumber":676,"author":{"gitId":"shashahchk"},"content":"  that passes the filter.","lastModifiedDate":"2023-09-05"},{"lineNumber":677,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":678,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":679,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":680,"author":{"gitId":"shashahchk"},"content":"#### abort(message, error)","lastModifiedDate":"2023-09-05"},{"lineNumber":681,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":682,"author":{"gitId":"shashahchk"},"content":"Stop all parsing activities.  This is called when there are zlib","lastModifiedDate":"2023-09-05"},{"lineNumber":683,"author":{"gitId":"shashahchk"},"content":"errors.  It also emits a warning with the message and error provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":684,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":685,"author":{"gitId":"shashahchk"},"content":"### class tar.ReadEntry extends [MiniPass](http://npm.im/minipass)","lastModifiedDate":"2023-09-05"},{"lineNumber":686,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":687,"author":{"gitId":"shashahchk"},"content":"A representation of an entry that is being read out of a tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":688,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":689,"author":{"gitId":"shashahchk"},"content":"It has the following fields:","lastModifiedDate":"2023-09-05"},{"lineNumber":690,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":691,"author":{"gitId":"shashahchk"},"content":"- `extended` The extended metadata object provided to the constructor.","lastModifiedDate":"2023-09-05"},{"lineNumber":692,"author":{"gitId":"shashahchk"},"content":"- `globalExtended` The global extended metadata object provided to the","lastModifiedDate":"2023-09-05"},{"lineNumber":693,"author":{"gitId":"shashahchk"},"content":"  constructor.","lastModifiedDate":"2023-09-05"},{"lineNumber":694,"author":{"gitId":"shashahchk"},"content":"- `remain` The number of bytes remaining to be written into the","lastModifiedDate":"2023-09-05"},{"lineNumber":695,"author":{"gitId":"shashahchk"},"content":"  stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":696,"author":{"gitId":"shashahchk"},"content":"- `blockRemain` The number of 512-byte blocks remaining to be written","lastModifiedDate":"2023-09-05"},{"lineNumber":697,"author":{"gitId":"shashahchk"},"content":"  into the stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":698,"author":{"gitId":"shashahchk"},"content":"- `ignore` Whether this entry should be ignored.","lastModifiedDate":"2023-09-05"},{"lineNumber":699,"author":{"gitId":"shashahchk"},"content":"- `meta` True if this represents metadata about the next entry, false","lastModifiedDate":"2023-09-05"},{"lineNumber":700,"author":{"gitId":"shashahchk"},"content":"  if it represents a filesystem object.","lastModifiedDate":"2023-09-05"},{"lineNumber":701,"author":{"gitId":"shashahchk"},"content":"- All the fields from the header, extended header, and global extended","lastModifiedDate":"2023-09-05"},{"lineNumber":702,"author":{"gitId":"shashahchk"},"content":"  header are added to the ReadEntry object.  So it has `path`, `type`,","lastModifiedDate":"2023-09-05"},{"lineNumber":703,"author":{"gitId":"shashahchk"},"content":"  `size, `mode`, and so on.","lastModifiedDate":"2023-09-05"},{"lineNumber":704,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":705,"author":{"gitId":"shashahchk"},"content":"#### constructor(header, extended, globalExtended)","lastModifiedDate":"2023-09-05"},{"lineNumber":706,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":707,"author":{"gitId":"shashahchk"},"content":"Create a new ReadEntry object with the specified header, extended","lastModifiedDate":"2023-09-05"},{"lineNumber":708,"author":{"gitId":"shashahchk"},"content":"header, and global extended header values.","lastModifiedDate":"2023-09-05"},{"lineNumber":709,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":710,"author":{"gitId":"shashahchk"},"content":"### class tar.WriteEntry extends [MiniPass](http://npm.im/minipass)","lastModifiedDate":"2023-09-05"},{"lineNumber":711,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":712,"author":{"gitId":"shashahchk"},"content":"A representation of an entry that is being written from the file","lastModifiedDate":"2023-09-05"},{"lineNumber":713,"author":{"gitId":"shashahchk"},"content":"system into a tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":714,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":715,"author":{"gitId":"shashahchk"},"content":"Emits data for the Header, and for the Pax Extended Header if one is","lastModifiedDate":"2023-09-05"},{"lineNumber":716,"author":{"gitId":"shashahchk"},"content":"required, as well as any body data.","lastModifiedDate":"2023-09-05"},{"lineNumber":717,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":718,"author":{"gitId":"shashahchk"},"content":"Creating a WriteEntry for a directory does not also create","lastModifiedDate":"2023-09-05"},{"lineNumber":719,"author":{"gitId":"shashahchk"},"content":"WriteEntry objects for all of the directory contents.","lastModifiedDate":"2023-09-05"},{"lineNumber":720,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":721,"author":{"gitId":"shashahchk"},"content":"It has the following fields:","lastModifiedDate":"2023-09-05"},{"lineNumber":722,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":723,"author":{"gitId":"shashahchk"},"content":"- `path` The path field that will be written to the archive.  By","lastModifiedDate":"2023-09-05"},{"lineNumber":724,"author":{"gitId":"shashahchk"},"content":"  default, this is also the path from the cwd to the file system","lastModifiedDate":"2023-09-05"},{"lineNumber":725,"author":{"gitId":"shashahchk"},"content":"  object.","lastModifiedDate":"2023-09-05"},{"lineNumber":726,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":727,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":728,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":729,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":730,"author":{"gitId":"shashahchk"},"content":"- `myuid` If supported, the uid of the user running the current","lastModifiedDate":"2023-09-05"},{"lineNumber":731,"author":{"gitId":"shashahchk"},"content":"  process.","lastModifiedDate":"2023-09-05"},{"lineNumber":732,"author":{"gitId":"shashahchk"},"content":"- `myuser` The `env.USER` string if set, or `\u0027\u0027`.  Set as the entry","lastModifiedDate":"2023-09-05"},{"lineNumber":733,"author":{"gitId":"shashahchk"},"content":"  `uname` field if the file\u0027s `uid` matches `this.myuid`.","lastModifiedDate":"2023-09-05"},{"lineNumber":734,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":735,"author":{"gitId":"shashahchk"},"content":"  Defaults to 1 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":736,"author":{"gitId":"shashahchk"},"content":"- `linkCache` A Map object containing the device and inode value for","lastModifiedDate":"2023-09-05"},{"lineNumber":737,"author":{"gitId":"shashahchk"},"content":"  any file whose nlink is \u003e 1, to identify hard links.","lastModifiedDate":"2023-09-05"},{"lineNumber":738,"author":{"gitId":"shashahchk"},"content":"- `statCache` A Map object that caches calls `lstat`.","lastModifiedDate":"2023-09-05"},{"lineNumber":739,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":740,"author":{"gitId":"shashahchk"},"content":"  from absolute paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":741,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for creating the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":742,"author":{"gitId":"shashahchk"},"content":"  Defaults to `process.cwd()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":743,"author":{"gitId":"shashahchk"},"content":"- `absolute` The absolute path to the entry on the filesystem.  By","lastModifiedDate":"2023-09-05"},{"lineNumber":744,"author":{"gitId":"shashahchk"},"content":"  default, this is `path.resolve(this.cwd, this.path)`, but it can be","lastModifiedDate":"2023-09-05"},{"lineNumber":745,"author":{"gitId":"shashahchk"},"content":"  overridden explicitly.","lastModifiedDate":"2023-09-05"},{"lineNumber":746,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":747,"author":{"gitId":"shashahchk"},"content":"- `win32` True if on a windows platform.  Causes behavior where paths","lastModifiedDate":"2023-09-05"},{"lineNumber":748,"author":{"gitId":"shashahchk"},"content":"  replace `\\` with `/` and filenames containing the windows-compatible","lastModifiedDate":"2023-09-05"},{"lineNumber":749,"author":{"gitId":"shashahchk"},"content":"  forms of `\u003c|\u003e?:` characters are converted to actual `\u003c|\u003e?:` characters","lastModifiedDate":"2023-09-05"},{"lineNumber":750,"author":{"gitId":"shashahchk"},"content":"  in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":751,"author":{"gitId":"shashahchk"},"content":"- `noPax` Suppress pax extended headers.  Note that this means that","lastModifiedDate":"2023-09-05"},{"lineNumber":752,"author":{"gitId":"shashahchk"},"content":"  long paths and linkpaths will be truncated, and large or negative","lastModifiedDate":"2023-09-05"},{"lineNumber":753,"author":{"gitId":"shashahchk"},"content":"  numeric values may be interpreted incorrectly.","lastModifiedDate":"2023-09-05"},{"lineNumber":754,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":755,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":756,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":757,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":758,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":759,"author":{"gitId":"shashahchk"},"content":"#### constructor(path, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":760,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":761,"author":{"gitId":"shashahchk"},"content":"`path` is the path of the entry as it is written in the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":762,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":763,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":764,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":765,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":766,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":767,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":768,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":769,"author":{"gitId":"shashahchk"},"content":"- `maxReadSize` The maximum buffer size for `fs.read()` operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":770,"author":{"gitId":"shashahchk"},"content":"  Defaults to 1 MB.","lastModifiedDate":"2023-09-05"},{"lineNumber":771,"author":{"gitId":"shashahchk"},"content":"- `linkCache` A Map object containing the device and inode value for","lastModifiedDate":"2023-09-05"},{"lineNumber":772,"author":{"gitId":"shashahchk"},"content":"  any file whose nlink is \u003e 1, to identify hard links.","lastModifiedDate":"2023-09-05"},{"lineNumber":773,"author":{"gitId":"shashahchk"},"content":"- `statCache` A Map object that caches calls `lstat`.","lastModifiedDate":"2023-09-05"},{"lineNumber":774,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":775,"author":{"gitId":"shashahchk"},"content":"  from absolute paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":776,"author":{"gitId":"shashahchk"},"content":"- `cwd` The current working directory for creating the archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":777,"author":{"gitId":"shashahchk"},"content":"  Defaults to `process.cwd()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":778,"author":{"gitId":"shashahchk"},"content":"- `absolute` The absolute path to the entry on the filesystem.  By","lastModifiedDate":"2023-09-05"},{"lineNumber":779,"author":{"gitId":"shashahchk"},"content":"  default, this is `path.resolve(this.cwd, this.path)`, but it can be","lastModifiedDate":"2023-09-05"},{"lineNumber":780,"author":{"gitId":"shashahchk"},"content":"  overridden explicitly.","lastModifiedDate":"2023-09-05"},{"lineNumber":781,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":782,"author":{"gitId":"shashahchk"},"content":"- `win32` True if on a windows platform.  Causes behavior where paths","lastModifiedDate":"2023-09-05"},{"lineNumber":783,"author":{"gitId":"shashahchk"},"content":"  replace `\\` with `/`.","lastModifiedDate":"2023-09-05"},{"lineNumber":784,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":785,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":786,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":787,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":788,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":789,"author":{"gitId":"shashahchk"},"content":"- `umask` Set to restrict the modes on the entries in the archive,","lastModifiedDate":"2023-09-05"},{"lineNumber":790,"author":{"gitId":"shashahchk"},"content":"  somewhat like how umask works on file creation.  Defaults to","lastModifiedDate":"2023-09-05"},{"lineNumber":791,"author":{"gitId":"shashahchk"},"content":"  `process.umask()` on unix systems, or `0o22` on Windows.","lastModifiedDate":"2023-09-05"},{"lineNumber":792,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":793,"author":{"gitId":"shashahchk"},"content":"#### warn(message, data)","lastModifiedDate":"2023-09-05"},{"lineNumber":794,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":795,"author":{"gitId":"shashahchk"},"content":"If strict, emit an error with the provided message.","lastModifiedDate":"2023-09-05"},{"lineNumber":796,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":797,"author":{"gitId":"shashahchk"},"content":"Othewise, emit a `\u0027warn\u0027` event with the provided message and data.","lastModifiedDate":"2023-09-05"},{"lineNumber":798,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":799,"author":{"gitId":"shashahchk"},"content":"### class tar.WriteEntry.Sync","lastModifiedDate":"2023-09-05"},{"lineNumber":800,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":801,"author":{"gitId":"shashahchk"},"content":"Synchronous version of tar.WriteEntry","lastModifiedDate":"2023-09-05"},{"lineNumber":802,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":803,"author":{"gitId":"shashahchk"},"content":"### class tar.WriteEntry.Tar","lastModifiedDate":"2023-09-05"},{"lineNumber":804,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":805,"author":{"gitId":"shashahchk"},"content":"A version of tar.WriteEntry that gets its data from a tar.ReadEntry","lastModifiedDate":"2023-09-05"},{"lineNumber":806,"author":{"gitId":"shashahchk"},"content":"instead of from the filesystem.","lastModifiedDate":"2023-09-05"},{"lineNumber":807,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":808,"author":{"gitId":"shashahchk"},"content":"#### constructor(readEntry, options)","lastModifiedDate":"2023-09-05"},{"lineNumber":809,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":810,"author":{"gitId":"shashahchk"},"content":"`readEntry` is the entry being read out of another archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":811,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":812,"author":{"gitId":"shashahchk"},"content":"The following options are supported:","lastModifiedDate":"2023-09-05"},{"lineNumber":813,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":814,"author":{"gitId":"shashahchk"},"content":"- `portable` Omit metadata that is system-specific: `ctime`, `atime`,","lastModifiedDate":"2023-09-05"},{"lineNumber":815,"author":{"gitId":"shashahchk"},"content":"  `uid`, `gid`, `uname`, `gname`, `dev`, `ino`, and `nlink`.  Note","lastModifiedDate":"2023-09-05"},{"lineNumber":816,"author":{"gitId":"shashahchk"},"content":"  that `mtime` is still included, because this is necessary other","lastModifiedDate":"2023-09-05"},{"lineNumber":817,"author":{"gitId":"shashahchk"},"content":"  time-based operations.","lastModifiedDate":"2023-09-05"},{"lineNumber":818,"author":{"gitId":"shashahchk"},"content":"- `preservePaths` Allow absolute paths.  By default, `/` is stripped","lastModifiedDate":"2023-09-05"},{"lineNumber":819,"author":{"gitId":"shashahchk"},"content":"  from absolute paths.","lastModifiedDate":"2023-09-05"},{"lineNumber":820,"author":{"gitId":"shashahchk"},"content":"- `strict` Treat warnings as crash-worthy errors.  Default false.","lastModifiedDate":"2023-09-05"},{"lineNumber":821,"author":{"gitId":"shashahchk"},"content":"- `onwarn` A function that will get called with `(message, data)` for","lastModifiedDate":"2023-09-05"},{"lineNumber":822,"author":{"gitId":"shashahchk"},"content":"  any warnings encountered.","lastModifiedDate":"2023-09-05"},{"lineNumber":823,"author":{"gitId":"shashahchk"},"content":"- `noMtime` Set to true to omit writing `mtime` values for entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":824,"author":{"gitId":"shashahchk"},"content":"  Note that this prevents using other mtime-based features like","lastModifiedDate":"2023-09-05"},{"lineNumber":825,"author":{"gitId":"shashahchk"},"content":"  `tar.update` or the `keepNewer` option with the resulting tar archive.","lastModifiedDate":"2023-09-05"},{"lineNumber":826,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":827,"author":{"gitId":"shashahchk"},"content":"### class tar.Header","lastModifiedDate":"2023-09-05"},{"lineNumber":828,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":829,"author":{"gitId":"shashahchk"},"content":"A class for reading and writing header blocks.","lastModifiedDate":"2023-09-05"},{"lineNumber":830,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":831,"author":{"gitId":"shashahchk"},"content":"It has the following fields:","lastModifiedDate":"2023-09-05"},{"lineNumber":832,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":833,"author":{"gitId":"shashahchk"},"content":"- `nullBlock` True if decoding a block which is entirely composed of","lastModifiedDate":"2023-09-05"},{"lineNumber":834,"author":{"gitId":"shashahchk"},"content":"  `0x00` null bytes.  (Useful because tar files are terminated by","lastModifiedDate":"2023-09-05"},{"lineNumber":835,"author":{"gitId":"shashahchk"},"content":"  at least 2 null blocks.)","lastModifiedDate":"2023-09-05"},{"lineNumber":836,"author":{"gitId":"shashahchk"},"content":"- `cksumValid` True if the checksum in the header is valid, false","lastModifiedDate":"2023-09-05"},{"lineNumber":837,"author":{"gitId":"shashahchk"},"content":"  otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":838,"author":{"gitId":"shashahchk"},"content":"- `needPax` True if the values, as encoded, will require a Pax","lastModifiedDate":"2023-09-05"},{"lineNumber":839,"author":{"gitId":"shashahchk"},"content":"  extended header.","lastModifiedDate":"2023-09-05"},{"lineNumber":840,"author":{"gitId":"shashahchk"},"content":"- `path` The path of the entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":841,"author":{"gitId":"shashahchk"},"content":"- `mode` The 4 lowest-order octal digits of the file mode.  That is,","lastModifiedDate":"2023-09-05"},{"lineNumber":842,"author":{"gitId":"shashahchk"},"content":"  read/write/execute permissions for world, group, and owner, and the","lastModifiedDate":"2023-09-05"},{"lineNumber":843,"author":{"gitId":"shashahchk"},"content":"  setuid, setgid, and sticky bits.","lastModifiedDate":"2023-09-05"},{"lineNumber":844,"author":{"gitId":"shashahchk"},"content":"- `uid` Numeric user id of the file owner","lastModifiedDate":"2023-09-05"},{"lineNumber":845,"author":{"gitId":"shashahchk"},"content":"- `gid` Numeric group id of the file owner","lastModifiedDate":"2023-09-05"},{"lineNumber":846,"author":{"gitId":"shashahchk"},"content":"- `size` Size of the file in bytes","lastModifiedDate":"2023-09-05"},{"lineNumber":847,"author":{"gitId":"shashahchk"},"content":"- `mtime` Modified time of the file","lastModifiedDate":"2023-09-05"},{"lineNumber":848,"author":{"gitId":"shashahchk"},"content":"- `cksum` The checksum of the header.  This is generated by adding all","lastModifiedDate":"2023-09-05"},{"lineNumber":849,"author":{"gitId":"shashahchk"},"content":"  the bytes of the header block, treating the checksum field itself as","lastModifiedDate":"2023-09-05"},{"lineNumber":850,"author":{"gitId":"shashahchk"},"content":"  all ascii space characters (that is, `0x20`).","lastModifiedDate":"2023-09-05"},{"lineNumber":851,"author":{"gitId":"shashahchk"},"content":"- `type` The human-readable name of the type of entry this represents,","lastModifiedDate":"2023-09-05"},{"lineNumber":852,"author":{"gitId":"shashahchk"},"content":"  or the alphanumeric key if unknown.","lastModifiedDate":"2023-09-05"},{"lineNumber":853,"author":{"gitId":"shashahchk"},"content":"- `typeKey` The alphanumeric key for the type of entry this header","lastModifiedDate":"2023-09-05"},{"lineNumber":854,"author":{"gitId":"shashahchk"},"content":"  represents.","lastModifiedDate":"2023-09-05"},{"lineNumber":855,"author":{"gitId":"shashahchk"},"content":"- `linkpath` The target of Link and SymbolicLink entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":856,"author":{"gitId":"shashahchk"},"content":"- `uname` Human-readable user name of the file owner","lastModifiedDate":"2023-09-05"},{"lineNumber":857,"author":{"gitId":"shashahchk"},"content":"- `gname` Human-readable group name of the file owner","lastModifiedDate":"2023-09-05"},{"lineNumber":858,"author":{"gitId":"shashahchk"},"content":"- `devmaj` The major portion of the device number.  Always `0` for","lastModifiedDate":"2023-09-05"},{"lineNumber":859,"author":{"gitId":"shashahchk"},"content":"  files, directories, and links.","lastModifiedDate":"2023-09-05"},{"lineNumber":860,"author":{"gitId":"shashahchk"},"content":"- `devmin` The minor portion of the device number.  Always `0` for","lastModifiedDate":"2023-09-05"},{"lineNumber":861,"author":{"gitId":"shashahchk"},"content":"  files, directories, and links.","lastModifiedDate":"2023-09-05"},{"lineNumber":862,"author":{"gitId":"shashahchk"},"content":"- `atime` File access time.","lastModifiedDate":"2023-09-05"},{"lineNumber":863,"author":{"gitId":"shashahchk"},"content":"- `ctime` File change time.","lastModifiedDate":"2023-09-05"},{"lineNumber":864,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":865,"author":{"gitId":"shashahchk"},"content":"#### constructor(data, [offset\u003d0])","lastModifiedDate":"2023-09-05"},{"lineNumber":866,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":867,"author":{"gitId":"shashahchk"},"content":"`data` is optional.  It is either a Buffer that should be interpreted","lastModifiedDate":"2023-09-05"},{"lineNumber":868,"author":{"gitId":"shashahchk"},"content":"as a tar Header starting at the specified offset and continuing for","lastModifiedDate":"2023-09-05"},{"lineNumber":869,"author":{"gitId":"shashahchk"},"content":"512 bytes, or a data object of keys and values to set on the header","lastModifiedDate":"2023-09-05"},{"lineNumber":870,"author":{"gitId":"shashahchk"},"content":"object, and eventually encode as a tar Header.","lastModifiedDate":"2023-09-05"},{"lineNumber":871,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":872,"author":{"gitId":"shashahchk"},"content":"#### decode(block, offset)","lastModifiedDate":"2023-09-05"},{"lineNumber":873,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":874,"author":{"gitId":"shashahchk"},"content":"Decode the provided buffer starting at the specified offset.","lastModifiedDate":"2023-09-05"},{"lineNumber":875,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":876,"author":{"gitId":"shashahchk"},"content":"Buffer length must be greater than 512 bytes.","lastModifiedDate":"2023-09-05"},{"lineNumber":877,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":878,"author":{"gitId":"shashahchk"},"content":"#### set(data)","lastModifiedDate":"2023-09-05"},{"lineNumber":879,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":880,"author":{"gitId":"shashahchk"},"content":"Set the fields in the data object.","lastModifiedDate":"2023-09-05"},{"lineNumber":881,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":882,"author":{"gitId":"shashahchk"},"content":"#### encode(buffer, offset)","lastModifiedDate":"2023-09-05"},{"lineNumber":883,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":884,"author":{"gitId":"shashahchk"},"content":"Encode the header fields into the buffer at the specified offset.","lastModifiedDate":"2023-09-05"},{"lineNumber":885,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":886,"author":{"gitId":"shashahchk"},"content":"Returns `this.needPax` to indicate whether a Pax Extended Header is","lastModifiedDate":"2023-09-05"},{"lineNumber":887,"author":{"gitId":"shashahchk"},"content":"required to properly encode the specified data.","lastModifiedDate":"2023-09-05"},{"lineNumber":888,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":889,"author":{"gitId":"shashahchk"},"content":"### class tar.Pax","lastModifiedDate":"2023-09-05"},{"lineNumber":890,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":891,"author":{"gitId":"shashahchk"},"content":"An object representing a set of key-value pairs in an Pax extended","lastModifiedDate":"2023-09-05"},{"lineNumber":892,"author":{"gitId":"shashahchk"},"content":"header entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":893,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":894,"author":{"gitId":"shashahchk"},"content":"It has the following fields.  Where the same name is used, they have","lastModifiedDate":"2023-09-05"},{"lineNumber":895,"author":{"gitId":"shashahchk"},"content":"the same semantics as the tar.Header field of the same name.","lastModifiedDate":"2023-09-05"},{"lineNumber":896,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":897,"author":{"gitId":"shashahchk"},"content":"- `global` True if this represents a global extended header, or false","lastModifiedDate":"2023-09-05"},{"lineNumber":898,"author":{"gitId":"shashahchk"},"content":"  if it is for a single entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":899,"author":{"gitId":"shashahchk"},"content":"- `atime`","lastModifiedDate":"2023-09-05"},{"lineNumber":900,"author":{"gitId":"shashahchk"},"content":"- `charset`","lastModifiedDate":"2023-09-05"},{"lineNumber":901,"author":{"gitId":"shashahchk"},"content":"- `comment`","lastModifiedDate":"2023-09-05"},{"lineNumber":902,"author":{"gitId":"shashahchk"},"content":"- `ctime`","lastModifiedDate":"2023-09-05"},{"lineNumber":903,"author":{"gitId":"shashahchk"},"content":"- `gid`","lastModifiedDate":"2023-09-05"},{"lineNumber":904,"author":{"gitId":"shashahchk"},"content":"- `gname`","lastModifiedDate":"2023-09-05"},{"lineNumber":905,"author":{"gitId":"shashahchk"},"content":"- `linkpath`","lastModifiedDate":"2023-09-05"},{"lineNumber":906,"author":{"gitId":"shashahchk"},"content":"- `mtime`","lastModifiedDate":"2023-09-05"},{"lineNumber":907,"author":{"gitId":"shashahchk"},"content":"- `path`","lastModifiedDate":"2023-09-05"},{"lineNumber":908,"author":{"gitId":"shashahchk"},"content":"- `size`","lastModifiedDate":"2023-09-05"},{"lineNumber":909,"author":{"gitId":"shashahchk"},"content":"- `uid`","lastModifiedDate":"2023-09-05"},{"lineNumber":910,"author":{"gitId":"shashahchk"},"content":"- `uname`","lastModifiedDate":"2023-09-05"},{"lineNumber":911,"author":{"gitId":"shashahchk"},"content":"- `dev`","lastModifiedDate":"2023-09-05"},{"lineNumber":912,"author":{"gitId":"shashahchk"},"content":"- `ino`","lastModifiedDate":"2023-09-05"},{"lineNumber":913,"author":{"gitId":"shashahchk"},"content":"- `nlink`","lastModifiedDate":"2023-09-05"},{"lineNumber":914,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":915,"author":{"gitId":"shashahchk"},"content":"#### constructor(object, global)","lastModifiedDate":"2023-09-05"},{"lineNumber":916,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":917,"author":{"gitId":"shashahchk"},"content":"Set the fields set in the object.  `global` is a boolean that defaults","lastModifiedDate":"2023-09-05"},{"lineNumber":918,"author":{"gitId":"shashahchk"},"content":"to false.","lastModifiedDate":"2023-09-05"},{"lineNumber":919,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":920,"author":{"gitId":"shashahchk"},"content":"#### encode()","lastModifiedDate":"2023-09-05"},{"lineNumber":921,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":922,"author":{"gitId":"shashahchk"},"content":"Return a Buffer containing the header and body for the Pax extended","lastModifiedDate":"2023-09-05"},{"lineNumber":923,"author":{"gitId":"shashahchk"},"content":"header entry, or `null` if there is nothing to encode.","lastModifiedDate":"2023-09-05"},{"lineNumber":924,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":925,"author":{"gitId":"shashahchk"},"content":"#### encodeBody()","lastModifiedDate":"2023-09-05"},{"lineNumber":926,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":927,"author":{"gitId":"shashahchk"},"content":"Return a string representing the body of the pax extended header","lastModifiedDate":"2023-09-05"},{"lineNumber":928,"author":{"gitId":"shashahchk"},"content":"entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":929,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":930,"author":{"gitId":"shashahchk"},"content":"#### encodeField(fieldName)","lastModifiedDate":"2023-09-05"},{"lineNumber":931,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":932,"author":{"gitId":"shashahchk"},"content":"Return a string representing the key/value encoding for the specified","lastModifiedDate":"2023-09-05"},{"lineNumber":933,"author":{"gitId":"shashahchk"},"content":"fieldName, or `\u0027\u0027` if the field is unset.","lastModifiedDate":"2023-09-05"},{"lineNumber":934,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":935,"author":{"gitId":"shashahchk"},"content":"### tar.Pax.parse(string, extended, global)","lastModifiedDate":"2023-09-05"},{"lineNumber":936,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":937,"author":{"gitId":"shashahchk"},"content":"Return a new Pax object created by parsing the contents of the string","lastModifiedDate":"2023-09-05"},{"lineNumber":938,"author":{"gitId":"shashahchk"},"content":"provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":939,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":940,"author":{"gitId":"shashahchk"},"content":"If the `extended` object is set, then also add the fields from that","lastModifiedDate":"2023-09-05"},{"lineNumber":941,"author":{"gitId":"shashahchk"},"content":"object.  (This is necessary because multiple metadata entries can","lastModifiedDate":"2023-09-05"},{"lineNumber":942,"author":{"gitId":"shashahchk"},"content":"occur in sequence.)","lastModifiedDate":"2023-09-05"},{"lineNumber":943,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":944,"author":{"gitId":"shashahchk"},"content":"### tar.types","lastModifiedDate":"2023-09-05"},{"lineNumber":945,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":946,"author":{"gitId":"shashahchk"},"content":"A translation table for the `type` field in tar headers.","lastModifiedDate":"2023-09-05"},{"lineNumber":947,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":948,"author":{"gitId":"shashahchk"},"content":"#### tar.types.name.get(code)","lastModifiedDate":"2023-09-05"},{"lineNumber":949,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":950,"author":{"gitId":"shashahchk"},"content":"Get the human-readable name for a given alphanumeric code.","lastModifiedDate":"2023-09-05"},{"lineNumber":951,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":952,"author":{"gitId":"shashahchk"},"content":"#### tar.types.code.get(name)","lastModifiedDate":"2023-09-05"},{"lineNumber":953,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":954,"author":{"gitId":"shashahchk"},"content":"Get the alphanumeric code for a given human-readable name.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":954}},{"path":"node_modules/webidl-conversions/LICENSE.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# The BSD 2-Clause License","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2014, Domenic Denicola","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"All rights reserved.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":12}},{"path":"node_modules/webidl-conversions/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# WebIDL Type Conversions on JavaScript Values","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"This package implements, in JavaScript, the algorithms to convert a given JavaScript value according to a given [WebIDL](http://heycam.github.io/webidl/) [type](http://heycam.github.io/webidl/#idl-types).","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"The goal is that you should be able to write code like","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"const conversions \u003d require(\"webidl-conversions\");","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"function doStuff(x, y) {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    x \u003d conversions[\"boolean\"](x);","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    y \u003d conversions[\"unsigned long\"](y);","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    // actual algorithm code here","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"and your function `doStuff` will behave the same as a WebIDL operation declared as","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"```webidl","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"void doStuff(boolean x, unsigned long y);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"This package\u0027s main module\u0027s default export is an object with a variety of methods, each corresponding to a different WebIDL type. Each method, when invoked on a JavaScript value, will give back the new JavaScript value that results after passing through the WebIDL conversion rules. (See below for more details on what that means.) Alternately, the method could throw an error, if the WebIDL algorithm is specified to do so: for example `conversions[\"float\"](NaN)` [will throw a `TypeError`](http://heycam.github.io/webidl/#es-float).","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"## Status","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"All of the numeric types are implemented (float being implemented as double) and some others are as well - check the source for all of them. This list will grow over time in service of the [HTML as Custom Elements](https://github.com/dglazkov/html-as-custom-elements) project, but in the meantime, pull requests welcome!","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"I\u0027m not sure yet what the strategy will be for modifiers, e.g. [`[Clamp]`](http://heycam.github.io/webidl/#Clamp). Maybe something like `conversions[\"unsigned long\"](x, { clamp: true })`? We\u0027ll see.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"We might also want to extend the API to give better error messages, e.g. \"Argument 1 of HTMLMediaElement.fastSeek is not a finite floating-point value\" instead of \"Argument is not a finite floating-point value.\" This would require passing in more information to the conversion functions than we currently do.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"## Background","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"What\u0027s actually going on here, conceptually, is pretty weird. Let\u0027s try to explain.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"WebIDL, as part of its madness-inducing design, has its own type system. When people write algorithms in web platform specs, they usually operate on WebIDL values, i.e. instances of WebIDL types. For example, if they were specifying the algorithm for our `doStuff` operation above, they would treat `x` as a WebIDL value of [WebIDL type `boolean`](http://heycam.github.io/webidl/#idl-boolean). Crucially, they would _not_ treat `x` as a JavaScript variable whose value is either the JavaScript `true` or `false`. They\u0027re instead working in a different type system altogether, with its own rules.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"Separately from its type system, WebIDL defines a [\"binding\"](http://heycam.github.io/webidl/#ecmascript-binding) of the type system into JavaScript. This contains rules like: when you pass a JavaScript value to the JavaScript method that manifests a given WebIDL operation, how does that get converted into a WebIDL value? For example, a JavaScript `true` passed in the position of a WebIDL `boolean` argument becomes a WebIDL `true`. But, a JavaScript `true` passed in the position of a [WebIDL `unsigned long`](http://heycam.github.io/webidl/#idl-unsigned-long) becomes a WebIDL `1`. And so on.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"Finally, we have the actual implementation code. This is usually C++, although these days [some smart people are using Rust](https://github.com/servo/servo). The implementation, of course, has its own type system. So when they implement the WebIDL algorithms, they don\u0027t actually use WebIDL values, since those aren\u0027t \"real\" outside of specs. Instead, implementations apply the WebIDL binding rules in such a way as to convert incoming JavaScript values into C++ values. For example, if code in the browser called `doStuff(true, true)`, then the implementation code would eventually receive a C++ `bool` containing `true` and a C++ `uint32_t` containing `1`.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"The upside of all this is that implementations can abstract all the conversion logic away, letting WebIDL handle it, and focus on implementing the relevant methods in C++ with values of the correct type already provided. That is payoff of WebIDL, in a nutshell.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"And getting to that payoff is the goal of _this_ project—but for JavaScript implementations, instead of C++ ones. That is, this library is designed to make it easier for JavaScript developers to write functions that behave like a given WebIDL operation. So conceptually, the conversion pipeline, which in its general form is JavaScript values ↦ WebIDL values ↦ implementation-language values, in this case becomes JavaScript values ↦ WebIDL values ↦ JavaScript values. And that intermediate step is where all the logic is performed: a JavaScript `true` becomes a WebIDL `1` in an unsigned long context, which then becomes a JavaScript `1`.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"## Don\u0027t Use This","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"Seriously, why would you ever use this? You really shouldn\u0027t. WebIDL is … not great, and you shouldn\u0027t be emulating its semantics. If you\u0027re looking for a generic argument-processing library, you should find one with better rules than those from WebIDL. In general, your JavaScript should not be trying to become more like WebIDL; if anything, we should fix WebIDL to make it more like JavaScript.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"The _only_ people who should use this are those trying to create faithful implementations (or polyfills) of web platform interfaces defined in WebIDL.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":53}},{"path":"node_modules/whatwg-url/LICENSE.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"The MIT License (MIT)","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Copyright (c) 2015–2016 Sebastian Mayr","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"of this software and associated documentation files (the \"Software\"), to deal","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"in the Software without restriction, including without limitation the rights","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"copies of the Software, and to permit persons to whom the Software is","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"furnished to do so, subject to the following conditions:","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"The above copyright notice and this permission notice shall be included in","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"all copies or substantial portions of the Software.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"THE SOFTWARE.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":21}},{"path":"node_modules/whatwg-url/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"﻿# whatwg-url","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"whatwg-url is a full implementation of the WHATWG [URL Standard](https://url.spec.whatwg.org/). It can be used standalone, but it also exposes a lot of the internal algorithms that are useful for integrating a URL parser into a project like [jsdom](https://github.com/tmpvar/jsdom).","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## Current Status","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"whatwg-url is currently up to date with the URL spec up to commit [a62223](https://github.com/whatwg/url/commit/a622235308342c9adc7fc2fd1659ff059f7d5e2a).","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"### The `URL` Constructor","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"The main API is the [`URL`](https://url.spec.whatwg.org/#url) export, which follows the spec\u0027s behavior in all ways (including e.g. `USVString` conversion). Most consumers of this library will want to use this.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"### Low-level URL Standard API","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"The following methods are exported for use by places like jsdom that need to implement things like [`HTMLHyperlinkElementUtils`](https://html.spec.whatwg.org/#htmlhyperlinkelementutils). They operate on or return an \"internal URL\" or [\"URL record\"](https://url.spec.whatwg.org/#concept-url) type.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"- [URL parser](https://url.spec.whatwg.org/#concept-url-parser): `parseURL(input, { baseURL, encodingOverride })`","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"- [Basic URL parser](https://url.spec.whatwg.org/#concept-basic-url-parser): `basicURLParse(input, { baseURL, encodingOverride, url, stateOverride })`","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"- [URL serializer](https://url.spec.whatwg.org/#concept-url-serializer): `serializeURL(urlRecord, excludeFragment)`","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"- [Host serializer](https://url.spec.whatwg.org/#concept-host-serializer): `serializeHost(hostFromURLRecord)`","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"- [Serialize an integer](https://url.spec.whatwg.org/#serialize-an-integer): `serializeInteger(number)`","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"- [Origin](https://url.spec.whatwg.org/#concept-url-origin) [serializer](https://html.spec.whatwg.org/multipage/browsers.html#serialization-of-an-origin): `serializeURLOrigin(urlRecord)`","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"- [Set the username](https://url.spec.whatwg.org/#set-the-username): `setTheUsername(urlRecord, usernameString)`","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"- [Set the password](https://url.spec.whatwg.org/#set-the-password): `setThePassword(urlRecord, passwordString)`","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"- [Cannot have a username/password/port](https://url.spec.whatwg.org/#cannot-have-a-username-password-port): `cannotHaveAUsernamePasswordPort(urlRecord)`","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"The `stateOverride` parameter is one of the following strings:","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"- [`\"scheme start\"`](https://url.spec.whatwg.org/#scheme-start-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"- [`\"scheme\"`](https://url.spec.whatwg.org/#scheme-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"- [`\"no scheme\"`](https://url.spec.whatwg.org/#no-scheme-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"- [`\"special relative or authority\"`](https://url.spec.whatwg.org/#special-relative-or-authority-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"- [`\"path or authority\"`](https://url.spec.whatwg.org/#path-or-authority-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"- [`\"relative\"`](https://url.spec.whatwg.org/#relative-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"- [`\"relative slash\"`](https://url.spec.whatwg.org/#relative-slash-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"- [`\"special authority slashes\"`](https://url.spec.whatwg.org/#special-authority-slashes-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"- [`\"special authority ignore slashes\"`](https://url.spec.whatwg.org/#special-authority-ignore-slashes-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"- [`\"authority\"`](https://url.spec.whatwg.org/#authority-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"- [`\"host\"`](https://url.spec.whatwg.org/#host-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"- [`\"hostname\"`](https://url.spec.whatwg.org/#hostname-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"- [`\"port\"`](https://url.spec.whatwg.org/#port-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"- [`\"file\"`](https://url.spec.whatwg.org/#file-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"- [`\"file slash\"`](https://url.spec.whatwg.org/#file-slash-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"- [`\"file host\"`](https://url.spec.whatwg.org/#file-host-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"- [`\"path start\"`](https://url.spec.whatwg.org/#path-start-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"- [`\"path\"`](https://url.spec.whatwg.org/#path-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"- [`\"cannot-be-a-base-URL path\"`](https://url.spec.whatwg.org/#cannot-be-a-base-url-path-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"- [`\"query\"`](https://url.spec.whatwg.org/#query-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"- [`\"fragment\"`](https://url.spec.whatwg.org/#fragment-state)","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"The URL record type has the following API:","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"- [`scheme`](https://url.spec.whatwg.org/#concept-url-scheme)","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"- [`username`](https://url.spec.whatwg.org/#concept-url-username)","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"- [`password`](https://url.spec.whatwg.org/#concept-url-password)","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"- [`host`](https://url.spec.whatwg.org/#concept-url-host)","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"- [`port`](https://url.spec.whatwg.org/#concept-url-port)","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"- [`path`](https://url.spec.whatwg.org/#concept-url-path) (as an array)","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"- [`query`](https://url.spec.whatwg.org/#concept-url-query)","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"- [`fragment`](https://url.spec.whatwg.org/#concept-url-fragment)","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"- [`cannotBeABaseURL`](https://url.spec.whatwg.org/#url-cannot-be-a-base-url-flag) (as a boolean)","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"These properties should be treated with care, as in general changing them will cause the URL record to be in an inconsistent state until the appropriate invocation of `basicURLParse` is used to fix it up. You can see examples of this in the URL Standard, where there are many step sequences like \"4. Set context object’s url’s fragment to the empty string. 5. Basic URL parse _input_ with context object’s url as _url_ and fragment state as _state override_.\" In between those two steps, a URL record is in an unusable state.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"The return value of \"failure\" in the spec is represented by the string `\"failure\"`. That is, functions like `parseURL` and `basicURLParse` can return _either_ a URL record _or_ the string `\"failure\"`.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":67}},{"path":"node_modules/wrappy/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# wrappy","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Callback wrapping utility","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"## USAGE","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"var wrappy \u003d require(\"wrappy\")","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"// var wrapper \u003d wrappy(wrapperFunction)","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"// make sure a cb is called only once","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"// See also: http://npm.im/once for this specific use case","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"var once \u003d wrappy(function (cb) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"  var called \u003d false","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"  return function () {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    if (called) return","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    called \u003d true","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    return cb.apply(this, arguments)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"function printBoo () {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"  console.log(\u0027boo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"// has some rando property","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"printBoo.iAmBooPrinter \u003d true","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"var onlyPrintOnce \u003d once(printBoo)","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"onlyPrintOnce() // prints \u0027boo\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"onlyPrintOnce() // does nothing","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"// random property is retained!","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"assert.equal(onlyPrintOnce.iAmBooPrinter, true)","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":36}},{"path":"node_modules/yallist/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# yallist","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"Yet Another Linked List","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"There are many doubly-linked list implementations like it, but this","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"one is mine.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"For when an array would be too big, and a Map can\u0027t be iterated in","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"reverse order.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/isaacs/yallist.svg?branch\u003dmaster)](https://travis-ci.org/isaacs/yallist) [![Coverage Status](https://coveralls.io/repos/isaacs/yallist/badge.svg?service\u003dgithub)](https://coveralls.io/github/isaacs/yallist)","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"## basic usage","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"```javascript","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"var yallist \u003d require(\u0027yallist\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"var myList \u003d yallist.create([1, 2, 3])","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"myList.push(\u0027foo\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"myList.unshift(\u0027bar\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"// of course pop() and shift() are there, too","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"console.log(myList.toArray()) // [\u0027bar\u0027, 1, 2, 3, \u0027foo\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"myList.forEach(function (k) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"  // walk the list head to tail","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"myList.forEachReverse(function (k, index, list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"  // walk the list tail to head","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"var myDoubledList \u003d myList.map(function (k) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"  return k + k","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"})","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"// now myDoubledList contains [\u0027barbar\u0027, 2, 4, 6, \u0027foofoo\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"// mapReverse is also a thing","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"var myDoubledListReverse \u003d myList.mapReverse(function (k) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"  return k + k","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"}) // [\u0027foofoo\u0027, 6, 4, 2, \u0027barbar\u0027]","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"var reduced \u003d myList.reduce(function (set, entry) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"  set +\u003d entry","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"  return set","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"}, \u0027start\u0027)","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"console.log(reduced) // \u0027startfoo123bar\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"## api","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"The whole API is considered \"public\".","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"Functions with the same name as an Array method work more or less the","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"same way.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"There\u0027s reverse versions of most things because that\u0027s the point.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"### Yallist","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"Default export, the class that holds and manages a list.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"Call it with either a forEach-able (like an array) or a set of","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"arguments, to initialize the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"The Array-ish methods all act like you\u0027d expect.  No magic length,","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"though, so if you change that it won\u0027t automatically prune or add","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"empty spots.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"### Yallist.create(..)","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"Alias for Yallist function.  Some people like factories.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"#### yallist.head","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"The first node in the list","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"#### yallist.tail","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"The last node in the list","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"#### yallist.length","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"The number of nodes in the list.  (Change this at your peril.  It is","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"not magic like Array length.)","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"#### yallist.toArray()","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"Convert the list to an array.","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"#### yallist.forEach(fn, [thisp])","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"Call a function on each item in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"#### yallist.forEachReverse(fn, [thisp])","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"Call a function on each item in the list, in reverse order.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"#### yallist.get(n)","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"Get the data at position `n` in the list.  If you use this a lot,","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"probably better off just using an Array.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"#### yallist.getReverse(n)","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"Get the data at position `n`, counting from the tail.","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"#### yallist.map(fn, thisp)","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"Create a new Yallist with the result of calling the function on each","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"item.","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"#### yallist.mapReverse(fn, thisp)","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"Same as `map`, but in reverse.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"#### yallist.pop()","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"Get the data from the list tail, and remove the tail from the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"#### yallist.push(item, ...)","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"Insert one or more items to the tail of the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"#### yallist.reduce(fn, initialValue)","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"Like Array.reduce.","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"#### yallist.reduceReverse","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"Like Array.reduce, but in reverse.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"#### yallist.reverse","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"Reverse the list in place.","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"#### yallist.shift()","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"Get the data from the list head, and remove the head from the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"#### yallist.slice([from], [to])","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"Just like Array.slice, but returns a new Yallist.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"#### yallist.sliceReverse([from], [to])","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"Just like yallist.slice, but the result is returned in reverse.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"#### yallist.toArray()","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"Create an array representation of the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"#### yallist.toArrayReverse()","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"Create a reversed array representation of the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"#### yallist.unshift(item, ...)","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"Insert one or more items to the head of the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"#### yallist.unshiftNode(node)","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"Move a Node object to the front of the list.  (That is, pull it out of","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"wherever it lives, and make it the new head.)","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"If the node belongs to a different list, then that list will remove it","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"first.","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"#### yallist.pushNode(node)","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"Move a Node object to the end of the list.  (That is, pull it out of","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"wherever it lives, and make it the new tail.)","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"If the node belongs to a list already, then that list will remove it","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"first.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"#### yallist.removeNode(node)","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"Remove a node from the list, preserving referential integrity of head","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"and tail and other nodes.","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"Will throw an error if you try to have a list remove a node that","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"doesn\u0027t belong to it.","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"### Yallist.Node","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"The class that holds the data and is actually the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"Call with `var n \u003d new Node(value, previousNode, nextNode)`","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"Note that if you do direct operations on Nodes themselves, it\u0027s very","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"easy to get into weird states where the list is broken.  Be careful :)","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"#### node.next","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"The next node in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"#### node.prev","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"The previous node in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"#### node.value","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"The data the node contains.","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"#### node.list","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"The list to which this node belongs.  (Null if it does not belong to","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"any list.)","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":204}},{"path":"node_modules/yauzl/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"# yauzl","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"[![Build Status](https://travis-ci.org/thejoshwolfe/yauzl.svg?branch\u003dmaster)](https://travis-ci.org/thejoshwolfe/yauzl)","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"[![Coverage Status](https://img.shields.io/coveralls/thejoshwolfe/yauzl.svg)](https://coveralls.io/r/thejoshwolfe/yauzl)","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"yet another unzip library for node. For zipping, see","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"[yazl](https://github.com/thejoshwolfe/yazl).","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"Design principles:","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":" * Follow the spec.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"   Don\u0027t scan for local file headers.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"   Read the central directory for file metadata.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"   (see [No Streaming Unzip API](#no-streaming-unzip-api)).","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":" * Don\u0027t block the JavaScript thread.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"   Use and provide async APIs.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":" * Keep memory usage under control.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"   Don\u0027t attempt to buffer entire files in RAM at once.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":" * Never crash (if used properly).","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"   Don\u0027t let malformed zip files bring down client applications who are trying to catch errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":" * Catch unsafe file names.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"   See `validateFileName()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"## Usage","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"var yauzl \u003d require(\"yauzl\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"yauzl.open(\"path/to/file.zip\", {lazyEntries: true}, function(err, zipfile) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"  if (err) throw err;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"  zipfile.readEntry();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"  zipfile.on(\"entry\", function(entry) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"    if (/\\/$/.test(entry.fileName)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"      // Directory file names end with \u0027/\u0027.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"      // Note that entires for directories themselves are optional.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"      // An entry\u0027s fileName implicitly requires its parent directories to exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"      zipfile.readEntry();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"      // file entry","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"      zipfile.openReadStream(entry, function(err, readStream) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        if (err) throw err;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        readStream.on(\"end\", function() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"          zipfile.readEntry();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        readStream.pipe(somewhere);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"      });","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"  });","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"See also `examples/` for more usage examples.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"## API","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"The default for every optional `callback` parameter is:","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"function defaultCallback(err) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"  if (err) throw err;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"### open(path, [options], [callback])","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"Calls `fs.open(path, \"r\")` and reads the `fd` effectively the same as `fromFd()` would.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"`options` may be omitted or `null`. The defaults are `{autoClose: true, lazyEntries: false, decodeStrings: true, validateEntrySizes: true, strictFileNames: false}`.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"`autoClose` is effectively equivalent to:","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"zipfile.once(\"end\", function() {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"  zipfile.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"});","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"`lazyEntries` indicates that entries should be read only when `readEntry()` is called.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"If `lazyEntries` is `false`, `entry` events will be emitted as fast as possible to allow `pipe()`ing","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"file data from all entries in parallel.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"This is not recommended, as it can lead to out of control memory usage for zip files with many entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"See [issue #22](https://github.com/thejoshwolfe/yauzl/issues/22).","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"If `lazyEntries` is `true`, an `entry` or `end` event will be emitted in response to each call to `readEntry()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"This allows processing of one entry at a time, and will keep memory usage under control for zip files with many entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"`decodeStrings` is the default and causes yauzl to decode strings with `CP437` or `UTF-8` as required by the spec.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"The exact effects of turning this option off are:","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"* `zipfile.comment`, `entry.fileName`, and `entry.fileComment` will be `Buffer` objects instead of `String`s.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"* Any Info-ZIP Unicode Path Extra Field will be ignored. See `extraFields`.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"* Automatic file name validation will not be performed. See `validateFileName()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"`validateEntrySizes` is the default and ensures that an entry\u0027s reported uncompressed size matches its actual uncompressed size.","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"This check happens as early as possible, which is either before emitting each `\"entry\"` event (for entries with no compression),","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"or during the `readStream` piping after calling `openReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"See `openReadStream()` for more information on defending against zip bomb attacks.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"When `strictFileNames` is `false` (the default) and `decodeStrings` is `true`,","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"all backslash (`\\`) characters in each `entry.fileName` are replaced with forward slashes (`/`).","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"The spec forbids file names with backslashes,","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"but Microsoft\u0027s `System.IO.Compression.ZipFile` class in .NET versions 4.5.0 until 4.6.1","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"creates non-conformant zipfiles with backslashes in file names.","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"`strictFileNames` is `false` by default so that clients can read these","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"non-conformant zipfiles without knowing about this Microsoft-specific bug.","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"When `strictFileNames` is `true` and `decodeStrings` is `true`,","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"entries with backslashes in their file names will result in an error. See `validateFileName()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"When `decodeStrings` is `false`, `strictFileNames` has no effect.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"The `callback` is given the arguments `(err, zipfile)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"An `err` is provided if the End of Central Directory Record cannot be found, or if its metadata appears malformed.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"This kind of error usually indicates that this is not a zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"Otherwise, `zipfile` is an instance of `ZipFile`.","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"### fromFd(fd, [options], [callback])","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"Reads from the fd, which is presumed to be an open .zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"Note that random access is required by the zip file specification,","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"so the fd cannot be an open socket or any other fd that does not support random access.","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"`options` may be omitted or `null`. The defaults are `{autoClose: false, lazyEntries: false, decodeStrings: true, validateEntrySizes: true, strictFileNames: false}`.","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"See `open()` for the meaning of the options and callback.","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"### fromBuffer(buffer, [options], [callback])","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"Like `fromFd()`, but reads from a RAM buffer instead of an open file.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"`buffer` is a `Buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"If a `ZipFile` is acquired from this method,","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"it will never emit the `close` event,","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"and calling `close()` is not necessary.","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"`options` may be omitted or `null`. The defaults are `{lazyEntries: false, decodeStrings: true, validateEntrySizes: true, strictFileNames: false}`.","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"See `open()` for the meaning of the options and callback.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"The `autoClose` option is ignored for this method.","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"### fromRandomAccessReader(reader, totalSize, [options], [callback])","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"This method of reading a zip file allows clients to implement their own back-end file system.","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"For example, a client might translate read calls into network requests.","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"The `reader` parameter must be of a type that is a subclass of","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"[RandomAccessReader](#class-randomaccessreader) that implements the required methods.","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"The `totalSize` is a Number and indicates the total file size of the zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"`options` may be omitted or `null`. The defaults are `{autoClose: true, lazyEntries: false, decodeStrings: true, validateEntrySizes: true, strictFileNames: false}`.","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"See `open()` for the meaning of the options and callback.","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"### dosDateTimeToDate(date, time)","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"Converts MS-DOS `date` and `time` data into a JavaScript `Date` object.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"Each parameter is a `Number` treated as an unsigned 16-bit integer.","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"Note that this format does not support timezones,","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"so the returned object will use the local timezone.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"### validateFileName(fileName)","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"Returns `null` or a `String` error message depending on the validity of `fileName`.","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"If `fileName` starts with `\"/\"` or `/[A-Za-z]:\\//` or if it contains `\"..\"` path segments or `\"\\\\\"`,","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"this function returns an error message appropriate for use like this:","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"var errorMessage \u003d yauzl.validateFileName(fileName);","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"if (errorMessage !\u003d null) throw new Error(errorMessage);","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"This function is automatically run for each entry, as long as `decodeStrings` is `true`.","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"See `open()`, `strictFileNames`, and `Event: \"entry\"` for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"### Class: ZipFile","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"The constructor for the class is not part of the public API.","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"Use `open()`, `fromFd()`, `fromBuffer()`, or `fromRandomAccessReader()` instead.","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"#### Event: \"entry\"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"Callback gets `(entry)`, which is an `Entry`.","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"See `open()` and `readEntry()` for when this event is emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"If `decodeStrings` is `true`, entries emitted via this event have already passed file name validation.","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"See `validateFileName()` and `open()` for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"If `validateEntrySizes` is `true` and this entry\u0027s `compressionMethod` is `0` (stored without compression),","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"this entry has already passed entry size validation.","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"See `open()` for more information.","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"#### Event: \"end\"","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"Emitted after the last `entry` event has been emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"See `open()` and `readEntry()` for more info on when this event is emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"#### Event: \"close\"","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"Emitted after the fd is actually closed.","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"This is after calling `close()` (or after the `end` event when `autoClose` is `true`),","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"and after all stream pipelines created from `openReadStream()` have finished reading data from the fd.","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"If this `ZipFile` was acquired from `fromRandomAccessReader()`,","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"the \"fd\" in the previous paragraph refers to the `RandomAccessReader` implemented by the client.","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"If this `ZipFile` was acquired from `fromBuffer()`, this event is never emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"#### Event: \"error\"","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"Emitted in the case of errors with reading the zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"(Note that other errors can be emitted from the streams created from `openReadStream()` as well.)","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"After this event has been emitted, no further `entry`, `end`, or `error` events will be emitted,","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"shashahchk"},"content":"but the `close` event may still be emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"shashahchk"},"content":"#### readEntry()","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"shashahchk"},"content":"Causes this `ZipFile` to emit an `entry` or `end` event (or an `error` event).","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"shashahchk"},"content":"This method must only be called when this `ZipFile` was created with the `lazyEntries` option set to `true` (see `open()`).","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"shashahchk"},"content":"When this `ZipFile` was created with the `lazyEntries` option set to `true`,","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"shashahchk"},"content":"`entry` and `end` events are only ever emitted in response to this method call.","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"shashahchk"},"content":"The event that is emitted in response to this method will not be emitted until after this method has returned,","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"shashahchk"},"content":"so it is safe to call this method before attaching event listeners.","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"shashahchk"},"content":"After calling this method, calling this method again before the response event has been emitted will cause undefined behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"shashahchk"},"content":"Calling this method after the `end` event has been emitted will cause undefined behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"shashahchk"},"content":"Calling this method after calling `close()` will cause undefined behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"shashahchk"},"content":"#### openReadStream(entry, [options], callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"shashahchk"},"content":"`entry` must be an `Entry` object from this `ZipFile`.","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"shashahchk"},"content":"`callback` gets `(err, readStream)`, where `readStream` is a `Readable Stream` that provides the file data for this entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"shashahchk"},"content":"If this zipfile is already closed (see `close()`), the `callback` will receive an `err`.","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"shashahchk"},"content":"`options` may be omitted or `null`, and has the following defaults:","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"shashahchk"},"content":"{","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"shashahchk"},"content":"  decompress: entry.isCompressed() ? true : null,","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"shashahchk"},"content":"  decrypt: null,","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"shashahchk"},"content":"  start: 0,                  // actually the default is null, see below","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"shashahchk"},"content":"  end: entry.compressedSize, // actually the default is null, see below","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"shashahchk"},"content":"If the entry is compressed (with a supported compression method),","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"shashahchk"},"content":"and the `decompress` option is `true` (or omitted),","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"shashahchk"},"content":"the read stream provides the decompressed data.","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"shashahchk"},"content":"Omitting the `decompress` option is what most clients should do.","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"shashahchk"},"content":"The `decompress` option must be `null` (or omitted) when the entry is not compressed (see `isCompressed()`),","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"shashahchk"},"content":"and either `true` (or omitted) or `false` when the entry is compressed.","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"shashahchk"},"content":"Specifying `decompress: false` for a compressed entry causes the read stream","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"shashahchk"},"content":"to provide the raw compressed file data without going through a zlib inflate transform.","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"shashahchk"},"content":"If the entry is encrypted (see `isEncrypted()`), clients may want to avoid calling `openReadStream()` on the entry entirely.","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"shashahchk"},"content":"Alternatively, clients may call `openReadStream()` for encrypted entries and specify `decrypt: false`.","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"shashahchk"},"content":"If the entry is also compressed, clients must *also* specify `decompress: false`.","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"shashahchk"},"content":"Specifying `decrypt: false` for an encrypted entry causes the read stream to provide the raw, still-encrypted file data.","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"shashahchk"},"content":"(This data includes the 12-byte header described in the spec.)","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"shashahchk"},"content":"The `decrypt` option must be `null` (or omitted) for non-encrypted entries, and `false` for encrypted entries.","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"shashahchk"},"content":"Omitting the `decrypt` option (or specifying it as `null`) for an encrypted entry","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"shashahchk"},"content":"will result in the `callback` receiving an `err`.","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"shashahchk"},"content":"This default behavior is so that clients not accounting for encrypted files aren\u0027t surprised by bogus file data.","lastModifiedDate":"2023-09-05"},{"lineNumber":263,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"shashahchk"},"content":"The `start` (inclusive) and `end` (exclusive) options are byte offsets into this entry\u0027s file data,","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"shashahchk"},"content":"and can be used to obtain part of an entry\u0027s file data rather than the whole thing.","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"shashahchk"},"content":"If either of these options are specified and non-`null`,","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"shashahchk"},"content":"then the above options must be used to obain the file\u0027s raw data.","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"shashahchk"},"content":"Speficying `{start: 0, end: entry.compressedSize}` will result in the complete file,","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"shashahchk"},"content":"which is effectively the default values for these options,","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"shashahchk"},"content":"but note that unlike omitting the options, when you specify `start` or `end` as any non-`null` value,","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"shashahchk"},"content":"the above requirement is still enforced that you must also pass the appropriate options to get the file\u0027s raw data.","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":273,"author":{"gitId":"shashahchk"},"content":"It\u0027s possible for the `readStream` provided to the `callback` to emit errors for several reasons.","lastModifiedDate":"2023-09-05"},{"lineNumber":274,"author":{"gitId":"shashahchk"},"content":"For example, if zlib cannot decompress the data, the zlib error will be emitted from the `readStream`.","lastModifiedDate":"2023-09-05"},{"lineNumber":275,"author":{"gitId":"shashahchk"},"content":"Two more error cases (when `validateEntrySizes` is `true`) are if the decompressed data has too many","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"shashahchk"},"content":"or too few actual bytes compared to the reported byte count from the entry\u0027s `uncompressedSize` field.","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"shashahchk"},"content":"yauzl notices this false information and emits an error from the `readStream`","lastModifiedDate":"2023-09-05"},{"lineNumber":278,"author":{"gitId":"shashahchk"},"content":"after some number of bytes have already been piped through the stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"shashahchk"},"content":"This check allows clients to trust the `uncompressedSize` field in `Entry` objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":281,"author":{"gitId":"shashahchk"},"content":"Guarding against [zip bomb](http://en.wikipedia.org/wiki/Zip_bomb) attacks can be accomplished by","lastModifiedDate":"2023-09-05"},{"lineNumber":282,"author":{"gitId":"shashahchk"},"content":"doing some heuristic checks on the size metadata and then watching out for the above errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":283,"author":{"gitId":"shashahchk"},"content":"Such heuristics are outside the scope of this library,","lastModifiedDate":"2023-09-05"},{"lineNumber":284,"author":{"gitId":"shashahchk"},"content":"but enforcing the `uncompressedSize` is implemented here as a security feature.","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":286,"author":{"gitId":"shashahchk"},"content":"It is possible to destroy the `readStream` before it has piped all of its data.","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"shashahchk"},"content":"To do this, call `readStream.destroy()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"shashahchk"},"content":"You must `unpipe()` the `readStream` from any destination before calling `readStream.destroy()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"shashahchk"},"content":"If this zipfile was created using `fromRandomAccessReader()`, the `RandomAccessReader` implementation","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"shashahchk"},"content":"must provide readable streams that implement a `.destroy()` method (see `randomAccessReader._readStreamForRange()`)","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"shashahchk"},"content":"in order for calls to `readStream.destroy()` to work in this context.","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"shashahchk"},"content":"#### close()","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":295,"author":{"gitId":"shashahchk"},"content":"Causes all future calls to `openReadStream()` to fail,","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"shashahchk"},"content":"and closes the fd, if any, after all streams created by `openReadStream()` have emitted their `end` events.","lastModifiedDate":"2023-09-05"},{"lineNumber":297,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":298,"author":{"gitId":"shashahchk"},"content":"If the `autoClose` option is set to `true` (see `open()`),","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"shashahchk"},"content":"this function will be called automatically effectively in response to this object\u0027s `end` event.","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"shashahchk"},"content":"If the `lazyEntries` option is set to `false` (see `open()`) and this object\u0027s `end` event has not been emitted yet,","lastModifiedDate":"2023-09-05"},{"lineNumber":302,"author":{"gitId":"shashahchk"},"content":"this function causes undefined behavior.","lastModifiedDate":"2023-09-05"},{"lineNumber":303,"author":{"gitId":"shashahchk"},"content":"If the `lazyEntries` option is set to `true`,","lastModifiedDate":"2023-09-05"},{"lineNumber":304,"author":{"gitId":"shashahchk"},"content":"you can call this function instead of calling `readEntry()` to abort reading the entries of a zipfile.","lastModifiedDate":"2023-09-05"},{"lineNumber":305,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":306,"author":{"gitId":"shashahchk"},"content":"It is safe to call this function multiple times; after the first call, successive calls have no effect.","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"shashahchk"},"content":"This includes situations where the `autoClose` option effectively calls this function for you.","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"shashahchk"},"content":"If `close()` is never called, then the zipfile is \"kept open\".","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"shashahchk"},"content":"For zipfiles created with `fromFd()`, this will leave the `fd` open, which may be desirable.","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"shashahchk"},"content":"For zipfiles created with `open()`, this will leave the underlying `fd` open, thereby \"leaking\" it, which is probably undesirable.","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"shashahchk"},"content":"For zipfiles created with `fromRandomAccessReader()`, the reader\u0027s `close()` method will never be called.","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"shashahchk"},"content":"For zipfiles created with `fromBuffer()`, the `close()` function has no effect whether called or not.","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"shashahchk"},"content":"Regardless of how this `ZipFile` was created, there are no resources other than those listed above that require cleanup from this function.","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"shashahchk"},"content":"This means it may be desirable to never call `close()` in some usecases.","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"shashahchk"},"content":"#### isOpen","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"shashahchk"},"content":"`Boolean`. `true` until `close()` is called; then it\u0027s `false`.","lastModifiedDate":"2023-09-05"},{"lineNumber":321,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"shashahchk"},"content":"#### entryCount","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":324,"author":{"gitId":"shashahchk"},"content":"`Number`. Total number of central directory records.","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"shashahchk"},"content":"#### comment","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":328,"author":{"gitId":"shashahchk"},"content":"`String`. Always decoded with `CP437` per the spec.","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"shashahchk"},"content":"If `decodeStrings` is `false` (see `open()`), this field is the undecoded `Buffer` instead of a decoded `String`.","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"shashahchk"},"content":"### Class: Entry","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"shashahchk"},"content":"Objects of this class represent Central Directory Records.","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"shashahchk"},"content":"Refer to the zipfile specification for more details about these fields.","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"shashahchk"},"content":"These fields are of type `Number`:","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"shashahchk"},"content":" * `versionMadeBy`","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"shashahchk"},"content":" * `versionNeededToExtract`","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"shashahchk"},"content":" * `generalPurposeBitFlag`","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"shashahchk"},"content":" * `compressionMethod`","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"shashahchk"},"content":" * `lastModFileTime` (MS-DOS format, see `getLastModDateTime`)","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"shashahchk"},"content":" * `lastModFileDate` (MS-DOS format, see `getLastModDateTime`)","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"shashahchk"},"content":" * `crc32`","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"shashahchk"},"content":" * `compressedSize`","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"shashahchk"},"content":" * `uncompressedSize`","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"shashahchk"},"content":" * `fileNameLength` (bytes)","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"shashahchk"},"content":" * `extraFieldLength` (bytes)","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"shashahchk"},"content":" * `fileCommentLength` (bytes)","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"shashahchk"},"content":" * `internalFileAttributes`","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"shashahchk"},"content":" * `externalFileAttributes`","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"shashahchk"},"content":" * `relativeOffsetOfLocalHeader`","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"shashahchk"},"content":"#### fileName","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"shashahchk"},"content":"`String`.","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"shashahchk"},"content":"Following the spec, the bytes for the file name are decoded with","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"shashahchk"},"content":"`UTF-8` if `generalPurposeBitFlag \u0026 0x800`, otherwise with `CP437`.","lastModifiedDate":"2023-09-05"},{"lineNumber":360,"author":{"gitId":"shashahchk"},"content":"Alternatively, this field may be populated from the Info-ZIP Unicode Path Extra Field","lastModifiedDate":"2023-09-05"},{"lineNumber":361,"author":{"gitId":"shashahchk"},"content":"(see `extraFields`).","lastModifiedDate":"2023-09-05"},{"lineNumber":362,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":363,"author":{"gitId":"shashahchk"},"content":"This field is automatically validated by `validateFileName()` before yauzl emits an \"entry\" event.","lastModifiedDate":"2023-09-05"},{"lineNumber":364,"author":{"gitId":"shashahchk"},"content":"If this field would contain unsafe characters, yauzl emits an error instead of an entry.","lastModifiedDate":"2023-09-05"},{"lineNumber":365,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":366,"author":{"gitId":"shashahchk"},"content":"If `decodeStrings` is `false` (see `open()`), this field is the undecoded `Buffer` instead of a decoded `String`.","lastModifiedDate":"2023-09-05"},{"lineNumber":367,"author":{"gitId":"shashahchk"},"content":"Therefore, `generalPurposeBitFlag` and any Info-ZIP Unicode Path Extra Field are ignored.","lastModifiedDate":"2023-09-05"},{"lineNumber":368,"author":{"gitId":"shashahchk"},"content":"Furthermore, no automatic file name validation is performed for this file name.","lastModifiedDate":"2023-09-05"},{"lineNumber":369,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":370,"author":{"gitId":"shashahchk"},"content":"#### extraFields","lastModifiedDate":"2023-09-05"},{"lineNumber":371,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":372,"author":{"gitId":"shashahchk"},"content":"`Array` with each entry in the form `{id: id, data: data}`,","lastModifiedDate":"2023-09-05"},{"lineNumber":373,"author":{"gitId":"shashahchk"},"content":"where `id` is a `Number` and `data` is a `Buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":374,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":375,"author":{"gitId":"shashahchk"},"content":"This library looks for and reads the ZIP64 Extended Information Extra Field (0x0001)","lastModifiedDate":"2023-09-05"},{"lineNumber":376,"author":{"gitId":"shashahchk"},"content":"in order to support ZIP64 format zip files.","lastModifiedDate":"2023-09-05"},{"lineNumber":377,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":378,"author":{"gitId":"shashahchk"},"content":"This library also looks for and reads the Info-ZIP Unicode Path Extra Field (0x7075)","lastModifiedDate":"2023-09-05"},{"lineNumber":379,"author":{"gitId":"shashahchk"},"content":"in order to support some zipfiles that use it instead of General Purpose Bit 11","lastModifiedDate":"2023-09-05"},{"lineNumber":380,"author":{"gitId":"shashahchk"},"content":"to convey `UTF-8` file names.","lastModifiedDate":"2023-09-05"},{"lineNumber":381,"author":{"gitId":"shashahchk"},"content":"When the field is identified and verified to be reliable (see the zipfile spec),","lastModifiedDate":"2023-09-05"},{"lineNumber":382,"author":{"gitId":"shashahchk"},"content":"the the file name in this field is stored in the `fileName` property,","lastModifiedDate":"2023-09-05"},{"lineNumber":383,"author":{"gitId":"shashahchk"},"content":"and the file name in the central directory record for this entry is ignored.","lastModifiedDate":"2023-09-05"},{"lineNumber":384,"author":{"gitId":"shashahchk"},"content":"Note that when `decodeStrings` is false, all Info-ZIP Unicode Path Extra Fields are ignored.","lastModifiedDate":"2023-09-05"},{"lineNumber":385,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":386,"author":{"gitId":"shashahchk"},"content":"None of the other fields are considered significant by this library.","lastModifiedDate":"2023-09-05"},{"lineNumber":387,"author":{"gitId":"shashahchk"},"content":"Fields that this library reads are left unalterned in the `extraFields` array.","lastModifiedDate":"2023-09-05"},{"lineNumber":388,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":389,"author":{"gitId":"shashahchk"},"content":"#### fileComment","lastModifiedDate":"2023-09-05"},{"lineNumber":390,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":391,"author":{"gitId":"shashahchk"},"content":"`String` decoded with the charset indicated by `generalPurposeBitFlag \u0026 0x800` as with the `fileName`.","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"shashahchk"},"content":"(The Info-ZIP Unicode Path Extra Field has no effect on the charset used for this field.)","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":394,"author":{"gitId":"shashahchk"},"content":"If `decodeStrings` is `false` (see `open()`), this field is the undecoded `Buffer` instead of a decoded `String`.","lastModifiedDate":"2023-09-05"},{"lineNumber":395,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":396,"author":{"gitId":"shashahchk"},"content":"Prior to yauzl version 2.7.0, this field was erroneously documented as `comment` instead of `fileComment`.","lastModifiedDate":"2023-09-05"},{"lineNumber":397,"author":{"gitId":"shashahchk"},"content":"For compatibility with any code that uses the field name `comment`,","lastModifiedDate":"2023-09-05"},{"lineNumber":398,"author":{"gitId":"shashahchk"},"content":"yauzl creates an alias field named `comment` which is identical to `fileComment`.","lastModifiedDate":"2023-09-05"},{"lineNumber":399,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":400,"author":{"gitId":"shashahchk"},"content":"#### getLastModDate()","lastModifiedDate":"2023-09-05"},{"lineNumber":401,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":402,"author":{"gitId":"shashahchk"},"content":"Effectively implemented as:","lastModifiedDate":"2023-09-05"},{"lineNumber":403,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":404,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":405,"author":{"gitId":"shashahchk"},"content":"return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":406,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":407,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":408,"author":{"gitId":"shashahchk"},"content":"#### isEncrypted()","lastModifiedDate":"2023-09-05"},{"lineNumber":409,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":410,"author":{"gitId":"shashahchk"},"content":"Returns is this entry encrypted with \"Traditional Encryption\".","lastModifiedDate":"2023-09-05"},{"lineNumber":411,"author":{"gitId":"shashahchk"},"content":"Effectively implemented as:","lastModifiedDate":"2023-09-05"},{"lineNumber":412,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":413,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":414,"author":{"gitId":"shashahchk"},"content":"return (this.generalPurposeBitFlag \u0026 0x1) !\u003d\u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":415,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":416,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":417,"author":{"gitId":"shashahchk"},"content":"See `openReadStream()` for the implications of this value.","lastModifiedDate":"2023-09-05"},{"lineNumber":418,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":419,"author":{"gitId":"shashahchk"},"content":"Note that \"Strong Encryption\" is not supported, and will result in an `\"error\"` event emitted from the `ZipFile`.","lastModifiedDate":"2023-09-05"},{"lineNumber":420,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":421,"author":{"gitId":"shashahchk"},"content":"#### isCompressed()","lastModifiedDate":"2023-09-05"},{"lineNumber":422,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":423,"author":{"gitId":"shashahchk"},"content":"Effectively implemented as:","lastModifiedDate":"2023-09-05"},{"lineNumber":424,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":425,"author":{"gitId":"shashahchk"},"content":"```js","lastModifiedDate":"2023-09-05"},{"lineNumber":426,"author":{"gitId":"shashahchk"},"content":"return this.compressionMethod \u003d\u003d\u003d 8;","lastModifiedDate":"2023-09-05"},{"lineNumber":427,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":428,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":429,"author":{"gitId":"shashahchk"},"content":"See `openReadStream()` for the implications of this value.","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"shashahchk"},"content":"### Class: RandomAccessReader","lastModifiedDate":"2023-09-05"},{"lineNumber":432,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":433,"author":{"gitId":"shashahchk"},"content":"This class is meant to be subclassed by clients and instantiated for the `fromRandomAccessReader()` function.","lastModifiedDate":"2023-09-05"},{"lineNumber":434,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":435,"author":{"gitId":"shashahchk"},"content":"An example implementation can be found in `test/test.js`.","lastModifiedDate":"2023-09-05"},{"lineNumber":436,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":437,"author":{"gitId":"shashahchk"},"content":"#### randomAccessReader._readStreamForRange(start, end)","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"shashahchk"},"content":"Subclasses *must* implement this method.","lastModifiedDate":"2023-09-05"},{"lineNumber":440,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":441,"author":{"gitId":"shashahchk"},"content":"`start` and `end` are Numbers and indicate byte offsets from the start of the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":442,"author":{"gitId":"shashahchk"},"content":"`end` is exclusive, so `_readStreamForRange(0x1000, 0x2000)` would indicate to read `0x1000` bytes.","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"shashahchk"},"content":"`end - start` will always be at least `1`.","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":445,"author":{"gitId":"shashahchk"},"content":"This method should return a readable stream which will be `pipe()`ed into another stream.","lastModifiedDate":"2023-09-05"},{"lineNumber":446,"author":{"gitId":"shashahchk"},"content":"It is expected that the readable stream will provide data in several chunks if necessary.","lastModifiedDate":"2023-09-05"},{"lineNumber":447,"author":{"gitId":"shashahchk"},"content":"If the readable stream provides too many or too few bytes, an error will be emitted.","lastModifiedDate":"2023-09-05"},{"lineNumber":448,"author":{"gitId":"shashahchk"},"content":"(Note that `validateEntrySizes` has no effect on this check,","lastModifiedDate":"2023-09-05"},{"lineNumber":449,"author":{"gitId":"shashahchk"},"content":"because this is a low-level API that should behave correctly regardless of the contents of the file.)","lastModifiedDate":"2023-09-05"},{"lineNumber":450,"author":{"gitId":"shashahchk"},"content":"Any errors emitted on the readable stream will be handled and re-emitted on the client-visible stream","lastModifiedDate":"2023-09-05"},{"lineNumber":451,"author":{"gitId":"shashahchk"},"content":"(returned from `zipfile.openReadStream()`) or provided as the `err` argument to the appropriate callback","lastModifiedDate":"2023-09-05"},{"lineNumber":452,"author":{"gitId":"shashahchk"},"content":"(for example, for `fromRandomAccessReader()`).","lastModifiedDate":"2023-09-05"},{"lineNumber":453,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":454,"author":{"gitId":"shashahchk"},"content":"The returned stream *must* implement a method `.destroy()`","lastModifiedDate":"2023-09-05"},{"lineNumber":455,"author":{"gitId":"shashahchk"},"content":"if you call `readStream.destroy()` on streams you get from `openReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":456,"author":{"gitId":"shashahchk"},"content":"If you never call `readStream.destroy()`, then streams returned from this method do not need to implement a method `.destroy()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":457,"author":{"gitId":"shashahchk"},"content":"`.destroy()` should abort any streaming that is in progress and clean up any associated resources.","lastModifiedDate":"2023-09-05"},{"lineNumber":458,"author":{"gitId":"shashahchk"},"content":"`.destroy()` will only be called after the stream has been `unpipe()`d from its destination.","lastModifiedDate":"2023-09-05"},{"lineNumber":459,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":460,"author":{"gitId":"shashahchk"},"content":"Note that the stream returned from this method might not be the same object that is provided by `openReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":461,"author":{"gitId":"shashahchk"},"content":"The stream returned from this method might be `pipe()`d through one or more filter streams (for example, a zlib inflate stream).","lastModifiedDate":"2023-09-05"},{"lineNumber":462,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":463,"author":{"gitId":"shashahchk"},"content":"#### randomAccessReader.read(buffer, offset, length, position, callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":464,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":465,"author":{"gitId":"shashahchk"},"content":"Subclasses may implement this method.","lastModifiedDate":"2023-09-05"},{"lineNumber":466,"author":{"gitId":"shashahchk"},"content":"The default implementation uses `createReadStream()` to fill the `buffer`.","lastModifiedDate":"2023-09-05"},{"lineNumber":467,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":468,"author":{"gitId":"shashahchk"},"content":"This method should behave like `fs.read()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":469,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":470,"author":{"gitId":"shashahchk"},"content":"#### randomAccessReader.close(callback)","lastModifiedDate":"2023-09-05"},{"lineNumber":471,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":472,"author":{"gitId":"shashahchk"},"content":"Subclasses may implement this method.","lastModifiedDate":"2023-09-05"},{"lineNumber":473,"author":{"gitId":"shashahchk"},"content":"The default implementation is effectively `setImmediate(callback);`.","lastModifiedDate":"2023-09-05"},{"lineNumber":474,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":475,"author":{"gitId":"shashahchk"},"content":"`callback` takes parameters `(err)`.","lastModifiedDate":"2023-09-05"},{"lineNumber":476,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":477,"author":{"gitId":"shashahchk"},"content":"This method is called once the all streams returned from `_readStreamForRange()` have ended,","lastModifiedDate":"2023-09-05"},{"lineNumber":478,"author":{"gitId":"shashahchk"},"content":"and no more `_readStreamForRange()` or `read()` requests will be issued to this object.","lastModifiedDate":"2023-09-05"},{"lineNumber":479,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":480,"author":{"gitId":"shashahchk"},"content":"## How to Avoid Crashing","lastModifiedDate":"2023-09-05"},{"lineNumber":481,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":482,"author":{"gitId":"shashahchk"},"content":"When a malformed zipfile is encountered, the default behavior is to crash (throw an exception).","lastModifiedDate":"2023-09-05"},{"lineNumber":483,"author":{"gitId":"shashahchk"},"content":"If you want to handle errors more gracefully than this,","lastModifiedDate":"2023-09-05"},{"lineNumber":484,"author":{"gitId":"shashahchk"},"content":"be sure to do the following:","lastModifiedDate":"2023-09-05"},{"lineNumber":485,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":486,"author":{"gitId":"shashahchk"},"content":" * Provide `callback` parameters where they are allowed, and check the `err` parameter.","lastModifiedDate":"2023-09-05"},{"lineNumber":487,"author":{"gitId":"shashahchk"},"content":" * Attach a listener for the `error` event on any `ZipFile` object you get from `open()`, `fromFd()`, `fromBuffer()`, or `fromRandomAccessReader()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":488,"author":{"gitId":"shashahchk"},"content":" * Attach a listener for the `error` event on any stream you get from `openReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":489,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":490,"author":{"gitId":"shashahchk"},"content":"Minor version updates to yauzl will not add any additional requirements to this list.","lastModifiedDate":"2023-09-05"},{"lineNumber":491,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":492,"author":{"gitId":"shashahchk"},"content":"## Limitations","lastModifiedDate":"2023-09-05"},{"lineNumber":493,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":494,"author":{"gitId":"shashahchk"},"content":"### No Streaming Unzip API","lastModifiedDate":"2023-09-05"},{"lineNumber":495,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":496,"author":{"gitId":"shashahchk"},"content":"Due to the design of the .zip file format, it\u0027s impossible to interpret a .zip file from start to finish","lastModifiedDate":"2023-09-05"},{"lineNumber":497,"author":{"gitId":"shashahchk"},"content":"(such as from a readable stream) without sacrificing correctness.","lastModifiedDate":"2023-09-05"},{"lineNumber":498,"author":{"gitId":"shashahchk"},"content":"The Central Directory, which is the authority on the contents of the .zip file, is at the end of a .zip file, not the beginning.","lastModifiedDate":"2023-09-05"},{"lineNumber":499,"author":{"gitId":"shashahchk"},"content":"A streaming API would need to either buffer the entire .zip file to get to the Central Directory before interpreting anything","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"shashahchk"},"content":"(defeating the purpose of a streaming interface), or rely on the Local File Headers which are interspersed through the .zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"shashahchk"},"content":"However, the Local File Headers are explicitly denounced in the spec as being unreliable copies of the Central Directory,","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"shashahchk"},"content":"so trusting them would be a violation of the spec.","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"shashahchk"},"content":"Any library that offers a streaming unzip API must make one of the above two compromises,","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"shashahchk"},"content":"which makes the library either dishonest or nonconformant (usually the latter).","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"shashahchk"},"content":"This library insists on correctness and adherence to the spec, and so does not offer a streaming API.","lastModifiedDate":"2023-09-05"},{"lineNumber":507,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":508,"author":{"gitId":"shashahchk"},"content":"Here is a way to create a spec-conformant .zip file using the `zip` command line program (Info-ZIP)","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"shashahchk"},"content":"available in most unix-like environments, that is (nearly) impossible to parse correctly with a streaming parser:","lastModifiedDate":"2023-09-05"},{"lineNumber":510,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":511,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":512,"author":{"gitId":"shashahchk"},"content":"$ echo -ne \u0027\\x50\\x4b\\x07\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0027 \u003e file.txt","lastModifiedDate":"2023-09-05"},{"lineNumber":513,"author":{"gitId":"shashahchk"},"content":"$ zip -q0 - file.txt | cat \u003e out.zip","lastModifiedDate":"2023-09-05"},{"lineNumber":514,"author":{"gitId":"shashahchk"},"content":"```","lastModifiedDate":"2023-09-05"},{"lineNumber":515,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":516,"author":{"gitId":"shashahchk"},"content":"This .zip file contains a single file entry that uses General Purpose Bit 3,","lastModifiedDate":"2023-09-05"},{"lineNumber":517,"author":{"gitId":"shashahchk"},"content":"which means the Local File Header doesn\u0027t know the size of the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":518,"author":{"gitId":"shashahchk"},"content":"Any streaming parser that encounters this situation will either immediately fail,","lastModifiedDate":"2023-09-05"},{"lineNumber":519,"author":{"gitId":"shashahchk"},"content":"or attempt to search for the Data Descriptor after the file\u0027s contents.","lastModifiedDate":"2023-09-05"},{"lineNumber":520,"author":{"gitId":"shashahchk"},"content":"The file\u0027s contents is a sequence of 16-bytes crafted to exactly mimic a valid Data Descriptor for an empty file,","lastModifiedDate":"2023-09-05"},{"lineNumber":521,"author":{"gitId":"shashahchk"},"content":"which will fool any parser that gets this far into thinking that the file is empty rather than containing 16-bytes.","lastModifiedDate":"2023-09-05"},{"lineNumber":522,"author":{"gitId":"shashahchk"},"content":"What follows the file\u0027s real contents is the file\u0027s real Data Descriptor,","lastModifiedDate":"2023-09-05"},{"lineNumber":523,"author":{"gitId":"shashahchk"},"content":"which will likely cause some kind of signature mismatch error for a streaming parser (if one hasn\u0027t occurred already).","lastModifiedDate":"2023-09-05"},{"lineNumber":524,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":525,"author":{"gitId":"shashahchk"},"content":"By using General Purpose Bit 3 (and compression method 0),","lastModifiedDate":"2023-09-05"},{"lineNumber":526,"author":{"gitId":"shashahchk"},"content":"it\u0027s possible to create arbitrarily ambiguous .zip files that","lastModifiedDate":"2023-09-05"},{"lineNumber":527,"author":{"gitId":"shashahchk"},"content":"distract parsers with file contents that contain apparently valid .zip file metadata.","lastModifiedDate":"2023-09-05"},{"lineNumber":528,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":529,"author":{"gitId":"shashahchk"},"content":"### Limitted ZIP64 Support","lastModifiedDate":"2023-09-05"},{"lineNumber":530,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":531,"author":{"gitId":"shashahchk"},"content":"For ZIP64, only zip files smaller than `8PiB` are supported,","lastModifiedDate":"2023-09-05"},{"lineNumber":532,"author":{"gitId":"shashahchk"},"content":"not the full `16EiB` range that a 64-bit integer should be able to index.","lastModifiedDate":"2023-09-05"},{"lineNumber":533,"author":{"gitId":"shashahchk"},"content":"This is due to the JavaScript Number type being an IEEE 754 double precision float.","lastModifiedDate":"2023-09-05"},{"lineNumber":534,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":535,"author":{"gitId":"shashahchk"},"content":"The Node.js `fs` module probably has this same limitation.","lastModifiedDate":"2023-09-05"},{"lineNumber":536,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":537,"author":{"gitId":"shashahchk"},"content":"### ZIP64 Extensible Data Sector Is Ignored","lastModifiedDate":"2023-09-05"},{"lineNumber":538,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":539,"author":{"gitId":"shashahchk"},"content":"The spec does not allow zip file creators to put arbitrary data here,","lastModifiedDate":"2023-09-05"},{"lineNumber":540,"author":{"gitId":"shashahchk"},"content":"but rather reserves its use for PKWARE and mentions something about Z390.","lastModifiedDate":"2023-09-05"},{"lineNumber":541,"author":{"gitId":"shashahchk"},"content":"This doesn\u0027t seem useful to expose in this library, so it is ignored.","lastModifiedDate":"2023-09-05"},{"lineNumber":542,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":543,"author":{"gitId":"shashahchk"},"content":"### No Multi-Disk Archive Support","lastModifiedDate":"2023-09-05"},{"lineNumber":544,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":545,"author":{"gitId":"shashahchk"},"content":"This library does not support multi-disk zip files.","lastModifiedDate":"2023-09-05"},{"lineNumber":546,"author":{"gitId":"shashahchk"},"content":"The multi-disk fields in the zipfile spec were intended for a zip file to span multiple floppy disks,","lastModifiedDate":"2023-09-05"},{"lineNumber":547,"author":{"gitId":"shashahchk"},"content":"which probably never happens now.","lastModifiedDate":"2023-09-05"},{"lineNumber":548,"author":{"gitId":"shashahchk"},"content":"If the \"number of this disk\" field in the End of Central Directory Record is not `0`,","lastModifiedDate":"2023-09-05"},{"lineNumber":549,"author":{"gitId":"shashahchk"},"content":"the `open()`, `fromFd()`, `fromBuffer()`, or `fromRandomAccessReader()` `callback` will receive an `err`.","lastModifiedDate":"2023-09-05"},{"lineNumber":550,"author":{"gitId":"shashahchk"},"content":"By extension the following zip file fields are ignored by this library and not provided to clients:","lastModifiedDate":"2023-09-05"},{"lineNumber":551,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":552,"author":{"gitId":"shashahchk"},"content":" * Disk where central directory starts","lastModifiedDate":"2023-09-05"},{"lineNumber":553,"author":{"gitId":"shashahchk"},"content":" * Number of central directory records on this disk","lastModifiedDate":"2023-09-05"},{"lineNumber":554,"author":{"gitId":"shashahchk"},"content":" * Disk number where file starts","lastModifiedDate":"2023-09-05"},{"lineNumber":555,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":556,"author":{"gitId":"shashahchk"},"content":"### Limited Encryption Handling","lastModifiedDate":"2023-09-05"},{"lineNumber":557,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":558,"author":{"gitId":"shashahchk"},"content":"You can detect when a file entry is encrypted with \"Traditional Encryption\" via `isEncrypted()`,","lastModifiedDate":"2023-09-05"},{"lineNumber":559,"author":{"gitId":"shashahchk"},"content":"but yauzl will not help you decrypt it.","lastModifiedDate":"2023-09-05"},{"lineNumber":560,"author":{"gitId":"shashahchk"},"content":"See `openReadStream()`.","lastModifiedDate":"2023-09-05"},{"lineNumber":561,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":562,"author":{"gitId":"shashahchk"},"content":"If a zip file contains file entries encrypted with \"Strong Encryption\", yauzl emits an error.","lastModifiedDate":"2023-09-05"},{"lineNumber":563,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":564,"author":{"gitId":"shashahchk"},"content":"If the central directory is encrypted or compressed, yauzl emits an error.","lastModifiedDate":"2023-09-05"},{"lineNumber":565,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":566,"author":{"gitId":"shashahchk"},"content":"### Local File Headers Are Ignored","lastModifiedDate":"2023-09-05"},{"lineNumber":567,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":568,"author":{"gitId":"shashahchk"},"content":"Many unzip libraries mistakenly read the Local File Header data in zip files.","lastModifiedDate":"2023-09-05"},{"lineNumber":569,"author":{"gitId":"shashahchk"},"content":"This data is officially defined to be redundant with the Central Directory information,","lastModifiedDate":"2023-09-05"},{"lineNumber":570,"author":{"gitId":"shashahchk"},"content":"and is not to be trusted.","lastModifiedDate":"2023-09-05"},{"lineNumber":571,"author":{"gitId":"shashahchk"},"content":"Aside from checking the signature, yauzl ignores the content of the Local File Header.","lastModifiedDate":"2023-09-05"},{"lineNumber":572,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":573,"author":{"gitId":"shashahchk"},"content":"### No CRC-32 Checking","lastModifiedDate":"2023-09-05"},{"lineNumber":574,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":575,"author":{"gitId":"shashahchk"},"content":"This library provides the `crc32` field of `Entry` objects read from the Central Directory.","lastModifiedDate":"2023-09-05"},{"lineNumber":576,"author":{"gitId":"shashahchk"},"content":"However, this field is not used for anything in this library.","lastModifiedDate":"2023-09-05"},{"lineNumber":577,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":578,"author":{"gitId":"shashahchk"},"content":"### versionNeededToExtract Is Ignored","lastModifiedDate":"2023-09-05"},{"lineNumber":579,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":580,"author":{"gitId":"shashahchk"},"content":"The field `versionNeededToExtract` is ignored,","lastModifiedDate":"2023-09-05"},{"lineNumber":581,"author":{"gitId":"shashahchk"},"content":"because this library doesn\u0027t support the complete zip file spec at any version,","lastModifiedDate":"2023-09-05"},{"lineNumber":582,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":583,"author":{"gitId":"shashahchk"},"content":"### No Support For Obscure Compression Methods","lastModifiedDate":"2023-09-05"},{"lineNumber":584,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":585,"author":{"gitId":"shashahchk"},"content":"Regarding the `compressionMethod` field of `Entry` objects,","lastModifiedDate":"2023-09-05"},{"lineNumber":586,"author":{"gitId":"shashahchk"},"content":"only method `0` (stored with no compression)","lastModifiedDate":"2023-09-05"},{"lineNumber":587,"author":{"gitId":"shashahchk"},"content":"and method `8` (deflated) are supported.","lastModifiedDate":"2023-09-05"},{"lineNumber":588,"author":{"gitId":"shashahchk"},"content":"Any of the other 15 official methods will cause the `openReadStream()` `callback` to receive an `err`.","lastModifiedDate":"2023-09-05"},{"lineNumber":589,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":590,"author":{"gitId":"shashahchk"},"content":"### Data Descriptors Are Ignored","lastModifiedDate":"2023-09-05"},{"lineNumber":591,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":592,"author":{"gitId":"shashahchk"},"content":"There may or may not be Data Descriptor sections in a zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":593,"author":{"gitId":"shashahchk"},"content":"This library provides no support for finding or interpreting them.","lastModifiedDate":"2023-09-05"},{"lineNumber":594,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":595,"author":{"gitId":"shashahchk"},"content":"### Archive Extra Data Record Is Ignored","lastModifiedDate":"2023-09-05"},{"lineNumber":596,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":597,"author":{"gitId":"shashahchk"},"content":"There may or may not be an Archive Extra Data Record section in a zip file.","lastModifiedDate":"2023-09-05"},{"lineNumber":598,"author":{"gitId":"shashahchk"},"content":"This library provides no support for finding or interpreting it.","lastModifiedDate":"2023-09-05"},{"lineNumber":599,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":600,"author":{"gitId":"shashahchk"},"content":"### No Language Encoding Flag Support","lastModifiedDate":"2023-09-05"},{"lineNumber":601,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":602,"author":{"gitId":"shashahchk"},"content":"Zip files officially support charset encodings other than CP437 and UTF-8,","lastModifiedDate":"2023-09-05"},{"lineNumber":603,"author":{"gitId":"shashahchk"},"content":"but the zip file spec does not specify how it works.","lastModifiedDate":"2023-09-05"},{"lineNumber":604,"author":{"gitId":"shashahchk"},"content":"This library makes no attempt to interpret the Language Encoding Flag.","lastModifiedDate":"2023-09-05"},{"lineNumber":605,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":606,"author":{"gitId":"shashahchk"},"content":"## Change History","lastModifiedDate":"2023-09-05"},{"lineNumber":607,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":608,"author":{"gitId":"shashahchk"},"content":" * 2.10.0","lastModifiedDate":"2023-09-05"},{"lineNumber":609,"author":{"gitId":"shashahchk"},"content":"   * Added support for non-conformant zipfiles created by Microsoft, and added option `strictFileNames` to disable the workaround. [issue #66](https://github.com/thejoshwolfe/yauzl/issues/66), [issue #88](https://github.com/thejoshwolfe/yauzl/issues/88)","lastModifiedDate":"2023-09-05"},{"lineNumber":610,"author":{"gitId":"shashahchk"},"content":" * 2.9.2","lastModifiedDate":"2023-09-05"},{"lineNumber":611,"author":{"gitId":"shashahchk"},"content":"   * Removed `tools/hexdump-zip.js` and `tools/hex2bin.js`. Those tools are now located here: [thejoshwolfe/hexdump-zip](https://github.com/thejoshwolfe/hexdump-zip) and [thejoshwolfe/hex2bin](https://github.com/thejoshwolfe/hex2bin)","lastModifiedDate":"2023-09-05"},{"lineNumber":612,"author":{"gitId":"shashahchk"},"content":"   * Worked around performance problem with zlib when using `fromBuffer()` and `readStream.destroy()` for large compressed files. [issue #87](https://github.com/thejoshwolfe/yauzl/issues/87)","lastModifiedDate":"2023-09-05"},{"lineNumber":613,"author":{"gitId":"shashahchk"},"content":" * 2.9.1","lastModifiedDate":"2023-09-05"},{"lineNumber":614,"author":{"gitId":"shashahchk"},"content":"   * Removed `console.log()` accidentally introduced in 2.9.0. [issue #64](https://github.com/thejoshwolfe/yauzl/issues/64)","lastModifiedDate":"2023-09-05"},{"lineNumber":615,"author":{"gitId":"shashahchk"},"content":" * 2.9.0","lastModifiedDate":"2023-09-05"},{"lineNumber":616,"author":{"gitId":"shashahchk"},"content":"   * Throw an exception if `readEntry()` is called without `lazyEntries:true`. Previously this caused undefined behavior. [issue #63](https://github.com/thejoshwolfe/yauzl/issues/63)","lastModifiedDate":"2023-09-05"},{"lineNumber":617,"author":{"gitId":"shashahchk"},"content":" * 2.8.0","lastModifiedDate":"2023-09-05"},{"lineNumber":618,"author":{"gitId":"shashahchk"},"content":"   * Added option `validateEntrySizes`. [issue #53](https://github.com/thejoshwolfe/yauzl/issues/53)","lastModifiedDate":"2023-09-05"},{"lineNumber":619,"author":{"gitId":"shashahchk"},"content":"   * Added `examples/promises.js`","lastModifiedDate":"2023-09-05"},{"lineNumber":620,"author":{"gitId":"shashahchk"},"content":"   * Added ability to read raw file data via `decompress` and `decrypt` options. [issue #11](https://github.com/thejoshwolfe/yauzl/issues/11), [issue #38](https://github.com/thejoshwolfe/yauzl/issues/38), [pull #39](https://github.com/thejoshwolfe/yauzl/pull/39)","lastModifiedDate":"2023-09-05"},{"lineNumber":621,"author":{"gitId":"shashahchk"},"content":"   * Added `start` and `end` options to `openReadStream()`. [issue #38](https://github.com/thejoshwolfe/yauzl/issues/38)","lastModifiedDate":"2023-09-05"},{"lineNumber":622,"author":{"gitId":"shashahchk"},"content":" * 2.7.0","lastModifiedDate":"2023-09-05"},{"lineNumber":623,"author":{"gitId":"shashahchk"},"content":"   * Added option `decodeStrings`. [issue #42](https://github.com/thejoshwolfe/yauzl/issues/42)","lastModifiedDate":"2023-09-05"},{"lineNumber":624,"author":{"gitId":"shashahchk"},"content":"   * Fixed documentation for `entry.fileComment` and added compatibility alias. [issue #47](https://github.com/thejoshwolfe/yauzl/issues/47)","lastModifiedDate":"2023-09-05"},{"lineNumber":625,"author":{"gitId":"shashahchk"},"content":" * 2.6.0","lastModifiedDate":"2023-09-05"},{"lineNumber":626,"author":{"gitId":"shashahchk"},"content":"   * Support Info-ZIP Unicode Path Extra Field, used by WinRAR for Chinese file names. [issue #33](https://github.com/thejoshwolfe/yauzl/issues/33)","lastModifiedDate":"2023-09-05"},{"lineNumber":627,"author":{"gitId":"shashahchk"},"content":" * 2.5.0","lastModifiedDate":"2023-09-05"},{"lineNumber":628,"author":{"gitId":"shashahchk"},"content":"   * Ignore malformed Extra Field that is common in Android .apk files. [issue #31](https://github.com/thejoshwolfe/yauzl/issues/31)","lastModifiedDate":"2023-09-05"},{"lineNumber":629,"author":{"gitId":"shashahchk"},"content":" * 2.4.3","lastModifiedDate":"2023-09-05"},{"lineNumber":630,"author":{"gitId":"shashahchk"},"content":"   * Fix crash when parsing malformed Extra Field buffers. [issue #31](https://github.com/thejoshwolfe/yauzl/issues/31)","lastModifiedDate":"2023-09-05"},{"lineNumber":631,"author":{"gitId":"shashahchk"},"content":" * 2.4.2","lastModifiedDate":"2023-09-05"},{"lineNumber":632,"author":{"gitId":"shashahchk"},"content":"   * Remove .npmignore and .travis.yml from npm package.","lastModifiedDate":"2023-09-05"},{"lineNumber":633,"author":{"gitId":"shashahchk"},"content":" * 2.4.1","lastModifiedDate":"2023-09-05"},{"lineNumber":634,"author":{"gitId":"shashahchk"},"content":"   * Fix error handling.","lastModifiedDate":"2023-09-05"},{"lineNumber":635,"author":{"gitId":"shashahchk"},"content":" * 2.4.0","lastModifiedDate":"2023-09-05"},{"lineNumber":636,"author":{"gitId":"shashahchk"},"content":"   * Add ZIP64 support. [issue #6](https://github.com/thejoshwolfe/yauzl/issues/6)","lastModifiedDate":"2023-09-05"},{"lineNumber":637,"author":{"gitId":"shashahchk"},"content":"   * Add `lazyEntries` option. [issue #22](https://github.com/thejoshwolfe/yauzl/issues/22)","lastModifiedDate":"2023-09-05"},{"lineNumber":638,"author":{"gitId":"shashahchk"},"content":"   * Add `readStream.destroy()` method. [issue #26](https://github.com/thejoshwolfe/yauzl/issues/26)","lastModifiedDate":"2023-09-05"},{"lineNumber":639,"author":{"gitId":"shashahchk"},"content":"   * Add `fromRandomAccessReader()`. [issue #14](https://github.com/thejoshwolfe/yauzl/issues/14)","lastModifiedDate":"2023-09-05"},{"lineNumber":640,"author":{"gitId":"shashahchk"},"content":"   * Add `examples/unzip.js`.","lastModifiedDate":"2023-09-05"},{"lineNumber":641,"author":{"gitId":"shashahchk"},"content":" * 2.3.1","lastModifiedDate":"2023-09-05"},{"lineNumber":642,"author":{"gitId":"shashahchk"},"content":"   * Documentation updates.","lastModifiedDate":"2023-09-05"},{"lineNumber":643,"author":{"gitId":"shashahchk"},"content":" * 2.3.0","lastModifiedDate":"2023-09-05"},{"lineNumber":644,"author":{"gitId":"shashahchk"},"content":"   * Check that `uncompressedSize` is correct, or else emit an error. [issue #13](https://github.com/thejoshwolfe/yauzl/issues/13)","lastModifiedDate":"2023-09-05"},{"lineNumber":645,"author":{"gitId":"shashahchk"},"content":" * 2.2.1","lastModifiedDate":"2023-09-05"},{"lineNumber":646,"author":{"gitId":"shashahchk"},"content":"   * Update dependencies.","lastModifiedDate":"2023-09-05"},{"lineNumber":647,"author":{"gitId":"shashahchk"},"content":" * 2.2.0","lastModifiedDate":"2023-09-05"},{"lineNumber":648,"author":{"gitId":"shashahchk"},"content":"   * Update dependencies.","lastModifiedDate":"2023-09-05"},{"lineNumber":649,"author":{"gitId":"shashahchk"},"content":" * 2.1.0","lastModifiedDate":"2023-09-05"},{"lineNumber":650,"author":{"gitId":"shashahchk"},"content":"   * Remove dependency on `iconv`.","lastModifiedDate":"2023-09-05"},{"lineNumber":651,"author":{"gitId":"shashahchk"},"content":" * 2.0.3","lastModifiedDate":"2023-09-05"},{"lineNumber":652,"author":{"gitId":"shashahchk"},"content":"   * Fix crash when trying to read a 0-byte file.","lastModifiedDate":"2023-09-05"},{"lineNumber":653,"author":{"gitId":"shashahchk"},"content":" * 2.0.2","lastModifiedDate":"2023-09-05"},{"lineNumber":654,"author":{"gitId":"shashahchk"},"content":"   * Fix event behavior after errors.","lastModifiedDate":"2023-09-05"},{"lineNumber":655,"author":{"gitId":"shashahchk"},"content":" * 2.0.1","lastModifiedDate":"2023-09-05"},{"lineNumber":656,"author":{"gitId":"shashahchk"},"content":"   * Fix bug with using `iconv`.","lastModifiedDate":"2023-09-05"},{"lineNumber":657,"author":{"gitId":"shashahchk"},"content":" * 2.0.0","lastModifiedDate":"2023-09-05"},{"lineNumber":658,"author":{"gitId":"shashahchk"},"content":"   * Initial release.","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":658}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import core.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Deadlines;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Events;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.ToDos;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import core.Duke.CommandType;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    public CommandType getCommandType(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        if (\"bye\".equals(userCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.BYE;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"        } else if (\"list\".equals(userCommand)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.LIST;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.DELETE;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.MARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.UNMARK;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.TODO;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.DEADLINE;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"event \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.EVENT;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"            return CommandType.FIND;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        } else if (userCommand.startsWith(\"archive\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            return CommandType.ARCHIVE;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"            return Duke.CommandType.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    public Task parseTaskFromFile(String line) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        boolean isCompleted \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime date \u003d (parts.length \u003e\u003d 4 \u0026\u0026 !parts[3].isEmpty()) ? LocalDateTime.parse(parts[3], formatter)","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime startDate \u003d (parts.length \u003e\u003d 5 \u0026\u0026 !parts[4].isEmpty()) ? LocalDateTime.parse(parts[4], formatter)","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime endDate \u003d (parts.length \u003d\u003d 6 \u0026\u0026 !parts[5].isEmpty()) ? LocalDateTime.parse(parts[5], formatter)","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"                : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new ToDos(description, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Deadlines(description, date, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Events(description, startDate, endDate, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Invalid task format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"    public Duke.TaskType getTaskType(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        if (str.startsWith(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"            return Duke.TaskType.TODO;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        } else if (str.startsWith(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"            return Duke.TaskType.DEADLINE;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        } else if (str.startsWith(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"            return Duke.TaskType.EVENT;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"            return Duke.TaskType.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"    public Task parseTaskFromCommand(String userCommand) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"        Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"            case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Description for the event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"                String[] eventParts \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"                if (eventParts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Event timing is missing.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"                String[] eventTimes \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"                if (eventTimes.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"End time for event is missing.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"                LocalDateTime fromDate \u003d LocalDateTime.parse(eventTimes[0], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"                LocalDateTime toDate \u003d LocalDateTime.parse(eventTimes[1], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"                task \u003d new Events(eventParts[0], fromDate, toDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Description for the todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"                task \u003d new ToDos(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Description for the deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"                String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Deadline timing is missing.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"                LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineParts[1], formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"                task \u003d new Deadlines(deadlineParts[0], deadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"Invalid command. Please enter a valid task type.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"        return task; ","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"    public TaskList parseMatchingTasks(String userCommand, TaskList allTasks) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"        for (Task task : allTasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"        return matchingTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":167}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Deadlines;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Events;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.ToDos;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    public static String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"            return loadFromFile(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Data file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"An error occurred while loading the data.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    public void updateData(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"            saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e loadFromFile(String filename) throws FileNotFoundException {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"            Scanner scanner \u003d new Scanner(new File(filename));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"                if (!isValidFormat(line)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"Data file is corrupted. Line not in expected format: \" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"            scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"Data file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"    public boolean isValidFormat(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        return line.matches(\"^[TDE] \\\\| [01] \\\\| .+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"    public Task parseTask(String line) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"        // Trim spaces for each part","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"        // Extract fields","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        boolean isCompleted \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime date \u003d (parts.length \u003e\u003d 4 \u0026\u0026 !parts[3].isEmpty()) ? LocalDateTime.parse(parts[3], formatter) : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime startDate \u003d (parts.length \u003e\u003d 5 \u0026\u0026 !parts[4].isEmpty()) ? LocalDateTime.parse(parts[4], formatter) : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime endDate \u003d (parts.length \u003d\u003d 6 \u0026\u0026 !parts[5].isEmpty()) ? LocalDateTime.parse(parts[5], formatter) : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new ToDos(description, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Deadlines(description, date, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"                    System.out.println(endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"                    task \u003d new Events(description, startDate, endDate, isCompleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"Invalid task format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"    public void saveToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) { // Using try-with-resources for automatic closure of","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"                                                              // writer","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"                writer.write(taskToFileString(task) + \"\\n\"); // Convert each task to its file string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"    public String taskToFileString(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"        if (task instanceof ToDos) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"            sb.append(\"T | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Deadlines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"            sb.append(\"D | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"            sb.append(\"E | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"        sb.append(task.isCompleted() ? \"1\" : \"0\").append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"        sb.append(task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"        if (task instanceof Deadlines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"            sb.append(\" | \").append(((Deadlines) task).getDate().format(outputFormatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"            sb.append(\" | \").append(((Events) task).getStartDate().format(outputFormatter))","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"                    .append(\" | \").append(((Events) task).getEndDate().format(outputFormatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"    public void archiveAllTasks(TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"        File archiveFile \u003d new File(\"data/archive.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"            FileWriter fw \u003d new FileWriter(archiveFile, true);","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"                fw.write(taskToFileString(task) + System.lineSeparator());","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"            fw.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"Error archiving tasks \" + e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"    public void clearFile() {","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"            FileWriter fw \u003d new FileWriter(\"./data\", false);","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"            fw.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"            System.out.println(\"Error clearing main tasks for archive action \" + e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":181}},{"path":"src/main/java/Duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" * Represents a deadline-based task.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":" * A Deadlines object is a task with a deadline represented by a description and","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":" * a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     * Initializes a new instance of the Deadlines class with a given description","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     * and date.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"     * @param date        Date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if the provided description or date is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public Deadlines(String description, LocalDateTime date) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"date of deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"     * Constructor that creates Deadlines object with three parameters.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"     * @param description description of the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"     * @param date Date of the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"     * @param isCompleted boolean status representing whether task is isisCompleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    public Deadlines(String description, LocalDateTime date, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of deadline cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"date of deadline cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"     * Gets the date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"        return this.date;","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the type of the task. For Deadlines, it returns","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"     *         \"D\".","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        return \"D\";","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"     * Gets a formatted string representation of the Deadlines task.","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the Deadlines task, including its type,","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"     *         completion status, description, and date.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"        String isCompleted \u003d this.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + this.getType() + \"]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        String byMessage \u003d \"by: \" + getDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"        return taskType + isCompleted + this.getDescription() + \"(\" + byMessage + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":89}},{"path":"src/main/java/Duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":" * Represents an event task with a specified start and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":" * An Events object is described by a description, start date, and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     * Initializes a new instance of the Events class with the given description, start date, and end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if the provided description, start date, or end date is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate)","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"start date of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"end date of event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    public Events(String description, LocalDateTime startDate, LocalDateTime endDate, boolean isCompleted)","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"description of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"start date of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"end date of event cannot be empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"     * @return Start date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"        return this.startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the end date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"     * @return End date of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"        return this.endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"     * @return A string indicating the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"        return \"E\";","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"     * Gets a formatted string representation of the Events task.","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"     * @return A string representing the Events task.","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"        String isCompleted \u003d this.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + this.getType() + \"]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"        String fromDateString \u003d getStartDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"        String fromMessage \u003d \"from: \" + fromDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        String toDateString \u003d getEndDate().format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"        String toMessage \u003d \"to: \" + toDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        return taskType + isCompleted + this.getDescription() + \"(\" + fromMessage + \" \" + toMessage + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":100}},{"path":"src/main/java/Duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    private final String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Creates a new task with a given description.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d false;  // Tasks are unisCompleted by default","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"     * Checks if the task is isCompleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"     * @return true if isCompleted, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"     * Retrieves the task\u0027s description.","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"     * @return The description.","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d !this.isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"     * Provides a type identifier for the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"     * Since this is a general task, it returns an empty string.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"     * @return Type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        return \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"     * Offers a formatted string showing the task\u0027s type, completion status, and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"     * @return Formatted string of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        String completionStatus \u003d  isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"        String taskType \u003d \"[\" + getType() + \"]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"        return taskType + completionStatus + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":71}},{"path":"src/main/java/Duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        return taskList.remove(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    public void clear() {","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        taskList.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    public String toString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        String str \u003d \"There are \" + taskList.size() + \" task[s] in your list\" + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        for (int i\u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"            str +\u003d \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"            for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"                str +\u003d (j + 1) + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"            str +\u003d \"______________________________\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        return str;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":52}},{"path":"src/main/java/Duke/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import Duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":" * Manages tasks, handling operations like adding, deleting, etc.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    private Parser p \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     * Constructs a TaskManager with a given TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     * @param tasks TaskList to manage.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    public TaskManager(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     * Default constructor. Initializes an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public TaskManager() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"     * Deletes a task based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the delete operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    public String handleDelete(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"        Task removedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid delete command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"            int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"            if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid delete command (this task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"            removedTask \u003d tasks.deleteTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"            return \"Noted. I\u0027ve removed this task:\" + removedTask.toString() + updateNumMessage(tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"     * Constructs a message indicating the current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"     * @param numTasks The current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"     * @return A formatted message indicating the count of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"    private String updateNumMessage(int numTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        return \"\\n Now you have \" + numTasks + \" task(s) in the list\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"     * Marks a task as completed based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to mark as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the mark operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    public String handleMark(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"        String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"                int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"                if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"invalid mark command (task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d tasks.getTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"                task.toggleCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"                return \"Nice! I\u0027ve marked this task as done:\" + task;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid mark command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"           return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"     * Reverts a task to its incomplete status based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command to specify which task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the unmark operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"    public String handleUnmark(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"            String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"                int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"                if (num \u003e tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"                    throw new DukeException(\"invalid mark command (task number does not exist)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"                Task task \u003d tasks.getTask(num - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"                task.toggleCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"                return \"Okay. I see you haven\u0027t done this task yet\" + (task);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"                throw new DukeException(\"invalid unmark command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"            return  e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"     * Adds a task based on the given user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"     * @param userCommand Command describing the task to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"     * @return Result of the add operation.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"    public String addTask(String userCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"            Task task \u003d p.parseTaskFromCommand(userCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"            return \"Got it I have added this task:\" + \"\\n\" + task + updateNumMessage(tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"    public String findTasks(String userCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"            TaskList matchingTasks \u003d p.parseMatchingTasks(userCommand, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"            if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"                return \"No matching tasks.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"            msg.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"            for (Task task : matchingTasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"                msg.append(\"\\n\").append(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":"        return msg.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":"    public String clearTasks() {","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"        tasks.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"        return \"Successfully archived tasks\";","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":149}},{"path":"src/main/java/Duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" * Represents a ToDo task without a specific deadline or event date.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":" * A ToDo task is represented by a description.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Creates a new ToDo task with the given description.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @param description The description of ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException If the description is null or empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public ToDos(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"OOPS! The description of ToDo cannot be empty!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    public ToDos(String description, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"            throw new DukeException(\"OOPS! The description of ToDo cannot be empty!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"     * Indicates that this task is of type \"T\".","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"     * @return The string \"T\" representing a ToDo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        return \"T\";","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"shashahchk":40}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    private static final String horizontal_line \u003d \"_________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        handleStart();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    public String readUserCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"      /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"     * Initialises and displays the welcome message for the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    public static void handleStart() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"        String welcomeMessage \u003d horizontal_line +","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"                \"\\nHello! I\u0027m Blob\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"                horizontal_line;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"        String welcomeMessage \u003d horizontal_line +","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"                                \" Hello! I\u0027m Blob\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"                                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"                                horizontal_line;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Bye. Come talk to Blob again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        System.out.println(tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"            System.out.println((i + 1) + \". \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"        System.out.println(message + \"\\n\" + horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Error loading tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    public void showAddTask(Task currTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\"Got it I have added this task:\" + \"\\n\" + currTask + \"\\n\" + horizontal_line);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"shashahchk":73}},{"path":"src/main/java/core/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import Duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import Duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import Duke.tasks.TaskManager;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import Duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"import visual.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    private TaskManager tm;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    private final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"        LIST,","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"        EVENT,","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"        DELETE,","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"        UNMARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        BYE,","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        FIND,","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        ARCHIVE,","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        UNKNOWN","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"        TODO,","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        EVENT,","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"        UNKNOWN","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        storage \u003d new Storage(FILE_PATH);  ","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"shashahchk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"shashahchk"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"shashahchk"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"shashahchk"},"content":"        tm \u003d new TaskManager(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"shashahchk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"shashahchk"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"shashahchk"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"shashahchk"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"shashahchk"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"shashahchk"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"shashahchk"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"shashahchk"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"shashahchk"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"shashahchk"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"shashahchk"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"shashahchk"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"shashahchk"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"shashahchk"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"shashahchk"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"shashahchk"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"shashahchk"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"shashahchk"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"shashahchk"},"content":"          //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"shashahchk"},"content":"    sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"shashahchk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"shashahchk"},"content":"    userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"shashahchk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"shashahchk"},"content":"    //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"shashahchk"},"content":"    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"shashahchk"},"content":"    //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"shashahchk"},"content":"    sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"shashahchk"},"content":"        handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"shashahchk"},"content":"    userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"shashahchk"},"content":"        handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"shashahchk"},"content":"    });","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"shashahchk"},"content":" * Iteration 1:","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"shashahchk"},"content":" * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"shashahchk"},"content":" * @param text String containing text to add","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"shashahchk"},"content":" * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"shashahchk"},"content":"private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"shashahchk"},"content":"    Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"shashahchk"},"content":"    textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"shashahchk"},"content":"    return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"shashahchk"},"content":"private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"shashahchk"},"content":"    assert userInput !\u003d null : \"UserInput field should be initialized\";","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"shashahchk"},"content":"    String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"shashahchk"},"content":"    String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"shashahchk"},"content":" ","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"shashahchk"},"content":"    dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"shashahchk"},"content":"            DialogBox.getUserDialog(userText,user),","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"shashahchk"},"content":"            DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"shashahchk"},"content":"    );","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"shashahchk"},"content":"    userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"shashahchk"},"content":" * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"shashahchk"},"content":" * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"shashahchk"},"content":"public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"shashahchk"},"content":"    String response \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"shashahchk"},"content":"    Parser p \u003d new Parser();","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"shashahchk"},"content":"    CommandType commandType \u003d p.getCommandType(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"shashahchk"},"content":"    assert commandType !\u003d CommandType.UNKNOWN : \"Parsed command should always be known\";","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"shashahchk"},"content":"    switch (commandType) {","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"shashahchk"},"content":"        case LIST:","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tasks.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"shashahchk"},"content":"        case BYE:","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"shashahchk"},"content":"            response \u003d \"Goodbye. See you again\";","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"shashahchk"},"content":"            storage.updateData(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"shashahchk"},"content":"        case DELETE:","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"shashahchk"},"content":"            response +\u003d (tm.handleDelete(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"shashahchk"},"content":"        case MARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"shashahchk"},"content":"            response +\u003d (tm.handleMark(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"shashahchk"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"shashahchk"},"content":"            response +\u003d (tm.handleUnmark(input));","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"shashahchk"},"content":"        case EVENT:","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"shashahchk"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"shashahchk"},"content":"        case TODO:","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.addTask(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"shashahchk"},"content":"        case FIND:","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.findTasks(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"shashahchk"},"content":"        case ARCHIVE:","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"shashahchk"},"content":"            response +\u003d tm.clearTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"shashahchk"},"content":"            storage.clearFile();","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"shashahchk"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"shashahchk"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"shashahchk"},"content":"            response +\u003d (\"unknown command.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"shashahchk"},"content":"            break;    ","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"shashahchk"},"content":"        ","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"shashahchk"},"content":"    return \"Duke heard: \" + input + \"\\n\" + response;","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shashahchk":209,"-":2}},{"path":"src/main/java/core/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":" * Represents a custom exception for Duke application.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":" * This exception is thrown when Duke-specific conditions are violated.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"     * Constructs a new DukeException with the specified message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"shashahchk":16}},{"path":"src/main/java/core/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"shashahchk":9}},{"path":"src/main/java/core/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package core;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import visual.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":32}},{"path":"src/main/java/visual/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package visual;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"shashahchk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"shashahchk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"shashahchk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"shashahchk"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"shashahchk"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":61}},{"path":"src/main/java/visual/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package visual;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import core.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"shashahchk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"shashahchk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"shashahchk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"shashahchk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"shashahchk"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"shashahchk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"shashahchk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"shashahchk"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"shashahchk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"shashahchk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"shashahchk"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"shashahchk"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"shashahchk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"visual.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"shashahchk":19}},{"path":"src/test/java/Duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of an Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"     * Ensures that when an event is created with a specific description,","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"     * the getDescription method returns the correct description.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if there is an error during event creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    public void createEvent_WithValidDates_ReturnsCorrectDescription() throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.parse(\"2023-09-01 05:00\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.parse(\"2023-10-01 06:00\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"        Events e \u003d new Events(\"Table tennis\", fromDateTime, toDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"        assertEquals(\"Table tennis\", e.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"shashahchk":29}},{"path":"src/test/java/Duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"package Duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"import core.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of a Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"     * Ensures that new event has correct description and is unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"     * @throws DukeException if there is an error during creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"    public void createToDo_WithValidInputs_ReturnsCorrectMarkStatus() throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"        ToDos todo \u003d new ToDos(\"Sample Task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"        assertEquals(\"Sample Task\", todo.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"shashahchk"},"content":"        assertFalse(todo.isCompleted(), \"New todo should not be marked as done\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"shashahchk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"shashahchk"},"content":"     * Tests the creation of a Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"shashahchk"},"content":"     * Ensures that exception is thrown if empty description in creation of Todos.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"shashahchk"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"shashahchk"},"content":"    public void createToDo_WithEmptyDescription_ThrowsException() {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"shashahchk"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"shashahchk"},"content":"            new ToDos(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"shashahchk"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"shashahchk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"shashahchk"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"shashahchk":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"todo eat food","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"event table tennis /from 2 pm /to 4 pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"deadline submit hw /by 29 August","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"event interfaculty games /from 9 am /to 7 pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"todo run 2 miles","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"shashahchk"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"shashahchk"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"shashahchk":15}}]
