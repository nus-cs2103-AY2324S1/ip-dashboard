[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shashahchk":5,"-":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shashahchk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        Task[] tasks \u003d new Task[10];","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String horizontal_line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String welcomeMessage \u003d horizontal_line +","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"shashahchk"},"content":"                \" Hello! I\u0027m Blob\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"shashahchk"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                horizontal_line;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"shashahchk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"shashahchk"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"shashahchk"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"shashahchk"},"content":"            String userCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"shashahchk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"shashahchk"},"content":"            if (\"bye\".equals(userCommand)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"shashahchk"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            } else if (\"list\".equals(userCommand)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                System.out.println(horizontal_line);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                System.out.println(\"here are the tasks in your list: \");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    Task task \u003d tasks[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    System.out.println((i + 1) + \". \" + task.getString());","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"shashahchk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                System.out.println(horizontal_line);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            } else if (userCommand.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    Task task \u003d tasks[num];","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    task.toggleCompleted();","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    System.out.println(task.getString());","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            } else if (userCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    Task task \u003d tasks[num];","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    task.toggleCompleted();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    System.out.println(\"Okay. I see you haven\u0027t done this task yet\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    System.out.println(task.getString());","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                Task currTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String[] parts \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                if (userCommand.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    currTask \u003d new ToDos(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                } else if (userCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    String secondPart \u003d parts[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    String[] finalParts \u003d secondPart.split(\" /by \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    currTask \u003d new Deadlines(finalParts[0], finalParts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                } else if (userCommand.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    String[] secondPartSplits \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    String[] dates \u003d secondPartSplits[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    String fromDate \u003d dates[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    String byDate \u003d dates[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    String description \u003d secondPartSplits[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    currTask \u003d new Events(description, fromDate, byDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    System.out.println(\"Cannot find task name\");","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tasks[count] \u003d currTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                String numTasks \u003d String.valueOf(count + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                System.out.println(\"Got it I have added this task: \" + \"\\n\" +  currTask.getString());","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                System.out.println(\"Now you have \" + numTasks + \" task(s) in the list\");","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                System.out.println(horizontal_line);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                count++;","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"shashahchk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"shashahchk"},"content":"        System.out.println(\" Bye. Come talk to Blob again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        System.out.println(horizontal_line);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shashahchk":14,"-":64}}]
