[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gabriel4357":17,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"todo cry","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"delete 1","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"todo cr5y","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"delete 1","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"Gabriel4357":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"# User Guide for **Alfred**  ","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"Alfred is a To-Do List app which allows users to manage different types of tasks and mark them as complete or not. Alfred acts as your personal assistant to follow your commands to help you carry out your commands. ","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"## Different types of Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"To begin, here is an introduction of the tasks you can add to your To-Do List. ","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"### Todo ","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"The todo task is the simplest of all tasks and would only consist of the task description. ","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"Examples:","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":" ","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"* `todo Wash the Car` ","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"* `todo Pack the bookshelves`","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"* `todo Fix the lights` ","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"### Deadline ","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"The deadline task consists of a description and a deadline to when the task should be completed by. ","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE` ","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"DEADLINE Format: `YYYY-MM-DDTHH:MM:SS` ","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"(Y: Year, M: Month, D: Day, H: Hour, M: Minute, S: Second )","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"* `deadline CS2100 Assignment 1 /by 2023-09-18T12:00:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"* `deadline Pay John back $10 /by 2024-01-10T23:30:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"* `deadline Geography Homework pg 5 - 10 /by 2023-12-12T09:00:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"### Event ","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"The event task consist of a description, a start date and an end date. ","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"Format: `event TASK_DESCRIPTION /from START /to END`","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"START/END Format: `YYYY-MM-DDTHH:MM:SS` ","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"(Y: Year, M: Month, D: Day, H: Hour, M: Minute, S: Second )","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"* `event Japan Trip /from 2023-12-01T09:00:00 /to 2023-12-14T09:00:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"* `event CCA Camp /from 2023-11-01T06:00:00 /to 2023-11-04T18:00:00`","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"Shows a list of all the different types of tasks added before. ","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"Format: `list` ","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Expected outcome: ","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"All the different tasks that have been added prior to the command. ","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"### Marking a task as complete: `mark`","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"Marks the task of the specified index as complete. ","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"Format : `mark INDEX` ","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"* Marks the task at the specified `INDEX` as complete.","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"* Index is based off the numbering when `list` is called.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"* The index **must be a postive integer.** ","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"* By calling `list`, you can see if an item is already completed if it has an \u0027X\u0027 next to it.","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"* Nothing happens if a `mark` is called on a task that is already completed. ","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"* `mark` can be undone by calling `unmark` on the same INDEX. ","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Gabriel4357"},"content":"* If calling `list` gives : ","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"Gabriel4357"},"content":"Calling `mark 1` gives: ","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Gabriel4357"},"content":"Following that, calling `mark 3` gives: ","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [X] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Gabriel4357"},"content":"Expected Outcome: ","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Gabriel4357"},"content":"An \u0027X\u0027 will be added to the [] for the specified task in `list` to become `[X]`.","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"Gabriel4357"},"content":"From `[]` to `[X]`","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"Gabriel4357"},"content":"### Unmarking a task as incomplete: `unmark` ","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"Gabriel4357"},"content":"Unmarks the task of the specfied index as incomplete.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"Gabriel4357"},"content":"Format : `unmark INDEX` ","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"Gabriel4357"},"content":"* Unmarks the task at the specified `INDEX` as incomplete.","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"Gabriel4357"},"content":"* Index is based off the numbering when `list` is called.","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"Gabriel4357"},"content":"* The index **must be a postive integer.** ","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"Gabriel4357"},"content":"* By calling `list`, you can see if an item is incomplete if it does not have an \u0027X\u0027 next to it.","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"Gabriel4357"},"content":"* Nothing happens if an `unmark` is called on a task that is incomplete. ","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Gabriel4357"},"content":"* If calling `list` gives : ","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"Gabriel4357"},"content":"Calling `unmark 1` gives: ","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"Gabriel4357"},"content":"Following that, calling `unmark 2` gives: ","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"Gabriel4357"},"content":"```ss","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"Gabriel4357"},"content":"Expected Outcome: ","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"Gabriel4357"},"content":"Assuming the task is complete, an \u0027X\u0027 will be removed from the `[X]` for the specified task in `list` and becomes `[]`.","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"Gabriel4357"},"content":"From `[X]` to `[]`","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"Gabriel4357"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"Gabriel4357"},"content":"Deletes the specfied task from the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"Gabriel4357"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"Gabriel4357"},"content":"* Deletes the task at the specified `INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"Gabriel4357"},"content":"* Index is based off the numbering when `list` is called.","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"Gabriel4357"},"content":"* The index **must be a positive integer.** ","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"Gabriel4357"},"content":"* If a task is deleted, all the tasks with a larger `INDEX` than the deleted task will be reduced by 1. Those with smaller `INDEX` remains unchanged. ","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"Gabriel4357"},"content":"* If calling `list` gives : ","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"Gabriel4357"},"content":"4. [E] [] Japan Trip (from: MARCH 15 2023, 08:00 to: MARCH 25 2023, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"Gabriel4357"},"content":"Calling `delete 2` gives : ","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"Gabriel4357"},"content":"2. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"Gabriel4357"},"content":"3. [E] [] Japan Trip (from: MARCH 15 2023, 08:00 to: MARCH 25 2023, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"Gabriel4357"},"content":"Calling `delete 3` gives: ","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"Gabriel4357"},"content":"2. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"Gabriel4357"},"content":"### Locating tasks by task description: `find`","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"Gabriel4357"},"content":" ","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"Gabriel4357"},"content":"Finds tasks whose task description contain the given keyword. ","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"Gabriel4357"},"content":"Format: `find KEYWORD` ","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"Gabriel4357"},"content":"* The search is case-sensitive. e.g `find Physics` will not match with `physics`","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"Gabriel4357"},"content":"* The task description, date and time are all searched. `find MARCH` will match with `Japan Trip (from MARCH 10 2023, 08:00 to: MARCH 25 2023, 08:00)`","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"Gabriel4357"},"content":"* Keyword does not have to be a full word. e.g `find Q` will match with `Chemistry Quiz` and `Physics Quiz`.","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"Gabriel4357"},"content":"* In a list of : ","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 4 (by: DECEMBER 12 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"Gabriel4357"},"content":"4. [E] [] Japan Trip (from: MARCH 15 2023, 08:00 to: MARCH 25 2023, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"Gabriel4357"},"content":"`find History` will give : ","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"Gabriel4357"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"Gabriel4357"},"content":"    [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"Gabriel4357"},"content":"`find Homework` will give : ","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"Gabriel4357"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"Gabriel4357"},"content":"    [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"Gabriel4357"},"content":"    [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"Gabriel4357"},"content":"`find H` will give : ","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"Gabriel4357"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"Gabriel4357"},"content":"    [T] [X] History Homework pg 10 - 15","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"Gabriel4357"},"content":"    [T] [X] Geography Homework pg 5 - 10","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"Gabriel4357"},"content":"    [E] [] Japan Trip (from: MARCH 15 2023, 08:00 to: MARCH 25 2023, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"Gabriel4357"},"content":"### Sorting the list of tasks : `sort` ","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"Gabriel4357"},"content":"Sorts the list in the task list according to Tag then Dates. ","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"Gabriel4357"},"content":"Format: sort ","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"Gabriel4357"},"content":"* The list is firstly sorted by their Tag. T comes first, then D then E. ","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"Gabriel4357"},"content":"* Within the tags themselves, they are further sorted by their dates. ","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"Gabriel4357"},"content":"* For deadline tasks, the earliest deadline will be first and latest deadline will be last.","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"Gabriel4357"},"content":"* For event tasks, they will be sorted based on their start date. The earliest start date will be first and latest start date will be last. (End dates do not affect the order at all). ","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"Gabriel4357"},"content":"Examples: ","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"Gabriel4357"},"content":"* In a list of: ","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"Gabriel4357"},"content":"1. [E] [] Japan Trip (from MARCH 10, 2023, 08:00 to: MARCH 25, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"Gabriel4357"},"content":"2. [D] [] Physics Quiz 4 (by: JANUARY 2024, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"Gabriel4357"},"content":"3. [T] [] Geography Homework pg 5 ","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"Gabriel4357"},"content":"4. [D] [] Chemistry Quiz 3 (by: DECEMBER 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"Gabriel4357"},"content":"5. [T] [] History Homework pg 17 ","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"Gabriel4357"},"content":"6. [E] [] CCA Camp (from APRIL 10, 2023, 09:00 to: APRIL 13, 2023, 09:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"Gabriel4357"},"content":"Calling `sort` gives :","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"Gabriel4357"},"content":"``` ","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"Gabriel4357"},"content":"1. [T] [] History Homework pg 17 ","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"Gabriel4357"},"content":"2. [T] [] Geography Homework pg 5 ","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"Gabriel4357"},"content":"3. [D] [] Chemistry Quiz 3 (by: DECEMBER 2023, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"Gabriel4357"},"content":"4. [D] [] Physics Quiz 4 (by: JANUARY 2024, 23:59:59)","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"Gabriel4357"},"content":"5. [E] [] Japan Trip (from MARCH 10, 2023, 08:00 to: MARCH 25, 08:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"Gabriel4357"},"content":"6. [E] [] CCA Camp (from APRIL 10, 2023, 09:00 to: APRIL 13, 2023, 09:00)","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"Gabriel4357"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"Gabriel4357"},"content":"### Exiting the program: `bye` ","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"Gabriel4357"},"content":"Exits the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"Gabriel4357"},"content":"Format: `Bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"Gabriel4357"},"content":"Expected Outcome: ","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":251,"author":{"gitId":"Gabriel4357"},"content":"Goodbye. Hope to be of service again soon!","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Gabriel4357":223,"-":29}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":" * A Task which has a description and a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * The deadline is of type LocalDateTime and is used to specify when the Task is due.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Has a tag D.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * Constructs a Deadline with description and deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"     * @param deadline The date and time when the task is due.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.D;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"     * Changes the format to be more readable.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"     * The initial format of LocalDateTime is YYYY-MM-DDTHH:MM:SS.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"     * This is turned into Month Day Year, Time, which increases","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"     * its readability.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"     * @param deadline The date and time when the task is due.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"     * @return Newly formatted LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"    public String changeFormat(LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"        return deadline.getMonth().toString() + \" \" + deadline.getDayOfMonth() + \" \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                deadline.getYear() + \", \" + deadline.toLocalTime();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s (by: %s)\", description, changeFormat(deadline));","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":50}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * The Personal Assistant that keeps a todo list for the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Users can input multiple commands to use this personal assistant.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * Different tasks can be input and stored into the list. This includes","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" * Todos, Deadlines and Events. Tasks can be marked and unmarked to","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":" * indicate completion of such tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    private UI ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"        ui \u003d new UI(\"Alfred\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            Storage.preloadFromFile(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"            ui.sendMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"            ui.welcomeMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"            boolean isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"            while (!isExit) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                    String command \u003d ui.readCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"                    assert command !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"                    if (parser.parse(command, ui, tasks, storage).execute(command, ui, tasks, storage).equals","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"                            (\"Goodbye. Hope to be of service again soon!\\n\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                        Platform.exit();","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                    };","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"            String response \u003d parser.parse(input, ui, tasks, storage).execute(input, ui, tasks, storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"            assert response !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"            return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"//        Duke duke \u003d new Duke(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"        duke.run();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":75,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    protected String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    public DukeException(String error){","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"        this.message \u003d error;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        return this.message;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * A Task which has a description, when it starts and when it ends.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * The start and end is of type LocalDateTime and is used to specify when the Task begins and finishes.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * Has a tag E.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     * Constructs an Event with description, start and end.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"     * @param start The date and time when the event starts.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"     * @param end The date and time when the event ends.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end){","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.E;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"     * Changes the format to be more readable.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"     * The initial format of LocalDateTime is YYYY-MM-DDTHH:MM:SS.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"     * This is turned into Month Day Year, Time, which increases","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"     * its readability.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"     * @param date The date and time to format.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"     * @return Newly formatted LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    public String changeFormat(LocalDateTime date){","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"        return date.getMonth().toString() + \" \" + date.getDayOfMonth() + \" \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                date.getYear() + \", \" + date.toLocalTime();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s (from: %s to: %s)\", description, changeFormat(start),","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"                changeFormat(end));","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":55}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public Main() throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"            stage.setTitle(\"Alfred\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"    private UI ui \u003d new UI(\"Alfred\");","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Batman.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alfred.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                DialogBox.getDukeDialog(ui.welcomeMessage(), dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"            Timeline timeline \u003d new Timeline(new KeyFrame(Duration.millis(1000), event -\u003e {Platform.exit();}));","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"            timeline.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":69}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" * Parser deals with taking in an input and returning a command object.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     * Takes in a string and then returns a command based on the input string.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     * @param text The input given by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"     * @param ui The user interface which is in charge of interactions with the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"     * @param list The TaskList that holds all the tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"     * @param storage The storage that holds and notes down all past commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"     * @return A command object corresponding to what was input.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    public static Command parse(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"        ui.clearStringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        if (text.startsWith(\"list\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"            return new TodoCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"            return new EventCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"find\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"            return new FindCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"        } else if (text.startsWith(\"sort\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"                return new SortCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. But I do not understand what you mean.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":63}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"    private static String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    static private File directory;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    static private File file;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        directory \u003d new File(filePath.substring(0, filePath.lastIndexOf(\"/\")));","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public static void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        FileWriter fw \u003d new FileWriter(Storage.filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    public static void preloadFromFile(TaskList list) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        // check if data directory exists","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"                directory.mkdir();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"//            File f \u003d new File(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            File f \u003d new File(Storage.filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"            Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                String text \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"                    unmark(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"                    mark(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                    createTodo(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"                    createDeadline(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"                    createEvent(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"                    delete(list, text);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"sort\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"                    sort(list);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"                } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"            // shouldn\u0027t happen","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"    private static void sort(TaskList list) {","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"        list.sort(new TaskTagComparator());","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"        list.sort(new TaskDateComparator());","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"    private static void delete(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"        int numToDelete \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"        list.remove(numToDelete);","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"    private static void createEvent(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\"/\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d splitText[0].substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Gabriel4357"},"content":"        String startText \u003d splitText[1].trim().substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Gabriel4357"},"content":"        String endText \u003d splitText[2].trim().substring(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startText);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endText);","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Gabriel4357"},"content":"        Event event \u003d new Event(description.trim(), start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Gabriel4357"},"content":"        list.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"Gabriel4357"},"content":"    private static void createDeadline(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\"/\", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d splitText[0].substring(8);","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"Gabriel4357"},"content":"        String deadlineText \u003d splitText[1].substring(3);","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineText);","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"Gabriel4357"},"content":"        Deadline dl \u003d new Deadline(description.trim(), deadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"Gabriel4357"},"content":"        list.add(dl);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"Gabriel4357"},"content":"    private static void createTodo(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d text.substring(4);","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"Gabriel4357"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"Gabriel4357"},"content":"            return;","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"Gabriel4357"},"content":"            Todo todo \u003d new Todo(description.trim());","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"Gabriel4357"},"content":"            list.add(todo);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"Gabriel4357"},"content":"    private static void mark(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"Gabriel4357"},"content":"        int numToMark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"Gabriel4357"},"content":"        list.get(numToMark).markAsComplete();","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"Gabriel4357"},"content":"    private static void unmark(TaskList list, String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"Gabriel4357"},"content":"        int numToUnmark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"Gabriel4357"},"content":"        list.get(numToUnmark).markAsIncomplete();","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":122}},{"path":"src/main/java/duke/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public enum Tag {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    T,D,E;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":5}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":" * Represents the items that need to be completed by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"    protected Tag tag;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"     * Constructs a Task with a short description of the task at hand.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"     * It starts of with it not being completed as how it should be.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @param description A name/short summary of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"     * Returns the status of a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"     * If X is returned, the task is completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"     * If it is empty, the task is incomplete.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"     * @return The icon to indicate if the task is complete or not.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        return (isCompleted? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"     * Marks the task as complete.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"     * Toggles the isCompleted field to true.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsComplete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"     * Toggles the isCompleted field to false.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        return description;","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"    public Tag getTag() {","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"        return this.tag;","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"     * Returns the value of the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"     * Each tag, T, D and E are tied to Todo, Deadline, and Event respectively.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"     * For sorting purposes, they are given a value. T with 3, D with 2 and E with 1.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"     * @param task A task object.","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"     * @return The integer value of the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"    public static int tagValue(Task task) {","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"        switch (task.getTag()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"            case T:","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"                return 3;","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"            case D:","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"                return 2;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"            case E:","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"                return 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"            default:","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"                return 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Gabriel4357":82}},{"path":"src/main/java/duke/TaskDateComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":" * Comparator object which compares two tasks based off the date. The earlier date comes first.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"public class TaskDateComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        if (firstTask instanceof Deadline \u0026\u0026 secondTask instanceof Deadline) {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"            Deadline firstDeadline \u003d (Deadline) firstTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"            Deadline secondDeadline \u003d (Deadline) secondTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"            return firstDeadline.deadline.compareTo(secondDeadline.deadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        if (firstTask instanceof Event \u0026\u0026 secondTask instanceof Event) {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"            Event firstDeadline \u003d (Event) firstTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            Event secondDeadline \u003d (Event) secondTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            return firstDeadline.start.compareTo(secondDeadline.start);","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        return -1;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":27}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.sql.Array;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":" * A list containing items of type Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Tasks include Todo, Deadline and Event.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * Helps to add,remove and contain tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":14}},{"path":"src/main/java/duke/TaskTagComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":" * Comparator object which compares two tasks based off their tag value.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"public class TaskTagComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    public int compare(Task firstTask, Task secondTask) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        return Task.tagValue(firstTask) - Task.tagValue(secondTask);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":18}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":" * A Task which has only a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":" * Has a tag T.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"     * Constructs a Todo with description.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.T;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":25}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * This class is in charge of the user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * It is in charge responding to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"public class UI {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    private static String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    private StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     * Constructs a UI which has a name.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"     * @param name The name of the assistant.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public UI(String name){","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        UI.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"     * Prints a long line.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"     * This acts as a separator between commands typed in by the user","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"     * and responses from the assistant bot.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"    public static void printline() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"     * Prints a welcome message.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"     * This is the first message the user will receive upon","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"     * using the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"     * @return The welcome message","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"        stringBuilder.append((String.format(\"Hello I\u0027m %s, your personal assistant. \\n\", UI.name)));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"        stringBuilder.append(\"What can I do for you today, sir?\");","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"     * Reads the input from the user and saves it as a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"     * @return The command keyed in by the user that will be passed","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"     * into the parser.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"        Scanner scanIn \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"        String text \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        return text;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"     * Stores a message in the string builder.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"     * This adds a string to the string builder.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"     * @param message The message that is to be stored up in the string builder.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"    public void buildMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"        stringBuilder.append(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"     * Sends the string which has been stored in the string builder.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"     * @return The message that is to be sent to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"    public String sendMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"     * Clears all previous strings that were in the string builder.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"    public void clearStringBuilder() {","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"Gabriel4357"},"content":"        stringBuilder.setLength(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":85}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Executes the goodbye message.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        ui.buildMessage(\"Goodbye. Hope to be of service again soon!\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * A class that is responsible for executing a certain command when it is being called.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"public interface Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     * Carries out the command and returns a response.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @param text The command typed in by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     * @param ui The user interface, which is in charge of dealing with interactions with the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     * @param list The TaskList that holds all the tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"     * @param storage The storage that holds and notes down all past commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"     * @return The response upon calling this specific command.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    public abstract String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":25}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * Executes the creation of a Deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * This adds a Deadline task to the Tasklist.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\"/\", 2);","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d splitText[0].substring(8);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description and deadline cannot be empty\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            String deadlineText \u003d splitText[1].substring(3);","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(deadlineText);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                Deadline dl \u003d new Deadline(description.trim(), deadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                list.add(dl);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(\"Noted Sir. I\u0027ve added this task to your list: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", dl.getTag(), dl.getStatusIcon(),","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                        dl.toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(String.format(\"As of now, you have %d tasks on the agenda.\\n\",","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                        list.size()));","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"                storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"Invalid Date Format: should be YYYY-MM-DDTTime. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                        \"Example: 2023-12-12T06:30:00\");","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":54}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * Executes the deletion of a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" * The task will be deleted and removed from the tasklist.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            int numToDelete \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            if (numToDelete \u003e list.size() - 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"I apologise, sir. This task does not exist\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Alright Sir, I have removed this task from the list for you.\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", list.get(numToDelete).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToDelete).getStatusIcon(), list.get(numToDelete).toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"            list.remove(numToDelete);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"Now you have %d tasks left. \\n\", list.size()));","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. But you have to key in a task number.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"        } catch (","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":47}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * Executes the creation of an Event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * This adds an Event task to the Tasklist.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        String[] splitText \u003d text.split(\"/\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d splitText[0].substring(5);","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description, start and end cannot be empty\");","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"            String startText \u003d splitText[1].trim().substring(5);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            String endText \u003d splitText[2].trim().substring(3);","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(startText);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(endText);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"                Event event \u003d new Event(description.trim(), start, end);","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                list.add(event);","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(\"Noted Sir. I\u0027ve added this task to your list: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", event.getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                        event.getStatusIcon(),","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"                        event.toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(String.format(\"As of now, you have %d tasks on the agenda. \\n\",","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                        list.size()));","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"                storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"            }  catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"Invalid Date Format: should be YYYY-MM-DDTTime. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"                        \"Example: 2023-12-12T06:30:00\");","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"                return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":58}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Executes the command to locate tasks that contain a certain keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" * This looks for Tasks with the keyword, and will be presented to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        String search \u003d text.substring(5);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        if (search.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description of todo cannot be empty\");","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        } else if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir.\" +","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"                    \"But your list is empty.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"            boolean hasSearch \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            boolean isFirst \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                if (list.get(i).toString().contains(search)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                    hasSearch \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"                    if (hasSearch \u003d\u003d true \u0026\u0026 isFirst \u003d\u003d true) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                        ui.buildMessage(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                        ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", list.get(i).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"                                list.get(i).getStatusIcon(), list.get(i).toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                        isFirst \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                    } else if (hasSearch \u003d\u003d true \u0026\u0026 isFirst \u003d\u003d false) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"                        ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", list.get(i).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                                list.get(i).getStatusIcon(), list.get(i).toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"            if (hasSearch \u003d\u003d false) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"I apologise sir.\" +","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                        \"But \" + search + \" cannot be found in your list.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":53}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * Executes the command to show all Tasks currently in the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. But you have no tasks on your list.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            boolean isNull \u003d list.get(i) \u003d\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            if (isNull) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"            } ui.buildMessage(String.format(\"%d. [%s] [%s] %s \\n\", i + 1, list.get(i).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"                            list.get(i).getStatusIcon(), list.get(i)));","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"        } return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":32}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * Executes the command to mark the specified Task as complete.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"            String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            int numToMark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            if (numToMark \u003e list.size() - 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"I apologise, sir. This task does not exist\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"            list.get(numToMark).markAsComplete();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Alright! I\u0027ll check this task as complete for you: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"\\t [%s] [%s] %s\", list.get(numToMark).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToMark).getStatusIcon(), list.get(numToMark)));","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. But you have to key in a task number.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":44}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * Executes the command to sort the TaskList based off Tag then by Date.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"public class SortCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"            list.sort(new TaskTagComparator());","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"            list.sort(new TaskDateComparator());","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Your task list is sorted as requested, sir.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \" \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":30}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":" * Executes the creation of a Todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":" * This adds a Todo task to the Tasklist.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        String description \u003d text.substring(4);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description of todo cannot be empty\");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"                storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \" \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"                return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            Todo todo \u003d new Todo(description.trim());","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            list.add(todo);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Noted Sir. I\u0027ve added this task to your list: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"\\t [%s] [%s] %s \\n\", todo.getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"                    todo.getStatusIcon(), todo.toString()));","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"As of now, you have %d tasks on the agenda. \\n\",","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                    list.size()));","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import duke.UI;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":" * Executes the command to unmark the specified Task as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"     * @inheritDoc","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public String execute(String text, UI ui, TaskList list, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"            String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            int numToUnmark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            if (numToUnmark \u003e list.size() - 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"                throw new DukeException(\"I apologise, sir. This task does not exist\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"            list.get(numToUnmark).markAsIncomplete();","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"            storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Alright! I\u0027ll uncheck this task for you: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(String.format(\"\\t [%s] [%s] %s\", list.get(numToUnmark).getTag(),","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToUnmark).getStatusIcon(), list.get(numToUnmark)));","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            throw new DukeException(\"I apologise, sir. But you have to key in a task number.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"            ui.buildMessage(\"Something went wrong: \" + e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"            return ui.sendMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Gabriel4357":42}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"todo cry","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by 2001-12-12T09:00:00","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Gabriel4357":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"            prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"64.0\" prefWidth\u003d\"671.0\" promptText\u003d\"Key in Command \" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"671.0\" layoutY\u003d\"735.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"64.0\" prefWidth\u003d\"132.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"734.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"732.0\" prefWidth\u003d\"799.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Gabriel4357":25}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public void wrongDateDeadLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"            Parser.parse(\"deadline dance /by 12-12-2001-T0800\", new UI(\"Alfred\"), new TaskList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"                    new Storage(\"src/main/java/duke/data/duke.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"            assertEquals(\"Invalid Date Format: should be YYYY-MM-DDTHH:MM:SS. \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"                                                   \"Example: 2023-12-12T06:30:00\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public void correctDateDeadLine() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        UI ui \u003d new UI(\"Alfred\");","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        String text \u003d \"deadline dance /by 2001-12-12T09:00:00\";","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        Storage storage \u003d new Storage(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"        Parser.parse(text, ui, tasks , storage).execute(text, ui, tasks, storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(\"dance (by: DECEMBER 12 2001, 09:00)\", tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"    public void wrongCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"            String wrongCommand \u003d \"jhfjd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"            Parser.parse(wrongCommand, new UI(\"John\"), new TaskList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                    new Storage(\"src/main/java/duke/data/duke.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"            assertEquals(\"I apologise, sir. But I do not understand what you mean.\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"    public void addEmptyTodoDescription(){","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"            Parser.parse(\"todo\", new UI(\"John\"), new TaskList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                    new Storage(\"src/main/java/duke/data/duke.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"            assertEquals(\"I apologise, sir. \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description of todo cannot be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"    public void addEmptyDeadLineDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"            Parser.parse(\"deadline\", new UI(\"John\"), new TaskList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"                    new Storage(\"src/main/java/duke/data/duke.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"            assertEquals(\"I apologise, sir. \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"                    \"But the description and deadline cannot be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Gabriel4357":64}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    public void adderTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        TaskList taskListTest \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        Todo todo \u003d new Todo(\"CS2103T homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"2023-12-12T12:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(\"2024-01-01T12:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(\"2024-01-01T14:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        Deadline deadline \u003d new Deadline(\"CS2100 Quiz\", date);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        Event event \u003d new Event(\"CS2101 Presentation\", start, end );","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        taskListTest.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        taskListTest.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        taskListTest.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(taskListTest.get(0), todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(taskListTest.get(1), deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(taskListTest.get(2), event);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"        TaskList taskListTest \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        Todo todo \u003d new Todo(\"CS2103T homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"        taskListTest.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(true, taskListTest.contains(todo));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"        taskListTest.remove(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(false, taskListTest.contains(todo));","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Gabriel4357":37}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsCompleteTest(){","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        Todo todo \u003d new Todo(\"Math homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"        todo.markAsComplete();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsIncompleteTest(){","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        Todo todo \u003d new Todo(\"Science homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        todo.markAsComplete();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        todo.markAsIncomplete();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        assertEquals(\" \", todo.getStatusIcon());","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Gabriel4357":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"todo borrow book ","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"mark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"mark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"unmark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"unmark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gabriel4357":2,"-":36}}]
