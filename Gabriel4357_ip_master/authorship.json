[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    protected String deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    public Deadline(String description, String deadline){","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.D;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s(by: %s)\",description,deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"    protected static String name \u003d \"Alfred\";","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    protected static int counter \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"    public static void println() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    public static String getName() {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        return Duke.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    public static int getCounter() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        return Duke.counter;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    public static void incrementCounter() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        Duke.counter++;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    public static void decrementCounter() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"        Duke.counter--;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"    public static void setList(Task item) {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"        list.add(item);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"            Scanner scanIn \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"            println();","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"            System.out.println(String.format(\"Hello I\u0027m %s, your personal assistant.\", getName()));","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"            System.out.println(\"What can I do for you today, sir?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"            println();","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"            while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                String text \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"                if (text.length() \u003e 3 \u0026\u0026 text.substring(0, 4).equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"                        if (list.get(i) \u003d\u003d null) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"                            break;","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"                        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"%d. [%s] [%s] %s\", i + 1, list.get(i).tag, list.get(i).getStatusIcon(), list.get(i)));","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"                // never use .contains as the command \"unmark\" may be present in other commands//","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"                else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"                    int numToUnmark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToUnmark).markAsIncomplete();","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright! I\u0027ll uncheck this task for you: \");","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\", list.get(numToUnmark).tag, list.get(numToUnmark).getStatusIcon(), list.get(numToUnmark)));","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"                    int numToMark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToMark).markAsComplete();","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright! I\u0027ll check this task as complete for you: \");","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\", list.get(numToMark).tag, list.get(numToMark).getStatusIcon(), list.get(numToMark)));","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Goodbye. Hope to be of service again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"Gabriel4357"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d text.substring(4);","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. But the description of todo cannot be empty\");","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"Gabriel4357"},"content":"                        Todo todo \u003d new Todo(description.trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"Gabriel4357"},"content":"                        setList(todo);","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Gabriel4357"},"content":"                        incrementCounter();","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"\\t [%s] [%s] %s\", todo.tag, todo.getStatusIcon(), todo.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\", getCounter()));","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\");","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(8);","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()){","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. But the description and deadline cannot be empty\");","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"Gabriel4357"},"content":"                        String deadline \u003d splitText[1].trim().substring(3);","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"Gabriel4357"},"content":"                        Deadline dl \u003d new Deadline(description.trim(), deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"Gabriel4357"},"content":"                        setList(dl);","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"Gabriel4357"},"content":"                        incrementCounter();","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"\\t [%s] [%s] %s\", dl.tag, dl.getStatusIcon(), dl.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\", getCounter()));","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\");","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(5);","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()){","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. But the description, start and end cannot be empty\");","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"Gabriel4357"},"content":"                        String start \u003d splitText[1].trim().substring(5);","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Gabriel4357"},"content":"                        String end \u003d splitText[2].trim().substring(3);","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"Gabriel4357"},"content":"                        Event event \u003d new Event(description.trim(), start, end);","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"Gabriel4357"},"content":"                        setList(event);","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"Gabriel4357"},"content":"                        incrementCounter();","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"\\t [%s] [%s] %s\", event.tag, event.getStatusIcon(), event.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\", getCounter()));","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Gabriel4357"},"content":"                        println();","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"Gabriel4357"},"content":"                    int numToDelete \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright Sir, I have removed this task from the list for you.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\",list.get(numToDelete).tag, list.get(numToDelete).getStatusIcon(), list.get(numToDelete).toString()));","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"Gabriel4357"},"content":"                    decrementCounter();","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Gabriel4357"},"content":"                    list.remove(numToDelete);","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"Now you have %d tasks left.\", getCounter()));","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Gabriel4357"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Gabriel4357"},"content":"                    throw new DukeException(\"I apologise, sir. But I do not understand what you mean.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Gabriel4357"},"content":"                catch(DukeException e){","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(e.message);","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"Gabriel4357"},"content":"                    println();","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Gabriel4357":171,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    protected String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    public DukeException(String error){","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"        this.message \u003d error;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    protected String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    public Event(String description, String start, String end){","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.E;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s(from: %s to: %s)\",description,start,end);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":19}},{"path":"src/main/java/duke/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public enum Tag {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    T,D,E;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":5}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    protected Tag tag;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        return (isCompleted? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsComplete(){","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        return description;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Gabriel4357":27}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    public Todo(String description){","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.T;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"todo borrow book ","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"mark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"mark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"unmark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"unmark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gabriel4357":2,"-":36}}]
