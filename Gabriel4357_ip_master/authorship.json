[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    public Deadline(String description, LocalDateTime deadline){","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.D;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    public String changeFormat(LocalDateTime deadline){","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        return deadline.getMonth().toString() + \" \" + deadline.getDayOfMonth() + \" \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"                deadline.getYear() + \", \" + deadline.toLocalTime();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s (by: %s)\", description, changeFormat(deadline));","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"    private UI ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        ui \u003d new UI(\"Alfred\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        Storage.preloadFromFile(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            ui.welcomeMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            boolean isExit \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"            while (!isExit) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"                    String command \u003d ui.readCommand();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"                    parser.parse(command, ui, tasks, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(e.message);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"        Duke duke \u003d new Duke(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"        duke.run();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":48,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    protected String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    public DukeException(String error){","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"        this.message \u003d error;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end){","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.E;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public String changeFormat(LocalDateTime date){","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        return date.getMonth().toString() + \" \" + date.getDayOfMonth() + \" \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"                date.getYear() + \", \" + date.toLocalTime();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        return String.format(\"%s (from: %s to: %s)\", description, changeFormat(start),","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"                changeFormat(end));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"    public static void parse(String text, UI ui, TaskList list, Storage storage) throws DukeException{","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"                if (text.length() \u003e 3 \u0026\u0026 text.substring(0, 4).equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"                        if (list.get(i) \u003d\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"                            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"                        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"%d. [%s] [%s] %s\", i + 1, list.get(i).tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"                                    list.get(i).getStatusIcon(), list.get(i)));","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"                    try {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"                        storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                    int numToUnmark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToUnmark).markAsIncomplete();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright! I\u0027ll uncheck this task for you: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\", list.get(numToUnmark).tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                            list.get(numToUnmark).getStatusIcon(), list.get(numToUnmark)));","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                    try {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"                        storage.appendToFile(text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"                    int numToMark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToMark).markAsComplete();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright! I\u0027ll check this task as complete for you: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\", list.get(numToMark).tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"                            list.get(numToMark).getStatusIcon(), list.get(numToMark)));","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Goodbye. Hope to be of service again soon!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d text.substring(4);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"                                \"But the description of todo cannot be empty\");","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"                            storage.appendToFile( text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"                        Todo todo \u003d new Todo(description.trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"                        list.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"                        ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"\\t [%s] [%s] %s\", todo.tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Gabriel4357"},"content":"                                todo.getStatusIcon(), todo.toString()));","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Gabriel4357"},"content":"                                list.size()));","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Gabriel4357"},"content":"                        ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(8);","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Gabriel4357"},"content":"                                \"But the description and deadline cannot be empty\");","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Gabriel4357"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Gabriel4357"},"content":"                            storage.appendToFile( text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"Gabriel4357"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Gabriel4357"},"content":"                        String deadlineText \u003d splitText[1].substring(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Gabriel4357"},"content":"                        try{","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Gabriel4357"},"content":"                            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineText);","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Gabriel4357"},"content":"                            Deadline dl \u003d new Deadline(description.trim(), deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Gabriel4357"},"content":"                            list.add(dl);","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Gabriel4357"},"content":"                            ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"\\t [%s] [%s] %s\", dl.tag, dl.getStatusIcon(),","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Gabriel4357"},"content":"                                    dl.toString()));","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Gabriel4357"},"content":"                                    list.size()));","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Gabriel4357"},"content":"                            ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Gabriel4357"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"Invalid Date Format: should be YYYY-MM-DDTTime. \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Gabriel4357"},"content":"                                \"Example: 2023-12-12T06:30:00\");","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Gabriel4357"},"content":"                        throw new DukeException(\"I apologise, sir. \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"Gabriel4357"},"content":"                                \"But the description, start and end cannot be empty\");","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"Gabriel4357"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"Gabriel4357"},"content":"                            storage.appendToFile( text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"Gabriel4357"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"Gabriel4357"},"content":"                        String startText \u003d splitText[1].trim().substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"Gabriel4357"},"content":"                        String endText \u003d splitText[2].trim().substring(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"Gabriel4357"},"content":"                        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"Gabriel4357"},"content":"                            LocalDateTime start \u003d LocalDateTime.parse(startText);","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"Gabriel4357"},"content":"                            LocalDateTime end \u003d LocalDateTime.parse(endText);","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"Gabriel4357"},"content":"                            Event event \u003d new Event(description.trim(), start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"Gabriel4357"},"content":"                            list.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"Gabriel4357"},"content":"                            ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(\"Noted Sir. I\u0027ve added this task to your list: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"\\t [%s] [%s] %s\", event.tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"Gabriel4357"},"content":"                                    event.getStatusIcon(),","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"Gabriel4357"},"content":"                                    event.toString()));","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"Gabriel4357"},"content":"                            System.out.println(String.format(\"As of now, you have %d tasks on the agenda.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"Gabriel4357"},"content":"                                    list.size()));","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"Gabriel4357"},"content":"                            ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"Gabriel4357"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"Gabriel4357"},"content":"                            throw new DukeException(\"Invalid Date Format: should be YYYY-MM-DDTTime. \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"Gabriel4357"},"content":"                                    \"Example: 2023-12-12T06:30:00\");","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"Gabriel4357"},"content":"                        }","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"Gabriel4357"},"content":"                    try {","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"Gabriel4357"},"content":"                        storage.appendToFile( text + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"Gabriel4357"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"Gabriel4357"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"Gabriel4357"},"content":"                    int numToDelete \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"Gabriel4357"},"content":"                    ui.printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(\"Alright Sir, I have removed this task from the list for you.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"\\t [%s] [%s] %s\", list.get(numToDelete).tag,","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"Gabriel4357"},"content":"                            list.get(numToDelete).getStatusIcon(), list.get(numToDelete).toString()));","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"Gabriel4357"},"content":"                    list.remove(numToDelete);","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"Gabriel4357"},"content":"                    System.out.println(String.format(\"Now you have %d tasks left.\", list.size()));","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"Gabriel4357"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"Gabriel4357"},"content":"                    throw new DukeException(\"I apologise, sir. But I do not understand what you mean.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":179}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    private static String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"    public static void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        FileWriter fw \u003d new FileWriter(Storage.filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public static void preloadFromFile(TaskList list) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"            File f \u003d new File(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"            Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"                String text \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"                if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Gabriel4357"},"content":"                    int numToUnmark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToUnmark).markAsIncomplete();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Gabriel4357"},"content":"                    int numToMark \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Gabriel4357"},"content":"                    list.get(numToMark).markAsComplete();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d text.substring(4);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Gabriel4357"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Gabriel4357"},"content":"                        continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Gabriel4357"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Gabriel4357"},"content":"                        Todo todo \u003d new Todo(description.trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Gabriel4357"},"content":"                        list.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Gabriel4357"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(8);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Gabriel4357"},"content":"                    String deadlineText \u003d splitText[1].substring(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Gabriel4357"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineText);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Gabriel4357"},"content":"                    Deadline dl \u003d new Deadline(description.trim(), deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Gabriel4357"},"content":"                    list.add(dl);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\"/\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Gabriel4357"},"content":"                    String description \u003d splitText[0].substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Gabriel4357"},"content":"                    String startText \u003d splitText[1].trim().substring(5);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Gabriel4357"},"content":"                    String endText \u003d splitText[2].trim().substring(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Gabriel4357"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(startText);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Gabriel4357"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(endText);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Gabriel4357"},"content":"                    Event event \u003d new Event(description.trim(), start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Gabriel4357"},"content":"                    list.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Gabriel4357"},"content":"                } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Gabriel4357"},"content":"                    String[] splitText \u003d text.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Gabriel4357"},"content":"                    int numToDelete \u003d Integer.parseInt(splitText[1]) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Gabriel4357"},"content":"                    list.remove(numToDelete);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Gabriel4357"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Gabriel4357"},"content":"                    continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Gabriel4357"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Gabriel4357"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Gabriel4357"},"content":"        } catch(FileNotFoundException e){","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Gabriel4357"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Gabriel4357"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":77}},{"path":"src/main/java/duke/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public enum Tag {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    T,D,E;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":5}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"    protected Tag tag;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"        return (isCompleted? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsComplete(){","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"    public String toString(){","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"        return description;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Gabriel4357":27}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.sql.Array;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":8}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"    public Todo(String description){","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"        this.tag \u003d Tag.T;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":10}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"public class UI {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"    private static String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"    public UI(String name){","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"        UI.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"    public static void printline() {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Gabriel4357"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Gabriel4357"},"content":"    public void welcomeMessage(){","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Gabriel4357"},"content":"        printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"        System.out.println(String.format(\"Hello I\u0027m %s, your personal assistant.\", UI.name));","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Gabriel4357"},"content":"        System.out.println(\"What can I do for you today, sir?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Gabriel4357"},"content":"        printline();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Gabriel4357"},"content":"    public String readCommand(){","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Gabriel4357"},"content":"        Scanner scanIn \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"        String text \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Gabriel4357"},"content":"        return text;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Gabriel4357"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Gabriel4357"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Gabriel4357"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":27}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"deadline dance /by LOL","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Gabriel4357":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabriel4357"},"content":"todo borrow book ","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Gabriel4357"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Gabriel4357"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Gabriel4357"},"content":"mark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Gabriel4357"},"content":"mark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Gabriel4357"},"content":"unmark 1 ","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Gabriel4357"},"content":"unmark 2 ","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Gabriel4357"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Gabriel4357"},"content":"list ","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Gabriel4357":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Gabriel4357"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Gabriel4357"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gabriel4357":2,"-":36}}]
