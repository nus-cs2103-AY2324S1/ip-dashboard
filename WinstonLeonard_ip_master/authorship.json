[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WinstonLeonard":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WinstonLeonard":22,"-":41}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"[D][X] do hw (by: Aug 30 2023, 23:59)","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"[E][X] PINUS (from: Aug 30 2023, 15:00 to: Aug 30 2023, 16:00)","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"[E][ ] SOMETHING (from: Aug 31 2023, 12:00 to: Aug 31 2023, 13:00)","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"[T][ ] test","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"WinstonLeonard":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":" * Deadline Class","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new Deadline Task","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description about the deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"     * @param by When the deadline should be completed","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone Whether the deadline has been completed","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"        this.byDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        this.by \u003d byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"     * @return toString version of the Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":" * DialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"     * DialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"     * @param l Label","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"     * @param iv ImageView","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isUserDialog Whether this dialogbox is userdialog or duke dialog","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"     * @param content content to be displayed","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"    public DialogBox(Label l, ImageView iv, boolean isUserDialog, String content) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"        displayPicture.setFitWidth(80);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"        displayPicture.setFitHeight(80);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"        // Add padding between ImageView and Label","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 10, 0, 10)); // Adjust the insets as needed","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"        Color backgroundColor \u003d isUserDialog ? Color.LIGHTBLUE : Color.LIGHTGREEN;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(backgroundColor, null, null);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"        Background background \u003d new Background(backgroundFill);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"WinstonLeonard"},"content":"        this.setBackground(background);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"WinstonLeonard"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"WinstonLeonard"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"WinstonLeonard"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"WinstonLeonard"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"WinstonLeonard"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"WinstonLeonard"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"WinstonLeonard"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv, String content) {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"WinstonLeonard"},"content":"        return new DialogBox(l, iv, true, content);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"WinstonLeonard"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv, String content) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"WinstonLeonard"},"content":"        var db \u003d new DialogBox(l, iv, false, content);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"WinstonLeonard"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"WinstonLeonard"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"WinstonLeonard":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":" * Duke","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"     * @param filePath The file path of the txt document to read and write from.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"     * Old constructor","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"        String filePath \u003d \"../ip/src/main/data/duke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"        storage \u003d new Storage(filePath, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"        storage.startStorage();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"        ui \u003d new Ui(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"    public static void main(String[] args) throws EmptyDescriptionException, InvalidCommandException,","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"            NotANumberException {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"        //Duke duke \u003d new Duke(\"../ip/src/main/data/duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"WinstonLeonard"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"WinstonLeonard"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"WinstonLeonard"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"WinstonLeonard"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"WinstonLeonard"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"WinstonLeonard"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"WinstonLeonard"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"WinstonLeonard"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"WinstonLeonard"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"WinstonLeonard"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"WinstonLeonard"},"content":"        return input;","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"WinstonLeonard"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"WinstonLeonard"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"WinstonLeonard"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"WinstonLeonard"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"WinstonLeonard"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"WinstonLeonard"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"WinstonLeonard"},"content":"        String userInputText \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"WinstonLeonard"},"content":"        if (userInputText.equalsIgnoreCase(\"Bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"WinstonLeonard"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"WinstonLeonard"},"content":"            storage.writeToStorage();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(userText.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"WinstonLeonard"},"content":"        String responseText \u003d this.ui.startUi(userInputText);","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"WinstonLeonard"},"content":"        //Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"WinstonLeonard"},"content":"        Label dukeText \u003d new Label(getResponse(responseText));","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"WinstonLeonard"},"content":"        //String responseText \u003d getResponse(userInputText);","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"WinstonLeonard"},"content":"        ImageView userImageView \u003d new ImageView(user);","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"WinstonLeonard"},"content":"        ImageView dukeImageView \u003d new ImageView(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"WinstonLeonard"},"content":"        Circle clip \u003d new Circle();","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"WinstonLeonard"},"content":"        Circle clip2 \u003d new Circle();","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setCenterX(40); // Adjust the center coordinates as needed","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setCenterY(40);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setRadius(40); // Adjust the radius to control the size of the circle","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"WinstonLeonard"},"content":"        clip2.setCenterX(40); // Adjust the center coordinates as needed","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"WinstonLeonard"},"content":"        clip2.setCenterY(40);","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"WinstonLeonard"},"content":"        clip2.setRadius(40); // Adjust the radius to control the size of the circle","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"WinstonLeonard"},"content":"        userImageView.setClip(clip);","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"WinstonLeonard"},"content":"        dukeImageView.setClip(clip2);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"WinstonLeonard"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText, userImageView, userInputText);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"WinstonLeonard"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText, dukeImageView, responseText);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"WinstonLeonard"},"content":"            userDialog, dukeDialog","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"WinstonLeonard"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"WinstonLeonard"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"WinstonLeonard"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"WinstonLeonard"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"WinstonLeonard"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"WinstonLeonard"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"WinstonLeonard"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"WinstonLeonard"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"WinstonLeonard"},"content":"        // Set spacing between DialogBoxes","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer.setSpacing(20.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"WinstonLeonard"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"WinstonLeonard"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"WinstonLeonard"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"WinstonLeonard"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"WinstonLeonard"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"WinstonLeonard"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"WinstonLeonard"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"WinstonLeonard"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"WinstonLeonard"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"WinstonLeonard"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"WinstonLeonard"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"WinstonLeonard"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"WinstonLeonard"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"WinstonLeonard"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"WinstonLeonard"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"WinstonLeonard"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"WinstonLeonard"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"WinstonLeonard"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"WinstonLeonard"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"WinstonLeonard"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"WinstonLeonard"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"WinstonLeonard"},"content":"        Circle clip \u003d new Circle();","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setCenterX(40); // Adjust the center coordinates as needed","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setCenterY(40);","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"WinstonLeonard"},"content":"        clip.setRadius(40); // Adjust the radius to control the size of the circle","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"WinstonLeonard"},"content":"        ImageView dukeImageView \u003d new ImageView(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"WinstonLeonard"},"content":"        dukeImageView.setClip(clip);","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"WinstonLeonard"},"content":"        String welMessage \u003d \"Hello! I\u0027m DukeBot\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"WinstonLeonard"},"content":"        Label welcomeMessage \u003d new Label(welMessage);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"WinstonLeonard"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImageView, welMessage));","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WinstonLeonard":201,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * DukeException","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":8}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * Thrown if an empty description is given.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"    private static String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"    public EmptyDescriptionException(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"        //System.out.println( line + \"\\t☹ OOPS!!! The description of a \" + task + \" cannot be empty.\" + \"\\n\" + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":" * Event","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create an Event Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description Description about the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"     * @param from When the event is from.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"     * @param to When the event is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone Boolean if the event has been completed or not","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"        this.toDateTime \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"        this.from \u003d fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"        this.to \u003d toDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"     * @return toString of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":39}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * Invalid command exception, thrown if the user gives an invalid command","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"    private static String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line + \" \\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\" + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":" * Launcher, to start the GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"WinstonLeonard":12}},{"path":"src/main/java/duke/NotANumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * Thrown if a number is not given.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class NotANumberException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"    private static String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    public NotANumberException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line + \" \\tThat command must be followed by a number\" + \"\\n\" + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":" * Parses the string","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"     * parses a string to match the format to create a deadline task","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"     * @param input String to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"     * @return A string suitable to create a new deadline task","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"    public static String convertDeadlineFormat(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"        assert input.contains(\"/by\");","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"        Pattern pattern \u003d Pattern.compile(\"by: (\\\\w{3} \\\\d{2} \\\\d{4}, \\\\d{2}:\\\\d{2})\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"            String dateAndTime \u003d matcher.group(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime,","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"                    DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"            String formattedDateTime \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"            String result \u003d input.replaceFirst(\"by: \" + dateAndTime, \"/by \" + formattedDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"            result \u003d result.replace(\")\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"            result \u003d result.replace(\"(\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"            return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"            return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"     * parses a string to match the format to create an event task","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"     * @param input String to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"     * @return A string suitable to create a new event task","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"    public static String convertEventFormat(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"        // Define a regular expression pattern to match the date and time strings","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"        assert input.contains(\"/to\");","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"        assert input.contains(\"/from\");","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\((from: ([^)]+) to: ([^)]+))\\\\)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"        SimpleDateFormat inputDateFormat \u003d new SimpleDateFormat(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"        SimpleDateFormat outputDateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"        // Find and replace matches in the input string","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"        StringBuffer sb \u003d new StringBuffer();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"        while (matcher.find()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"                Date fromDate \u003d inputDateFormat.parse(matcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WinstonLeonard"},"content":"                Date toDate \u003d inputDateFormat.parse(matcher.group(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"                String replacement \u003d \"/from \" + outputDateFormat.format(fromDate) + \" /to \"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"WinstonLeonard"},"content":"                        + outputDateFormat.format(toDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"WinstonLeonard"},"content":"                matcher.appendReplacement(sb, replacement);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WinstonLeonard"},"content":"            } catch (java.text.ParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WinstonLeonard"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WinstonLeonard"},"content":"        matcher.appendTail(sb);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WinstonLeonard"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":70}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":" * Storage","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"    protected String filepath;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    protected BufferedReader reader;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"    protected BufferedWriter writer;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    protected BufferedWriter saveWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new Storage object","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"     * @param filepath The filepath of the .txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    public Storage(String filepath, TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"     * Starts reading the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"    public void startStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"            reader \u003d new BufferedReader(new FileReader(filepath));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"            String fileLine;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"            while ((fileLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"                String eventType \u003d Character.toString(fileLine.charAt(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"                assert eventType.equals(\"T\") || eventType.equals(\"D\") || eventType.equals(\"E\");","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"                String isDone \u003d Character.toString(fileLine.charAt(4));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"                assert isDone.equals(\"X\") || isDone.equals(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"                String extractedSubstring \u003d fileLine.substring(7, fileLine.length());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"                switch (eventType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"                case \"T\": {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"                    tasks.toDoHandler(extractedSubstring, isDone.equals(\"X\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"                case \"D\": {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"                    //System.out.println(extractedSubstring);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"                    String description \u003d Parser.convertDeadlineFormat(extractedSubstring);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"                    tasks.deadlineHandler(description, isDone.equals(\"X\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"                case \"E\": {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"                    String description \u003d Parser.convertEventFormat(extractedSubstring);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"                    tasks.eventHandler(description, isDone.equals(\"X\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WinstonLeonard"},"content":"                default: {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"                    break;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"WinstonLeonard"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"WinstonLeonard"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WinstonLeonard"},"content":"            reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WinstonLeonard"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WinstonLeonard"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"The file named duke.txt does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WinstonLeonard"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WinstonLeonard"},"content":"            //do something","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"WinstonLeonard"},"content":"     * Method to write to the storage","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"WinstonLeonard"},"content":"    public void writeToStorage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WinstonLeonard"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WinstonLeonard"},"content":"            writer \u003d new BufferedWriter(new FileWriter(filepath, true));","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WinstonLeonard"},"content":"            saveWriter \u003d new BufferedWriter(new FileWriter(filepath));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"WinstonLeonard"},"content":"            for (Task task : this.tasks.getTaskList()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"WinstonLeonard"},"content":"                saveWriter.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"WinstonLeonard"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"WinstonLeonard"},"content":"            saveWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"WinstonLeonard"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"WinstonLeonard"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":91}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * Task","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new Task object","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone whether the task has been completed or not","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"     * Gets the status icon of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"     * @return [X] if the object has been completed, [ ] otherwise","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"     * Gets the description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"     * @return description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"     * Method to mark a task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"     * Method to mark a task as not done","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"     * @return toString of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":57}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":" * TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    private static String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    protected ArrayList\u003cTask\u003e strList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new task list","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"        this.strList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"     * Prints a tasks to the console when a task is added","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"     * @param t The task being printed","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    private String printAddTask(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        String message \u003d \"Got it. I\u0027ve added this task: \" + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line + \"\\t\" + message);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"        message \u003d message + t.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(\"\\t\\t\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"        String now \u003d \"Now you have \" + strList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(\"\\t\" + now);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"        message \u003d message + now;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"     * Creates a new todo task given a description, isDone boolean, and boolean readingFile","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description of the todo task","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone boolean to mark is the task is done or not","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"     * @param readingFile boolean to check if readingFile or not","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"    public String toDoHandler(String description, boolean isDone, boolean readingFile)","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"            throws EmptyDescriptionException {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"            Task newToDo \u003d new ToDos(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"            strList.add(newToDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"            if (!readingFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"                return printAddTask(newToDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"            return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WinstonLeonard"},"content":"     * Creates a new deadline task given a description, isDone boolean, and readingFile boolean","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description of the todo task","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone boolean to mark is the task is done or not","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WinstonLeonard"},"content":"     * @param readingFile boolean to check if readingFile or not","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WinstonLeonard"},"content":"    public String deadlineHandler(String description, boolean isDone, boolean readingFile) throws","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"WinstonLeonard"},"content":"            EmptyDescriptionException {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WinstonLeonard"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WinstonLeonard"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WinstonLeonard"},"content":"            String[] parts \u003d description.split(\"/by\"); // Split the input string by the delimiter \"/\"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WinstonLeonard"},"content":"            String before \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WinstonLeonard"},"content":"            String after \u003d parts[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"WinstonLeonard"},"content":"            Task newDeadline \u003d new Deadline(before, after, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"WinstonLeonard"},"content":"            strList.add(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"WinstonLeonard"},"content":"            if (!readingFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WinstonLeonard"},"content":"                return printAddTask(newDeadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WinstonLeonard"},"content":"            return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"WinstonLeonard"},"content":"     * creates a event task given a description, isDone boolean, and readingFile boolean","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description of the todo task","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone boolean to mark is the task is done or not","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"WinstonLeonard"},"content":"     * @param readingFile boolean to check if readingFile or not","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws EmptyDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"WinstonLeonard"},"content":"    public String eventHandler(String description, boolean isDone, boolean readingFile)","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"WinstonLeonard"},"content":"            throws EmptyDescriptionException {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"WinstonLeonard"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"WinstonLeonard"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"WinstonLeonard"},"content":"            int fromIndex \u003d description.indexOf(\"/from\"); // Find the index of \"/from\"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"WinstonLeonard"},"content":"            int toIndex \u003d description.indexOf(\"/to\"); // Find the index of \"/to\"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"WinstonLeonard"},"content":"            String eventDescription \u003d description.substring(0, fromIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"WinstonLeonard"},"content":"            String from \u003d description.substring(fromIndex + \"/from\".length(), toIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"WinstonLeonard"},"content":"            String to \u003d description.substring(toIndex + \"/to\".length()).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"WinstonLeonard"},"content":"            Task newEvent \u003d new Event(eventDescription, from, to, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"WinstonLeonard"},"content":"            strList.add(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"WinstonLeonard"},"content":"            if (!readingFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"WinstonLeonard"},"content":"                return printAddTask(newEvent);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"WinstonLeonard"},"content":"            return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"WinstonLeonard"},"content":"     * PrintTaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"WinstonLeonard"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"WinstonLeonard"},"content":"        for (Task element : strList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(element.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"WinstonLeonard"},"content":"     * Prints put the list contents","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"WinstonLeonard"},"content":"    public String printListContent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"WinstonLeonard"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"WinstonLeonard"},"content":"        int arrLength \u003d this.strList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"WinstonLeonard"},"content":"        result \u003d result + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"WinstonLeonard"},"content":"        for (int i \u003d 0; i \u003c arrLength; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"WinstonLeonard"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"WinstonLeonard"},"content":"            Task t \u003d strList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + number + \".\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"WinstonLeonard"},"content":"            String taskToString \u003d number + \".\" + t.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"WinstonLeonard"},"content":"            result \u003d result + taskToString + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"WinstonLeonard"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"WinstonLeonard"},"content":"     * Marks a task in the list to be done","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"WinstonLeonard"},"content":"     * @param number The number of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws NotANumberException","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"WinstonLeonard"},"content":"    public String markTaskAsDone(char number) throws NotANumberException {","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"WinstonLeonard"},"content":"        if (!Character.isDigit(number)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"WinstonLeonard"},"content":"            throw new NotANumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"WinstonLeonard"},"content":"            int index \u003d Character.getNumericValue(number) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"WinstonLeonard"},"content":"            assert index \u003c\u003d strList.size() : \"That index does not exist\";","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"WinstonLeonard"},"content":"            Task t \u003d strList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"WinstonLeonard"},"content":"            t.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"WinstonLeonard"},"content":"            String message \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + \"\\t\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"WinstonLeonard"},"content":"            message \u003d message + t.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"WinstonLeonard"},"content":"            return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"WinstonLeonard"},"content":"     * Unmarks a task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"WinstonLeonard"},"content":"     * @param number The number of the task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws NotANumberException","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"WinstonLeonard"},"content":"    public String unmarkTask(char number) throws NotANumberException {","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"WinstonLeonard"},"content":"        if (!Character.isDigit(number)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"WinstonLeonard"},"content":"            throw new NotANumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"WinstonLeonard"},"content":"            int index \u003d Character.getNumericValue(number) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"WinstonLeonard"},"content":"            assert index \u003c\u003d strList.size() : \"That index does not exist\";","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"WinstonLeonard"},"content":"            Task t \u003d strList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"WinstonLeonard"},"content":"            t.unmarkTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"WinstonLeonard"},"content":"            String message \u003d \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + \"\\t\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"WinstonLeonard"},"content":"            message \u003d message + t.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"WinstonLeonard"},"content":"            return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"WinstonLeonard"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"WinstonLeonard"},"content":"     * @param number The number of the task inside the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"WinstonLeonard"},"content":"     * @throws NotANumberException","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"WinstonLeonard"},"content":"    public String deleteTask(char number) throws NotANumberException {","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"WinstonLeonard"},"content":"        if (!Character.isDigit(number)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"WinstonLeonard"},"content":"            throw new NotANumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"WinstonLeonard"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"WinstonLeonard"},"content":"            int index \u003d Character.getNumericValue(number) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"WinstonLeonard"},"content":"            assert index \u003c\u003d strList.size() : \"That index does not exist\";","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"WinstonLeonard"},"content":"            Task t \u003d strList.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"WinstonLeonard"},"content":"            String message \u003d \"Noted. I\u0027ve removed this task: \" + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + \"\\t\" + t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"WinstonLeonard"},"content":"            message \u003d message + t.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"WinstonLeonard"},"content":"            String nowTasks \u003d \"Now you have \" + strList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + nowTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"WinstonLeonard"},"content":"            message \u003d message + nowTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"WinstonLeonard"},"content":"            return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"WinstonLeonard"},"content":"     * @return an ArrayList of the current Tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"WinstonLeonard"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"WinstonLeonard"},"content":"        return this.strList;","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"WinstonLeonard"},"content":"     * Prints out all the tasks that match the taskName","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"WinstonLeonard"},"content":"     * @param taskName the name of the task that we are finding for","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"WinstonLeonard"},"content":"    public String findTask(String taskName) {","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"WinstonLeonard"},"content":"        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"WinstonLeonard"},"content":"        for (Task i : this.strList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"WinstonLeonard"},"content":"            if ((i.toString().toLowerCase()).contains(taskName.toLowerCase())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"WinstonLeonard"},"content":"                findList.add(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"WinstonLeonard"},"content":"        String message \u003d \"Here are the matching tasks in your list:\" + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"WinstonLeonard"},"content":"        for (int i \u003d 0; i \u003c findList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"WinstonLeonard"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"WinstonLeonard"},"content":"            String x \u003d number + \".\" + findList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":233,"author":{"gitId":"WinstonLeonard"},"content":"            System.out.println(\"\\t\" + x);","lastModifiedDate":"2023-09-07"},{"lineNumber":234,"author":{"gitId":"WinstonLeonard"},"content":"            message \u003d message + x;","lastModifiedDate":"2023-09-07"},{"lineNumber":235,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"WinstonLeonard"},"content":"        System.out.println(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"WinstonLeonard"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":238,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":240}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":" * ToDos","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new ToDo Task","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"     * @param description description of the ToDo task","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"     * @param isDone whether the ToDo task has been completed or not","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"     * @return the toString of a ToDo task","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":" * Starts the UI","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    private static String line \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    private static String exitMessage \u003d line + \"\\tBye. Hope to see you again\\n\" + line;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"     * Constructor to create a new UI","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"     * @param tasks lists of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"     * Starts the UI interaction with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    public String startUi(String echo) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"            String[] words \u003d echo.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"            if (echo.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"                return this.tasks.printListContent();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"                char lastCharacter \u003d echo.charAt(echo.length() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"                return this.tasks.markTaskAsDone(lastCharacter);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"                char lastCharacter \u003d echo.charAt(echo.length() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"                return this.tasks.unmarkTask(lastCharacter);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WinstonLeonard"},"content":"                char lastCharacter \u003d echo.charAt(echo.length() - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WinstonLeonard"},"content":"                return this.tasks.deleteTask(lastCharacter);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WinstonLeonard"},"content":"                String description \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WinstonLeonard"},"content":"                return tasks.toDoHandler(description, false, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WinstonLeonard"},"content":"                String description \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WinstonLeonard"},"content":"                return tasks.deadlineHandler(description, false, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WinstonLeonard"},"content":"                String description \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WinstonLeonard"},"content":"                return tasks.eventHandler(description, false, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"WinstonLeonard"},"content":"            } else if (words[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"WinstonLeonard"},"content":"                String description \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WinstonLeonard"},"content":"                return tasks.findTask(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"WinstonLeonard"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"WinstonLeonard"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"WinstonLeonard"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WinstonLeonard"},"content":"        } catch (NotANumberException | EmptyDescriptionException | InvalidCommandException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WinstonLeonard"},"content":"            //exception caught","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WinstonLeonard"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"WinstonLeonard"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"WinstonLeonard":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.Duke\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"WinstonLeonard":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[D][ ] Test deadline (by: Aug 31 2023, 18:00)\", (new Deadline(\"Test deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"                \"31-08-2023 18:00\", false)).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[D][X] Test deadline (by: Aug 31 2023, 18:00)\", (new Deadline(\"Test deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"                \"31-08-2023 18:00\", true)).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"        Deadline deadline \u003d new Deadline(\"Test deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"                \"31-08-2023 18:00\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"        deadline.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[D][X] Test deadline (by: Aug 31 2023, 18:00)\", deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WinstonLeonard"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WinstonLeonard"},"content":"        Deadline deadline \u003d new Deadline(\"Test deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WinstonLeonard"},"content":"                \"31-08-2023 18:00\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WinstonLeonard"},"content":"        deadline.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WinstonLeonard"},"content":"        deadline.unmarkTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[D][ ] Test deadline (by: Aug 31 2023, 18:00)\", deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":35}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WinstonLeonard"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[T][ ] Test message\", (new ToDos(\"Test message\", false)).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WinstonLeonard"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WinstonLeonard"},"content":"        ToDos todo2 \u003d new ToDos(\"Test marked message\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WinstonLeonard"},"content":"        todo2.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[T][X] Test marked message\", todo2.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WinstonLeonard"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WinstonLeonard"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WinstonLeonard"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WinstonLeonard"},"content":"        ToDos todo3 \u003d new ToDos(\"Test unmarked message\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WinstonLeonard"},"content":"        todo3.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WinstonLeonard"},"content":"        todo3.unmarkTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"WinstonLeonard"},"content":"        assertEquals(\"[T][ ] Test unmarked message\", todo3.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WinstonLeonard"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WinstonLeonard"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WinstonLeonard":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinstonLeonard"},"content":"todo borrow books","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"WinstonLeonard"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"WinstonLeonard"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"WinstonLeonard"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"WinstonLeonard"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"WinstonLeonard"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"WinstonLeonard"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"WinstonLeonard":7}}]
