[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"# URBOI","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"TyrusLye"},"content":"Are you confused? Lost all the time? Don\u0027t know whats happening? **Well So Do I*. Introducing; _URBOI_. THE BEST THING REMEMBERER IN TOWN.","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"TyrusLye"},"content":"## It can:","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"TyrusLye"},"content":"- Help you remember things!","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"TyrusLye"},"content":"- Set deadlines for things!","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"TyrusLye"},"content":"- Makes finding the things you need to do easy!","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"TyrusLye"},"content":"Greetings from:","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"TyrusLye"},"content":"UUUUUUUU     UUUUUUUURRRRRRRRRRRRRRRRR   BBBBBBBBBBBBBBBBB        OOOOOOOOO     IIIIIIIIII","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"TyrusLye"},"content":"U::::::U     U::::::UR::::::::::::::::R  B::::::::::::::::B     OO:::::::::OO   I::::::::I","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"TyrusLye"},"content":"U::::::U     U::::::UR::::::RRRRRR:::::R B::::::BBBBBB:::::B  OO:::::::::::::OO I::::::::I","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"TyrusLye"},"content":"UU:::::U     U:::::UURR:::::R     R:::::RBB:::::B     B:::::BO:::::::OOO:::::::OII::::::II","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"TyrusLye"},"content":" U:::::U     U:::::U   R::::R     R:::::R  B::::B     B:::::BO::::::O   O::::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R::::RRRRRR:::::R   B::::BBBBBB:::::B O:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R:::::::::::::RR    B:::::::::::::BB  O:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R::::RRRRRR:::::R   B::::BBBBBB:::::B O:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"TyrusLye"},"content":" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"TyrusLye"},"content":" U::::::U   U::::::U   R::::R     R:::::R  B::::B     B:::::BO::::::O   O::::::O  I::::I  ","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"TyrusLye"},"content":" U:::::::UUU:::::::U RR:::::R     R:::::RBB:::::BBBBBB::::::BO:::::::OOO:::::::OII::::::II","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"TyrusLye"},"content":"  UU:::::::::::::UU  R::::::R     R:::::RB:::::::::::::::::B  OO:::::::::::::OO I::::::::I","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"TyrusLye"},"content":"    UU:::::::::UU    R::::::R     R:::::RB::::::::::::::::B     OO:::::::::OO   I::::::::I","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"TyrusLye"},"content":"      UUUUUUUUU      RRRRRRRR     RRRRRRRBBBBBBBBBBBBBBBBB        OOOOOOOOO     IIIIIIIIII","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"TyrusLye":23,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"TyrusLye"},"content":"    mainClassName\u003d \"Duke\"","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TyrusLye":1,"-":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"TyrusLye"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"TyrusLye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"TyrusLye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"TyrusLye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"TyrusLye"},"content":"import java.io.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"TyrusLye"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/tasks.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"TyrusLye"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"TyrusLye"},"content":"     * Main method to start the Duke application.","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"TyrusLye"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"TyrusLye"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"TyrusLye"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"TyrusLye"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"TyrusLye"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"TyrusLye"},"content":"        loadTasksFromFile(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"TyrusLye"},"content":"        String logo \u003d \"UUUUUUUU     UUUUUUUURRRRRRRRRRRRRRRRR   BBBBBBBBBBBBBBBBB        OOOOOOOOO     IIIIIIIIII\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"TyrusLye"},"content":"                +\"U::::::U     U::::::UR::::::::::::::::R  B::::::::::::::::B     OO:::::::::OO   I::::::::I\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"TyrusLye"},"content":"                +\"U::::::U     U::::::UR::::::RRRRRR:::::R B::::::BBBBBB:::::B  OO:::::::::::::OO I::::::::I\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"TyrusLye"},"content":"                +\"UU:::::U     U:::::UURR:::::R     R:::::RBB:::::B     B:::::BO:::::::OOO:::::::OII::::::II\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::U     U:::::U   R::::R     R:::::R  B::::B     B:::::BO::::::O   O::::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R::::RRRRRR:::::R   B::::BBBBBB:::::B O:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R:::::::::::::RR    B:::::::::::::BB  O:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R::::RRRRRR:::::R   B::::BBBBBB:::::B O:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::D     D:::::U   R::::R     R:::::R  B::::B     B:::::BO:::::O     O:::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"TyrusLye"},"content":"                +\" U::::::U   U::::::U   R::::R     R:::::R  B::::B     B:::::BO::::::O   O::::::O  I::::I  \\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"TyrusLye"},"content":"                +\" U:::::::UUU:::::::U RR:::::R     R:::::RBB:::::BBBBBB::::::BO:::::::OOO:::::::OII::::::II\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"TyrusLye"},"content":"                +\"  UU:::::::::::::UU  R::::::R     R:::::RB:::::::::::::::::B  OO:::::::::::::OO I::::::::I\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"TyrusLye"},"content":"                +\"    UU:::::::::UU    R::::::R     R:::::RB::::::::::::::::B     OO:::::::::OO   I::::::::I\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"TyrusLye"},"content":"                +\"      UUUUUUUUU      RRRRRRRR     RRRRRRRBBBBBBBBBBBBBBBBB        OOOOOOOOO     IIIIIIIIII\\n\";","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"Wazzup! It\u0027s\\n\" + logo);","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"What can I do for you mah man?\");","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"TyrusLye"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"TyrusLye"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"TyrusLye"},"content":"            try{","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"TyrusLye"},"content":"                if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"TyrusLye"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"TyrusLye"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d command.substring(5).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"TyrusLye"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"TyrusLye"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"TyrusLye"},"content":"                    // Parse the date and time in the format d/M/yyyy HHmm","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"TyrusLye"},"content":"                    String[] parts \u003d command.split(\" /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"TyrusLye"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"TyrusLye"},"content":"                        throw new DukeException(\"Deadline command must include a date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"TyrusLye"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(parts[1], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Deadline(description, dateTime));","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d command.substring(6, command.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"TyrusLye"},"content":"                    String from \u003d command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"TyrusLye"},"content":"                    String to \u003d command.substring(command.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"TyrusLye"},"content":"                        tasks.get(index).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"TyrusLye"},"content":"                        tasks.get(index).markNotDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"TyrusLye"},"content":"                }  else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"TyrusLye"},"content":"                        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"TyrusLye"},"content":"                    String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"TyrusLye"},"content":"                    findTasks(tasks, keyword);","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"TyrusLye"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"TyrusLye"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"TyrusLye"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"TyrusLye"},"content":"                saveTasksToFile(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"TyrusLye"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"TyrusLye"},"content":"                System.out.println(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"TyrusLye"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"TyrusLye"},"content":"    private static String formatDate(LocalDate date) {","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"TyrusLye"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"TyrusLye"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":126,"author":{"gitId":"TyrusLye"},"content":"     * Loads tasks from a file into the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"TyrusLye"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":128,"author":{"gitId":"TyrusLye"},"content":"     * @param tasks The ArrayList to store the loaded tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":129,"author":{"gitId":"TyrusLye"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":130,"author":{"gitId":"TyrusLye"},"content":"    private static void loadTasksFromFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"TyrusLye"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"TyrusLye"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"TyrusLye"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"TyrusLye"},"content":"                Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"TyrusLye"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"TyrusLye"},"content":"                    String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"TyrusLye"},"content":"                    Task task \u003d createTaskFromLine(line);","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"TyrusLye"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"TyrusLye"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"TyrusLye"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"TyrusLye"},"content":"                fileScanner.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"TyrusLye"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"TyrusLye"},"content":"            // Handle file not found exception","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"File not found: \" + FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"TyrusLye"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"TyrusLye"},"content":"     * Creates a Task object from a line of text in the specified format.","lastModifiedDate":"2023-09-23"},{"lineNumber":152,"author":{"gitId":"TyrusLye"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":153,"author":{"gitId":"TyrusLye"},"content":"     * @param line The line of text containing task details.","lastModifiedDate":"2023-09-23"},{"lineNumber":154,"author":{"gitId":"TyrusLye"},"content":"     * @return A Task object representing the task described in the line, or null if parsing fails.","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"TyrusLye"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":156,"author":{"gitId":"TyrusLye"},"content":"    private static Task createTaskFromLine(String line) {","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"TyrusLye"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"TyrusLye"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"TyrusLye"},"content":"            return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"TyrusLye"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"TyrusLye"},"content":"        String status \u003d parts[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"TyrusLye"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"TyrusLye"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"TyrusLye"},"content":"        switch (type) {","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"TyrusLye"},"content":"            case \"T\":","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"TyrusLye"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"TyrusLye"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"TyrusLye"},"content":"            case \"D\":","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"TyrusLye"},"content":"                if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"TyrusLye"},"content":"                    String by \u003d parts[3];","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"TyrusLye"},"content":"                    task \u003d new Deadline(description, LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"TyrusLye"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"TyrusLye"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"TyrusLye"},"content":"            case \"E\":","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"TyrusLye"},"content":"                if (parts.length \u003e\u003d 5) {","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"TyrusLye"},"content":"                    String from \u003d parts[3];","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"TyrusLye"},"content":"                    String to \u003d parts[4];","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"TyrusLye"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"TyrusLye"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"TyrusLye"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"TyrusLye"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"TyrusLye"},"content":"            if (status.equals(\"1\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"TyrusLye"},"content":"                task.markDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"TyrusLye"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"TyrusLye"},"content":"                task.markNotDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"TyrusLye"},"content":"        return task;","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"TyrusLye"},"content":"    private static void findTasks(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2023-09-23"},{"lineNumber":198,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-23"},{"lineNumber":199,"author":{"gitId":"TyrusLye"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-23"},{"lineNumber":200,"author":{"gitId":"TyrusLye"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-23"},{"lineNumber":201,"author":{"gitId":"TyrusLye"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-23"},{"lineNumber":202,"author":{"gitId":"TyrusLye"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-23"},{"lineNumber":203,"author":{"gitId":"TyrusLye"},"content":"                System.out.println((count + 1) + \". \" + task);","lastModifiedDate":"2023-09-23"},{"lineNumber":204,"author":{"gitId":"TyrusLye"},"content":"                count++;","lastModifiedDate":"2023-09-23"},{"lineNumber":205,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":206,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":207,"author":{"gitId":"TyrusLye"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-09-23"},{"lineNumber":208,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":209,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":210,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":211,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":212,"author":{"gitId":"TyrusLye"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":213,"author":{"gitId":"TyrusLye"},"content":"     * Save tasks to a file.","lastModifiedDate":"2023-09-23"},{"lineNumber":214,"author":{"gitId":"TyrusLye"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":215,"author":{"gitId":"TyrusLye"},"content":"     * @param tasks The ArrayList of tasks to save.","lastModifiedDate":"2023-09-23"},{"lineNumber":216,"author":{"gitId":"TyrusLye"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":217,"author":{"gitId":"TyrusLye"},"content":"    private static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"TyrusLye"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"TyrusLye"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"TyrusLye"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"TyrusLye"},"content":"                fileWriter.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"TyrusLye"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"TyrusLye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"TyrusLye"},"content":"            // Handle IO exception","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":228,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":232,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":233,"author":{"gitId":"TyrusLye"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":234,"author":{"gitId":"TyrusLye"},"content":" * Represents a task that can be added to the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":235,"author":{"gitId":"TyrusLye"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":236,"author":{"gitId":"TyrusLye"},"content":"class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"TyrusLye"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":238,"author":{"gitId":"TyrusLye"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":239,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"TyrusLye"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":242,"author":{"gitId":"TyrusLye"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":243,"author":{"gitId":"TyrusLye"},"content":"        return \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":244,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":245,"author":{"gitId":"TyrusLye"},"content":"    public String formatDate() {","lastModifiedDate":"2023-09-07"},{"lineNumber":246,"author":{"gitId":"TyrusLye"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":247,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":248,"author":{"gitId":"TyrusLye"},"content":"    public Task(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-07"},{"lineNumber":249,"author":{"gitId":"TyrusLye"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"TyrusLye"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"TyrusLye"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-07"},{"lineNumber":252,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"TyrusLye"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"TyrusLye"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // Return a tick or cross symbol cuz im lazy like that, or its easier. idk","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"TyrusLye"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":257,"author":{"gitId":"TyrusLye"},"content":"     * Get the description of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":258,"author":{"gitId":"TyrusLye"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":259,"author":{"gitId":"TyrusLye"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":260,"author":{"gitId":"TyrusLye"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":261,"author":{"gitId":"TyrusLye"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-23"},{"lineNumber":262,"author":{"gitId":"TyrusLye"},"content":"        return description;","lastModifiedDate":"2023-09-23"},{"lineNumber":263,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":264,"author":{"gitId":"TyrusLye"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"TyrusLye"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"TyrusLye"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"TyrusLye"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"TyrusLye"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"TyrusLye"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":273,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"TyrusLye"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":278,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"TyrusLye"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":280,"author":{"gitId":"TyrusLye"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-09-23"},{"lineNumber":281,"author":{"gitId":"TyrusLye"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":282,"author":{"gitId":"TyrusLye"},"content":"class Todo extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":283,"author":{"gitId":"TyrusLye"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"TyrusLye"},"content":"        super(description,null);","lastModifiedDate":"2023-09-07"},{"lineNumber":285,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":287,"author":{"gitId":"TyrusLye"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":288,"author":{"gitId":"TyrusLye"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-07"},{"lineNumber":289,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":290,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":291,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":292,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":293,"author":{"gitId":"TyrusLye"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":294,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":295,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":296,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":297,"author":{"gitId":"TyrusLye"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":298,"author":{"gitId":"TyrusLye"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-09-23"},{"lineNumber":299,"author":{"gitId":"TyrusLye"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":300,"author":{"gitId":"TyrusLye"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":301,"author":{"gitId":"TyrusLye"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":302,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":303,"author":{"gitId":"TyrusLye"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-07"},{"lineNumber":304,"author":{"gitId":"TyrusLye"},"content":"        super(description, date);","lastModifiedDate":"2023-09-07"},{"lineNumber":305,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":306,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":307,"author":{"gitId":"TyrusLye"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":308,"author":{"gitId":"TyrusLye"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;","lastModifiedDate":"2023-09-07"},{"lineNumber":309,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":310,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":311,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":312,"author":{"gitId":"TyrusLye"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":315,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":316,"author":{"gitId":"TyrusLye"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":317,"author":{"gitId":"TyrusLye"},"content":" * Represents an Event task.","lastModifiedDate":"2023-09-23"},{"lineNumber":318,"author":{"gitId":"TyrusLye"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":319,"author":{"gitId":"TyrusLye"},"content":"class Event extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":320,"author":{"gitId":"TyrusLye"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":321,"author":{"gitId":"TyrusLye"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":322,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":323,"author":{"gitId":"TyrusLye"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":324,"author":{"gitId":"TyrusLye"},"content":"        super(description,null);","lastModifiedDate":"2023-09-07"},{"lineNumber":325,"author":{"gitId":"TyrusLye"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":326,"author":{"gitId":"TyrusLye"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":327,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":328,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":329,"author":{"gitId":"TyrusLye"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":330,"author":{"gitId":"TyrusLye"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-09-07"},{"lineNumber":331,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":332,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":333,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":334,"author":{"gitId":"TyrusLye"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":335,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":336,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":337,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":338,"author":{"gitId":"TyrusLye"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":339,"author":{"gitId":"TyrusLye"},"content":" * Custom exception class for Duke-specific exceptions.","lastModifiedDate":"2023-09-23"},{"lineNumber":340,"author":{"gitId":"TyrusLye"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":341,"author":{"gitId":"TyrusLye"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":342,"author":{"gitId":"TyrusLye"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":343,"author":{"gitId":"TyrusLye"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":344,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":345,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":339,"-":6}},{"path":"src/main/java/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"T | 0 | thing","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"TyrusLye"},"content":"E | 0 | thing2 | now | later","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"TyrusLye":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"TyrusLye"},"content":"SET \"JAVA_HOME\u003dC:\\Program Files\\Java\\jdk-11.0.16\"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"TyrusLye"},"content":"SET \"PATH\u003d%JAVA_HOME%\\bin;%PATH%\"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"TyrusLye"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"TyrusLye"},"content":"javac  -cp ..\\src\\main\\java -encoding UTF-8 -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":6,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"TyrusLye"},"content":"    rm ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"TyrusLye"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"TyrusLye"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"TyrusLye"},"content":"dos2unix ACTUAL.TXT.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"TyrusLye"},"content":"diff ACTUAL.TXT.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TyrusLye":5,"-":33}},{"path":"tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"TyrusLye":0}}]
