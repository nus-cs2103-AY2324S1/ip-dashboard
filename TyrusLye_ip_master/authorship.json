[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"TyrusLye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"TyrusLye"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"TyrusLye"},"content":"        String logo \u003d \"██╗░░░██╗██████╗░██████╗░░█████╗░██╗\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"TyrusLye"},"content":"                    + \"██║░░░██║██╔══██╗██╔══██╗██╔══██╗██║\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"TyrusLye"},"content":"                    + \"██║░░░██║██████╔╝██████╦╝██║░░██║██║\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"TyrusLye"},"content":"                    + \"██║░░░██║██╔══██╗██╔══██╗██║░░██║██║\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"TyrusLye"},"content":"                    + \"╚██████╔╝██║░░██║██████╦╝╚█████╔╝██║\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"TyrusLye"},"content":"                    + \"░╚═════╝░╚═╝░░╚═╝╚═════╝░░╚════╝░╚═╝\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"TyrusLye"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"TyrusLye"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"TyrusLye"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"TyrusLye"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"TyrusLye"},"content":"            try{","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"TyrusLye"},"content":"                if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"TyrusLye"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"TyrusLye"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d command.substring(5).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"TyrusLye"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"TyrusLye"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d command.substring(9, command.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"TyrusLye"},"content":"                    String by \u003d command.substring(command.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Deadline(description, by));","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"TyrusLye"},"content":"                    String description \u003d command.substring(6, command.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"TyrusLye"},"content":"                    String from \u003d command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"TyrusLye"},"content":"                    String to \u003d command.substring(command.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"TyrusLye"},"content":"                    tasks.add(new Event(description, from, to));","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"TyrusLye"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"TyrusLye"},"content":"                        tasks.get(index).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"TyrusLye"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"TyrusLye"},"content":"                        tasks.get(index).markNotDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(index));","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"TyrusLye"},"content":"                }  else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"TyrusLye"},"content":"                    int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"TyrusLye"},"content":"                    if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"TyrusLye"},"content":"                        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"TyrusLye"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"TyrusLye"},"content":"                        System.out.println(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"TyrusLye"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"TyrusLye"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"TyrusLye"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"TyrusLye"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"TyrusLye"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"TyrusLye"},"content":"                System.out.println(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"TyrusLye"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"TyrusLye"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"TyrusLye"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"TyrusLye"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"TyrusLye"},"content":"class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"TyrusLye"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"TyrusLye"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"TyrusLye"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"TyrusLye"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"TyrusLye"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"TyrusLye"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"TyrusLye"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // Return a tick or cross symbol cuz im lazy like that, or its easier. idk","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"TyrusLye"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"TyrusLye"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"TyrusLye"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"TyrusLye"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"TyrusLye"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"TyrusLye"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"TyrusLye"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"TyrusLye"},"content":"class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"TyrusLye"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"TyrusLye"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"TyrusLye"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"TyrusLye"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"TyrusLye"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"TyrusLye"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"TyrusLye"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"TyrusLye"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"TyrusLye"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"TyrusLye"},"content":"class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"TyrusLye"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"TyrusLye"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"TyrusLye"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"TyrusLye"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"TyrusLye"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"TyrusLye"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"TyrusLye"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"TyrusLye"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"TyrusLye"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"TyrusLye"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"TyrusLye"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"TyrusLye"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"TyrusLye"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"TyrusLye"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":159,"-":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TyrusLye"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"TyrusLye"},"content":"SET \"JAVA_HOME\u003dC:\\Program Files\\Java\\jdk-11.0.16\"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"TyrusLye"},"content":"SET \"PATH\u003d%JAVA_HOME%\\bin;%PATH%\"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"TyrusLye"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"TyrusLye"},"content":"javac  -cp ..\\src\\main\\java -encoding UTF-8 -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"TyrusLye"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"TyrusLye":6,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"TyrusLye"},"content":"    rm ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"TyrusLye"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"TyrusLye"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"TyrusLye"},"content":"dos2unix ACTUAL.TXT.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"TyrusLye"},"content":"diff ACTUAL.TXT.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TyrusLye":5,"-":33}}]
