[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"# Duck project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"## Duck","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"Prerequisites: Duck","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" ____            _","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"|  _ \\ _   _____| | __","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"| | | | | | |  _| |/ /","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"| |_| | |_| | |_    \u003c","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"|____/ \\__,_|___|_|\\_\\","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marquestye":7,"-":9}},{"path":"src/main/java/duck/Duck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"public class Duck {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public Duck(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"            ArrayList\u003cTask\u003e list \u003d storage.loadTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"            this.tasks \u003d new TaskList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        } catch (DuckException error) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"            ui.showErrorMessage(error);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        boolean isExit \u003d false; ","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"            } catch (DuckException error) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"                ui.showErrorMessage(error);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        new Duck(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":48}},{"path":"src/main/java/duck/DuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"public class DuckException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"    public DuckException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"        super(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":7}},{"path":"src/main/java/duck/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.command.AddCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import duck.command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import duck.command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import duck.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"import duck.command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"import duck.command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"import duck.task.DeadlineTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"import duck.task.EventTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"import duck.task.TodoTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    private static DateTimeFormatter fileDateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public static Command parse(String input) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        String[] splitInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        String command \u003d splitInput[0].toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        case \"LIST\":","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        case \"BYE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid input.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        String data \u003d splitInput[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        case \"MARK\":","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"            return new MarkCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"            return new UnmarkCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"            return new DeleteCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        case \"TODO\":","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseTodo(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseDeadline(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseEvent(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Im sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    private static int parseIndex(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"            int index \u003d Integer.parseInt(dataString);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            return index;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"    private static Task parseTodo(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"            String name \u003d dataString.trim(); ","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"            return new TodoTask(name, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"    private static DeadlineTask parseDeadline(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"            String[] splitData \u003d dataString.trim().split(\" /by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"            String name \u003d splitData[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"            LocalDate deadline \u003d LocalDate.parse(splitData[1].trim(), dateFormatter); // potential error if theres no \"/by\" ???","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"            return new DeadlineTask(name, false, deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid todo task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the dd/mm/yyyy format for dates.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the /by format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"    private static EventTask parseEvent(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"            String[] splitData \u003d dataString.trim().split(\" /from \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"            String name \u003d splitData[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"            splitData \u003d splitData[1].trim().split(\" /to \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"            LocalDate start \u003d LocalDate.parse(splitData[0].trim(), dateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"            LocalDate end \u003d LocalDate.parse(splitData[1].trim(), dateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"            return new EventTask(name, false, start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid todo task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the dd/mm/yyyy format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the /from and /to format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"    public static Task parseFromFile(String fileLine) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"        char typeChar \u003d fileLine.charAt(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"        switch (typeChar) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"marquestye"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"marquestye"},"content":"            return TodoTask.parse(fileLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"marquestye"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"marquestye"},"content":"            return DeadlineTask.parse(fileLine, fileDateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"marquestye"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"marquestye"},"content":"            return EventTask.parse(fileLine, fileDateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"marquestye"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid file data.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":120}},{"path":"src/main/java/duck/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public void updateTasks(TaskList tasks) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"                writer.write(tasks.getTask(i).stringify() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to save tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        File dataDir \u003d new File(filePath).getParentFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        dataDir.mkdir(); // Create directory only if it doesnt already exist","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        File taskFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"            taskFile \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"            if (!taskFile.createNewFile()) { // Create file only if it doesnt already exist","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"                Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"                    Task t \u003d Parser.parseFromFile(fileScanner.nextLine()); // should be handled by parser","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"                fileScanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to access task file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"    // Appends instead of rewriting the file","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    public void addTask(Task newTask) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            writer.write(newTask.stringify() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to add task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"    // Rewrites the file, except for the line at the specified index","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"    public void deleteTask(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cString\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"            Scanner fileScanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"            int lineCounter \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"                if (lineCounter \u003d\u003d index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"                    lineCounter++;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"                    continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"                lineCounter++;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"                history.add(fileScanner.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"            while (history.size() \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"                writer.write(history.remove(0) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to access task file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":90}},{"path":"src/main/java/duck/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    ","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        String greeting \u003d \"Quack! I\u0027m Duck!\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"                \"What can I do for you?\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        String bye \u003d \"Quack! Hope to see you again soon!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    public void showAddTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        String addTask \u003d \"Got it. I\u0027ve added this task:\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"                task + \"\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"                \"Now you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        System.out.println(addTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        if (tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"            System.out.println(\"You have no tasks yet.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        String allTasks \u003d \"Here are the tasks in your list:\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"                tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        System.out.println(allTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        String markTask \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"                task;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"        System.out.println(markTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"    public void showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"        String unmarkTask \u003d \"OK, I\u0027ve unmarked this task:\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"                task;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        System.out.println(unmarkTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"    public void showDeleteTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"        String deleteTask \u003d \"Noted. I\u0027ve removed this task:\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"                task + \"\\n\" + ","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"                \"Now you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"        System.out.println(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"    public void showErrorMessage(DuckException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        String error \u003d e.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"        System.out.println(error);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":82}},{"path":"src/main/java/duck/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    private Task newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        ui.showAddTaskMessage(newTask, tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":23}},{"path":"src/main/java/duck/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    public abstract void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    // Only ExitCommand should override and return true","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":16}},{"path":"src/main/java/duck/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        Task tmpTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        tasks.delete(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        ui.showDeleteTaskMessage(tmpTask, tasks.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        storage.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":22}},{"path":"src/main/java/duck/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"        ui.showExitMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":17}},{"path":"src/main/java/duck/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"        ui.showAllTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":12}},{"path":"src/main/java/duck/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        tasks.mark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        ui.showMarkTaskMessage(tasks.getTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":20}},{"path":"src/main/java/duck/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public void execute(TaskList tasks, Ui ui,Storage storage) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        tasks.unmark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        ui.showUnmarkTaskMessage(tasks.getTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":20}},{"path":"src/main/java/duck/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    LocalDate deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    public DeadlineTask(String name, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        super(name,  isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    private String formatDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        String deadlineString \u003d formatDeadline();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        return \"D\" + super.stringify() + ","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"                deadlineString.length() + \"/\" + deadlineString;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDeadline()  + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    ","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    public static DeadlineTask parse(String fileLine, DateTimeFormatter dateFormatter) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        // Finding isDone","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        // Finding name","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        int nameLength \u003d Integer.parseInt(fileLine.substring(2, slashIndex));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1, slashIndex + 1 + nameLength);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        // Finding deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        int secondSlashIndex \u003d fileLine.indexOf(\"/\", slashIndex + 1); // The index of the next slash","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        String deadlineString \u003d fileLine.substring(secondSlashIndex + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        LocalDate deadline \u003d LocalDate.parse(deadlineString, dateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        return new DeadlineTask(name, isDone, deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":50}},{"path":"src/main/java/duck/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    LocalDate start;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    LocalDate end;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public EventTask(String name, boolean isDone, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        super(name,  isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    public String formatStart() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    public String formatEnd() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        return end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        String startString \u003d formatStart();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        String endString \u003d formatEnd();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        return \"E\" + super.stringify() + ","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"                startString.length() + \"/\" + startString + ","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"                endString.length() + \"/\" + endString;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatStart() + \" to \" + formatEnd() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    public static EventTask parse(String fileLine, DateTimeFormatter dateFormatter) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"        // Finding isDone","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        // Finding name","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        int nameLength \u003d Integer.parseInt(fileLine.substring(2, slashIndex));","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1, slashIndex + 1 + nameLength);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        // Finding start","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        int secondSlashIndex \u003d fileLine.indexOf(\"/\", slashIndex + 1); // The index of the next slash","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        String startString \u003d fileLine.substring(secondSlashIndex + 1, secondSlashIndex + 12);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"        LocalDate start \u003d LocalDate.parse(startString, dateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        // Finding end","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        int thirdSlashIndex \u003d fileLine.indexOf(\"/\", secondSlashIndex + 1); // The index of the next slash","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        String endString \u003d fileLine.substring(thirdSlashIndex + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        LocalDate end \u003d LocalDate.parse(endString, dateFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        return new EventTask(name, isDone, start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":62}},{"path":"src/main/java/duck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"    private String name;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    public void mark() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - Task is already marked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    public void unmark() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - Task is already unmarked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        String done \u003d String.valueOf(this.isDone ? \u00271\u0027 : \u00270\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        String nameLength \u003d String.valueOf(this.name.length()) + \"/\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        return done + nameLength + this.name;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        String str \u003d \"[\" + done + \"] \" + name;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        return str;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":42}},{"path":"src/main/java/duck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    private int taskCount;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    // Initialise new TaskList with no tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    // For when no history is found","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    // Initialise TaskList with existing tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    // For when history is available","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        this.taskCount \u003d tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    // Returns the number of tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        return this.taskCount;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    // Appends a task to the list","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        taskCount++;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    public Task getTask(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"    public void mark(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        Task currTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"            currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        currTask.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"    public void unmark(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        Task currTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"            currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        currTask.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"    public void delete(int index) throws DuckException{","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"        taskCount--;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"            allTasks +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        return allTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":83}},{"path":"src/main/java/duck/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"    TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"    EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":7}},{"path":"src/main/java/duck/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"    public TodoTask(String name, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        return \"T\" + super.stringify();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    public static TodoTask parse(String fileLine) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        return new TodoTask(name, isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"unmark -1","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"todo task1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"deadline task2 /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"event event1 /from tomorrow /to Friday","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"nonsense","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"marquestye":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"java -classpath ..\\bin Duck \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marquestye":1,"-":20}}]
