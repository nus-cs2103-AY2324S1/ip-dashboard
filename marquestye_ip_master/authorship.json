[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"# Duck project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"## Duck","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"Prerequisites: Duck","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" ____            _","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"|  _ \\ _   _____| | __","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"| | | | | | |  _| |/ /","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"| |_| | |_| | |_    \u003c","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"|____/ \\__,_|___|_|\\_\\","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marquestye":7,"-":9}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"    // id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    mainClass.set(\"duck.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"    archiveBaseName \u003d \"duck\"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"// checkstyle {","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"//     toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"// }","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"# Duck User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":" ____            _","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"|  _ \\ _   _____| | __","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"| | | | | | |  _| |/ /","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"| |_| | |_| | |_    \u003c","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"|____/ \\__,_|___|_|\\_\\  🦆","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"## Types of Tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"  ### Todo Tasks \u0026nbsp; `todo \u003ctaskname\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"  The simplest of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"  ### Deadline Tasks \u0026nbsp; `deadline /by \u003cdd/mm/yyyy\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"  Tasks due by a set deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"  ### Event Tasks \u0026nbsp; `event /from \u003cdd/mm/yyyy\u003e /to \u003cdd/mm/yyyy\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"  Tasks happening across the set time period. ","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"## Features","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"Now that you are familiar with the different types of tasks, here\u0027s how you can interact with them.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"### 📋`list` - Display all tasks    ","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"Displays all tasks alogn with their relevant information.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"Tasks are listed in the order they were added.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"Usage: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"### 🗑️`delete` - Delete a task","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"Deletes the selected task from the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"Run `list` to  verify the index of the task as **deletion is irreversible**.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"Usage: `delete \u003ctask_index\u003e` ","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"For example: `delete 1`  deletes the first task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"### ✅`mark` - Mark a task as done ","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"Marks the selected task as complete.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"Usage: `mark \u003ctask_index\u003e` ","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"For example: `mark 1`  marks the first task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"### ❌`unmark` - Unmark a task to undone ","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"Removes the mark from the selected task.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"Usage: `unmark \u003ctask_index\u003e` ","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"For example: `unmark 1`  unmarks the first task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"### #️⃣`tag` - Tag a task with a short text ","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"Tags the selected task with a word.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"Usage: `tag \u003ctask_index\u003e:\u003cword\u003e` ","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"For example: `tag 1:IMPORTANT`  tags the first task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"### ❌`untag` - Remove the tag from a task ","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"Removes the selected task\u0027s tag.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"Usage: `untag \u003ctask_index\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"For example: `untag 1`  removes the tag of the first task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"### 🔎`find` - Find matching tasks ","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"Lists all tasks which contain the given keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"Usage: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"For example: `find book`  lists all tasks which name contains \"book\".","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"## Other functionalities","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"### 💾Task storage","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"Task data is continuously updated to data/tasks.txt, which is automatically created within the same folder as the JAR file.","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"marquestye":50,"-":3}},{"path":"src/main/java/duck/Duck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":" * Represents the Duck chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"public class Duck {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    public Duck() {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"     * Initialises the Duck chatbot and attempts to load tasks from storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"     * @param filePath The path to the file where the tasks are stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    public Duck(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"            ArrayList\u003cTask\u003e list \u003d storage.loadTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"            this.tasks \u003d new TaskList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        } catch (DuckException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"     * Runs the Duck chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"                System.out.println(c.execute(tasks, ui, storage));","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"            } catch (DuckException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"        new Duck(DEFAULT_FILE_PATH).run();","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"     * @return String The response to the user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"            Command c \u003d Parser.parse(input.trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"            String reply \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"            return reply;","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        } catch (DuckException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":83}},{"path":"src/main/java/duck/DuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":" * Represents an exception specific to Duck.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"public class DuckException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"     * Initialises a new DuckException.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public DuckException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        super(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":15}},{"path":"src/main/java/duck/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":12}},{"path":"src/main/java/duck/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.ui.MainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":" * A GUI for Duck using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    public Main() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    private Duck duke \u003d new Duck();","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            System.out.println(Main.class.getPackageName());","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"            stage.setTitle(\"Duck\");","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuck(duke);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":38}},{"path":"src/main/java/duck/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.command.AddCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import duck.command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import duck.command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import duck.command.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"import duck.command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"import duck.command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"import duck.command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"import duck.command.TagCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"import duck.command.UntagCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"import duck.task.DeadlineTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"import duck.task.EventTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"import duck.task.TodoTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":" * Handles parsing of user input and file data.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the user input is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    public static Command parse(String input) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        String command \u003d splitInput[0].toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        case \"LIST\":","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        case \"BYE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid input.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        String data \u003d splitInput[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        case \"MARK\":","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"            return new MarkCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"            return new UnmarkCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"            return new DeleteCommand(parseIndex(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        case \"TODO\":","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseTodo(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseDeadline(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"            return new AddCommand(parseEvent(data));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"        case \"FIND\":","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"            return new FindCommand(data);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        case \"TAG\" :","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"            return parseTag(data);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"        case \"UNTAG\" :","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"            return new UntagCommand(parseIndex(data));","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Im sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"    private static int parseIndex(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"            return Integer.parseInt(dataString);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"    private static Task parseTodo(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"            String name \u003d dataString.trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"            return new TodoTask(name, false, \"\");","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"    private static DeadlineTask parseDeadline(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"            String[] splitData \u003d dataString.split(\" /by \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"            String name \u003d splitData[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"            LocalDate deadline \u003d LocalDate.parse(splitData[1].trim(), INPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"            return new DeadlineTask(name, false, \"\", deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid todo task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the dd/mm/yyyy format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the /by format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"    private static EventTask parseEvent(String dataString) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"            String[] splitData \u003d dataString.split(\" /from \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"marquestye"},"content":"            String name \u003d splitData[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"marquestye"},"content":"            splitData \u003d splitData[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"marquestye"},"content":"            LocalDate start \u003d LocalDate.parse(splitData[0].trim(), INPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"marquestye"},"content":"            LocalDate end \u003d LocalDate.parse(splitData[1].trim(), INPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"marquestye"},"content":"            return new EventTask(name, false, \"\", start, end);","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"marquestye"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid todo task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"marquestye"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the dd/mm/yyyy format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"marquestye"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the /from and /to format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"marquestye"},"content":"    private static TagCommand parseTag(String dataString) throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"marquestye"},"content":"            String[] splitData \u003d dataString.split(\":\", 2);","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"marquestye"},"content":"            int index \u003d Integer.parseInt(splitData[0]);","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"marquestye"},"content":"            String tag \u003d splitData[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"marquestye"},"content":"            return new TagCommand(index, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"marquestye"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"marquestye"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Please follow the \u003cindex\u003e:\u003ctag\u003e format.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"marquestye"},"content":"     * Parses a line from the file and returns the corresponding task.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"marquestye"},"content":"     * @param fileLine The line from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"marquestye"},"content":"     * @return The corresponding task.","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the line is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"marquestye"},"content":"    public static Task parseFromFile(String fileLine) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"marquestye"},"content":"        char typeChar \u003d fileLine.charAt(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"marquestye"},"content":"        switch (typeChar) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"marquestye"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"marquestye"},"content":"            return TodoTask.parse(fileLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"marquestye"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"marquestye"},"content":"            return DeadlineTask.parse(fileLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"marquestye"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"marquestye"},"content":"            return EventTask.parse(fileLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"marquestye"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Invalid file data.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":158}},{"path":"src/main/java/duck/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":" * Handles changes to the task history.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"     * Initialises a new Storage object.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"     * @param filePath The path to the file where the tasks are stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"     * Rewrites the entire task history.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If there are problems accessing or writing to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    public void updateTasks(TaskList tasks) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"                writer.write(tasks.getTask(i).stringify() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to save tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"     * Loads the task history from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If there are problems accessing, reading or parsing from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        File dataDir \u003d new File(filePath).getParentFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        dataDir.mkdir(); // Create directory only if it doesnt already exist","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"        File taskFile \u003d new File(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"            if (taskFile.createNewFile()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"                // File doesn\u0027t exist, so no tasks to load","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"                return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"            // File exists, so load tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"                Task t \u003d Parser.parseFromFile(fileScanner.nextLine()); // should be handled by parser","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"                tasks.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"            fileScanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to access task file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"     * Appends instead of rewriting the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If there are problems accessing or writing to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"    public void addTask(Task newTask) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"        assert newTask !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"            writer.write(newTask.stringify() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to add task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"     * Deletes a task (one line) from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If there are problems accessing, reading or writing to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"    public void deleteTask(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cString\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"            Scanner fileScanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"            int lineCounter \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"marquestye"},"content":"                if (lineCounter !\u003d index) {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"marquestye"},"content":"                    history.add(line);","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"marquestye"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"marquestye"},"content":"                lineCounter++;","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"marquestye"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"marquestye"},"content":"            while (history.size() \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"marquestye"},"content":"                writer.write(history.remove(0) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"marquestye"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - unable to access task file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":125}},{"path":"src/main/java/duck/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which adds a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private Task newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * Creates a new add command.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        storage.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"                + \"Now you have \" + tasks.getTaskCount() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":32}},{"path":"src/main/java/duck/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command. Abstract class that cannot be instantiated.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * @param tasks   Task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * @param ui      User interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * @param storage Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * @return String The reply to the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If an error occurs during execution.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"     * Returns true only if the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":31}},{"path":"src/main/java/duck/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which deletes a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * Creates a new delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        Task tmpTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        tasks.delete(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        storage.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"                + tmpTask + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"                + \"Now you have \" + tasks.getTaskCount() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":33}},{"path":"src/main/java/duck/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which exits the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":21}},{"path":"src/main/java/duck/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which finds matching tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    private String keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * Creates a new find command.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.find(keyword);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"            return \"There are no matching tasks in your list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        String reply \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"            reply +\u003d \"\\n\" + (i + 1) + \". \" + matchingTasks.get(i);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        return reply;","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"marquestye":40}},{"path":"src/main/java/duck/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which lists all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        if (tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"            return \"You have no tasks yet.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        return \"Here are the tasks in your list: \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"                + tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":20}},{"path":"src/main/java/duck/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which marks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * Creates a new mark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * @param index Index of task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        tasks.mark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"                + tasks.getTask(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":30}},{"path":"src/main/java/duck/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which tags a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private String tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * Creates a new tag command.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * @param index Index of task to be tagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public TagCommand(int index, String tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        tasks.tag(index, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        return \"Nice! I\u0027ve tagged this task: \\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"                + tasks.getTask(index);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"marquestye":32}},{"path":"src/main/java/duck/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which unmarks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * Creates a new unmark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * @param index Index of task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        tasks.unmark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        return \"OK, I\u0027ve unmarked this task: \\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"                + tasks.getTask(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":30}},{"path":"src/main/java/duck/command/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import duck.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" * Represents an executable command which untags a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private int index;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * Creates a new untag command.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * @param index Index of task to be untagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public UntagCommand(int index) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        tasks.untag(index);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        storage.updateTasks(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        return \"Nice! I\u0027ve removed the tag on this task: \\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"                + tasks.getTask(index);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"marquestye":30}},{"path":"src/main/java/duck/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import static duck.Parser.OUTPUT_DATE_FORMAT;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * Creates a new DeadlineTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * @param name   Name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"     * @param tag Tag of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    public DeadlineTask(String name, boolean isDone, String tag, LocalDate deadline) {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        super(name, isDone, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    private String formatDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        return deadline.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        String deadlineString \u003d formatDeadline();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        return \"D\" + super.stringify()","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"                + deadlineString.length() + \"/\" + deadlineString","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"                + this.tag.length() + \"/\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"        String tagSuffixString \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        if (!this.tag.equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"            tagSuffixString \u003d \" #\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDeadline() + \")\"  + tagSuffixString;","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        if (obj instanceof DeadlineTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"            DeadlineTask other \u003d (DeadlineTask) obj;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"            return super.equals(other) \u0026\u0026 deadline.equals(other.deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"     * Parses the savable string representation of a DeadlineTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"     * Implementation depends on stringify format.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"     * @param fileLine Savable string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"     * @return DeadlineTask parsed from the string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the string representation is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"    public static DeadlineTask parse(String fileLine) throws DuckException {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"        // Finding isDone","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"        // Finding name","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"        int nameLength \u003d Integer.parseInt(fileLine.substring(2, slashIndex));","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1, slashIndex + 1 + nameLength);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        // Finding deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"        int secondSlashIndex \u003d fileLine.indexOf(\"/\", slashIndex + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"        int deadlineLength \u003d Integer.parseInt(fileLine.substring(slashIndex + 1 + nameLength, secondSlashIndex));","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        String deadlineString \u003d fileLine.substring(secondSlashIndex + 1, secondSlashIndex + 1 + deadlineLength);","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        LocalDate deadline \u003d LocalDate.parse(deadlineString, OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"        // Finding tag","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"        int thirdSlashIndex \u003d fileLine.indexOf(\"/\", secondSlashIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"        String tag \u003d fileLine.substring(thirdSlashIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"        return new DeadlineTask(name, isDone, tag, deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":87}},{"path":"src/main/java/duck/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import static duck.Parser.OUTPUT_DATE_FORMAT;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":" * Represents a event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    private LocalDate start;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    private LocalDate end;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * Creates a new EventTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"     * @param name   Name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"     * @param tag Tag of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"     * @param start Start of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"     * @param end End of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    public EventTask(String name, boolean isDone, String tag, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        super(name, isDone, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    private String formatStart() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        return start.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"    private String formatEnd() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        return end.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        String startString \u003d formatStart();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"        String endString \u003d formatEnd();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"        return \"E\" + super.stringify()","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"                + startString.length() + \"/\" + startString","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"                + endString.length() + \"/\" + endString","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"                + this.tag.length() + \"/\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        String tagSuffixString \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        if (!this.tag.equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"            tagSuffixString \u003d \" #\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"                + \" (from: \" + formatStart() + \" to \" + formatEnd() + \")\"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"                + tagSuffixString;","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        if (obj instanceof EventTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"            EventTask other \u003d (EventTask) obj;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"            return super.equals(other) \u0026\u0026 start.equals(other.start) \u0026\u0026 end.equals(other.end);","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"     * Parses the savable string representation of a EventTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"     * Implementation depends on stringify format.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"     * @param fileLine Savable string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"     * @return EventTask parsed from the string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the string representation is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"    public static EventTask parse(String fileLine) throws DuckException {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        // Finding isDone","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"        // Finding name","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"        int nameLength \u003d Integer.parseInt(fileLine.substring(2, slashIndex));","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1, slashIndex + 1 + nameLength);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"        // Finding start","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"        int secondSlashIndex \u003d fileLine.indexOf(\"/\", slashIndex + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"        String startString \u003d fileLine.substring(secondSlashIndex + 1, secondSlashIndex + 12);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"        LocalDate start \u003d LocalDate.parse(startString, OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"        // Finding end","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"        int thirdSlashIndex \u003d fileLine.indexOf(\"/\", secondSlashIndex + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"        String endString \u003d fileLine.substring(thirdSlashIndex + 1, thirdSlashIndex + 12);","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"        LocalDate end \u003d LocalDate.parse(endString, OUTPUT_DATE_FORMAT);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"        // Finding tag","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"        int fourthSlashIndex \u003d fileLine.indexOf(\"/\", thirdSlashIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"        String tag \u003d fileLine.substring(fourthSlashIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"        return new EventTask(name, isDone, tag, start, end);","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":102}},{"path":"src/main/java/duck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":" * Represents a task. Abstract class that cannot be instantiated.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    private String name;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    protected String tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"     * Creates a task with the given name and isDone status.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * @param name   Name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public Task(String name, boolean isDone, String tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the task is marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    public void mark() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - Task is already marked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"     * Unmarks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the task is not marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"    public void unmark() throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - Task is already unmarked.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"     * Checks if the task contains a given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"     * @return True if the task contains the keyword, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"     * Tags the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"     * @param tag Tag to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"    public void tag(String tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"     * Untags the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the task is not tagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"    public void untag() throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        if (this.tag.equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - Task is not tagged.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"            this.tag \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"     * Converts the task into its string representation for saving to file.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"     * Should be overidden by subclasses to include type and additional fields.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"     * @return Savable string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"        String done \u003d String.valueOf(this.isDone ? \u00271\u0027 : \u00270\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"        String nameLength \u003d String.valueOf(this.name.length()) + \"/\";","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"        return done + nameLength + this.name;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"     * Converts the task into a readable string representation for printing.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"     * Should be overidden by subclasses to include type and additional fields.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"     * @return Readable string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"        char done \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"        return \"[\" + done + \"] \" + name;","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"     * Checks equality with another object, based on name and isDone status.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"     * Should be overidden by subclasses to check additional fields.","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"marquestye"},"content":"     * @param other Object to compare to.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"marquestye"},"content":"     * @return True if the object is a Task with the same name and status, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"marquestye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"marquestye"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"marquestye"},"content":"            Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"marquestye"},"content":"            return this.name.equals(otherTask.name) \u0026\u0026 (this.isDone \u003d\u003d otherTask.isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"marquestye"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":121}},{"path":"src/main/java/duck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    private int taskCount;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"     * Initialises an empty TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"     * For when no history is found.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"     * Initialises a TaskList with the given tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"     * For when history is available.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"     * @param tasks ArrayList of tasks to initialise the TaskList with.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        this.taskCount \u003d tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    // Getter for taskCount","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        assert taskCount \u003e\u003d 0 : \"Task count should be non-negative.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        return this.taskCount;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        taskCount++;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"     * Returns the task at a given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"     * @return Task at the given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"    public Task getTask(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"     * Marks the task at a given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid or when the task was already marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"    public void mark(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"        Task currTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"            currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"        currTask.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"     * Unmarks the task at a given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid or when the task was already unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"    public void unmark(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"        Task currTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"            currTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"        currTask.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"     * Deletes the task at a given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"    public void delete(int index) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"        taskCount--;","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"marquestye"},"content":"     * Searches for tasks containing a given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"marquestye"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"marquestye"},"content":"     * @return ArrayList of tasks containing the keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If no tasks are found.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"marquestye"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) throws DuckException {","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"marquestye"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"marquestye"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"marquestye"},"content":"            if (tasks.get(i).containsKeyword(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"marquestye"},"content":"                matchingTasks.add(tasks.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"marquestye"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"marquestye"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"marquestye"},"content":"     * Tags the task at a given index.","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be tagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"marquestye"},"content":"     * @param tag Tag to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"marquestye"},"content":"    public void tag(int index, String tag) throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"marquestye"},"content":"            tasks.get(index).tag(tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"marquestye"},"content":"     * Untags the task at a given index.","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"marquestye"},"content":"     * @param index Index of the task to be untagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the index is invalid or when the task was not tagged.","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"marquestye"},"content":"    public void untag(int index) throws DuckException {","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"marquestye"},"content":"            tasks.get(index).untag();","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"marquestye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"marquestye"},"content":"            throw new DuckException(\"Error - invalid task number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"marquestye"},"content":"     * Converts the TaskList into a readable string represenation to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"marquestye"},"content":"     * @return Readable string representation of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"marquestye"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"marquestye"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"marquestye"},"content":"            allTasks +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"marquestye"},"content":"        return allTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":171}},{"path":"src/main/java/duck/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"    TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"    EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":7}},{"path":"src/main/java/duck/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"     * Creates a new TodoTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"     * @param name   Name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"    public TodoTask(String name, boolean isDone, String tag) {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        super(name, isDone, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public String stringify() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        return \"T\" + super.stringify()","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"                + this.tag.length() + \"/\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        String tagSuffixString \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        if (!this.tag.equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"            tagSuffixString \u003d \" #\" + this.tag;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        return \"[T]\" + super.toString() + tagSuffixString;","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"     * Parses the savable string representation of a TodoTask.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"     * Implementation depends on stringify format.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"     * @param fileLine Savable string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"     * @return TodoTask parsed from the string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"     * @throws DuckException If the string representation is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"    public static TodoTask parse(String fileLine) throws DuckException {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        // Finding isDone","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        boolean isDone \u003d fileLine.charAt(1) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        // Finding name","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        int slashIndex \u003d fileLine.indexOf(\"/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        int nameLength \u003d Integer.parseInt(fileLine.substring(2, slashIndex));","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        String name \u003d fileLine.substring(slashIndex + 1, slashIndex + 1 + nameLength);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        // Finding tag","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"        int tagIndex \u003d fileLine.indexOf(\"/\", slashIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        String tag \u003d fileLine.substring(tagIndex + 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"        return new TodoTask(name, isDone, tag);","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":58}},{"path":"src/main/java/duck/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"     * right.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"    public static DialogBox getDuckDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":63}},{"path":"src/main/java/duck/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import duck.Duck;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"    private Duck duck;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/person.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    private Image duckImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duck.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    public void setDuck(Duck d) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        duck \u003d d;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"     * Duck\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"     * the dialog container. Clears the user input after processing","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"        String response \u003d duck.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"                DialogBox.getDuckDialog(response, duckImage));","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":54}},{"path":"src/main/java/duck/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import duck.DuckException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"import duck.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":" * Handles user interaction.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"     * Initializes a Ui object.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public Ui() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        String greeting \u003d \"Quack! I\u0027m Duck! \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        String bye \u003d \"Quack! Hope to see you again soon!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"        scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"    public void showAddTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"        assert taskCount \u003e\u003d 0 : \"Task count should be non-negative.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        String addTask \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"                + \"Now you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"        System.out.println(addTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        if (tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            System.out.println(\"You have no tasks yet.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        String allTasks \u003d \"Here are the tasks in your list: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"                + tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"        System.out.println(allTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"        String markTask \u003d \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"                + task;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"marquestye"},"content":"        System.out.println(markTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marquestye"},"content":"    public void showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"marquestye"},"content":"        String unmarkTask \u003d \"OK, I\u0027ve unmarked this task: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"marquestye"},"content":"                + task;","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marquestye"},"content":"        System.out.println(unmarkTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"marquestye"},"content":"    public void showDeleteTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"marquestye"},"content":"        assert taskCount \u003e\u003d 0 : \"Task count should be non-negative.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"marquestye"},"content":"        String deleteTask \u003d \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"marquestye"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"marquestye"},"content":"                + \"Now you have \" + taskCount + \" task(s) in the list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"marquestye"},"content":"        System.out.println(deleteTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"marquestye"},"content":"    public void showMatchingTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"marquestye"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"marquestye"},"content":"            System.out.println(\"There are no matching tasks in your list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"marquestye"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"marquestye"},"content":"        String matchingTasks \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"marquestye"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"marquestye"},"content":"            matchingTasks +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"marquestye"},"content":"        System.out.println(matchingTasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"marquestye"},"content":"    public void showErrorMessage(DuckException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"marquestye"},"content":"        String error \u003d e.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"marquestye"},"content":"        System.out.println(error);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marquestye":109}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"65.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duck.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"marquestye":19}},{"path":"src/test/java/duck/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    public void parse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"foo bar baz\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Im sorry, I don\u0027t know what that means.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    public void parse_markInvalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"mark abc\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Please enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    public void parse_unmarkInvalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"unmark abc\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Please enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"    public void parse_deleteInvalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"delete abc\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Please enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"    public void parse_deadlineInvalidDateFormat_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"        // Invalid date format","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"deadline abc /by 01-09-2023\");","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Please follow the dd/mm/yyyy format.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"    public void parse_eventInvalidDateFormat_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"        // Invalid date format","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"            Parser.parse(\"event abc /from 01-09-2023 /to 01-10-2023\");","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Please follow the dd/mm/yyyy format.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marquestye":70}},{"path":"src/test/java/duck/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public void stringify_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"return book\", false, LocalDate.parse(\"2023-09-01\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"D011/return book11/Sep 01 2023\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        task \u003d new DeadlineTask(\"submit application\", true, LocalDate.parse(\"2023-10-01\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"D118/submit application11/Oct 01 2023\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    public void parse_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"return book\", false, LocalDate.parse(\"2023-09-01\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"            String taskString \u003d task.stringify();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"            Task parsedTask \u003d DeadlineTask.parse(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            assertEquals(task, parsedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"return book\", false, LocalDate.parse(\"2023-09-01\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[D][ ] return book (by: Sep 01 2023)\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        task \u003d new DeadlineTask(\"submit application\", true, LocalDate.parse(\"2023-10-01\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[D][X] submit application (by: Oct 01 2023)\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marquestye":40}},{"path":"src/test/java/duck/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"    public void stringify_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        EventTask task \u003d new EventTask(\"career fair\", false, LocalDate.parse(\"2023-08-29\"), LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"E011/career fair11/Aug 29 202311/Aug 30 2023\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        task \u003d new EventTask(\"TI 23\", true, LocalDate.parse(\"2023-10-12\"), LocalDate.parse(\"2023-10-29\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"E15/TI 2311/Oct 12 202311/Oct 29 2023\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"    public void parse_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"            EventTask task \u003d new EventTask(\"career fair\", false, LocalDate.parse(\"2023-08-29\"), LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"            String taskString \u003d task.stringify();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"            Task parsedTask \u003d EventTask.parse(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            assertEquals(task, parsedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"        EventTask task \u003d new EventTask(\"career fair\", false, LocalDate.parse(\"2023-08-29\"), LocalDate.parse(\"2023-08-30\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[E][ ] career fair (from: Aug 29 2023 to Aug 30 2023)\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"        task \u003d new EventTask(\"TI 23\", true, LocalDate.parse(\"2023-10-12\"), LocalDate.parse(\"2023-10-29\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[E][X] TI 23 (from: Oct 12 2023 to Oct 29 2023)\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marquestye":40}},{"path":"src/test/java/duck/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"    public void add_validTask_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"        assertEquals(0, taskList.getTaskCount());","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        taskList.add(new TodoTask(\"test\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"        taskList.add(new TodoTask(\"test\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"        assertEquals(2, taskList.getTaskCount());","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"    public void getTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            taskList.getTask(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Error - invalid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"    public void mark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"            taskList.mark(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Error - invalid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marquestye"},"content":"    public void unmark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"marquestye"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marquestye"},"content":"            taskList.mark(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Error - invalid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"marquestye"},"content":"    public void delete_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"marquestye"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"marquestye"},"content":"            taskList.delete(1);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"marquestye"},"content":"            assertEquals(\"Error - invalid task number.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marquestye":65}},{"path":"src/test/java/duck/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"package duck.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"public class TodoTaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"    public void stringify_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"        TodoTask task \u003d new TodoTask(\"do laundry\", false);","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"T010/do laundry\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marquestye"},"content":"        task \u003d new TodoTask(\"finish homework\", true);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"T115/finish homework\", task.stringify());","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marquestye"},"content":"    public void parse_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marquestye"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marquestye"},"content":"            TodoTask task \u003d new TodoTask(\"do laundry\", false);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marquestye"},"content":"            String taskString \u003d task.stringify();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marquestye"},"content":"            Task parsedTask \u003d TodoTask.parse(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marquestye"},"content":"            assertEquals(task, parsedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marquestye"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marquestye"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marquestye"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marquestye"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marquestye"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marquestye"},"content":"        TodoTask task \u003d new TodoTask(\"do laundry\", false);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[T][ ] do laundry\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marquestye"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marquestye"},"content":"        task \u003d new TodoTask(\"finish homework\", true);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marquestye"},"content":"        assertEquals(\"[T][X] finish homework\", task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marquestye"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marquestye"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marquestye":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marquestye"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"marquestye"},"content":"unmark -1","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"marquestye"},"content":"todo task1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"marquestye"},"content":"deadline task2 /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"marquestye"},"content":"event event1 /from tomorrow /to Friday","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"marquestye"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"marquestye"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"marquestye"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"marquestye"},"content":"nonsense","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"marquestye"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"marquestye":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marquestye"},"content":"java -classpath ..\\bin Duck \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marquestye":1,"-":20}}]
