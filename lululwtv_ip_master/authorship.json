[{"path":"src/main/java/Corubi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"import java.util.Collections;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"public class Corubi {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"        // Setting of final parameters","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"        final String name \u003d \"Corubi\";","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"        final String divider \u003d \"---------------------------------------------------\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"        ArrayList\u003cTask\u003e enteredText \u003d new ArrayList();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"        // Initiate the bot greeting","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Hello! I am \" + name + \". \\nWhat can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"        // Allow user input","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"        // List of accpeted commands","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"        ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        String[] commandList \u003d {\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"bye\"};","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        Collections.addAll(commands, commandList);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        // Exit the chatbot if the user says \"bye\"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        while (!input.equals(\"bye\") \u0026\u0026 !input.equals(\"Bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            // If input is \"list\" command, show the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            if (input.equals(\"list\") || input.equals(\"List\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"                for (int i \u003d 0; i \u003c enteredText.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"                    System.out.printf(\"%d. %s \\n\", i + 1, enteredText.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"            } else if (input.contains(\"unmark\") || input.contains(\"Unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"                // If command is unmark, then unmark the item","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"                // Split the input by spaces","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"                String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"                // Iterate through the parts to find the number","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"                for (String num : splitInput) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"                        int number \u003d Integer.parseInt(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"                        // Handle the exception if number provided is beyond the size of list","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"                            enteredText.get(number - 1).unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(number + \" is too high! List size is only \" + enteredText.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"                        } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"                            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"                            break; // Stop searching after first number is found","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"                        // Not a number, continue searching","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"            } else if (input.contains(\"mark\") || input.contains(\"Mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"                // If the input contains the word mark, mark the item number as done","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"                // Split the input by spaces","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"                String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"                // Iterate through the parts to find the number","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                for (String num : splitInput) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                        int number \u003d Integer.parseInt(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"                        // Handle the exception if number provided is beyond the size of list","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"                            enteredText.get(number - 1).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(number + \" is too high! List size is only \" + enteredText.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"                        } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"                            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"                            break; // Stop searching after first number is found","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"                        // Not a number, continue searching","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"            } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"                // The delete command","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"                String[] splitInput \u003d input.split(\"delete \");","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"                for (String num : splitInput) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"                        int number \u003d Integer.parseInt(num);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"                        Task index;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"                        // Handle the exception if number provided is beyond the size of list","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"                            index \u003d enteredText.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"                            enteredText.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"                            System.out.printf(\"I have deleted the following task:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"                                    \"%s\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"                                    \"Your list has %d items left\\n\\n\", index.toString(), enteredText.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(number + \" is too high! List size is only \" + enteredText.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"                            System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"                            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"                            break; // Stop searching after first number is found","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"                        // Not a number, continue searching","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"                // Add the input to the list","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"                if (input.contains(\"todo \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"                    input \u003d input.split(\"todo \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new ToDos(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"                    enteredText.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(\"Okay! I have added the following task\\n\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"                } else if (input.contains(\"deadline \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"                    input \u003d input.split(\"deadline \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"                    String[] splitString \u003d input.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new Deadlines(splitString[0], splitString[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"lululwtv"},"content":"                    enteredText.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(\"Okay! I have added the following task\\n\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"lululwtv"},"content":"                } else if (input.contains(\"event \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"lululwtv"},"content":"                    input \u003d input.split(\"event \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"lululwtv"},"content":"                    String taskName \u003d input.split(\"/from\")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"lululwtv"},"content":"                    String to \u003d input.split(\"/to\")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"lululwtv"},"content":"                    String from \u003d input.split(\"to \")[0].split(\"/from \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new Events(taskName, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"lululwtv"},"content":"                    enteredText.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(\"Okay! I have added the following task\\n\" + newTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"                    // Check if input command is in the list of accepted commands","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"lululwtv"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"lululwtv"},"content":"                        if (!commands.contains(input.split(\" \")[0])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"lululwtv"},"content":"                            throw new WrongCommandException(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"lululwtv"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"lululwtv"},"content":"                    } catch (WrongCommandException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"lululwtv"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"lululwtv"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"lululwtv"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"lululwtv"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"lululwtv"},"content":"        System.out.println(input + \" \" + input + \"...please come back soon :(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":150}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"    private String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"    Deadlines(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"    Method name: toString","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    Description: Prints the task name and whether it is done","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"        return \"[D] \" + super.toString() + \"(by : \" + this.by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"Method name: markDone","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"Description: Checks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        super.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Oki, I\u0027ve marked this task as done: \\n\" + this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    Method name: unmarkDone","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    Description: Unchecks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        super.unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Damn bro...unmarked this task :( : \\n\" + this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":36}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"public class Task extends Corubi {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"    final String done \u003d \"[X] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"    final String notDone \u003d \"[] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"    Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    Method name: checkDone","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    Description: Checks if the task is done","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    public boolean checkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    Method name: toString","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    Description: Prints the task name and whether it is done","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        return this.checkDone()","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"                ? done + this.name","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"                : notDone + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    Method name: markDone","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    Description: Checks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    Method name: unmarkDone","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    Description: Unchecks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":46}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"    ToDos(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"    Method name: toString","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"    Description: Prints the task name and whether it is done","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    Method name: markDone","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    Description: Checks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"        super.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Oki, I\u0027ve marked this task as done: \\n\" + this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    Method name: unmarkDone","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    Description: Unchecks the specified task","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        super.unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Damn bro...unmarked this task :( : \\n\" + this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"todo Buy groceries","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"event Birthday party /from 2023-08-25 /to 2023-08-26","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"deadline Submit report /by 2023-09-01","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"java -classpath ..\\bin Corubi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"pause","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":3,"-":20}}]
