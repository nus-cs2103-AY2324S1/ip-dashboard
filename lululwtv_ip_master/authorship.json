[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    mainClass.set(\"Corubi\")","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    archiveFileName \u003d \"Corubi.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lululwtv":22,"-":30}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"import controllers.Main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":11}},{"path":"src/main/java/OUTPUT.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"[T] [X] cock   ","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"[D] [X] asdf (by : Oct 15 2019)","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"[T] [] 2103 tutorial :(  ","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"[T] [] penisw","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"[T] [] 132","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":5}},{"path":"src/main/java/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":61}},{"path":"src/main/java/controllers/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import main.Corubi;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    private Corubi duke \u003d new Corubi();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBot(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":32}},{"path":"src/main/java/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import main.Corubi;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    private Corubi corubi;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/idol.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    private final Image bot \u003d new Image(this.getClass().getResourceAsStream(\"/images/chad.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    public void setBot(Corubi d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"        corubi \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    public void handleUserInput() throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"        String response \u003d corubi.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"                DialogBox.getDukeDialog(response, bot)","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":55}},{"path":"src/main/java/customexceptions/WrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package customexceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":" * The \u003ccode\u003eWrongCommandException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":" * when an invalid command is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":" *","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * This exception is typically thrown when a user inputs a command that is not recognized","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * by the application. It extends the standard Java \u003ccode\u003eException\u003c/code\u003e class.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" *","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":" * @see Exception","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"public class WrongCommandException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"     * Constructs a new \u003ccode\u003eWrongCommandException\u003c/code\u003e with the specified command.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * @param command The invalid command that triggered the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    public WrongCommandException(String command) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"        super(command + \" is not a proper command! \"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"                + \"\\nPlease only use these following commands:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"                + \"todo\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"                + \"deadline\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"                + \"event\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"                + \"mark\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"                + \"unmark\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"                + \"bye\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":29}},{"path":"src/main/java/main/Corubi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import controllers.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":" * The \u003ccode\u003emain.Corubi\u003c/code\u003e class represents the main class for the main.Corubi chatbot application.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":" * It serves as the entry point and orchestrates the interaction between the user interface,","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":" * task management, storage, and command parsing.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"public class Corubi extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    private static final Ui userUi \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    private static final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"    private static final Storage store \u003d new Storage(\"./src/main/java/OUTPUT.txt\", tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"//","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"//    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"//        launch();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"//    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        store.load(parser);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"        stage.setTitle(\"main.Corubi\");","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"//        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"//        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"//            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"//                handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"//            } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"//                throw new RuntimeException(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"//            }","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"//        });","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"//","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"//        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"//            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"//                handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"//            } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"//                throw new RuntimeException(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"//            }","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"//        });","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"lululwtv"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"lululwtv"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"lululwtv"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"lululwtv"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"lululwtv"},"content":"        return userUi.takeCommands(store, tasks, parser, input);","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":135}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e class provides methods for parsing and extracting information","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * from user input and task information stored in text files.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"public class Parser {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns a number from the given input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"     * @param input The input string to search for a number.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted number, or 0 if no number is found.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    public int findNum(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"        // Split the input by spaces","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"        int number \u003d 0;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        // Iterate through the parts to find the number","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        for (String num : splitInput) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"                number \u003d Integer.parseInt(num);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"                // Not a number, continue searching","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        return number;","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task name from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"     * @param taskinfo The task information from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"     * @param prefix   The prefix used to identify the task type.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task name.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    public String taskNameFromTextFile(String taskinfo, String prefix) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"        return taskinfo.split(prefix)[0].split(\"] \")[2].split(\" \\\\(\")[0] + \" \";","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"     * Gets the word that the find command is trying to find","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"     * @param input The corresponding word to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"     * @return The word to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    public String find(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        return input.split(\"find \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task name from the input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"     * @param input The user input strings.","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task name.","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"    public String taskName(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        // Extract the task name based on the command type","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"        String name;","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"        if (input.contains(\"todo \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"            name \u003d input.split(\"todo \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"        } else if (input.contains(\"deadline \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"            String temp \u003d input.split(\"deadline \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"            String[] splitString \u003d temp.split(\"/by\");","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"            name \u003d splitString[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"        } else if (input.contains(\"event \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"            String temp \u003d input.split(\"event \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"            String taskName \u003d temp.split(\"/from\")[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"            name \u003d taskName;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"            name \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        return name;","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task deadline from the input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task deadline.","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"    public String taskBy(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"        String temp \u003d input.split(\"deadline \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"        String[] splitString \u003d temp.split(\"/by\");","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"        return splitString[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task end time from the input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task end time.","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"    public String taskTo(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"        String temp \u003d input.split(\"event \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"        return temp.split(\"/to\")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task start time from the input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"     * @param input The user input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task start time.","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"    public String taskFrom(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"        String temp \u003d input.split(\"event \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"        String from \u003d temp.split(\" /to \")[0].split(\"/from \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"        return from;","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task start time from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"     * @param taskinfo The task information from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task start time formatted as yyyy-MM-dd.","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"    public String taskFromFromTextFile(String taskinfo) {","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"        // Extract the \"from\" value","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"lululwtv"},"content":"        String fromPrefix \u003d \"from : \";","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"lululwtv"},"content":"        int fromIndex \u003d taskinfo.indexOf(fromPrefix) + fromPrefix.length();","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"lululwtv"},"content":"        int toIndex \u003d taskinfo.indexOf(\" to:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"lululwtv"},"content":"        String taskFromInput \u003d taskinfo.substring(fromIndex, toIndex);","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"lululwtv"},"content":"        // Parse the From input string to a LocalDate object","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"lululwtv"},"content":"        LocalDate from \u003d LocalDate.parse(taskFromInput, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"lululwtv"},"content":"        // Format the LocalDate object to the desired output format","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"lululwtv"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task end time from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"lululwtv"},"content":"     * @param taskinfo The task information from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task end time formatted as yyyy-MM-dd.","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"lululwtv"},"content":"    public String taskToFromTextFile(String taskinfo) {","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"lululwtv"},"content":"        // Extract the \"to\" value","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"lululwtv"},"content":"        String toPrefix \u003d \"to: \";","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"lululwtv"},"content":"        int toValueIndex \u003d taskinfo.indexOf(toPrefix) + toPrefix.length();","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"lululwtv"},"content":"        String taskToInput \u003d taskinfo.substring(toValueIndex, toValueIndex + \"MMM d yyyy\".length() + 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"lululwtv"},"content":"        String fromPrefix \u003d \"from : \";","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"lululwtv"},"content":"        int fromIndex \u003d taskinfo.indexOf(fromPrefix) + fromPrefix.length();","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"lululwtv"},"content":"        int toIndex \u003d taskinfo.indexOf(\" to:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"lululwtv"},"content":"        String taskFromInput \u003d taskinfo.substring(fromIndex, toIndex);","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"lululwtv"},"content":"        // Parse the To input string to a LocalDate object","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"lululwtv"},"content":"        LocalDate to \u003d LocalDate.parse(taskFromInput, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"lululwtv"},"content":"        // Format the LocalDate object to the desired output format","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"lululwtv"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":159,"author":{"gitId":"lululwtv"},"content":"     * Extracts and returns the task deadline from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"lululwtv"},"content":"     * @param taskinfo The task information from the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"lululwtv"},"content":"     * @return The extracted task deadline formatted as yyyy-MM-dd.","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"lululwtv"},"content":"    public String taskByFromTextFile(String taskinfo) {","lastModifiedDate":"2023-09-04"},{"lineNumber":165,"author":{"gitId":"lululwtv"},"content":"        String byPrefix \u003d \"by : \";","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"lululwtv"},"content":"        int byIndex \u003d taskinfo.indexOf(byPrefix) + byPrefix.length();","lastModifiedDate":"2023-09-04"},{"lineNumber":167,"author":{"gitId":"lululwtv"},"content":"        String taskByInput \u003d taskinfo.substring(byIndex, byIndex + \"MMM d yyyy\".length() + 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"lululwtv"},"content":"        // Parse the By string to a LocalDate object","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"lululwtv"},"content":"        LocalDate date \u003d LocalDate.parse(taskByInput, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"lululwtv"},"content":"        // Format the LocalDate object to the desired output format","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"lululwtv"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":174,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":175,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":175}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.io.File;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import tasks.Deadlines;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import tasks.Events;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"import tasks.ToDos;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":" * The `Storage` class is responsible for managing the persistence of tasks by","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":" * reading and writing them to an external file named \"OUTPUT.txt\". It provides","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":" * methods to load tasks from the file, write tasks to the file, and overwrite","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":" * the file with updated task information.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"public class Storage {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    private FileWriter pw;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    private String currdir;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    private Ui userUi \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"     * @param dir   The directory where the data is stored.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"     * @param tasks The TaskList instance for managing tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    public Storage(String dir, TaskList tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        this.currdir \u003d dir;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"     * Loads tasks from the OUTPUT.txt file and adds them to the TaskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"     * @param parser The Parser instance for parsing task details.","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"     * @throws IOException If an I/O operation is interrupted.","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    public void load(Parser parser) throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"        try (Scanner fileScanner \u003d new Scanner(new File(\"./src/main/java/OUTPUT.txt\"))) {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"            System.out.println(\"Your leftover tasks are:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"                i++;","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"                String taskInfo \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"                boolean isDone \u003d taskInfo.contains(\"[X] \");","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"                if (taskInfo.contains(\"[T] \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"                    String taskName \u003d parser.taskNameFromTextFile(taskInfo, \"[T] \");","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new ToDos(taskName, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(i + \". \" + newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"                } else if (taskInfo.contains(\"[E]\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"                    String taskName \u003d parser.taskNameFromTextFile(taskInfo, \"[E] \");","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"                    String taskFrom \u003d parser.taskFromFromTextFile(taskInfo);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"                    String taskTo \u003d parser.taskToFromTextFile(taskInfo);","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new Events(taskName, taskFrom, taskTo, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(i + \". \" + newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"                } else if (taskInfo.contains(\"[D]\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"                    String taskName \u003d parser.taskNameFromTextFile(taskInfo, \"[D] \");","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"                    String taskBy \u003d parser.taskByFromTextFile(taskInfo);","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"                    Task newTask \u003d new Deadlines(taskName, taskBy, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"                    System.out.println(i + \". \" + newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"            System.out.println(\"\\nERROR: OUTPUT.txt file is not found in directory ./src/main/java/OUTPUT.txt!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"                    + \"Creating OUTPUT.txt in the given directory now.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        } finally {","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            // Instance of PrintWriter to write new outputs to the file","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"            pw \u003d new FileWriter(\"./src/main/java/OUTPUT.txt\", true);","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"            userUi.start();","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"     * Writes a task to the OUTPUT.txt file.","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"     * @param task The task to be written.","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"     * @throws IOException If an I/O operation is interrupted.","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"    public void write(Task task) throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"        pw.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"        pw.flush();","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"     * Overwrites the OUTPUT.txt file with updated task information.","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"     * @throws IOException If an I/O operation is interrupted.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"    public void overwrite() throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"        FileWriter nw \u003d new FileWriter(currdir);","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"        pw \u003d nw;","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"        pw.flush();","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"            write(tasks.retrieve(i));","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"            pw.flush();","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":109}},{"path":"src/main/java/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * The `Deadlines` class represents a task with a deadline. It extends the `Task` class","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" * and adds functionality to handle deadlines and provide formatted representations of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    private LocalDate by;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"     * Constructs a `Deadlines` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     * @param by     The deadline for the task in a string format (MMM d yyyy).","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     * @param isDone Whether the task is marked as done or not.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     * @throws DateTimeParseException If there is an error parsing the deadline date.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    public Deadlines(String name, String by, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"     * Returns a formatted string representation of the `Deadlines` task, including its name,","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"     * status, and deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"     * @return A formatted string representing the `Deadlines` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        return \"[D] \" + super.toString() + \"(by : \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"     * Marks the `Deadlines` task as done and prints a message indicating the task is marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"     * @return","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"    public String markDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"        super.markDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"        return \"Oki, I\u0027ve marked this task as done: \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"     * Unmarks the `Deadlines` task as done and prints a message indicating the task is unmarked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    public String unmarkDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"        super.unmarkDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"        return \"Damn bro...unmarked this task :( : \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":57}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * The `Events` class represents a task that is an event with a specified date range.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" * It extends the `Task` class and adds functionality to handle event dates and provide","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":" * formatted representations of events.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"public class Events extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * Constructs an `Events` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     * @param name   The name of the event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     * @param from   The starting date of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     * @param to     The ending date of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * @param isDone Whether the event task is marked as done or not.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * @throws DateTimeParseException If there\u0027s an issue parsing the date strings.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    public Events(String name, String from, String to, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"     * Returns a formatted string representation of the `Events` task, including its name,","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"     * status, and date range.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"     * @return A formatted string representing the `Events` task.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"        return \"[E] \" + super.toString() + \"(from : \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"     * Marks the `Events` task as done and provides feedback.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"    public String markDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"        super.markDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"        return \"Oki, I\u0027ve marked this event task as done: \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"     * Unmarks the `Events` task as done and provides feedback.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    public String unmarkDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        super.unmarkDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        return \"Damn bro...unmarked this event task :( : \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":60}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"public class Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"    private final String NAME;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"    private final String DONE \u003d \"[X] \";","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"    private final String NOTDONE \u003d \"[] \";","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"     * @param isDone Whether the task is marked as done or not.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    Task(String name, boolean isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"        this.NAME \u003d name;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    public boolean checkDone() {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        return isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     * Returns a string representation of the task, including its name and status.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        return this.checkDone()","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"                ? DONE + this.NAME","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"                : NOTDONE + this.NAME;","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    public String markDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"        return \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"    public String unmarkDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        return \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"     * Returns the name of the task","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"     * @return name of task","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"    public String getName() {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        return this.NAME;","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":64}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":" * The `TaskList` class represents a collection of tasks and provides methods","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * for managing and interacting with these tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"     * Constructs an empty `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     * Adds a task to the `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"     * Removes a task from the `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"     * Retrieves a task from the `TaskList` based on its index.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"    public Task retrieve(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"     * Returns the number of tasks in the `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"    public int size() {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"     * Prints the list of tasks in the `TaskList`.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    public String printList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"        ans.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"            ans.append((i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"        return ans.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"     * Finds and prints tasks in the `TaskList` that match a specified keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"     * @param keyword The keyword to search for in task names.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"        StringBuilder ans \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"                count++;","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"                ans.append(count + \". \" + task + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"        return ans.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":84}},{"path":"src/main/java/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"    public ToDos(String name, boolean isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"    Method name: toString","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    Description: Prints the task name and whether it is done","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    Method name: markDone","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    Description: Checks the specified task","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"    public String markDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        super.markDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        return \"Oki, I\u0027ve marked this task as done: \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"    /*","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"    Method name: unmarkDone","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"    Description: Unchecks the specified task","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"    public String unmarkDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        super.unmarkDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"        return \"Damn bro...unmarked this task :( : \\n\" + this.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":36}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import customexceptions.WrongCommandException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"import tasks.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"public class Ui {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"    private final String NAME \u003d \"main.Corubi\";","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    public void start() {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"        System.out.println(\"Hello! I am \" + NAME + \". \\nWhat can I do for you?\");","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"    public String takeCommands(Storage store, TaskList task, Parser parse, String command) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"        parser \u003d parse;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"//        store.load(parser);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        tasks \u003d task;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        String[] commandList \u003d {\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"bye\"};","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"        Collections.addAll(commands, commandList);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"            return command + \" \" + command + \"...please come back soon :(\";","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"            if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lululwtv"},"content":"                return listCommand(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lululwtv"},"content":"            } else if (command.toLowerCase().contains(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lululwtv"},"content":"                return unmarkCommand(command, tasks, store);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lululwtv"},"content":"            } else if (command.toLowerCase().contains(\"mark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lululwtv"},"content":"                return markCommand(command, tasks, store);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lululwtv"},"content":"            } else if (command.toLowerCase().contains(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lululwtv"},"content":"                return deleteCommand(command, tasks, store);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lululwtv"},"content":"            } else if (command.toLowerCase().contains(\"find \")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lululwtv"},"content":"                return findCommand(command, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lululwtv"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lululwtv"},"content":"                return processTask(command, tasks, parser, store, commands);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lululwtv"},"content":"    private String listCommand(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lululwtv"},"content":"        result.append(tasks.printList()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lululwtv"},"content":"    private String unmarkCommand(String input, TaskList tasks, Storage store) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"lululwtv"},"content":"        int number \u003d parser.findNum(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lululwtv"},"content":"            tasks.retrieve(number - 1).unmarkDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lululwtv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lululwtv"},"content":"            result.append(number).append(\" is too high! List size is only \").append(tasks.size()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"lululwtv"},"content":"        } finally {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lululwtv"},"content":"            store.overwrite();","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"lululwtv"},"content":"    private String markCommand(String input, TaskList tasks, Storage store) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"lululwtv"},"content":"        int number \u003d parser.findNum(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"lululwtv"},"content":"            result.append(tasks.retrieve(number - 1).markDone());","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"lululwtv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"lululwtv"},"content":"            result.append(number).append(\" is too high! List size is only \").append(tasks.size()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"lululwtv"},"content":"        } finally {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"lululwtv"},"content":"            store.overwrite();","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"lululwtv"},"content":"    private String deleteCommand(String input, TaskList tasks, Storage store) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"lululwtv"},"content":"        int number \u003d parser.findNum(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"lululwtv"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"lululwtv"},"content":"            Task index \u003d tasks.retrieve(number - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"lululwtv"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"lululwtv"},"content":"            result.append(\"I have deleted the following task:\\n\").append(index.toString()).append(\"\\nYour list has \")","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"lululwtv"},"content":"                    .append(tasks.size()).append(\" items left\\n\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"lululwtv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"lululwtv"},"content":"            result.append(number).append(\" is too high! List size is only \").append(tasks.size()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"lululwtv"},"content":"        store.overwrite();","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"lululwtv"},"content":"    private String findCommand(String input, TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"lululwtv"},"content":"        result.append(\"Here are the matching items in your list:\\n\").append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"lululwtv"},"content":"        result.append(tasks.find(parser.find(input))).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"lululwtv"},"content":"    private String processTask(String input, TaskList tasks, Parser parser, Storage store, ArrayList\u003cString\u003e commands) throws IOException {","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"lululwtv"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"lululwtv"},"content":"        if (input.toLowerCase().contains(\"todo \")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"lululwtv"},"content":"            Task newTask \u003d new ToDos(parser.taskName(input), false);","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"lululwtv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"lululwtv"},"content":"            store.write(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"lululwtv"},"content":"            result.append(\"Okay! I have added the following task\\n\").append(newTask).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"lululwtv"},"content":"        } else if (input.toLowerCase().contains(\"deadline \")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"lululwtv"},"content":"            Task newTask \u003d new Deadlines(parser.taskName(input), parser.taskBy(input), false);","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"lululwtv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"lululwtv"},"content":"            result.append(\"Okay! I have added the following task\\n\").append(newTask).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"lululwtv"},"content":"            store.write(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"lululwtv"},"content":"        } else if (input.toLowerCase().contains(\"event \")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"lululwtv"},"content":"            Task newTask \u003d new Events(parser.taskName(input), parser.taskFrom(input), parser.taskTo(input), false);","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"lululwtv"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"lululwtv"},"content":"            result.append(\"Okay! I have added the following task\\n\").append(newTask.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"lululwtv"},"content":"            store.write(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"lululwtv"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"lululwtv"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"lululwtv"},"content":"                if (!commands.contains(input.split(\" \")[0].toLowerCase())) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"lululwtv"},"content":"                    throw new WrongCommandException(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"lululwtv"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"lululwtv"},"content":"            } catch (WrongCommandException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"lululwtv"},"content":"                result.append(e.getMessage()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"lululwtv"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"lululwtv"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"lululwtv"},"content":"        return result.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":138}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"            \u003cFont name\u003d\"Papyrus\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lululwtv":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":" * The ParserTest class contains unit tests for the Parser class.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * These tests verify the functionality of the Parser class methods.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"     * This test method verifies the correctness of the taskName method in the Parser class.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"     * It checks whether the taskName method correctly extracts a task name from a given input string","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"     * in a specific format.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * Test Input: \"todo 123\"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     * Expected Output: \"123\"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"    public void testList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"        // Arrange","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"        // Act","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"        String taskName \u003d parser.taskName(\"todo 123\");","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        // Assert","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        assertEquals(\"123\", taskName);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":31}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lululwtv"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lululwtv"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lululwtv"},"content":" * These tests verify the functionality of the TaskList class methods.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lululwtv"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lululwtv"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lululwtv"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lululwtv"},"content":"     * This test method verifies the correctness of the TaskList class by testing the following actions:","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lululwtv"},"content":"     * 1. Creating a TaskList instance.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lululwtv"},"content":"     * 2. Adding a completed ToDos task with the name \"123\" to the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lululwtv"},"content":"     * 3. Retrieving the task at index 0 from the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"     * 4. Checking if the added task is marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lululwtv"},"content":"     * 5. Verifying that the retrieved task has the expected string representation.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lululwtv"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lululwtv"},"content":"     * Expected Output:","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"     * - The added task should be marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"     * - The retrieved task\u0027s string representation should be \"[T] [X] 123\".","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lululwtv"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lululwtv"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lululwtv"},"content":"    public void testList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lululwtv"},"content":"        // Arrange","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lululwtv"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lululwtv"},"content":"        Task task \u003d new ToDos(\"123\", true);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lululwtv"},"content":"        // Act","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lululwtv"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lululwtv"},"content":"        Task retrieveTask \u003d tasks.retrieve(0);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lululwtv"},"content":"        // Assert","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lululwtv"},"content":"        assertTrue(task.checkDone());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lululwtv"},"content":"        assertEquals(\"[T] [X] 123\", retrieveTask.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lululwtv"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lululwtv"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lululwtv":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lululwtv"},"content":"todo Buy groceries","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lululwtv"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lululwtv"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lululwtv"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"lululwtv"},"content":"event Birthday party /from 2023-08-25 /to 2023-08-26","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lululwtv"},"content":"deadline Submit report /by 2023-09-01","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lululwtv"},"content":"java -classpath ..\\bin main.Corubi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"lululwtv"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lululwtv"},"content":"pause","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lululwtv":3,"-":20}}]
