[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"[D] | 0 | x | 2023-12-12 1800","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"[E] | 0 | x | 2023-11-10 1800 | 2023-12-09 2000","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"[E] | 0 | x | 2001-12-18 1800 | 2001-12-19 1800","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WinSheng1":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"                .toFormatter();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"            this.dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by dd/mm/yyyy hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"                    + Duke.horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"        return \"[D]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"import java.io.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"    static String horizontalLine \u003d \"___________________________________________________________________\";","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    static String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"                + \"\\nHello i\u0027m ChatterBuddy\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"                + \"Is there anything I can assist you with today?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"                + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"        String userInput;","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"            tasks \u003d load();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Error loading tasks.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"        do {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"            String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"            String firstWord \u003d individualWords[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"            String lowerCapsFirstWord \u003d firstWord.toLowerCase();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"                if (lowerCapsFirstWord.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"                    if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println(\"You have 0 task.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"                        Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"                    System.out.println(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"                    if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"Task to mark cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"                        int taskNumber \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"                        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"                        task.updateTaskStatus(true, \"Task \" + (taskNumber + 1) + \" is already done!\", \"Great job! Task \" + (taskNumber + 1) + \" is done!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"                    if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"Task to unmark cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"                        int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"                        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"                        task.updateTaskStatus(false, \"Task \" + (taskNumber + 1) + \" is still incomplete.\", \"Okay, i\u0027ve updated Task \" + (taskNumber + 1) + \" to be incomplete.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"                    if (userInput.length() \u003c\u003d 7 || individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"Task to be deleted cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"                        int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"                        Task deletedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println(\"This task has been removed\\n  \" + deletedTask + \"\\nYou have a total of \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task.\\n\" : \" tasks.\\n\") + horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"                        System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"                    if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"                    String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"                    ToDo task \u003d new ToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"                    System.out.println(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task.\\n\" : \" tasks.\\n\") + horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"                    if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"The description/ deadline of a deadline cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"                        String fullStr \u003d userInput.substring(9);","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"                        String[] parts \u003d fullStr.split(\"/by\");","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"                        String description \u003d parts[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"                        String by \u003d parts[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"                        Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"                        if (task.dateTime !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"                            System.out.println(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task.\\n\" : \" tasks.\\n\") + horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"You are missing one or some of these inputs - description/ by.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"                } else if (lowerCapsFirstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"                    if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"The description/ time of an event cannot be empty!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"                        String fullStr \u003d userInput.substring(6);","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"                        String[] partialStr \u003d fullStr.split(\"/from\");","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"                        String description \u003d partialStr[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"                        String[] toFrom \u003d partialStr[1].split(\"/to\");","lastModifiedDate":"2023-08-25"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"                        String from \u003d toFrom[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"                        String to \u003d toFrom[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"                        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"                        if (task.fromDateTime !\u003d null \u0026\u0026 task.toDateTime !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"                            System.out.println(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task.\\n\" : \" tasks.\\n\") + horizontalLine);","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"WinSheng1"},"content":"                        throw new MissingInputException(\"You are missing one or some of these inputs - description/ from/ to.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"WinSheng1"},"content":"                } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":136,"author":{"gitId":"WinSheng1"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"            } catch (MissingInputException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"                e.print();","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"                e.print();","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"        } while (true);","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"WinSheng1"},"content":"            save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Error saving tasks.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":152,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"Goodbye. Catch you later!\" + \"\\n\" + horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":153,"author":{"gitId":"WinSheng1"},"content":"        scanner.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"    private static void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"            String taskFileString \u003d task.toFileString();","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"            writer.write(taskFileString + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"        writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"    private static ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"            FileReader reader \u003d new FileReader(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"WinSheng1"},"content":"            String fileLine;","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"WinSheng1"},"content":"            while ((fileLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"WinSheng1"},"content":"                Task task \u003d createTaskFromFile(fileLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"WinSheng1"},"content":"    private static Task createTaskFromFile(String fileLine) {","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"WinSheng1"},"content":"        String[] parts \u003d fileLine.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"WinSheng1"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"WinSheng1"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"WinSheng1"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"WinSheng1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"WinSheng1"},"content":"        Task task;","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"WinSheng1"},"content":"        if (type.equals(\"[T]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"WinSheng1"},"content":"        } else if (type.equals(\"[D]\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"WinSheng1"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-08-28"},{"lineNumber":203,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"WinSheng1"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"WinSheng1"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":208,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":209,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":210,"author":{"gitId":"WinSheng1"},"content":"        task.isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-28"},{"lineNumber":211,"author":{"gitId":"WinSheng1"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":212,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WinSheng1":210,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"                .toFormatter();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"            this.fromDateTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"            this.toDateTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"            this.fromDateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"            this.toDateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"                    + \"event task /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /from dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"                    + Duke.horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        return \"[E]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString() + \" (from: \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \" to \" + toDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" + toDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":47}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"    public void print() {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"Invalid Command.\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"                + \"Below are the list of commands:\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"                + \"list - displays the list of tasks\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"                + \"mark x - marks task x as done\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"                + \"unmark x - marks task x as undone\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"                + \"delete x - deletes task x\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"                + \"todo x - creates task with description x\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"                + \"deadline x /by y - creates task with description x by deadline y\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"                + \"event x /from y /to z - creates task with description x from y to z\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"                + Duke.horizontalLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"WinSheng1":17}},{"path":"src/main/java/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"public class MissingInputException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"    public MissingInputException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"    public void print() {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(this.getMessage() + \"\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"WinSheng1":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"    protected String description;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"    public abstract String type();","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    public void updateTaskStatus(boolean expectedStatus, String doneMessage, String undoneMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"        if (isDone \u003d\u003d expectedStatus) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(doneMessage + \"\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"            isDone \u003d expectedStatus;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(undoneMessage + \"\\n\" + Duke.horizontalLine);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"        return \"[T]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"WinSheng1":4}}]
