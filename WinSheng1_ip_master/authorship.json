[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WinSheng1":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WinSheng1":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"[T] | 0 | x","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"[D] | 0 | x | 2023-12-12 1200","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"WinSheng1":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":" * The Duke class represents the TaskMate bot that allows users to","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":" * manage tasks by adding, deleting, marking and un-marking tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    public static boolean isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new instance of the task bot with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"     * @param filePath The file path that stores the task data in text format.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"            System.err.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"     * Runs the task bot, displaying a welcome message and processing user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    public void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        while (!isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"            parser.parseUserInput(ui.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"     * The main entry point for the task bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"     * @param args Not used.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WinSheng1":57,"-":2}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":" * Represents an InvalidCommandException that is thrown when an invalid command is entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new InvalidCommandException with a default error message and the list of available commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"        super(\"Invalid Command.\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"                + \"Below are the list of available commands:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"                + \"list - displays the list of tasks\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"                + \"mark x - marks task x as done\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"                + \"unmark x - marks task x as undone\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"                + \"delete x - deletes task x\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"                + \"todo x - creates task with description x\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"                + \"deadline x /by y - creates task with description x by deadline y\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"                + \"event x /from y /to z - creates task with description x from y to z\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"WinSheng1":25}},{"path":"src/main/java/duke/exception/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":" * Represents an MissingInputException that is thrown when the user enters a valid command with missing inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"public class MissingInputException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new MissingInputException with an error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"     * @param message The error message describing the missing input.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    public MissingInputException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"WinSheng1":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":" * Represents a Deadline task with a specific deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    public LocalDateTime dateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"                .toFormatter();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"            this.dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"     * Gets the type of the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"     * @return The type \"[D]\" for the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        return \"[D]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"     * Converts the Deadline task to a string format for storing in a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the Deadline task for file storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString() + \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":" * Represents an Event task with a specific start and end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    public LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    public LocalDateTime toDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new Event task with the specified description, start and end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"     * @param from The start date and time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"     * @param to The end date and time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"                .toFormatter();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"            this.fromDateTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"            this.toDateTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"            this.fromDateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"            this.toDateTime \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"                    + \"event task /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /from dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"     * Gets the type of the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"     * @return The type \"[E]\" for the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"        return \"[E]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"     * Converts the Event task to a string format for storing in a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the Event task for file storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" + toDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString() + \" (from: \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \" to \" + toDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":" * The abstract base class representing a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"    public String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    public boolean isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"     * Subclasses must implement this method to specify the type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    public abstract String type();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"     * Converts the task to a string format for storing in a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"     * Subclasses must implement this method to specify the string representation of the task when saving it to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"     * Gets a status icon representing the task\u0027s completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"     * @return A status icon (\"X\" for done, \" \" for undone).","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"     * Updates the task\u0027s completion status and displays a message based on the expected status.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"     * @param expectedStatus The expected status of the task (true for done, false for undone).","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"     * @param doneMessage The message to display when the task is done.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"     * @param undoneMessage The message to display when the task is undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"    public void updateTaskStatus(boolean expectedStatus, String doneMessage, String undoneMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        if (isDone \u003d\u003d expectedStatus) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(doneMessage);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"            isDone \u003d expectedStatus;","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(undoneMessage);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":88}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"     * Gets the type of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"     * @return The type \"[T]\" for the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    public String type() {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        return \"[T]\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"     * Converts the ToDo task to a string format for storing in a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the ToDo task for file storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        return type() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"        return type() + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"WinSheng1":49}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.util;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import duke.exception.MissingInputException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":" * The Parser class is responsible for parsing user input and executing corresponding commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":" * It handles various user commands such as adding tasks, listing tasks, marking tasks as done, un-marking tasks and","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":" * deleting tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"     * Parses the user\u0027s input and executes the corresponding commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"     * @param storage The Storage for saving and loading tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    public void parseUserInput(String userInput, TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"            String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"            if (individualWords.length \u003e 0) { // To handle whitespace input","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"                String firstWord \u003d individualWords[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"                String lowerCapsFirstWord \u003d firstWord.toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"                    switch (lowerCapsFirstWord) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"                        case \"bye\":","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"                            ui.showGoodbye();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"                            Duke.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"                        case \"list\":","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"                            listTasks(taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"                        case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"                            markTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"                            unmarkTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"                        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"                            deleteTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"                        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"                            addTodoTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"                            addDeadlineTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"                        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"                            addEventTask(userInput, taskList, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"                        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"                            findByKeyword(userInput, taskList, ui);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"                            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"                        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"                            throw new InvalidCommandException();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"                        storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"                        ui.showMessage(\"Cannot save tasks.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"                } catch (MissingInputException | InvalidCommandException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"                    ui.showMessage(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"     * Displays the list of tasks saved.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"    private void listTasks(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(\"You have 0 task.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"WinSheng1"},"content":"            System.out.println(\"Here are your tasks:\"); // Not using ui.printLine() to prevent lines between the tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"WinSheng1"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"WinSheng1"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"WinSheng1"},"content":"                System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"WinSheng1"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"WinSheng1"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"WinSheng1"},"content":"    private void markTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"Task to mark cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"WinSheng1"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"WinSheng1"},"content":"            throw new IndexOutOfBoundsException(\"There are no tasks to mark.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"WinSheng1"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"WinSheng1"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"WinSheng1"},"content":"            task.updateTaskStatus(true, \"Task \" + (taskNumber + 1) + \" is already done!\", \"Great job! Task \" + (taskNumber + 1) + \" is done!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"WinSheng1"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"WinSheng1"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(\"Invalid task number.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"WinSheng1"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"WinSheng1"},"content":"    private void unmarkTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"Task to unmark cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"WinSheng1"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"WinSheng1"},"content":"            throw new IndexOutOfBoundsException(\"There are no tasks to unmark.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"WinSheng1"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"WinSheng1"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"WinSheng1"},"content":"            task.updateTaskStatus(false, \"Task \" + (taskNumber + 1) + \" is still incomplete.\", \"Okay, I\u0027ve updated Task \" + (taskNumber + 1) + \" to be incomplete.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"WinSheng1"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"WinSheng1"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(\"Invalid task number.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":165,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"WinSheng1"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"WinSheng1"},"content":"    private void deleteTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"Task to be deleted cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"WinSheng1"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"WinSheng1"},"content":"            throw new IndexOutOfBoundsException(\"There are no tasks to be deleted.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"WinSheng1"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"WinSheng1"},"content":"            Task deletedTask \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"WinSheng1"},"content":"            taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(\"This task has been removed:\\n  \" + deletedTask + \"\\nYou have a total of \" + taskList.getSize() + (taskList.getSize() \u003d\u003d 1 ? \" task.\\n\" : \" tasks.\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"WinSheng1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"WinSheng1"},"content":"            ui.showMessage(\"Invalid task number.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":193,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"WinSheng1"},"content":"     * Adds a ToDo task to the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":198,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":199,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":200,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"WinSheng1"},"content":"    private void addTodoTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"WinSheng1"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"WinSheng1"},"content":"        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"WinSheng1"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"WinSheng1"},"content":"        ui.showMessage(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + taskList.getSize() + (taskList.getSize() \u003d\u003d 1 ? \" task.\" : \" tasks.\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"WinSheng1"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"WinSheng1"},"content":"    private void addDeadlineTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"You are missing one or some of these inputs - description/ by.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"WinSheng1"},"content":"            String fullStr \u003d userInput.substring(9);","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"WinSheng1"},"content":"            String[] parts \u003d fullStr.split(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"WinSheng1"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"WinSheng1"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"WinSheng1"},"content":"            Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"WinSheng1"},"content":"            if (task.dateTime !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"WinSheng1"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"WinSheng1"},"content":"                ui.showMessage(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + taskList.getSize() + (taskList.getSize() \u003d\u003d 1 ? \" task.\" : \" tasks.\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"WinSheng1"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"WinSheng1"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"WinSheng1"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"You are missing one or some of these inputs - description/ by.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":249,"author":{"gitId":"WinSheng1"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":250,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":251,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":252,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-03"},{"lineNumber":255,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":256,"author":{"gitId":"WinSheng1"},"content":"    private void addEventTask(String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"You are missing one or some of these inputs - description/ from/ to.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"WinSheng1"},"content":"            String fullStr \u003d userInput.substring(6);","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"WinSheng1"},"content":"            String[] partialStr \u003d fullStr.split(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":265,"author":{"gitId":"WinSheng1"},"content":"            String description \u003d partialStr[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"WinSheng1"},"content":"            String[] toFrom \u003d partialStr[1].split(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":267,"author":{"gitId":"WinSheng1"},"content":"            String from \u003d toFrom[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":268,"author":{"gitId":"WinSheng1"},"content":"            String to \u003d toFrom[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"WinSheng1"},"content":"            Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":271,"author":{"gitId":"WinSheng1"},"content":"            if (task.fromDateTime !\u003d null \u0026\u0026 task.toDateTime !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":272,"author":{"gitId":"WinSheng1"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"WinSheng1"},"content":"                ui.showMessage(\"I\u0027ve added this task:\\n  \" + task + \"\\nYou have a total of \" + taskList.getSize() + (taskList.getSize() \u003d\u003d 1 ? \" task.\" : \" tasks.\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":274,"author":{"gitId":"WinSheng1"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":275,"author":{"gitId":"WinSheng1"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":276,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":277,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":278,"author":{"gitId":"WinSheng1"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":279,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"You are missing one or some of these inputs - description/ from/ to.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":280,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":281,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":282,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":283,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":284,"author":{"gitId":"WinSheng1"},"content":"     * Finds all tasks matching a specified keyword and displays the list of matching tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":285,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":286,"author":{"gitId":"WinSheng1"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-04"},{"lineNumber":287,"author":{"gitId":"WinSheng1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":288,"author":{"gitId":"WinSheng1"},"content":"     * @param ui The Ui for displaying messages.","lastModifiedDate":"2023-09-04"},{"lineNumber":289,"author":{"gitId":"WinSheng1"},"content":"     * @throws MissingInputException If the user input is missing required information.","lastModifiedDate":"2023-09-04"},{"lineNumber":290,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":291,"author":{"gitId":"WinSheng1"},"content":"    private void findByKeyword (String userInput, TaskList taskList, Ui ui) throws MissingInputException {","lastModifiedDate":"2023-09-04"},{"lineNumber":292,"author":{"gitId":"WinSheng1"},"content":"        String[] individualWords \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":293,"author":{"gitId":"WinSheng1"},"content":"        if (individualWords.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":294,"author":{"gitId":"WinSheng1"},"content":"            throw new MissingInputException(\"Keyword cannot be empty.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":295,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":296,"author":{"gitId":"WinSheng1"},"content":"            String keyword \u003d individualWords[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":297,"author":{"gitId":"WinSheng1"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":298,"author":{"gitId":"WinSheng1"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":299,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":300,"author":{"gitId":"WinSheng1"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":301,"author":{"gitId":"WinSheng1"},"content":"                if (task.containsKeyword(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":302,"author":{"gitId":"WinSheng1"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":303,"author":{"gitId":"WinSheng1"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":304,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":305,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":306,"author":{"gitId":"WinSheng1"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":307,"author":{"gitId":"WinSheng1"},"content":"                ui.showMessage(\"No matching tasks found.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":308,"author":{"gitId":"WinSheng1"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":309,"author":{"gitId":"WinSheng1"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":310,"author":{"gitId":"WinSheng1"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":311,"author":{"gitId":"WinSheng1"},"content":"                    Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":312,"author":{"gitId":"WinSheng1"},"content":"                    System.out.println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":313,"author":{"gitId":"WinSheng1"},"content":"                }","lastModifiedDate":"2023-09-04"},{"lineNumber":314,"author":{"gitId":"WinSheng1"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":315,"author":{"gitId":"WinSheng1"},"content":"                matchingTasks.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":316,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":317,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":318,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":319,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":319}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.util;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":" * The Storage class handles loading and saving of tasks to a file specified by a file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a new Storage with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"     * @param filePath The file path that stores the task data in text format.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"            FileReader reader \u003d new FileReader(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"            String fileLine;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"            while ((fileLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"                Task task \u003d createTaskFromFile(fileLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"        return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"     * Saves the list of tasks to the file specified by the file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"     * @throws IOException If there are issues saving the tasks to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"            String taskFileString \u003d task.toFileString();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"            writer.write(taskFileString + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"        writer.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"     * Creates a Task based on the line of text from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"     * @param fileLine A line of text from the file that represents a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"     * @return The task created from the file line.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"    private static Task createTaskFromFile(String fileLine) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"        String[] parts \u003d fileLine.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"WinSheng1"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"WinSheng1"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"WinSheng1"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"WinSheng1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"WinSheng1"},"content":"        Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"WinSheng1"},"content":"        if (type.equals(\"[T]\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"WinSheng1"},"content":"        } else if (type.equals(\"[D]\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"WinSheng1"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"WinSheng1"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"WinSheng1"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"WinSheng1"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"WinSheng1"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"WinSheng1"},"content":"        task.isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"WinSheng1"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":102}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.util;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a TaskList with a list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"     * @param tasks An ArrayList of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"     * Gets the task from the task list at a specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"     * Deletes a task to the task list at a specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"     * @param index The task to be deleted from the task list at a specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"     * Checks if the task list has any tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"     * @return true if the task list has no tasks, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"WinSheng1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WinSheng1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"WinSheng1"},"content":"     * Gets a copy of all tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"WinSheng1"},"content":"     * @return The list of all tasks in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"WinSheng1"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"WinSheng1"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":79}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.util;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":" * The Ui class handles the displaying of messages to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":" * @author Win Sheng","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":" * @since 3 September 2023","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"     * Constructs a Ui and initializes the scanner for user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"     * Displays a welcome message.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WinSheng1"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"Hi! I\u0027m TaskMate.\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WinSheng1"},"content":"                + \"What can I do for you today?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WinSheng1"},"content":"        printLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WinSheng1"},"content":"     * Displays a goodbye message and closes the scanner.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WinSheng1"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"Goodbye! See you next time!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WinSheng1"},"content":"        printLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WinSheng1"},"content":"        scanner.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"WinSheng1"},"content":"     * Displays a message and then prints a line.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"WinSheng1"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"WinSheng1"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WinSheng1"},"content":"        printLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"WinSheng1"},"content":"     * Retrieves user input from the console.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"WinSheng1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"WinSheng1"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WinSheng1"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"Enter command: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WinSheng1"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WinSheng1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"WinSheng1"},"content":"     * Prints a horizontal line to separate printed messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"WinSheng1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"WinSheng1"},"content":"    public void printLine() {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WinSheng1"},"content":"        System.out.println(\"___________________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":65}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    void testString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"        Deadline task \u003d new Deadline(\"test\", \"2024-12-01 1532\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.toString(), \"[D][ ] test (by: Dec 1 2024 3:32PM)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    void testInvalidDeadline() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"            new Deadline(\"test\", \"1234\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"            assertEquals(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /by dd/mm/yyyy hhmm\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":23}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class EventTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    void testString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"        Event task \u003d new Event(\"test\", \"2024-12-01 1532\", \"2024-12-03 1600\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.toString(), \"[E][ ] test (from: Dec 1 2024 3:32PM to Dec 3 2024 4:00PM)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    void testInvalidDeadline() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"            new Event(\"test\", \"1234\", \"1234\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"            assertEquals(\"Please use the following formats:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WinSheng1"},"content":"                    + \"event task /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WinSheng1"},"content":"                    + \"deadline task /from dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WinSheng1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":23}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    ToDo task \u003d new ToDo(\"test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"    void testStatusIcon() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.getStatusIcon(), \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"        task.updateTaskStatus(true, \"\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.getStatusIcon(), \"X\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"        task.updateTaskStatus(false, \"\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.getStatusIcon(), \" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":16}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WinSheng1"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WinSheng1"},"content":"    void testDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WinSheng1"},"content":"        ToDo task \u003d new ToDo(\"test1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.getDescription(), \"test1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WinSheng1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WinSheng1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WinSheng1"},"content":"    void testString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WinSheng1"},"content":"        ToDo task \u003d new ToDo(\"test2\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WinSheng1"},"content":"        assertEquals(task.toString(), \"[T][ ] test2\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WinSheng1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WinSheng1":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WinSheng1"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"WinSheng1"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"WinSheng1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"WinSheng1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"WinSheng1":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WinSheng1"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WinSheng1":1,"-":20}}]
