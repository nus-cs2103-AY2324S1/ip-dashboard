[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"# Bob project template","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"3. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jack1e0":2,"-":22}},{"path":"bob.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"deadline | 0 | high | assignment | 2023-09-19","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"todo | 0 | low | read book","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"jack1e0":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.10.0\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"    mainClass.set(\"bob.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jack1e0":23,"-":40}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":" * Main class for Bob","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"public class Bob {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     * Bob constructor, initialise storage, tasks and ui","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    public Bob() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        storage \u003d new Storage(\"./bob.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    public String greet() {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"        return ui.greet();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        Command c \u003d Parser.parse(input.trim());","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":39,"-":1}},{"path":"src/main/java/bob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY,","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"                new CornerRadii(20),","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"                new Insets(5, 5, 15, 5))));","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"        if (text.startsWith(\"E\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"            db.dialog.setText(text.split(\" \", 2)[1]);","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"            db.setBackground(new Background(new BackgroundFill(Color.LIGHTPINK,","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"                    new CornerRadii(20),","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"                    new Insets(5, 5, 15, 5))));","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"            db.setBackground(new Background(new BackgroundFill(Color.WHITE,","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"                    new CornerRadii(20),","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"                    new Insets(5, 5, 15, 5))));","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":78}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":8}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" * A GUI for Bob using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    private Bob bob \u003d new Bob();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.setRoot(new AnchorPane());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"            setStage(fxmlLoader, stage);","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    private void setStage(FXMLLoader fxmlLoader, Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            stage.setTitle(\"Bob\");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"            stage.setResizable(true);","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"            stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":43}},{"path":"src/main/java/bob/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    private Bob bob;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bob.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"        bob \u003d b;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        dialogContainer.getChildren().add(DialogBox.getBobDialog(bob.greet(), bobImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        if (!userInput.getText().isBlank()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"            String userText \u003d userInput.getText().trim();","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"            String input \u003d \"User:\\n\" + userText;","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"            String response \u003d bob.getResponse(userInput.getText());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"            if (!response.equals(\"\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"                        DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"                );","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":60}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import bob.command.AddCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import bob.command.DisplayCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import bob.command.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import bob.command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" * Handles user input and convert them into the right command.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public static Command parse(String nextLine) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        assert !nextLine.equals(\"\");","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        if (nextLine.contains(\"list\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"            return new DisplayCommand(nextLine);","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        } else if (nextLine.contains(\"mark\")) { // if command is to mark or unmark","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"            return new MarkCommand(nextLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        } else if (nextLine.contains(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"            return new DeleteCommand(nextLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"        } else if (nextLine.contains(\"find\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            return new FindCommand(nextLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        } else if (nextLine.equals(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        } else { // invalid input is handled here too","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"            return new AddCommand(nextLine);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":32}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import bob.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":" * Handles loading tasks from, and saving tasks to file","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    private String dataPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    public Storage(String dataPath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"     * If bob.txt exists, read data from it.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"     * If data is not in correct form, delete file and create empty file.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"     * If bob.txt does not exist, create empty file.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        File file \u003d new File(dataPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        if (!file.createNewFile()) { // if file already exists","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            // read from file","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            assert file !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"                    lst.add(Task.parse(sc.nextLine()));","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"            } catch (IndexOutOfBoundsException e) { // file corrupted","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"                file.delete();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        return lst;","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"     * Writes a new line to bob.txt for each Task in lst.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"     * Called whenever an operation that alters lst is implemented.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"    public void write(ArrayList\u003cTask\u003e lst) throws IOException {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        FileWriter fw \u003d new FileWriter(dataPath, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"        String lstString \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        for (Task tsk : lst) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"            assert !tsk.toTxt().equals(\"\");","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"            lstString +\u003d tsk.toTxt() + \"\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"        fw.write(lstString);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"        fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":65}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import java.util.List;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import bob.exception.InvalidPriorityException;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingDatesException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingTaskException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"import bob.exception.WrongInputException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"import bob.task.*;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":" * Contains list of tasks, and operations that alter it.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    public ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        this.lst \u003d lst;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"     * Generates the appropriate type of Task based on user input","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"     * Throws exceptions due to incorrect user input","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"     * @param description is of the form e.g. \"event p/high read /from 2pm /to 4pm\"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"     * @return the relevant Task","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"     * @throws WrongInputException for unrecognised input.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"     * @throws MissingTaskException when task name is missing.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"     * @throws MissingDatesException when start and end of Event is missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    public Task generateTask(String description)","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"            throws WrongInputException, MissingTaskException,","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"            MissingDatesException, DateTimeParseException, InvalidPriorityException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        // Split by the first \" \" into type, and task details","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        String[] task \u003d description.split(\" \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        TaskType taskType;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"            taskType \u003d Enum.valueOf(TaskType.class, task[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"            throw new WrongInputException();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        if (task.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        String taskDetails \u003d task[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        assert taskDetails !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"        if (taskType.equals(TaskType.deadline)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"            return new Deadline(taskDetails);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"        } else if (taskType.equals(TaskType.event)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"            return new Event(taskDetails);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"            return new Todo(taskDetails);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"     * Adds a Task to lst. Writes modified lst to bob.txt.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"     * Handles exceptions that occur due to wrong input/ missing requirements","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"     * @param description is of the form e.g. \"event p/low read /from 2pm /to 4pm\"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"     * @return message for adding a Task","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"    public String[] addToList(String description)","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"        throws WrongInputException, MissingTaskException, MissingDatesException,","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"            DateTimeParseException, InvalidPriorityException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"            Task taskObj \u003d generateTask(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"            assert taskObj !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"            Task repeat \u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"            for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"                if (taskObj.equals(lst.get(i))) {","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"                    repeat \u003d lst.get(i);","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"                    index \u003d i + 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"                    break;","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"            if (repeat !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"                return new String[]{\"There is a similar task that was previously added: \",","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"                        (index + \". \" + repeat.toString()),","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"                        \"Delete this to add your new task.\"};","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"            lst.add(taskObj);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"            return new String[]{\"You have added a new task: \", \"\\t\" + taskObj.toString(),","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"                \"Now, you have \" + lst.size() + (lst.size() \u003d\u003d 1 ? \" task!\" : \" tasks!\")};","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"     * Prints out the Tasks on lst.","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"     * @return display of lst","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":"    public String[] displayList(String priority) {","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"        assert lst !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"jack1e0"},"content":"        List\u003cString\u003e tasksFound;","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"jack1e0"},"content":"        String message;","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"jack1e0"},"content":"        if (priority.equals(\"\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"jack1e0"},"content":"            tasksFound \u003d lst.stream().map(Object::toString).collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"jack1e0"},"content":"            message \u003d \"Certainly. Here are all your tasks. Consider filtering by priority (e.g. list p/high)\";","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"jack1e0"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"jack1e0"},"content":"            try {","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"jack1e0"},"content":"                Priority p \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"jack1e0"},"content":"                tasksFound \u003d getTasksWithPriority(p);","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"jack1e0"},"content":"                message \u003d \"Certainly. Here are your tasks of \" + priority + \" priority!\";","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"jack1e0"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"jack1e0"},"content":"                return new String[] { \"Apologies, please input valid priority! E.g. list p/high\" };","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"jack1e0"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"jack1e0"},"content":"            return new String[] { \"Alas, no tasks are found.\" };","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"jack1e0"},"content":"        List\u003cString\u003e tasks \u003d IntStream.range(1, tasksFound.size() + 1)","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"jack1e0"},"content":"                .mapToObj(i -\u003e i + \". \" + tasksFound.get(--i))","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"jack1e0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"jack1e0"},"content":"        tasks.add(0, message);","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"jack1e0"},"content":"        return tasks.toArray(new String[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"jack1e0"},"content":"    private List\u003cString\u003e getTasksWithPriority(Priority p) {","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"jack1e0"},"content":"        return lst.stream()","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"jack1e0"},"content":"                .filter(tsk -\u003e tsk.getPriority().equals(p))","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"jack1e0"},"content":"                .map(Object::toString)","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"jack1e0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"jack1e0"},"content":"     * Marks Task as done or undone at a specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"jack1e0"},"content":"     * Writes modified lst to bob.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"jack1e0"},"content":"     * @param index of Task to be marked","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"jack1e0"},"content":"     * @param doneOrNot states whether the Task is done or not","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"jack1e0"},"content":"     * @return message for marking a Task","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"jack1e0"},"content":"    public String[] markDoneOrNot(int index, boolean doneOrNot) {","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"jack1e0"},"content":"        lst.get(index - 1).setDoneOrNot(doneOrNot);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"jack1e0"},"content":"        String statement \u003d doneOrNot","lastModifiedDate":"2023-09-17"},{"lineNumber":156,"author":{"gitId":"jack1e0"},"content":"                ? \"Splendid! You completed a task!\"","lastModifiedDate":"2023-09-17"},{"lineNumber":157,"author":{"gitId":"jack1e0"},"content":"                : \"This is now undone. Let that not happen again.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"jack1e0"},"content":"        return new String[]{statement, \"\\t\" + lst.get(index - 1).toString()};","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"jack1e0"},"content":"     * Deletes Task at specified index from list.","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"jack1e0"},"content":"     * Writes modified lst to bob.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"jack1e0"},"content":"     * @param index of Task to be deleted","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"jack1e0"},"content":"     * @return message for deleting a Task","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"jack1e0"},"content":"    public String[] deleteTask(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"jack1e0"},"content":"        String taskStr \u003d lst.get(index - 1).toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"jack1e0"},"content":"        lst.remove(index - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"jack1e0"},"content":"        return new String[]{\"The selected task is removed from list: \", \"\\t\" + taskStr,","lastModifiedDate":"2023-09-17"},{"lineNumber":171,"author":{"gitId":"jack1e0"},"content":"            \"You now have \" + lst.size() + (lst.size() \u003d\u003d 1 ? \" task!\" : \" tasks!\")};","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"jack1e0"},"content":"    public String[] findTasks(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"jack1e0"},"content":"        List\u003cString\u003e tasksStream \u003d lst.stream()","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"jack1e0"},"content":"                .filter(tsk -\u003e tsk.getName()","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"jack1e0"},"content":"                .contains(keyword))","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"jack1e0"},"content":"                .map(Object::toString)","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"jack1e0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"jack1e0"},"content":"        Stream\u003cInteger\u003e indexStream \u003d IntStream.range(0, tasksStream.size()).boxed();","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"jack1e0"},"content":"        List\u003cString\u003e tasksFound \u003d indexStream","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"jack1e0"},"content":"                .map(i -\u003e (++i) + \". \" + tasksStream.get(--i))","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"jack1e0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"jack1e0"},"content":"        tasksFound.add(0, \"Certainly. Here are the matching tasks: \");","lastModifiedDate":"2023-09-17"},{"lineNumber":189,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"jack1e0"},"content":"        return tasksFound.size() \u003e 1","lastModifiedDate":"2023-09-10"},{"lineNumber":191,"author":{"gitId":"jack1e0"},"content":"                ? tasksFound.toArray(new String[0])","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"jack1e0"},"content":"                : new String[]{\"No matching tasks were found. Try another keyword, or display the entire list.\"};","lastModifiedDate":"2023-09-17"},{"lineNumber":193,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":194}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Handles user interaction","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"     * Formats string into nice display","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"     * @param strArray contains strings to be displayed on different lines","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    public String stringFormat(String[] strArray) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        for (String s : strArray) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"            content +\u003d s + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"        return \"Bob:\\n\" + content;","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    public String errorFormat(String[] strArray) {","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        for (String s : strArray) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"            content +\u003d s + \"\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        return \"E Bob:\\n\" + content;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"    public String greet() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        return stringFormat(new String[]{","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            \"Good day to you! How may I be of assistance?\"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    public String exit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        return stringFormat(new String[]{\"Helping you is my pleasure.\"});","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    public void echo(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        stringFormat(new String[]{input});","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        return errorFormat(new String[]{","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"            \"Met with difficulty when retrieving old tasks.\", \"New list created!\"","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":47}},{"path":"src/main/java/bob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import bob.exception.InvalidPriorityException;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingDatesException;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingTaskException;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"import bob.exception.WrongInputException;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        super.input \u003d input;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"     * Adds task to list based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"     * Handles exceptions that may arise from bad user input","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"     * @param tasks from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"     * @param ui from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"     * @param storage from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"                String display \u003d ui.stringFormat(tasks.addToList(input));","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"                storage.write(tasks.lst);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"                return display;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"                throw new InvalidPriorityException();","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"                throw new MissingDatesException();","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        } catch (MissingDatesException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        } catch (InvalidPriorityException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":49}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":" * Handles the execution of different types of commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    protected String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":16}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"        super.input \u003d input;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     * Deletes task based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     * Handles exceptions that may arise from bad user input","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"     * @param tasks from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"     * @param ui from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"     * @param storage from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            String[] deleteIndex \u003d input.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            if (deleteIndex.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"                throw new MissingIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"                index \u003d Integer.parseInt(deleteIndex[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"                throw new MissingIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            String display \u003d ui.stringFormat(tasks.deleteTask(index));","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"            storage.write(tasks.lst);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"            return display;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"        } catch (MissingIndexException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{\"Index provided is wrong.\"});","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":48}},{"path":"src/main/java/bob/command/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    public DisplayCommand(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"        super.input \u003d input;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"     * Displays list","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"     * @param tasks from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"     * @param ui from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     * @param storage from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        String[] strSplit \u003d input.split(\" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        String priority \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"            if (strSplit.length \u003e 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"                priority \u003d strSplit[1].split(\"/\")[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            return ui.stringFormat(tasks.displayList(priority));","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        } catch (IndexOutOfBoundsException e) { // no explicit priority","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"            return ui.stringFormat(tasks.displayList(\"\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":31}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"     * Display exit lines","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"     * @param tasks from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"     * @param ui from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"     * @param storage from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        return ui.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":20}},{"path":"src/main/java/bob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"        super.input \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"            String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"            return ui.stringFormat(tasks.findTasks(keyword));","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[] {\"Please provide a keyword.\"});","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jack1e0":20}},{"path":"src/main/java/bob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import bob.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"        super.input \u003d input;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     * Marks task as done or undone based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     * Handles exceptions that may arise from bad user input","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"     * @param tasks from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"     * @param ui from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"     * @param storage from Bob class","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"            String[] markIndex \u003d input.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            if (markIndex.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"                throw new MissingIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"                index \u003d Integer.parseInt(markIndex[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"                throw new MissingIndexException();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"            boolean doneOrNot \u003d !input.contains(\"unmark\");","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"            String display \u003d ui.stringFormat(tasks.markDoneOrNot(index, doneOrNot));","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"            storage.write(tasks.lst);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"            return display;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        } catch (MissingIndexException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{e.message});","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"            return ui.errorFormat(new String[]{\"Index provided is invalid.\"});","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":51}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Contains exceptions specific to Bob","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Error.\";","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":9}},{"path":"src/main/java/bob/exception/InvalidPriorityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"public class InvalidPriorityException extends BobException {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Please input valid priority.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"            + \"For example:\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"            + \"todo p/high read\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"            + \"deadline p/mid read /by 2022-01-01\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"            + \"event p/low read /from 2022-01-01 /to 2022-02-02\";","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jack1e0":10}},{"path":"src/main/java/bob/exception/MissingDatesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Exception when dates are not provided or in wrong format","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" * for Events and Deadlines","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"public class MissingDatesException extends BobException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Please provide the appropriate date.\\n\" +","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"            \"For example:\\n\" + \"For deadlines: /by 2022-01-01\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"            + \"For events: /from 2022-01-01 /to 2022-02-02\";","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jack1e0":11}},{"path":"src/main/java/bob/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Exception when index is not given for commands that require them","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" * e.g. delete, mark, unmark","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"public class MissingIndexException extends BobException {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Do provide the task index.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":9}},{"path":"src/main/java/bob/exception/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Exception for missing task description","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class MissingTaskException extends BobException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Do provide a task description.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":8}},{"path":"src/main/java/bob/exception/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Exception for nonsensical input","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class WrongInputException extends BobException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    public String message \u003d \"Please input something of value.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jack1e0":9}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"import bob.exception.InvalidPriorityException;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingDatesException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    private LocalDate due;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"     * Deadline constructor","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"     * @param description in the form e.g.\"p/high submit task /by 2022-01-01\"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"     * @throws MissingDatesException","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    public Deadline(String description)","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"            throws MissingDatesException, InvalidPriorityException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        super(description.split(\" /by \")[0].split(\" \", 2)[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"            this.due \u003d LocalDate.parse(description.split(\" /by \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            throw new MissingDatesException();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"            String priority \u003d description.split(\" /by \")[0].split(\" \")[0].split(\"/\")[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            throw new InvalidPriorityException();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    public Deadline(String name, boolean done, String due, String priority) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"        super(name);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        super.done \u003d done;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"        super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        this.due \u003d LocalDate.parse(due);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"     * Converts object to string representation for user display","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        String done \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        return \"[D]\" + done","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"                + super.priorityToString()","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"                + \" \" + this.name","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"                + \" (by: \" + this.due.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"                + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"     * Parses string into a Deadline object","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"     * @param str is in the form e.g. \"0 | high | read book | 2pm\"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"     * @return Deadline object","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"     * @throws IndexOutOfBoundsException when parsing fails, as string split does not occur correctly.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    public static Deadline parseDeadline(String str) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"        String[] strSplit \u003d str.split(\" \\\\| \", 4);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"        boolean isDone \u003d strSplit[0].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"        String priority \u003d strSplit[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"        String name \u003d strSplit[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"        String due \u003d strSplit[3];","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"        return new Deadline(name, isDone, due, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"     * Converts object into string to be stored in bob.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"    public String toTxt() {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"        String separation \u003d \" | \";","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"        return \"deadline\" + separation +","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"                (done ? 1 : 0) + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"                + super.priority + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"                + super.name + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"                + due;","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"        Deadline e \u003d (Deadline) other;","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"        return this.name.equals(e.name)","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"                \u0026\u0026 this.due.equals(e.due);","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"jack1e0":99}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import bob.exception.InvalidPriorityException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingDatesException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"     * Event constructor","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"     * @param description in the form e.g.\"p/mid travelling /from 2022-01-01 /to 2023-01-01\"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"     * @throws MissingDatesException","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    public Event(String description)","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"            throws MissingDatesException, InvalidPriorityException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        super(description.split(\" /from \")[0].split(\" \", 2)[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"            this.start \u003d LocalDate.parse(description.split(\" /from \")[1].split(\" /to \")[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"            this.end \u003d LocalDate.parse(description.split(\" /from \")[1].split(\" /to \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"            if (this.start.isAfter(this.end)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"                throw new MissingDatesException();","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"            throw new MissingDatesException();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"            String priority \u003d description.split(\" /by \")[0].split(\" \")[0].split(\"/\")[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"            super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"            throw new InvalidPriorityException();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    public Event(String name, boolean done, String start, String end, String priority) {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"        super(name);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        super.done \u003d done;","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"     * Converts object to string representation for user display","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"        String done \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        return \"[E]\" + done","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"                + super.priorityToString()","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"                + \" \" + this.name","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"                + \" (from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"                + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"     * Parses string into an Event object","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"     * @param str is in the form e.g. \"0 | high | read book | 2pm | 4pm\"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"     * @return Event object","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"     * @throws IndexOutOfBoundsException when parsing fails, as string split does not occur correctly.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    public static Event parseEvent(String str) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"        String[] strSplit \u003d str.split(\" \\\\| \", 5);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"        boolean isDone \u003d strSplit[0].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"        String priority \u003d strSplit[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"        String name \u003d strSplit[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"        String start \u003d strSplit[3];","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"        String end \u003d strSplit[4];","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jack1e0"},"content":"        return new Event(name, isDone, start, end, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jack1e0"},"content":"     * Converts object into string to be stored in bob.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"jack1e0"},"content":"    public String toTxt() {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"jack1e0"},"content":"        String separation \u003d \" | \";","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"jack1e0"},"content":"        return \"event\" + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"jack1e0"},"content":"                + (done ? 1 : 0) + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"jack1e0"},"content":"                + super.priority + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"jack1e0"},"content":"                + super.name + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"jack1e0"},"content":"                + start + separation + end;","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"jack1e0"},"content":"        Event e \u003d (Event) other;","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"jack1e0"},"content":"        return this.name.equals(e.name)","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"jack1e0"},"content":"                \u0026\u0026 this.start.equals(e.start)","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"jack1e0"},"content":"                \u0026\u0026 this.end.equals(e.end);","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jack1e0":108}},{"path":"src/main/java/bob/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"public enum Priority {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"    high, mid, low","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jack1e0":5}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":" * Parent class for 3 different types of Tasks: Todo, Events, and Deadlines","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"    protected String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    protected Priority priority;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    protected Task(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        this.priority \u003d Priority.mid;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"    ","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        return this.name;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        return this.priority;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    public String priorityToString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        return this.priority.equals(Priority.high)","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"                ? \"[High]\"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"                : this.priority.equals(Priority.mid)","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"                ? \"[Mid]\"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"                : \"[Low]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"    public void setDoneOrNot(boolean doneOrNot) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"        this.done \u003d doneOrNot;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"     * Parses Task from string to Task object","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"     * @param description is in the form e.g. \"event | 0 | high | read book | 2pm | 4pm\"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"     * @return Task object","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"     * @throws IndexOutOfBoundsException when parsing fails, indicates corrupt file.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"    public static Task parse(String description) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"        assert description.contains(\"|\");","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"        String[] split \u003d description.split(\" \\\\| \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"        String type \u003d split[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"        String details \u003d split[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"        switch (Enum.valueOf(TaskType.class, type)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        case todo:","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"            return Todo.parseTodo(details);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        case event:","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"            return Event.parseEvent(details);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        case deadline:","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"            return Deadline.parseDeadline(details);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"     * Converts object to string, to be overridden","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"    public String toTxt() {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"        return \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jack1e0":71}},{"path":"src/main/java/bob/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"    todo, event, deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"jack1e0":6}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.exception.InvalidPriorityException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"     * Todo constructor","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"     * @param description in the form e.g.\"p/high read\"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"     * @throws InvalidPriorityException","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    public Todo(String description)","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"            throws InvalidPriorityException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        super(description.split(\" \", 2)[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        System.out.println(description.split(\" \")[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"            String priority \u003d description.split(\" \")[0].split(\"/\")[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"            super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"            throw new InvalidPriorityException();","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"    public Todo(String name, boolean done, String priority) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        super(name);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"        super.done \u003d done;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        super.priority \u003d Enum.valueOf(Priority.class, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jack1e0"},"content":"     * Converts object to string representation for user display","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jack1e0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jack1e0"},"content":"        String done \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"jack1e0"},"content":"        return \"[T]\" + done + super.priorityToString() + \" \" + this.name;","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"jack1e0"},"content":"     * Parses string into a Todo object","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"jack1e0"},"content":"     * @param str is in the form e.g. \"0 | low | read book\"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"jack1e0"},"content":"     * @return Todo object","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"jack1e0"},"content":"     * @throws IndexOutOfBoundsException when parsing fails, as string split does not occur correctly.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"jack1e0"},"content":"    public static Todo parseTodo(String str) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"jack1e0"},"content":"        String[] strSplit \u003d str.split(\" \\\\| \", 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jack1e0"},"content":"        boolean isDone \u003d strSplit[0].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"jack1e0"},"content":"        String priority \u003d strSplit[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"jack1e0"},"content":"        String name \u003d strSplit[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jack1e0"},"content":"        return new Todo(name, isDone, priority);","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"jack1e0"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jack1e0"},"content":"     * Converts object into string to be stored in bob.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jack1e0"},"content":"     * @return string representation","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jack1e0"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"jack1e0"},"content":"    public String toTxt() {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"jack1e0"},"content":"        String separation \u003d \" | \";","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"jack1e0"},"content":"        return \"todo\" + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"jack1e0"},"content":"                + (done ? 1 : 0) + separation","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"jack1e0"},"content":"                + super.priority + separation + super.name;","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"jack1e0"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"jack1e0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"jack1e0"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"jack1e0"},"content":"            return false;","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"jack1e0"},"content":"        return this.name.equals(((Todo) other).name);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jack1e0":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"                \u003cRectangle width\u003d\"99\" height\u003d\"99\" arcHeight\u003d\"99\" arcWidth\u003d\"99\"/\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"        \u003cInsets bottom\u003d\"22.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.MainWindow\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" minWidth\u003d\"76.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" minHeight\u003d\"557.0\" minWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388\" AnchorPane.leftAnchor\u003d\"10\" AnchorPane.rightAnchor\u003d\"10\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":20}},{"path":"src/test/java/bob/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.exception.MissingDatesException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    void testToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"            Deadline dl \u003d new Deadline(\"submit homework /by 2022-01-01\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"            assertEquals(\"[D][ ] submit homework (by: Jan 01 2022)\", dl.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"            System.out.println(\"Invalid input\");","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jack1e0"},"content":"    void toTxt() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jack1e0"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jack1e0"},"content":"            Deadline dl \u003d new Deadline(\"submit homework /by 2022-01-01\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jack1e0"},"content":"            assertEquals(\"deadline | 0 | submit homework | 2022-01-01\", dl.toTxt());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jack1e0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"jack1e0"},"content":"            System.out.println(\"Invalid input\");","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"jack1e0"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":32}},{"path":"src/test/java/bob/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"package bob;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"import bob.command.AddCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"import bob.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jack1e0"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jack1e0"},"content":"    void parse() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jack1e0"},"content":"        Command c \u003d new AddCommand(\"todo read\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jack1e0"},"content":"        assertEquals(c.getClass(), Parser.parse(\"todo read\").getClass());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jack1e0"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jack1e0"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jack1e0":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jack1e0"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jack1e0"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jack1e0"},"content":"event study /from 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"jack1e0"},"content":"deadline submit /by 12 Aug","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"jack1e0"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jack1e0"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jack1e0"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jack1e0"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jack1e0"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jack1e0"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jack1e0":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jack1e0"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jack1e0":1,"-":20}}]
