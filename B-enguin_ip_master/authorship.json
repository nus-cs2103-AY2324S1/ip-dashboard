[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"B-enguin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"B-enguin":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"1 todo b","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"0 todo a","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"1 deadline a /by 2023-08-26","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"0 deadline c /by 2023-09-03","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"0 event task /from 2023-08-26 /to 2023-08-27","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"0 todo abc","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"B-enguin":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" * The main duke class.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"public class Duke {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    private UI ui;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"     * @param savePath string of path to the savefile","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"    public Duke(String savePath) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            this.storage \u003d new Storage(savePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            this.taskList \u003d this.storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    public void setUi(UI ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    public void getResponse(String rawUserInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d Parser.parseCommand(rawUserInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"            ui.sendError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":46}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":" * Represents an Exception specific to Duke.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"        super(e);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"B-enguin":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.ui.GuiBridge;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"public class Launcher {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"        Application.launch(GuiBridge.class, args);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":13}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":" * Storage handler for duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"public class Storage {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    private final String savePath;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    private final boolean isUpdatable \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public Storage(String savePath) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        this.savePath \u003d savePath;","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     * Updates the savefile to the most current tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    public void updateFile(TaskList taskList, UI ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        if (isUpdatable) {","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"                FileWriter writer \u003d new FileWriter(savePath, false);","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"                for (Task t : taskList) {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"                    writer.write(t.getSaveString() + \"\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"                writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"                ui.sendError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * Loads a TaskList from the given savefile.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * @return a TaskList constructed from the savefile","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException when file is corrupted","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"            File save \u003d new File(this.savePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"            Scanner scanner \u003d new Scanner(save);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"                if (line.length() !\u003d 0) {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"                    String[] s \u003d line.split(\" \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"                    Command c \u003d Parser.parseCommand(s[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"                    c.execute(taskList, null, this);","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"                    if (Integer.parseInt(s[0]) \u003d\u003d 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"                        taskList.get(taskList.size() - 1).markAsDone();","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"            scanner.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"            return taskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"                System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"                File save \u003d new File(this.savePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"                save.createNewFile();","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"                return new TaskList();","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"            } catch (IOException innerE) {","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"                throw new Error(\"Cannot create save file\");","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":80}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" * Represents an exit command by the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"bye\";","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" * Represents a user command.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"public interface Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     * Execute the given command.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if there is error running the command","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    void execute(TaskList taskList, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":23}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":" * Command to create a Deadline Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"public class DeadlineCommand extends NonemptyArgumentCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"deadline\";","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"     * Constructor for a DeadlineCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments for the DeadlineCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     * They must,","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"     * 1. Be in the format [description] /by YYYY-MM-DD","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"     * @param arguments argument to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException is argument is not valid","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        super.validate(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        String[] userArgs \u003d arguments.split(\"/by \");","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        if (userArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Missing Argument for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"                    + \", should include /by YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"        if (Objects.equals(userArgs[1], \"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Missing Argument for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"                    + \", should include /by YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"            LocalDate date \u003d LocalDate.parse(userArgs[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Invalid Date Format for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"                    + \", should be /by YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if deadline task cannot be created","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"        validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"        String[] userArgs \u003d arguments.split(\"/by \");","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"        LocalDate date \u003d LocalDate.parse(userArgs[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"        taskList.add(new Deadline(userArgs[0], date));","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"                    + taskList.get(taskList.size() - 1)","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size()));","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":88}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" * Command to delete a Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"public class DeleteCommand extends NumberedChoiceCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"mark\";","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * Constructor for the DeleteCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments for DeleteCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     * Deletes a specified task.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException when unable to delete","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        validate(taskList);","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"                    + taskList.get(choice)","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size() - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        taskList.remove(choice);","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     * They must be","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * 1. Numeric","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     * 2. A valid choice given current tasks","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    private void validate(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        super.validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"        if (choice \u003c 0 || choice \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Argument Provided out of range: \" + (choice + 1));","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":66}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":" * Command to create an Event Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"public class EventCommand extends NonemptyArgumentCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"event\";","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"     * Constructor for an EventCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments for EventCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments for this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     * They must,","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"     * 1. Be in the format [description] /from YYYY-MM-DD /to YYYY-MM-DD","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        super.validate(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        String[] userArgs \u003d arguments.split(\"/from \");","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        if (userArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Missing Argument for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"                    + \", should include /from YYYY-MM-DD /to YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"        String desc \u003d userArgs[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"        String[] subcommandArgs \u003d userArgs[1].split(\"/to \");","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"        if (subcommandArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Missing Argument for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"                    + \", should include /from YYYY-MM-DD /to YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        if (Objects.equals(subcommandArgs[0], \"\") || Objects.equals(subcommandArgs[1], \"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Missing Argument for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"                    + \", should include /from YYYY-MM-DD /to YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"            LocalDate date \u003d LocalDate.parse(subcommandArgs[0].trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            date \u003d LocalDate.parse(subcommandArgs[1].trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Invalid Date Format for command: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"                    + commandString","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"                    + \"should be /from YYYY-MM-DD /to YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"     * Create an Event Task.","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if unable to create event","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"        validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"        String[] userArgs \u003d arguments.split(\"/from |/to \");","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"        LocalDate from \u003d LocalDate.parse(userArgs[1].trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"        LocalDate to \u003d LocalDate.parse(userArgs[2].trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"B-enguin"},"content":"        taskList.add(new Event(userArgs[0].trim(), from, to));","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"B-enguin"},"content":"                    + taskList.get(taskList.size() - 1)","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"B-enguin"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size()));","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":96}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" * Command to find a Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"public class FindCommand extends NonemptyArgumentCommand implements Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"find\";","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    private final String argument;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    public FindCommand(String argument) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"        super.validate(arguments);","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            if (taskList.get(i).getDescription().contains(argument)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"                output.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"        if (output.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"No Items in List\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Here are the matching tasks in your list:\\n\" + output);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"B-enguin":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":" * Command to list Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"list\";","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    private final String argument;","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"     * @param argument arguments for ListCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    public ListCommand(String argument) {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     * They must have one of the following formats,","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist now\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist YYYY-MM-DD\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"    private void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        if (arguments !\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"            // Non null argument, check format","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            if (arguments.equals(\"now\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"                return;","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"            // User Specified Date, check date","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"                LocalDate date \u003d LocalDate.parse(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"                throw new DukeException(","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"                        \"Invalid Date Format Provided, expected either:\\n\\tlist\\n\\tlist now\\n\\tlist YYYY-MM-DD\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"     * List tasks depending on arguments.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist: list all tasks\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist now: list all tasks ending within 1 week from now\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"     *     \u003cli\u003elist YYYY-MM-DD: list all task ending before specified date\u003c/li\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if unable to list tasks","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"        validate(this.argument);","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"        LocalDate date;","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"        if (this.argument !\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"            if (this.argument.equals(\"now\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"                date \u003d LocalDate.now().plusWeeks(1L);","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"            } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"                date \u003d LocalDate.parse(this.argument);","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"        } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"            date \u003d LocalDate.MAX;","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"B-enguin"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"B-enguin"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"B-enguin"},"content":"            if (taskList.get(i).isBefore(date)) {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"B-enguin"},"content":"                output.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"B-enguin"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"B-enguin"},"content":"        if (output.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"No Items in List\");","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"B-enguin"},"content":"        } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(output.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":100}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" * Command to mark a Task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"public class MarkCommand extends NumberedChoiceCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"mark\";","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     * Constructor for MarkCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments for MarkCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"     * Mark a Task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if unable to mark task as done","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        validate(taskList);","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        taskList.get(choice).markAsDone();","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.get(choice));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * They must be,","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     * 1. Numeric","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * 2. Valid Choice for the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"     * @param taskList The current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"    private void validate(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        super.validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"        if (choice \u003c 0 || choice \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Argument Provided out of range: \" + (choice + 1));","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":65}},{"path":"src/main/java/duke/command/NonemptyArgumentCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":" * Represents an argument with one or more non-empty arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":" * In the structure [command] [args]","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"public abstract class NonemptyArgumentCommand {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"        if (arguments \u003d\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(String.format(\"Missing Argument for NonemptyArgumentCommand: %s\", this));","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":23}},{"path":"src/main/java/duke/command/NumberedChoiceCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":" * Represents a command with a non-empty numerical argument.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":" * Should be of the structure [command] [number], where number is a task id.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"public abstract class NumberedChoiceCommand extends NonemptyArgumentCommand {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"        super.validate(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"            int i \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Invalid Argument Provided, expected numeric argument: \" + arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":27}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":" * Raw text handler for duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"public class Parser {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"     * Parse the raw input from user","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"     * @param rawCommand the raw input given by the user","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     * @return the command if it exists","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if no matching command is found","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    public static Command parseCommand(String rawCommand) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"        // Clean Raw Input","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"        rawCommand \u003d rawCommand.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        // Read Command","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"        String[] userInput \u003d rawCommand.split(\" \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        String command \u003d userInput[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"        String arguments \u003d userInput.length \u003d\u003d 2 ? userInput[1] : null;","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"        switch (command) {","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"        case \"list\":","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            return new MarkCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            return new UnmarkCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"            return new TodoCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"            return new DeadlineCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        case \"event\":","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"            return new EventCommand(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        default:","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Invalid Command: \" + command + \" , Please Try Again...\");","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":46}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" * Command to create a Todo Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"public class TodoCommand extends NonemptyArgumentCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"todo\";","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     * Constructor for TodoCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments for TodoCommand","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * Validate arguments to this command.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * They must not be empty","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to validate","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    protected void validate(String arguments) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        super.validate(arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"     * Create a Todo Task","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if unable to create Todo task","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"        validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"        taskList.add(new Todo(this.arguments));","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"                    + taskList.get(taskList.size() - 1)","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size()));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":63}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":" * Command to set a Task to not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"public class UnmarkCommand extends NumberedChoiceCommand implements Command {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    private static final String commandString \u003d \"unmark\";","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    private final String arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * Constructor for Unmark command","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     * @param arguments arguments to Unmark command","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     * Mark a task as not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * @param ui       the UI tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * @param storage  the Storage tied to the program","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if unable to mark a task as not done","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        validate(taskList);","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        taskList.get(choice).markAsNotDone();","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"            ui.sendMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.get(choice));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        storage.updateFile(taskList, ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"     * Validate the arguments to this command","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"     * They must be,","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * 1. Numeric","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     * 2. Valid choice for the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"     * @throws DukeException if arguments are invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    private void validate(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        super.validate(this.arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        int choice \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        if (choice \u003c 0 || choice \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"            throw new DukeException(\"Argument Provided out of range: \" + (choice + 1));","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"        return commandString;","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     * Constructor to Deadline Task.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     * @param description description of task","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     * @param by          date task is due","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     * Returns if task is before given date.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     * @param date given date to check against","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * @return true if task is before given date, false otherwise","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    public boolean isBefore(LocalDate date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        return this.by.isBefore(date);","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"     * Get string representation of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"     * @return string representation of task","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * Get a string representing this event to save to file.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * @return string representing this event to save to file","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        return String.format(\"%d deadline %s /by %s\", isDone ? 1 : 0, description.trim(), by);","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"B-enguin":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" * Represents an Event Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     * Constructor to Event Task.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"     * @param description description of task","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"     * @param from        task start date","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"     * @param to          task end date","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     * Returns if task is before given date.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     * @param date given date to check against","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"     * @return true if task is before given date, false otherwise","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"    public boolean isBefore(LocalDate date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        return this.to.isBefore(date);","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"     * Get string representation of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"     * @return string representation of task","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"                super.toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"     * Get a string representing this event to save to file.","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"     * @return string representing this event to save to file","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"        return String.format(\"%d event %s /from %s /to %s\", isDone ? 1 : 0, description.trim(), from, to);","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"B-enguin":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":" * Represents a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"     * @param description description of task","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"     * String representing status of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"     * @return string representing status of task","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"     * Change task to done","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"     * Change task to not done","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * Get a string representing this event to save to file.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * @return string representing this event to save to file","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        return \"\";","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"     * Returns a description of the event","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"     * @return a string representing the description of the event","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"        return description;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"     * Returns if task is before given date.","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"     * @param date given date to check against","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"     * @return true","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"    public boolean isBefore(LocalDate date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"        return true;","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"     * Get string representation of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"     * @return string representation of task","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"B-enguin":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":" * Represents a task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":9}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":" * Represents a Todo Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"        return String.format(\"%d todo %s\", isDone ? 1 : 0, description.trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"B-enguin":22}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":" * DialogBox Controller.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/duke/ui/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    private void flip() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"     * Returns a User DialogBox.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"     * @param text user text","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"     * @param img user image","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"     * @return a DialogBox formatted for the user text","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"     * Returns a Duke DialogBox.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"     * @param text duke message","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"     * @param img duke image","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"     * @return a DialogBox formatted for the duke text","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"        db.setStyle(\"-fx-background-color: #E0E0E0\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"        db.flip();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"        return db;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"     * Overloaded function to return Duke DialogBox with Colored Text.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"     * @param text duke message","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"     * @param img duke image","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"     * @param color text color","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"     * @return a DialogBox formatted for the duke text with colored text","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"B-enguin"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String color) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"B-enguin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"B-enguin"},"content":"        db.setStyle(\"-fx-background-color: #E0E0E0\");","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"B-enguin"},"content":"        db.dialog.setTextFill(Color.valueOf(color));","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"B-enguin"},"content":"        db.flip();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"B-enguin"},"content":"        return db;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":90}},{"path":"src/main/java/duke/ui/GuiBridge.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"public class GuiBridge extends Application {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(GuiBridge.class.getResource(\"view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            UI ui \u003d new UI(fxmlLoader.\u003cMainWindow\u003egetController());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            duke.setUi(ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            stage.show();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":35}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/user.png\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"images/bot.png\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        addDialog(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"        duke.getResponse(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    @FXML","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    protected void addDialog(DialogBox ... dialogBox) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"                dialogBox","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    public Image getDukeImage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"        return dukeImage;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":61}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.ui;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":" * UI Handler for duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"public class UI {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    private enum Colors {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"        ERROR(\"#FF0000\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"        NORMAL(\"#00B0B0\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"        private final String code;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"        Colors(String c) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"            code \u003d c;","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"        @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"            return code;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"     * Constructor for UI Class.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"     * @param mainWindow MainWindow instance to output to","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"    public UI(MainWindow mainWindow) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"        sendMessage(\"Hello! I\u0027m Heimdallr\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"     * Print a message to GUI.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"     * @param msg The message to print","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    public void sendMessage(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        mainWindow.addDialog(DialogBox.getDukeDialog(msg, mainWindow.getDukeImage(), Colors.NORMAL.code));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"     * Print a message to GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"     * @param msg The message to print","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"    public void sendMessage(String ... msg) {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"        for (String m: msg) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"            stringBuilder.append(m + \"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        mainWindow.addDialog(","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"                DialogBox.getDukeDialog(stringBuilder.toString(), mainWindow.getDukeImage(), Colors.NORMAL.code));","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"     * Print an error to GUI.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"     * @param msg The error message to print","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"    public void sendError(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"        mainWindow.addDialog(DialogBox.getDukeDialog(msg, mainWindow.getDukeImage(), Colors.ERROR.code));","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":67}},{"path":"src/main/resources/duke/ui/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":16}},{"path":"src/main/resources/duke/ui/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"B-enguin":19}},{"path":"src/test/java/duke/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public void deadlineCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new DeadlineCommand(\"task /by 2023-08-26\");","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            assertEquals(\"[D][ ] task  (by: Aug 26 2023)\", taskList.get(0).toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"0 deadline task /by 2023-08-26\");","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    public void withoutArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    public void missingArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"task\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    public void missingTimeArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"task /by\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    public void invalidTimeArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"task /by s\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"    public void invalidTimeFormat_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"task /by 26-08-2023\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"    public void invalidSubcommand_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"            new DeadlineCommand(\"task /to 26-08-2023\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":78}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"    public void deleteCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"0 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new DeleteCommand(\"1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"            assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"0 todo task1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"    public void withoutArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"            new DeleteCommand(\"\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"    public void nonNumeric_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"            new DeleteCommand(\"notNumber\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"    public void invalidNumericNumber_throwsDukeException(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"0 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"                new DeleteCommand(\"3\").execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"            });","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":70}},{"path":"src/test/java/duke/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public void eventCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new EventCommand(\"task /from 2023-08-26 /to 2023-08-27\");","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            assertEquals(\"[E][ ] task (from: Aug 26 2023 to: Aug 27 2023)\", taskList.get(0).toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"0 event task /from 2023-08-26 /to 2023-08-27\");","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    public void withoutArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    public void missingArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"task\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    public void missingTimeArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"task /by\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"    public void invalidTimeArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"task /by s\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"    public void invalidTimeFormat_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"task /by 26-08-2023\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"    public void invalidSubcommand_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"            new EventCommand(\"task /from 2023-08-26 /from 2023-08-26\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":78}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public void markCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"0 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new MarkCommand(\"1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            assertEquals(\"X\", taskList.get(0).getStatusIcon());","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"1 todo task\", \"0 todo task1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    public void withoutArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            new MarkCommand(\"\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"    public void nonNumeric_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"            new MarkCommand(\"notNumber\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"    public void invalidNumericNumber_throwsDukeException(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"0 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"                new MarkCommand(\"3\").execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"            });","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":69}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"    public void invalidCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"            Parser.parseCommand(\"thisIsInvalid\");","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"    public void byeReturnsByeCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"bye\") instanceof ByeCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"    public void listReturnsListCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"    public void markReturnsMarkCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"    public void unmarkReturnUnmarkCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"unmark 1\") instanceof UnmarkCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"    public void deleteReturnDeleteCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"    public void todoReturnTodoCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"todo\") instanceof TodoCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"B-enguin"},"content":"    public void deadlineReturnDeadlineCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"deadline\") instanceof DeadlineCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"B-enguin"},"content":"    public void eventReturEventCommand() {","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"B-enguin"},"content":"            assertTrue(Parser.parseCommand(\"event\") instanceof EventCommand);","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":91}},{"path":"src/test/java/duke/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public void todoCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new TodoCommand(\"task\");","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            assertEquals(\"[T][ ] task\", taskList.get(0).toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"0 todo task\");","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    public void missingArgument_throwsException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"            new TodoCommand(null).execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":43}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"package duke.command;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"import java.util.List;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"B-enguin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"B-enguin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"B-enguin"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"B-enguin"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"B-enguin"},"content":"    public void unmarkCorrect(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"1 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"B-enguin"},"content":"            Command c \u003d new UnmarkCommand(\"1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"B-enguin"},"content":"            c.execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"B-enguin"},"content":"            assertEquals(\" \", taskList.get(0).getStatusIcon());","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"B-enguin"},"content":"            List\u003cString\u003e lines \u003d List.of(\"0 todo task\", \"0 todo task1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"B-enguin"},"content":"            assertLinesMatch(lines, Files.readAllLines(savePath.resolve(\"duke.txt\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"B-enguin"},"content":"    public void withoutArgument_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"B-enguin"},"content":"            new UnmarkCommand(\"\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"B-enguin"},"content":"    public void nonNumeric_throwsDukeException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"B-enguin"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"B-enguin"},"content":"            new UnmarkCommand(\"notNumber\").execute(null, null, null);","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"B-enguin"},"content":"        });","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"B-enguin"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"B-enguin"},"content":"    @Test","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"B-enguin"},"content":"    public void invalidNumericNumber_throwsDukeException(@TempDir Path savePath) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"B-enguin"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"B-enguin"},"content":"            Storage storage \u003d new Storage(savePath.resolve(\"duke.txt\").toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"B-enguin"},"content":"            FileWriter writer \u003d new FileWriter(savePath.resolve(\"duke.txt\").toString(), false);","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"B-enguin"},"content":"            writer.write(\"0 todo task\\n0 todo task1\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"B-enguin"},"content":"            writer.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"B-enguin"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"B-enguin"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"B-enguin"},"content":"                new UnmarkCommand(\"3\").execute(taskList, null, storage);","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"B-enguin"},"content":"            });","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"B-enguin"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"B-enguin"},"content":"            // Do Nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"B-enguin"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"B-enguin"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"B-enguin"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"B-enguin":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"B-enguin"},"content":"randomCommand","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"B-enguin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"B-enguin"},"content":"todo buy bread","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"B-enguin"},"content":"event eat bread /from now /to later","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"B-enguin"},"content":"deadline make bread /by later","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"B-enguin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"B-enguin"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"B-enguin"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"B-enguin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"B-enguin"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"B-enguin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"B-enguin"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"B-enguin"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"B-enguin":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"B-enguin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"B-enguin":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"B-enguin"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"B-enguin":1,"-":37}}]
