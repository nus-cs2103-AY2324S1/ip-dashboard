[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"T,1,a","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"D,1,a  ,2022-10-10","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"T,1,a","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"D,1,a ,2022-10-10","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":" * Class for duke","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"        this.ui.printChat(\" Hello! I\u0027m Chrainx\\n\" + \" What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"            this.storage.createStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            this.tasks \u003d this.storage.getStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            this.ui.error(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        while (this.sc.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"                String input \u003d this.sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"                Parser.parse(input, ui, storage, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"                if (input.toUpperCase().equals(\"BYE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"                    this.sc.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"                this.ui.error(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"//    private static boolean isInteger(String str) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"//            Integer.parseInt(str);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"//            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"//        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"//            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"//        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"//            Duke.Storage.Storage storedList \u003d new Duke.Storage.Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"//            ArrayList\u003cDuke.Duke.Task.Task\u003e taskList \u003d storedList.getStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"//            System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"//                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"//                        \" Hello! I\u0027m Chrainx\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"//                        \" What can I do for you?\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"//                        \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"//            );","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"//            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"//            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"//                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"//                    String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"//                    if (","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"//                            input.split(\" \").length \u003d\u003d 2","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 input.split(\" \")[0].equals(\"mark\")","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 isInteger(input.split(\" \")[1])","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003c\u003d taskList.size()","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003e\u003d 1","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"//                    ) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"//                        taskList.get(Integer.parseInt(input.split(\" \")[1]) - 1).changeMarkStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"//                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"//                                        \"You have marked this task as done\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"//                                        taskList.get(Integer.parseInt(input.split(\" \")[1]) - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"//                                        \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"//                        );","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"//                    } else if (","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"//                            input.split(\" \").length \u003d\u003d 2","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 input.split(\" \")[0].equals(\"unmark\")","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 isInteger((input.split(\" \"))[1])","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003c\u003d taskList.size()","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Chrainx"},"content":"//                                    \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003e\u003d 1","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Chrainx"},"content":"//                    ) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Chrainx"},"content":"//                        taskList.get(Integer.parseInt(input.split(\" \")[1]) - 1).changeMarkStatus(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Chrainx"},"content":"//                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Chrainx"},"content":"//                                        \"You have marked this task as not done\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Chrainx"},"content":"//                                        taskList.get(Integer.parseInt(input.split(\" \")[1]) - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Chrainx"},"content":"//                                        \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Chrainx"},"content":"//                        );","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Chrainx"},"content":"//                    } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Chrainx"},"content":"//                        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Chrainx"},"content":"//                            System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Chrainx"},"content":"//                                    (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Chrainx"},"content":"//                            );","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Chrainx"},"content":"//                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Chrainx"},"content":"//                    } else if (input.split(\" \").length \u003d\u003d 2","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Chrainx"},"content":"//                            \u0026\u0026 input.split(\" \")[0].equals(\"delete\")","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Chrainx"},"content":"//                            \u0026\u0026 isInteger((input.split(\" \"))[1])","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Chrainx"},"content":"//                            \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003c\u003d taskList.size()","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Chrainx"},"content":"//                            \u0026\u0026 Integer.parseInt(input.split(\" \")[1]) \u003e\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Chrainx"},"content":"//                                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Chrainx"},"content":"//                                        \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Chrainx"},"content":"//                                        taskList.get(Integer.parseInt(input.split(\" \")[1]) - 1)","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Chrainx"},"content":"//                        );","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Chrainx"},"content":"//                        taskList.remove(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Chrainx"},"content":"//                                \"Now you have \" + taskList.size() + \"  task in the list\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Chrainx"},"content":"//                                        \"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Chrainx"},"content":"//                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Chrainx"},"content":"//                        if (Duke.Task.ToDos.isTodo(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Chrainx"},"content":"//                            taskList.add(new Duke.Task.ToDos(input.substring(5)));","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Chrainx"},"content":"//                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Chrainx"},"content":"//                        } else if (Duke.Task.Deadlines.isDeadline(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Chrainx"},"content":"//                            taskList.add(","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Chrainx"},"content":"//                                    new Duke.Task.Deadlines(","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Chrainx"},"content":"//                                            input.substring(9, input.indexOf(\"/by \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Chrainx"},"content":"//                                            input.substring(input.indexOf(\"/by \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Chrainx"},"content":"//                                    )","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Chrainx"},"content":"//                            );","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Chrainx"},"content":"//                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Chrainx"},"content":"//                        } else if (Duke.Task.Events.isEvent(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Chrainx"},"content":"//                            taskList.add(new Duke.Task.Events(","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Chrainx"},"content":"//                                            input.substring(6, input.indexOf(\"/from \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Chrainx"},"content":"//                                            input.substring(input.indexOf(\"/from \") + 6, input.indexOf(\"/to \") - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Chrainx"},"content":"//                                            input.substring(input.indexOf(\"/to \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Chrainx"},"content":"//                                    )","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Chrainx"},"content":"//                            );","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Chrainx"},"content":"//                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Chrainx"},"content":"//                        } else if (input.equals(\"bye\")){","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Chrainx"},"content":"//                            storedList.editStorage(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Chrainx"},"content":"//                            System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Chrainx"},"content":"//                                    \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"Chrainx"},"content":"//                                            \"Wish You a wonderful day\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Chrainx"},"content":"//                                            \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Chrainx"},"content":"//                            );","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Chrainx"},"content":"//                            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"Chrainx"},"content":"//                            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Chrainx"},"content":"//                        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"Chrainx"},"content":"//                            Duke.Duke.Task.Task.isTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"Chrainx"},"content":"//                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"Chrainx"},"content":"//                        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"Chrainx"},"content":"//                                taskList.get(taskList.size() - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"Chrainx"},"content":"//                                        \"Now you have \" + (taskList.size()) + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"Chrainx"},"content":"//                                        \"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"Chrainx"},"content":"//                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"Chrainx"},"content":"//                } catch (Duke.DukeException.DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"Chrainx"},"content":"//                    System.out.println(e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"Chrainx"},"content":"//                }","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"Chrainx"},"content":"//","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"Chrainx"},"content":"//            }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"Chrainx"},"content":"//        } catch (Duke.DukeException.DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"Chrainx"},"content":"//            System.out.println(e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"Chrainx"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"Chrainx"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Chrainx":164,"-":4}},{"path":"src/main/java/Duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"    public DukeException(String ErrMsg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"        super(ErrMsg);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Chrainx":11}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Events;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.ToDos;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    private static boolean isInteger(String str) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public static void parse(String input, Ui ui, Storage storage, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        String command \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"        Task targetTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        if (command.equals(\"BYE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            ui.bye();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            storage.editStorage(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"LIST\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"            ui.listing(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"TODO\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"            if (ToDos.isTodo(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"                targetTask \u003d new ToDos(input.substring(5));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"                ui.addTask(targetTask, tasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"                tasks.addTask(targetTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"This todo is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"            if (Deadlines.isDeadline(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"                targetTask \u003d new Deadlines(","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"                        input.substring(9, input.indexOf(\"/by \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"                        input.substring(input.indexOf(\"/by \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                );","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"                ui.addTask(targetTask, tasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"                tasks.addTask(targetTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"            } else  {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"                throw  new DukeException(\"This deadline is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"EVENT\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"            if (Events.isEvent(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"                targetTask \u003d new Events(","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"                        input.substring(6, input.indexOf(\"/from \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"                        input.substring(input.indexOf(\"/from \") + 6, input.indexOf(\"/to \") - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"                        input.substring(input.indexOf(\"/to \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"                );","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"                ui.addTask(targetTask, tasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"                tasks.addTask((targetTask));","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"This event is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"MARK\")){","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"                if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"                    tasks.getTask(index).changeMarkStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"                    ui.markAsDone(tasks.getTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"UNMARK\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"                if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"                    tasks.getTask(index).changeMarkStatus(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"                    ui.markAsNotDone(tasks.getTask(index));","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"        } else if (command.equals(\"DELETE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"                if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"                    ui.deleteTask(tasks.getTask(index), tasks.getNumberOfTask() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"                    tasks.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\"OOPS! I don\u0027t understand this command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":96}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Events;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.ToDos;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    private final String FILE_PATH \u003d DIRECTORY + \"/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    private File FILE;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    public void createStorage() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"            File directory \u003d new File(this.DIRECTORY);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            this.FILE \u003d new File(this.FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            if (!this.FILE.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"                this.FILE.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\"OOPS!!! Failed to create a file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    public TaskList getStorage() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"            Scanner sc \u003d new Scanner(this.FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"                String taskType \u003d input.split(\",\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"                String taskMark \u003d input.split(\",\")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"                String taskName \u003d input.split(\",\")[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new ToDos(taskName));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new Deadlines(taskName, input.split(\",\")[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new Events(taskName, input.split(\",\")[3],input.split(\",\")[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\" OOPS!!! Failed to load tasks from file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"                if (taskMark \u003d\u003d \"0\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"                    tasks.getTask(tasks.getNumberOfTask() - 1).changeMarkStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"            System.out.println(tasks.getNumberOfTask());","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"            return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Failed to load tasks from file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"    public void editStorage (TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"            for (int i \u003d 0; i \u003c tasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"                fw.write(task.writeString());","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Failed to write to file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Chrainx":76}},{"path":"src/main/java/Duke/Task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":" * class for deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"     * The deadline of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private LocalDate ddl;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     * The constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"     * @param name the name of the deadline task","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"     * @param ddl the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public Deadlines (String name, String ddl) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            this.ddl \u003d LocalDate.parse(ddl);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Invalid date format. Please type dates in the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"            return \"D,0\" + this.getName() + \",\" + this.ddl + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"            return \"D,1,\" + this.getName() + \",\" + this.ddl + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"     * Convert to string","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"     * @return a string","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"        return \"[D]\" + super.toString() + \"(by: \"+ this.ddl.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +\")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"     * To check whether the input is a Duke.Task.Deadlines","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"     * @param input the task","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    public static boolean isDeadline(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of deadline cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/by \")){","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of deadline does not contain /by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":69}},{"path":"src/main/java/Duke/Task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":" * class for events","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"     * For the start","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     * For the end","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"     * The constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     * @param name the name of the event task","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"     * @param start The starting time","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"     * @param end The ending time","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    public Events (String name, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Invalid date format. Please type dates in the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"            return \"E,0,\" + this.getName() + \",\" + this.start + \",\" + this.end + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"            return \"E,1,\" + this.getName() + \",\" + this.start + \",\" + this.end + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"     * To convert the task to string","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"     * @return a string","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"        return \"[E]\"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"                + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"                + \"(from: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"                + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"                + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"     * To check whether the input is a Duke.Task.Deadlines","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"     * @param input the task","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"    public static boolean isEvent(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/from\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event does not contain /from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/to\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event does not contain /to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":83}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":" * Class For Duke.Duke.Task.Task","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"     * To show whether it is marked/not","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     * The name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"     * Constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"     * @param name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"     * Change the status to a new status","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"     * @param newStatus that we want to change","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    public void changeMarkStatus(boolean newStatus) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"        this.isDone \u003d newStatus;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"     * to print it as a string","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"     * @return a string representing the task","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"    public Boolean getMarkStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    public abstract String writeString();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"     * To check whether the input is a task","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"     * @param input the task","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"    public static boolean isTask(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"todo\") || input.split( \" \")[0].equals(\"deadline\") || input.split( \" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":70}},{"path":"src/main/java/Duke/Task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"     * The constructor","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"     * @param name the name of the Duke.Task.ToDos","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    public ToDos (String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     * To convert the Duke.Task.ToDos to the string","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"     * @return a string","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            return \"T,0,\" + this.getName() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"            return \"T,1,\" + this.getName() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"     * To check whether the input is a Todo","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"     * @param input the task","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    public static boolean isTodo(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of todo cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":50}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":34}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package Duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"    private final String Border \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"    public void printChat(String chat) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"        System.out.println(Border + \"\\n\" + chat + \"\\n\" + Border);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    public void Hello() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"        printChat(\"Hello! I\u0027m Chrainx\\n\" + \" What can I do for you?\" );","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    public void addTask(Task task, int numberOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        printChat(\"Got it, I have added this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"                + \"Now you have \" + numberOfTask","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"                + \" tasks in the list\"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    public void deleteTask(Task task, int numberOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        printChat(\"Noted, I have removed this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"                + \"Now you have \" + numberOfTask","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"                + \" tasks in the list\"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    public void markAsDone(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"        printChat(\"You have marked this task as done\\n\" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"    public void markAsNotDone(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"        printChat(\"You have marked this task as not done\\n\" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"    public void bye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"        printChat(\"Bye. Hope to see you again soon!\\n\" + \"Wish You a wonderful day\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"    public void error(DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        printChat(e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    public void listing(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"        String listOfTask \u003d \"Here are the list of your task:\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"            listOfTask \u003d listOfTask + tasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"        printChat(listOfTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"a","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"b","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"deadline /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"event festival /from today /to tommorow","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"mark my answer","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"deadline a /by x","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"event /to y","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":22}}]
