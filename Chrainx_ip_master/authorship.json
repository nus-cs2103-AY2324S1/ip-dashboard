[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"# duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chrainx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"javafx {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chrainx":22,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"T,1,1","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":1}},{"path":"src/main/java/duke/Controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Controller;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":61}},{"path":"src/main/java/duke/Controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Controller;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    private TextField Intro;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpeg\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    private boolean isIntroDone \u003d false;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"        handleUserInput();","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"        isIntroDone \u003d true;","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"        if (!isIntroDone){","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"                    DialogBox.getDukeDialog(duke.intro(), dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"            );","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"            return;","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                    DialogBox.getUserDialog(ui.printChat(input), userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"            );","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"            if (input.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":" * Chatbot that can list tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     * Variable to store the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     * Variable to get the reply.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"     * Variable to get the input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"     * Variable to access the file where alll of the task is stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"     * Constructs the instance of the duke.Duke.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"    public Duke() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"            this.storage.createStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"            this.tasks \u003d this.storage.getStorage();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"            this.ui.error(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"     * Get the response for the chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"     * @param input Command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"     * @return the response","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"            return Parser.parse(input, ui, storage, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"            this.ui.error(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"        return \"Cannot reach here\";","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"    public String intro() {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"        return this.ui.hello();","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Chrainx":60,"-":3}},{"path":"src/main/java/duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":" * Handle reply for unknown input given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"     * Create a exception with specified reply message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"     * @param ErrMsg Reply message that will be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    public DukeException(String ErrMsg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        super(ErrMsg);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     * Return the reply message as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"     * @return String that represent the reply message.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Chrainx":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.Main;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Controller.MainWindow;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":33}},{"path":"src/main/java/duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Events;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import duke.Task.ToDos;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":" * Split input into command that the chatbot can understand.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     * Check whether the string give is an integer.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     * @param str String that will be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean that represent whether the string is a integer.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    private static boolean isInteger(String str) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"     * Get the command and translate it to the work that will be done by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"     * @param input String entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"     * @param ui The Ui that allow the chatbot to print the message.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"     * @param storage Storage where the tasks will be stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"     * @param tasks Temporary place where the tasks is stored before written in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception to handle unknown command.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    public static String parse(String input, Ui ui, Storage storage, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        String command \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"        Task targetTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"            if (command.equals(\"BYE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                return ui.bye(storage, tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"LIST\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"                return ui.listing(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"TODO\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"                if (ToDos.isTodo(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"                    targetTask \u003d new ToDos(input.substring(5));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(targetTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"                    return ui.addTask(targetTask, tasks.getNumberOfTask());","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\"This todo is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"                if (Deadlines.isDeadline(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"                    targetTask \u003d new Deadlines(","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"                            input.substring(9, input.indexOf(\"/by \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"                            input.substring(input.indexOf(\"/by \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"                    );","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(targetTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"                    return ui.addTask(targetTask, tasks.getNumberOfTask());","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                } else  {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"                    throw  new DukeException(\"This deadline is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"EVENT\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"                if (Events.isEvent(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"                    targetTask \u003d new Events(","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"                            input.substring(6, input.indexOf(\"/from \")),","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"                            input.substring(input.indexOf(\"/from \") + 6, input.indexOf(\"/to \") - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"                            input.substring(input.indexOf(\"/to \") + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"                    );","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask((targetTask));","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"                    return ui.addTask(targetTask, tasks.getNumberOfTask());","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\"This event is invalid\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"MARK\")){","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"                if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"                    if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"                        tasks.getTask(index).changeMarkStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"                        return ui.markAsDone(tasks.getTask(index));","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"                        throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"UNMARK\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Chrainx"},"content":"                if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Chrainx"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Chrainx"},"content":"                    if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Chrainx"},"content":"                        tasks.getTask(index).changeMarkStatus(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Chrainx"},"content":"                        return ui.markAsNotDone(tasks.getTask(index));","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"Chrainx"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Chrainx"},"content":"                        throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Chrainx"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"DELETE\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Chrainx"},"content":"                if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 isInteger(input.split(\" \")[1])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Chrainx"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Chrainx"},"content":"                    if (index \u003c\u003d tasks.getNumberOfTask() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Chrainx"},"content":"                        targetTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"Chrainx"},"content":"                        tasks.deleteTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Chrainx"},"content":"                        return ui.deleteTask(targetTask, tasks.getNumberOfTask());","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"Chrainx"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Chrainx"},"content":"                        throw new DukeException(\"You don\u0027t have that many tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Chrainx"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Chrainx"},"content":"            } else if (command.equals(\"FIND\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Chrainx"},"content":"                return ui.find(tasks, input.substring(5));","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! I don\u0027t understand this command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Chrainx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"Chrainx"},"content":"            return ui.error(e);","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"Chrainx"},"content":"        return \"Not reach here\";","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":119}},{"path":"src/main/java/duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Events;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import duke.Task.ToDos;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":" * Store the tasks into a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    private final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    private final String FILE_PATH \u003d DIRECTORY + \"/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    private File FILE;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     * Create a new file to store the tasks if it does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception to handle failed file creation.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    public void createStorage() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"            File directory \u003d new File(this.DIRECTORY);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"            this.FILE \u003d new File(this.FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"            if (!this.FILE.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"                this.FILE.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\"OOPS!!! Failed to create a file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"     * Get the list of task stored in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"     * @return Tasklist that contain all tasks stored in the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception when the chatbot cannot find the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"    public TaskList getStorage() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"            Scanner sc \u003d new Scanner(this.FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"                String taskType \u003d input.split(\",\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"                String taskMark \u003d input.split(\",\")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"                String taskName \u003d input.split(\",\")[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new ToDos(taskName));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new Deadlines(taskName, input.split(\",\")[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"                    tasks.addTask(new Events(taskName, input.split(\",\")[3],input.split(\",\")[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                    throw new DukeException(\" OOPS!!! Failed to load tasks from file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"                if (taskMark \u003d\u003d \"0\") {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"                    tasks.getTask(tasks.getNumberOfTask() - 1).changeMarkStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"            System.out.println(tasks.getNumberOfTask());","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"            return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Failed to load tasks from file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"     * Edit the storage according the new TaskList edited by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"     * @param tasks TaskList of Tasks created by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception where the chatbot failed to edit the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"    public void editStorage (TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"            for (int i \u003d 0; i \u003c tasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"                fw.write(task.writeString());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Chrainx"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Chrainx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Failed to write to file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Chrainx":93}},{"path":"src/main/java/duke/Task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":" * Represent task belong to deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"     * Deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private LocalDate ddl;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     * Create the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"     * @param name Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"     * @param ddl Deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public Deadlines (String name, String ddl) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            this.ddl \u003d LocalDate.parse(ddl);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Invalid date format. Please type dates in the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"     * Create the string to be saved in storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"     * @return String that will be saved in storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"            return \"D,0\" + this.getName() + \",\" + this.ddl + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"            return \"D,1,\" + this.getName() + \",\" + this.ddl + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"     * Convert the task to a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"     * @return String that represent the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"        return \"[D]\" + super.toString() + \"(by: \"+ this.ddl.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +\")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"     * Check whether the input is a valid deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"     * @param input Task that will be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean that represent whether the input is a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception where the deadline is not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"    public static boolean isDeadline(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of deadline cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/by \")){","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of deadline does not contain /by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":73}},{"path":"src/main/java/duke/Task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":" * Represent task belong to events.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"     * For the start.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     * For the end.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"     * Create the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     * @param name Description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"     * @param start Starting time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"     * @param end Ending time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    public Events (String name, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\" OOPS!!! Invalid date format. Please type dates in the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"     * Create the string to be saved in storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"     * @return String that will be saved in storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"            return \"E,0,\" + this.getName() + \",\" + this.start + \",\" + this.end + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"            return \"E,1,\" + this.getName() + \",\" + this.start + \",\" + this.end + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"     * Convert the task to a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"     * @return String that represent the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"        return \"[E]\"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"                + super.toString()","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"                + \"(from: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"                + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"                + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"     * Check whether the input is a valid event.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"     * @param input Task that will be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean that represent whether the input is a event.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception where the event is not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"    public static boolean isEvent(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/from\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event does not contain /from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"            } else if (!input.contains(\"/to\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of event does not contain /to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":87}},{"path":"src/main/java/duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":" * Represnt a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"     * Create a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"     * @param name Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"     * Change the status to a new status","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"     * @param newStatus New Status that the task will have.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    public void changeMarkStatus(boolean newStatus) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        this.isDone \u003d newStatus;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"     * Print task as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"     * @return String representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"    public Boolean getMarkStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    public abstract String writeString();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"     * Check whether the input is a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"     * @param input Task to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean that represent whether the input is a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception where the input is not a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    public static boolean isTask(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"todo\") || input.split( \" \")[0].equals(\"deadline\") || input.split( \" \")[0].equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":63}},{"path":"src/main/java/duke/Task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"     * Create the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"     * @param name Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"    public ToDos (String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     * Convert the task to string.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"     * @return String that represent the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    public String writeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        if (this.getMarkStatus()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"            return \"T,0,\" + this.getName() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"        } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"            return \"T,1,\" + this.getName() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"     * Check whether the input is a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"     * @param input Task to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"     * @return Boolean that represent whether the task is a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"     * @throws DukeException Exception where the todo is not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"    public static boolean isTodo(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        if(input.split( \" \")[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"                throw new DukeException(\"OOPS! The description of todo cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":50}},{"path":"src/main/java/duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":" * Combine all tasks into single list.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     * Create the list for the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"     * Add a new task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"     * Delete a task from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"     * Get task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"     * @return Task that correspond to the index.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"     * Get the number of task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"     * @return Size of the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":53}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":" * Collection of the Ui","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"    private final String Border \u003d \"______________________________________\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"     * Print a chat with specified message.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"     * @param chat Message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    public String printChat(String chat) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"        return Border + \"\\n\" + chat + \"\\n\" + Border;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"     * Print introduction.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"    public String hello() {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"Hello! I\u0027m Chrainx\\n\" + \"What can I do for you?\" );","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"     * Print new task added to TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"     * @param numberOfTask Number of task in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    public String addTask(Task task, int numberOfTask) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"Got it, I have added this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"                + \"Now you have \" + numberOfTask","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"                + \" tasks in the list\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"     * Print delete task from TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"     * @param numberOfTask Number of task in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"    public String deleteTask(Task task, int numberOfTask) {","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"Noted, I have removed this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"                + \"Now you have \" + numberOfTask","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"                + \" tasks in the list\"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Chrainx"},"content":"     * Print task that the status is changed.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Chrainx"},"content":"     * @param task Target task.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Chrainx"},"content":"    public String markAsDone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"You have marked this task as done\\n\" + task.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Chrainx"},"content":"     * Print task that the status is changed.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Chrainx"},"content":"     * @param task Target task.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Chrainx"},"content":"    public String markAsNotDone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"You have marked this task as not done\\n\" + task.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Chrainx"},"content":"     * Print bye message.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Chrainx"},"content":"    public String bye(Storage storage, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"Chrainx"},"content":"        storage.editStorage(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"Chrainx"},"content":"        return printChat(\"Bye. Hope to see you again soon!\\n\" + \"Wish You a wonderful day\");","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Chrainx"},"content":"     * Print message when there is unknown input.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Chrainx"},"content":"     * @param e Exception where there is unknown input.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Chrainx"},"content":"    public String error(DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"Chrainx"},"content":"        return printChat(e.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Chrainx"},"content":"     * Print all tasks as a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Chrainx"},"content":"     * @param tasks TaskList of the saved tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Chrainx"},"content":"    public String listing(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"Chrainx"},"content":"        String listOfTask \u003d \"Here are the list of your task:\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Chrainx"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Chrainx"},"content":"            listOfTask \u003d listOfTask + tasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Chrainx"},"content":"        return printChat(listOfTask);","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Chrainx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Chrainx"},"content":"     * Find the task with certain name.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Chrainx"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Chrainx"},"content":"     * @param input Name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Chrainx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Chrainx"},"content":"    public String find(TaskList tasks, String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"Chrainx"},"content":"        String match \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Chrainx"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Chrainx"},"content":"            if (tasks.getTask(i).getName().contains(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Chrainx"},"content":"                match \u003d match + tasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Chrainx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Chrainx"},"content":"        return printChat(match);","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":114}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"\u003cfx:root","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"        xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"        \u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"        \u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"        \u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"        \u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"        \u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"\u003cAnchorPane","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"        xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"        fx:controller\u003d\"duke.Controller.MainWindow\"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"                \u003cTextField","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"                        fx:id\u003d\"userInput\"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"                        layoutY\u003d\"558.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"                        onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"                        prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"                        prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"                        AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"                /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"                \u003cButton","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"                        fx:id\u003d\"sendButton\"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"                        layoutX\u003d\"324.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"                        layoutY\u003d\"558.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"                        mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"                        onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"                        prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Chrainx"},"content":"                        prefWidth\u003d\"76.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Chrainx"},"content":"                        text\u003d\"Send\"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Chrainx"},"content":"                /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Chrainx"},"content":"                \u003cScrollPane","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Chrainx"},"content":"                        fx:id\u003d\"scrollPane\"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Chrainx"},"content":"                        hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Chrainx"},"content":"                        hvalue\u003d\"1.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Chrainx"},"content":"                        prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Chrainx"},"content":"                        prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Chrainx"},"content":"                        vvalue\u003d\"1.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Chrainx"},"content":"                \u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"Chrainx"},"content":"                        \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Chrainx"},"content":"                                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Chrainx"},"content":"                        \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Chrainx"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Chrainx"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Chrainx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"Chrainx":53}},{"path":"src/test/java/parser/parserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import duke.Task.ToDos;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"public class parserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"        this.tasks.addTask(new ToDos(\"IDK\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Chrainx"},"content":"    public void getNumberOfTask_checkTaskCount() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Chrainx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Chrainx"},"content":"            this.tasks.addTask(new Deadlines(\"back\", \"2023-10-10\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Chrainx"},"content":"            assertEquals(tasks.getNumberOfTask(), 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Chrainx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Chrainx"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Chrainx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Chrainx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Chrainx"},"content":"    public void getTask_noDescriptionTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Chrainx"},"content":"        assertEquals(\"[T][ ] IDK\" ,this.tasks.getTask(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Chrainx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":36}},{"path":"src/test/java/taskList/taskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"package taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"public class taskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Chrainx":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chrainx"},"content":"a","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Chrainx"},"content":"b","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Chrainx"},"content":"deadline /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Chrainx"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Chrainx"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Chrainx"},"content":"event festival /from today /to tommorow","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Chrainx"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Chrainx"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Chrainx"},"content":"mark my answer","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Chrainx"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Chrainx"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Chrainx"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Chrainx"},"content":"deadline a /by x","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Chrainx"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"event /to y","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Chrainx"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Chrainx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Chrainx"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Chrainx":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Chrainx"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chrainx":1,"-":20}}]
