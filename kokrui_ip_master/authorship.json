[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    mainClass.set(\"koko.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"    archiveBaseName \u003d \"koko\"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"javafx {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kokrui":8,"-":40}},{"path":"src/main/java/koko/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":" * Represents the available commands in the Koko application.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"public enum Command {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"    LIST,","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    MARK,","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"    UNMARK,","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    DELETE,","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"    TODO,","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    EVENT,","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    FIND,","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    BYE","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":16}},{"path":"src/main/java/koko/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" * Represents a deadline task with a due date.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"     * Constructs a Deadline with the specified name and due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * @param by   The due date of the deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"     * Creates a Deadline object from file data.","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"     * The parts array is expected to contain:","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"     * - the type of task (should be \"D\")","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     * - whether the task is done (\"1\" for done, \"0\" for not done)","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"     * - the name of the task","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"     * - the due date in yyyy-mm-dd format","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     * @param parts An array of task data read from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"     * @return A Deadline object created from the file data.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the due date is in the wrong format.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    public static Deadline fromFileFormat(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        boolean isDone \u003d \"1\".equals(parts[1].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        String name \u003d parts[2].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"            byDate \u003d LocalDate.parse(parts[3].trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Deadline /by date should be in yyyy-mm-dd format (e.g. 2023-08-25)\");","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        Deadline deadline \u003d new Deadline(name, byDate);","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        return deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"     * Converts this Deadline object to a formatted string suitable for file storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"     * @return A string in file storage format.","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        return \"D|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.name + \"|\" + this.by + \"|\";","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"     * Returns the string representation of this Deadline object.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"     * The string includes the type of task, the done status, the task name, and the due date.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"     * @return A string representing the Deadline object.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        String formattedDate \u003d this.by.format(formatter);","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":75}},{"path":"src/main/java/koko/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import koko.DukeWindow;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        db.flip();","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        return db;","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"    private void flip() {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":62}},{"path":"src/main/java/koko/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":" * Represents the main driver class of the Koko chatbot application.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" * Initializes and manages the user interface, storage, parser, and task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private static final String CHATBOT_NAME \u003d \"Koko\";","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    private String startupFileLoadMessage \u003d \"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     * Constructs a Duke instance with the specified file path for task storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        ui \u003d new Ui(CHATBOT_NAME);","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"            taskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"            startupFileLoadMessage \u003d ui.showLoadedTasks(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"            startupFileLoadMessage \u003d ui.generateErrorMessage(","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"                    \"Previous data file not found, starting from fresh task list.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"            startupFileLoadMessage \u003d ui.generateErrorMessage(dukeException.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    public String generateStartupMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        assert ui !\u003d null : \"ui should be created before this method is called\";","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assert startupFileLoadMessage !\u003d null : \"startupFileLoadMessage should be populated\";","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        return ui.greet() + \"\\n\" + startupFileLoadMessage;","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     * Handles user input, parses it and dispatches the command to perform the appropriate actions.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"     * @return A string representing the output of the command.","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    public String handleInputAndDispatch(String input) {","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        String output;","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"            if (parser.hasInvalidCharacters(input)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Input cannot contain the character \u0027|\u0027\");","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"            Command commandType \u003d parser.parseCommandType(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"            String remaining \u003d parser.parseRemainingArgs(commandType, input);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"            switch (commandType) {","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"            case BYE:","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"                output \u003d handleByeCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"            case LIST:","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"                output \u003d handleListCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"            case MARK:","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"                output \u003d handleMarkCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"                output \u003d handleUnmarkCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"            case DELETE:","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"                output \u003d handleDeleteCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"            case TODO:","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"                output \u003d handleTodoCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"                output \u003d handleDeadlineCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"            case EVENT:","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"                output \u003d handleEventCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"            case FIND:","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"                output \u003d handleFindCommand(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"            default:","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Each message should start with one of the following commands: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"                        + \"list, mark, unmark, todo, deadline, event, find\");","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"            // All valid commands except for `list` will result in the task list changing, so we should trigger","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"            // a disk write to save the updated task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"            if (!commandType.equals(Command.LIST)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                    storage.saveTasksToFile(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"                } catch (IOException ioException) {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"                    throw new DukeException(\"Error while saving task list to file!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"            output \u003d ui.generateErrorMessage(\"Please enter a valid task number.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"            output \u003d ui.generateErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"        return output;","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"    private String handleByeCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"        return null;","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"    private String handleListCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskListOutput(taskList);","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"    private String handleMarkCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"        int markIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        Task markedTask \u003d taskList.markTaskAtIndex(markIndex);","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskMarkedMessage(markedTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"    private String handleUnmarkCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"        int unmarkIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"        Task unmarkedTask \u003d taskList.unmarkTaskAtIndex(unmarkIndex);","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskUnmarkedMessage(unmarkedTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"    private String handleDeleteCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"        int deleteIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"        Task deletedTask \u003d taskList.deleteTaskAtIndex(deleteIndex);","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskDeletedMessage(deletedTask, taskList.size());","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"    private String handleTodoCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"        Parser.ParsedTodoArgs parsedTodoArgs \u003d parser.parseTodoString(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"        Todo newTodo \u003d new Todo(parsedTodoArgs.taskName);","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskAddedMessage(newTodo, taskList.size());","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"    private String handleDeadlineCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"        Parser.ParsedDeadlineArgs parsedDeadlineArgs \u003d parser.parseDeadlineString(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"        Deadline newDeadline \u003d new Deadline(parsedDeadlineArgs.taskName,","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"                parsedDeadlineArgs.byDate);","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskAddedMessage(newDeadline, taskList.size());","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"    private String handleEventCommand(String remaining) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"        Parser.ParsedEventArgs parsedEventArgs \u003d parser.parseEventString(remaining);","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"        Event newEvent \u003d new Event(parsedEventArgs.taskName, parsedEventArgs.startDate,","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"                parsedEventArgs.endDate);","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"        return ui.generateTaskAddedMessage(newEvent, taskList.size());","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"    private String handleFindCommand(String remaining) {","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"        String searchTerm \u003d remaining.trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"        TaskList matchingTasks \u003d taskList.findTasksFromKeyword(searchTerm);","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kokrui":174,"-":3}},{"path":"src/main/java/koko/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":" * Represents an exception that is specific to the Duke chatbot application.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":16}},{"path":"src/main/java/koko/DukeGuiWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"public class DukeGuiWrapper extends Application {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeGuiWrapper.class.getResource(\"/view/DukeWindow.fxml\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            fxmlLoader.\u003cDukeWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            stage.show();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":30}},{"path":"src/main/java/koko/DukeWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"public class DukeWindow extends AnchorPane {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"                DialogBox.getDukeDialog(duke.generateStartupMessage(), dukeImage)","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        String dukeText \u003d duke.handleInputAndDispatch(userText);","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        if (dukeText \u003d\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"            exitApplication();","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        );","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    private void exitApplication() {","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":56}},{"path":"src/main/java/koko/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" * Represents an event with a name, start date, and end date.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     * Constructs an Event with the specified name, start date, and end date.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     * @param endDate   The end date of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     * Creates an Event object based on its file representation.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"     * @param parts The components of the event, parsed from file.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"     * @return A new Event object.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the date format is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"    public static Event fromFileFormat(String[] parts) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        boolean isDone \u003d \"1\".equals(parts[1].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        String name \u003d parts[2].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            startDate \u003d LocalDate.parse(parts[3].trim());","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"            endDate \u003d LocalDate.parse(parts[4].trim());","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Event /from or /to dates should be in yyyy-mm-dd format (e.g. 2023-08-25)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        Event event \u003d new Event(name, startDate, endDate);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"            event.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        return event;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     * Converts the Event object to its file representation format.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the Event object for file storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.name + \"|\" + this.startDate + \"|\" + this.endDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"     * @return A string representation including event type, status, name, and date range.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        String formattedStart \u003d this.startDate.format(formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        String formattedEnd \u003d this.endDate.format(formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStart + \" to: \" + formattedEnd + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":76}},{"path":"src/main/java/koko/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"public class Launcher {","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"        Application.launch(DukeGuiWrapper.class, args);","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":9}},{"path":"src/main/java/koko/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":" * Handles parsing of user commands and input validation.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"public class Parser {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"     * Checks if input string contains any invalid characters.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"     * @param input The input string from the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"     * @return True if it contains invalid characters, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    public boolean hasInvalidCharacters(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        return input.contains(\"|\");","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     * Parses the type of command from the input string.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     * @param input The input string from the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     * @return A Command enum representing the type of command.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the input is invalid or empty.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public Command parseCommandType(String input) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Command input cannot be null or empty.\"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"                    + \"Each message should start with one of the following commands: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"                    + \"list, mark, unmark, todo, deadline, event, find\");","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"            return Command.valueOf(command.toUpperCase());","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Each message should start with one of the following commands: \"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"                    + \"list, mark, unmark, todo, deadline, event, find\");","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Unexpected error while parsing command: \" + e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     * Extracts the remaining arguments from the user input after the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"     * @param input The full user input string.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"     * @return The remaining arguments as a string.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the remaining arguments are not provided or invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    public String parseRemainingArgs(Command commandType, String input) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        String remaining \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        if (remaining.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"            switch (commandType) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"            case MARK: // Fallthrough","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Please specify a task number.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"            case TODO:","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Description for todo cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Description and date for deadline cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"            case EVENT:","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Description, start date, and end date for event cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"            case FIND:","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Please specify a search term.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        return remaining;","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"     * Parses the remaining arguments for a deadline command.","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"     * @param remaining The remaining arguments after the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"     * @return A ParsedDeadlineArgs object containing the task name and due date.","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the remaining arguments are invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    public ParsedDeadlineArgs parseDeadlineString(String remaining) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"        String[] parts \u003d remaining.split(\"/by \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/by\u0027 or date for deadline.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"            byDate \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Deadline /by date should be in yyyy-mm-dd format (e.g. 2023-08-25)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        return new ParsedDeadlineArgs(parts[0].trim(), byDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"     * Parses the remaining arguments for an event command.","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     * @param remaining The remaining arguments after the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"     * @return A ParsedEventArgs object containing the task name, start date, and end date.","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the remaining arguments are invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"    public ParsedEventArgs parseEventString(String remaining) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        String[] splitByTo \u003d remaining.split(\"/to \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        if (splitByTo.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/to\u0027 or end date for event.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        String[] splitByFrom \u003d splitByTo[0].split(\"/from \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"        if (splitByFrom.length \u003c 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/from\u0027 or start date for event.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"            startDate \u003d LocalDate.parse(splitByFrom[1].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"            endDate \u003d LocalDate.parse(splitByTo[1].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Event /from or /to dates should be in yyyy-mm-dd format (e.g. 2023-08-25)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"        return new ParsedEventArgs(splitByFrom[0].trim(), startDate, endDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"     * Parses the remaining arguments for a todo command.","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"     * @param remaining The remaining arguments after the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"     * @return A ParsedTodoArgs object containing the task name.","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the remaining arguments are invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"    public ParsedTodoArgs parseTodoString(String remaining) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        if (remaining.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Description for todo cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"        return new ParsedTodoArgs(remaining);","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"     * Wrapper class for command arguments.","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"    public static abstract class ParsedTaskArgs {","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"        public final String taskName;","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        public ParsedTaskArgs(String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"     * Represents the arguments for a deadline command.","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"    public static class ParsedDeadlineArgs extends ParsedTaskArgs {","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"        public final LocalDate byDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"        public ParsedDeadlineArgs(String taskName, LocalDate byDate) {","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"            super(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"            this.byDate \u003d byDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"     * Represents the arguments for an event command.","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"    public static class ParsedEventArgs extends ParsedTaskArgs {","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"        public final LocalDate startDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"        public final LocalDate endDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"        public ParsedEventArgs(String eventName, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"            super(eventName);","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"     * Represents the arguments for a todo command.","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"    public static class ParsedTodoArgs extends ParsedTaskArgs {","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"        public ParsedTodoArgs(String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"            super(taskName);","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":180}},{"path":"src/main/java/koko/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.io.File;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":" * Manages the storage of tasks, including saving and loading from a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"public class Storage {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * Initializes a new Storage object with the specified file path.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param filePath The path to the file for saving and loading tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"     * Saves the tasks to a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"     * @param taskListToSave The list of tasks to save.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    public void saveTasksToFile(TaskList taskListToSave) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        fw.write(taskListToSave.toStringForFile());","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        fw.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     * Loads tasks from a file into a TaskList object.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     * @return A new TaskList object containing the loaded tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If an error occurs while parsing the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"    public TaskList loadTasksFromFile() throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"                Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"                    result.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"                throw dukeException;","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                throw new DukeException(\"Error while parsing data file -- possibly corrupt?\"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                        + \"File will be overwritten if you proceed.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"        return new TaskList(result);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kokrui":71}},{"path":"src/main/java/koko/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":" * Represents a generic Task with a name and completion status.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"    protected String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"     * Constructs a new Task with the given name and sets its completion status to false.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     * Generates a Task object from its file representation.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     * @param line The line from the file representing a Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     * @return A Task object.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the line is in an invalid format.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public static Task fromFileFormat(String line) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        String[] parts \u003d line.split(\"\\\\|\", -1); // -1 to keep trailing empty strings","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        case \"T\":","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"            return Todo.fromFileFormat(parts);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        case \"D\":","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"            return Deadline.fromFileFormat(parts);","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        case \"E\":","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"            return Event.fromFileFormat(parts);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     * Returns the file representation of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"     * @return A string representing the task in the file format.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    public String getName() {","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        return this.name;","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"     * Returns a string representation of the task to be displayed in a Todo List.","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":84}},{"path":"src/main/java/koko/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"public class TaskList {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"     * Returns and deletes the task at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"     * @param index The index of the task to return but delete.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"    public Task deleteTaskAtIndex(int index) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"    public Task markTaskAtIndex(int index) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        return task;","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"     * Marks the task at the specified index as undone.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"     * @param index The index of the task to mark as undone.","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"    public Task unmarkTaskAtIndex(int index) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"        return task;","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"     * Returns a new TaskList containing tasks that match the given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"     * @return A new TaskList containing tasks that match the given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    public TaskList findTasksFromKeyword(String keyword) {","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        ArrayList\u003cTask\u003e result \u003d tasks.stream()","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"                .filter(task -\u003e task.getName().toLowerCase().contains(keyword.toLowerCase().trim()))","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        return new TaskList(result);","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     * Returns the size of the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"    public int size() {","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"     * Converts the list of tasks to a string representation suitable for display in the UI.","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the list of tasks for Text UI.","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"    public String toStringForUi() {","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i))","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"     * Converts the list of tasks to a string representation suitable for storage in a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the list of tasks for file storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"    public String toStringForFile() {","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"        return tasks.stream()","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"                .map(Task::toFileFormat)","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":121}},{"path":"src/main/java/koko/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":" * Represents a Todo task, which is a subclass of Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"     * Constructs a Todo with the specified name.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the todo task to be done.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * Creates a Todo task object from its file representation.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param parts An array of String parts from the file line.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     * @return A new Todo object.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    public static Todo fromFileFormat(String[] parts) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        boolean isDone \u003d \"1\".equals(parts[1].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        String name \u003d parts[2].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"            todo.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        return todo;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     * Returns the file representation of the Todo task.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"     * @return A string representing the task in the file format.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.name + \"||\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":49}},{"path":"src/main/java/koko/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":" * Handles user interface interactions, including reading input and displaying output.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"public class Ui {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private final String name;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     * Constructs a new Ui instance.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the UI, typically the name of the bot or service.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"     * Returns a message in a standardized format.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"     * @param originalMessage The message to be printed.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    private String formatOutput (String originalMessage) {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        String indentedMessage \u003d Arrays.stream(originalMessage.split(\"\\n\"))","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"                .map(line -\u003e \"     \" + line)","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        return indentedMessage;","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"     * Starts a loop to read user input until the user inputs \"bye\".","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     * @param parseInputAndDispatch A Consumer that takes user input and performs appropriate actions.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    public void startUserInputLoop(Consumer\u003cString\u003e parseInputAndDispatch) {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"        Stream.generate(scanner::nextLine)","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"                .takeWhile(input -\u003e !input.equals(\"bye\"))","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                .forEach(parseInputAndDispatch);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"     * Returns a greeting message to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    public String greet() {","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        return formatOutput(\"Hello! I\u0027m \" + this.name + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"     * Returns a message to the user when a task is added.","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"     * @param task      The task that was added.","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    public String generateTaskAddedMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"        return formatOutput(String.format(","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                \"Got it. I\u0027ve added this task:\\n  %s\\n Now you have %d %s in the list.\",","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"                task.toString(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"     * Returns a message to the user when a task is deleted.","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"     * @param task      The task that was deleted.","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"    public String generateTaskDeletedMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        return formatOutput(String.format(","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"                \"Noted. I\u0027ve removed this task:\\n  %s\\n Now you have %d %s in the list.\",","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"                task.toString(), taskCount, (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"     * Returns a message to the user when a task is marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    public String generateTaskMarkedMessage(Task task) {","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        return formatOutput(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task.toString()));","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"     * Returns a message to the user when a task is marked as undone.","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"     * @param task The task that was marked as undone.","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"    public String generateTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"        return formatOutput(String.format(\"Nice! I\u0027ve unmarked this task as done:\\n  %s\", task.toString()));","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"     * Returns the list of tasks to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"    public String generateTaskListOutput(TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        return formatOutput(taskList.toStringForUi());","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"     * Returns an error message to the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"    public String generateErrorMessage(String errorMessage) {","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        return formatOutput(String.format(\"Error: %s\", errorMessage));","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"     * Returns a message to the user when tasks are loaded from a file.","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"     * @param taskList The list of tasks that were loaded.","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"    public String showLoadedTasks(TaskList taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        return formatOutput(\"Loaded tasks from file:\\n\" + taskList.toStringForUi());","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"     * Returns a list of tasks that match a keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"     * @param matchingTasks The list of tasks that match a keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"    public String showMatchingTasks(TaskList matchingTasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        return formatOutput(\"Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"                matchingTasks.toStringForUi());","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":136}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":16}},{"path":"src/main/resources/view/DukeWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"koko.DukeWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"kokrui":19}},{"path":"src/test/java/koko/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    public void setup() {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    public void testParseCommandType_validCommands() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.LIST, parser.parseCommandType(\"list\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.MARK, parser.parseCommandType(\"mark\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.UNMARK, parser.parseCommandType(\"unmark\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.TODO, parser.parseCommandType(\"todo\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.DEADLINE, parser.parseCommandType(\"deadline\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"            assertEquals(Command.EVENT, parser.parseCommandType(\"event\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"            fail(\"Should not throw DukeException\");","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    public void testParseCommandType_invalidCommands() {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseCommandType(\"invalidCommand\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseCommandType(\"\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseCommandType(null));","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    public void testParseRemainingArgs_validRemainingArgs() {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"            String remainingArgs \u003d parser.parseRemainingArgs(Command.TODO, \"todo sample task\");","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            assertEquals(\"sample task\", remainingArgs);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"            remainingArgs \u003d parser.parseRemainingArgs(Command.MARK, \"mark 1\");","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"            assertEquals(\"1\", remainingArgs);","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"            remainingArgs \u003d parser.parseRemainingArgs(Command.DEADLINE, \"deadline sample task /by 2023-08-25\");","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"            assertEquals(\"sample task /by 2023-08-25\", remainingArgs);","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"            fail(\"Should not throw DukeException\");","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"    public void testParseRemainingArgs_invalidRemainingArgs() {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseRemainingArgs(Command.TODO, \"todo \"));","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseRemainingArgs(Command.MARK, \"mark \"));","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parseRemainingArgs(Command.DEADLINE, \"deadline \"));","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":62}},{"path":"src/test/java/koko/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package koko;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private Task sampleTask1;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private Task sampleTask2;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public void setup() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        sampleTask1 \u003d new Todo(\"sample task 1\");","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"        sampleTask2 \u003d new Todo(\"sample task 2\");","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        sampleTasks.add(sampleTask1);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        sampleTasks.add(sampleTask2);","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        taskList \u003d new TaskList(sampleTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    public void testDeleteTaskAtIndex_validIndex() {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"            Task deletedTask \u003d taskList.deleteTaskAtIndex(0);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"            assertEquals(sampleTask1, deletedTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"            assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    public void testDeleteTaskAtIndex_invalidIndex() {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.deleteTaskAtIndex(-1));","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.deleteTaskAtIndex(3));","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"    public void testMarkTaskAtIndex_validIndex() {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"            Task markedTask \u003d taskList.markTaskAtIndex(0);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"            assertEquals(sampleTask1, markedTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"            assertEquals(\"[X]\", markedTask.toString().substring(3, 6));","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"    public void testMarkTaskAtIndex_invalidIndex() {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.markTaskAtIndex(-1));","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.markTaskAtIndex(3));","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kokrui":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"deadline return book /by 2023-08-01","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"deadline finish project /by 2023-08-02","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"deadline bad date format /by 2023-13-13","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"deadline asd asd","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"event project meeting /from 2020-01-23 /to 2020-12-12","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"find project","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"event this should fail /from 2023-08-01","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"event this should fail too /to 2023-08-01","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"find","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"event family gathering /from Fri 2023-08-01 /to 2023-08-05","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"event bad date format /from Fri 6pm /to 10pm","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"mark 50","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"delete 40","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"unmark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"unmark 900","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"unmark 5","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"todo watch movie","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"deadline prepare slides /by 2023-09-09","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"event conference /from 2023-08-02 /to 2023-08-02","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"mark 8","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"mark 9","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"invalid_command_1","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"invalid_command_2","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"javac  -cp ..\\src\\main\\java\\koko -Xlint:none -d ..\\bin ..\\src\\main\\java\\koko\\*.java","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"java -classpath ..\\bin koko.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kokrui":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"if ! javac -cp ../src/main/java/koko -Xlint:none -d ../bin ../src/main/java/koko/*.java","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"# test should be run without pre-saved data","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"mkdir ./backup-data","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"mv ./data/*.txt ./backup-data","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"java -classpath ../bin koko.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"# restore original data files","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"rm ./data/*.txt","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"mv ./backup-data/*.txt ./data","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"kokrui":11,"-":36}}]
