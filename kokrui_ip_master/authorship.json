[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"    private final String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"     * Constructs a Deadline with the specified name and due date.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"     * @param by   The due date of the deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"    private Deadline(String name, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * Parses the command string to create a Deadline instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param input The command string.","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     * @return A new Deadline instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the input format is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    public static Deadline createFromCommandString(String input) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        String[] parts \u003d input.split(\"/by \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/by\u0027 or date for deadline.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        return new Deadline(parts[0], parts[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":35}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"    private static final String CHATBOT_NAME \u003d \"Koko\";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private static void printFormatted(String originalMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"        String indentedMessage \u003d Arrays.stream(originalMessage.split(\"\\n\"))","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"                .map(line -\u003e \"     \" + line)","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        String formattedMessage \u003d String.format(\"    %s\\n%s\\n    %s\",","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"                HORIZONTAL_LINE, indentedMessage, HORIZONTAL_LINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        System.out.println(formattedMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        Duke.printFormatted(\"Hello! I\u0027m \" + CHATBOT_NAME + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    private static void exit() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        Duke.printFormatted(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    private static void printTaskAddedMessage(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        Duke.printFormatted(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n Now you have %d %s in the list.\",","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"                task.toString(), Duke.tasks.size(), (Duke.tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\")));","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    private static void parseInput(String input) {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"            String remaining \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            if (remaining.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"                switch (command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Please specify a task number.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Description for todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Description and date for deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Description, start date, and end date for event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"            switch (command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                case \"list\":","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"                    String result \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"                            .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i))","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"                            .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"                    Duke.printFormatted(result);","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"                    int markIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"                    if (markIndex \u003c 0 || markIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"                    Task markTarget \u003d tasks.get(markIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"                    markTarget.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"                    Duke.printFormatted(\"Nice! I\u0027ve marked this task as done:\\n\" + markTarget);","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"                    int unmarkIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"                    if (unmarkIndex \u003c 0 || unmarkIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"                    Task unmarkTarget \u003d tasks.get(unmarkIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"                    unmarkTarget.markAsUndone();","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"                    Duke.printFormatted(\"OK! I\u0027ve marked this task as not done yet:\\n\" + unmarkTarget);","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"                    int deleteIndex \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"                    if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"                        throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"                    Task toDelete \u003d tasks.remove(deleteIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"                    Duke.printFormatted(\"Noted. I\u0027ve removed this task:\\n  \" + toDelete.toString() +","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"                            \"\\nNow you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"                    Todo newTodo \u003d Todo.createFromCommandString(remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"                    printTaskAddedMessage(newTodo);","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"                    Deadline newDeadline \u003d Deadline.createFromCommandString(remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"                    printTaskAddedMessage(newDeadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"                case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"                    Event newEvent \u003d Event.createFromCommandString(remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"                    printTaskAddedMessage(newEvent);","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"                default:","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"                    throw new DukeException(\"Each message should start with one of the following commands: list, mark, unmark, todo, deadline, event\");","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"            Duke.printFormatted(\"Please enter a valid task number.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"            Duke.printFormatted(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"        Duke.greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"        Stream.generate(scanner::nextLine)","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"                .takeWhile(input -\u003e !input.equals(\"bye\"))","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"                .forEach(Duke::parseInput);","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        Duke.exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kokrui":125,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"    private final String startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"    private final String endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"     * Constructs an Event with the specified name, start time, and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     * Parses the command string to create an Event instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"     * @param input The command string.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     * @return A new Event instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the input format is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    public static Event createFromCommandString(String input) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        String[] splitByTo \u003d input.split(\"/to \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        if (splitByTo.length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/to\u0027 or end date for event.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        String[] splitByFrom \u003d splitByTo[0].split(\"/from \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"        if (splitByFrom.length \u003c 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Missing \u0027/from\u0027 or start date for event.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        return new Event(splitByFrom[0], splitByFrom[1], splitByTo[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.startTime + \"to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"    protected String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"     * Constructs a new Task with the given name and sets its completion status to false.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"     * Returns a string representation of the task to be displayed in a Todo List.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"kokrui":39}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"     * Constructs a Todo with the specified name.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"     * @param name The name of the todo task to be done.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"    private Todo(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"        super(name);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"     * Parses the command string to create a Todo instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"     * @param input The command string.","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"     * @return A new Todo instance.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * @throws DukeException If the input format is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"    public static Todo createFromCommandString(String input) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"            throw new DukeException(\"Description for todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        return new Todo(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"deadline finish project /by Monday","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"deadline asd asd","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"event this should fail /from Mon 2pm","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"event this should fail too /to Mon 2pm","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"event family gathering /from Fri 6pm /to 8pm","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"mark 50","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"delete 40","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"unmark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"unmark 900","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"unmark 5","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"todo watch movie","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"deadline prepare slides /by Tuesday","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"event conference /from Wed 10am /to 12pm","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"mark 8","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"mark 9","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"invalid_command_1","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"invalid_command_2","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"kokrui":35}}]
