[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bearypop":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Bearypop"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Bearypop"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Bearypop"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Bearypop"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bearypop":21,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"    private String name;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"    private String filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    public Duke(String name, String filepath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"        this.storage \u003d new Storage(this.filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"            this.tasks \u003d storage.readFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"        Ui.printGreeting(this.name);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"        new ListCommand().execute(this.storage, this.tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"        while (true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"            String fullCommand \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"Bearypop"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bearypop"},"content":"            Command command \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bearypop"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bearypop"},"content":"                continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Bearypop"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Bearypop"},"content":"            command.execute(this.storage, this.tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bearypop"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Bearypop"},"content":"                break;","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Bearypop"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Bearypop"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bearypop"},"content":"        String name \u003d \"Beary\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Bearypop"},"content":"        String filepath \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Bearypop"},"content":"        Duke duke \u003d new Duke(name, filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Bearypop"},"content":"        duke.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Bearypop":57,"-":2}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    private String type;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    public AddCommand(String type, String fullCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     * Creates a new task and adds it to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"            int startIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"            String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"            Task newTask \u003d new Task(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"            switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"                        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"                            throw (new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"                        startIndex \u003d 5;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"                        description \u003d fullCommand.substring(startIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bearypop"},"content":"                        newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bearypop"},"content":"                        tasks.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Bearypop"},"content":"                        break;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bearypop"},"content":"                    } catch (DukeException emptyDescription) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bearypop"},"content":"                        System.out.println(emptyDescription.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bearypop"},"content":"                        Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bearypop"},"content":"                        return;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Bearypop"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Bearypop"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Bearypop"},"content":"                    startIndex \u003d 9;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Bearypop"},"content":"                    int slashIndex \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Bearypop"},"content":"                    description \u003d fullCommand.substring(startIndex, slashIndex-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Bearypop"},"content":"                    String by \u003d fullCommand.substring(slashIndex + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Bearypop"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Bearypop"},"content":"                        newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Bearypop"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Bearypop"},"content":"                        System.out.println(\"Invalid date format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Bearypop"},"content":"                        Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Bearypop"},"content":"                        return;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Bearypop"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Bearypop"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Bearypop"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Bearypop"},"content":"                case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Bearypop"},"content":"                    startIndex \u003d 6;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Bearypop"},"content":"                    int fromIndex \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Bearypop"},"content":"                    int toIndex \u003d fullCommand.indexOf(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Bearypop"},"content":"                    description \u003d fullCommand.substring(startIndex, fromIndex-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Bearypop"},"content":"                    String start \u003d fullCommand.substring(fromIndex+6, toIndex-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Bearypop"},"content":"                    String end \u003d fullCommand.substring(toIndex+4);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Bearypop"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Bearypop"},"content":"                        newTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Bearypop"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Bearypop"},"content":"                        System.out.println(\"Invalid date format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Bearypop"},"content":"                        Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Bearypop"},"content":"                        return;","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Bearypop"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Bearypop"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Bearypop"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Bearypop"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Bearypop"},"content":"            System.out.println(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Bearypop"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Invalid duke.command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":94}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    public abstract void execute(Storage storage, ArrayList\u003cTask\u003e tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":10}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"     * Deletes the task indicated by taskNumber.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"            tasks.remove(this.taskNumber-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"The selected task does not exist\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":33}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"     * Exits the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":26}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    private String fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"     * Finds all tasks with the given keyword and lists them out.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"            String pattern \u003d words[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"            ArrayList\u003cTask\u003e validTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"                if (description.contains(pattern)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"                    validTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"            new ListCommand().execute(storage, validTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"☹ OOPS!!! The description of a find cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Bearypop":42}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"     * Lists out all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"            System.out.println((i + 1) + \".\" + currentTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"     * Marks the task indicated by taskNumber as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"            tasks.get(taskNumber - 1).markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"            System.out.println(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"The selected task does not exist\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":32}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.utils.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"     * Marks the task indicated by taskNumber as not completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"    public void execute(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"            tasks.get(taskNumber - 1).markUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"            System.out.println(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"            System.out.println(\"The selected task does not exist\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":32}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    protected String byDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        this.by \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter byFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"        this.byDate \u003d this.by.format(byFormatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"    public Deadline(String description, String by, Boolean other) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        this.by \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byDate + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Bearypop":30}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"    public Event(String description, String start, String end, boolean other) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"        this.start \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        this.end \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"    private String getDateString(LocalDate date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getDateString(start) +","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"                \" to: \" + this.getDateString(end) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Bearypop":35}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"    private String description;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"    private Boolean done;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"        return this.description;","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"        return this.done;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"        return (done ? \"[X] \" : \"[ ] \") + this.getDescription();","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Bearypop":37}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Bearypop":13}},{"path":"src/main/java/duke/utils/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Bearypop":8}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.commands.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":" * A utility class that parses the command inputted by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"     * Returns a Command object from parsing fullCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"     * @param fullCommand","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"     * @return A Command object containing the information from fullCommand","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"        String command \u003d fullCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"        if (words.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"            command \u003d words[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"            case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"            case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"                return new FindCommand(fullCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"                    return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bearypop"},"content":"                    System.out.println(\"Missing task number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bearypop"},"content":"                    Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Bearypop"},"content":"                    return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bearypop"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bearypop"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bearypop"},"content":"                return new AddCommand(\"todo\", fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bearypop"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Bearypop"},"content":"                return new AddCommand(\"deadline\", fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Bearypop"},"content":"            case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Bearypop"},"content":"                return new AddCommand(\"event\", fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Bearypop"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bearypop"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Bearypop"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Bearypop"},"content":"                    return new MarkCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Bearypop"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Bearypop"},"content":"                    System.out.println(\"Missing task number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Bearypop"},"content":"                    Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Bearypop"},"content":"                    return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Bearypop"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Bearypop"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Bearypop"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Bearypop"},"content":"                    int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Bearypop"},"content":"                    return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Bearypop"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Bearypop"},"content":"                    System.out.println(\"Missing task number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Bearypop"},"content":"                    Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Bearypop"},"content":"                    return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Bearypop"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Bearypop"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Bearypop"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Bearypop"},"content":"                    throw(new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Bearypop"},"content":"                } catch (DukeException invalidCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Bearypop"},"content":"                    System.out.println(invalidCommand.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Bearypop"},"content":"                    Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Bearypop"},"content":"                    return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Bearypop"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":82}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":" * A utility class that provides functionality for reading and","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":" * writing task data to the data file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    private String filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Bearypop"},"content":"     * Returns a list containing the tasks read from the file indicated","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Bearypop"},"content":"     * by filepath.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Bearypop"},"content":"     * @return An ArrayList of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Bearypop"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Bearypop"},"content":"    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bearypop"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bearypop"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bearypop"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bearypop"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bearypop"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bearypop"},"content":"            tasks.add(constructTaskFromFile(line));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bearypop"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Bearypop"},"content":"     * Writes each element of tasks to a line in the file indicated","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Bearypop"},"content":"     * by filepath.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Bearypop"},"content":"     * @param tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Bearypop"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Bearypop"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Bearypop"},"content":"        // create data folder if it does not exist","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Bearypop"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Bearypop"},"content":"//        System.out.println(System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bearypop"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Bearypop"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Bearypop"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Bearypop"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Bearypop"},"content":"            String line \u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Bearypop"},"content":"            fileWriter.write(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Bearypop"},"content":"        fileWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Bearypop"},"content":"     * Returns a Task object from parsing line.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Bearypop"},"content":"     * @param line","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Bearypop"},"content":"     * @return A Task object containing the information from line","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Bearypop"},"content":"    public Task constructTaskFromFile(String line) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Bearypop"},"content":"        String type \u003d line.substring(1, 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Bearypop"},"content":"        String doneString \u003d line.substring(4, 5);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Bearypop"},"content":"        String text \u003d line.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Bearypop"},"content":"        String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Bearypop"},"content":"        Task newTask \u003d new Task(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Bearypop"},"content":"        switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Bearypop"},"content":"            case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Bearypop"},"content":"                description \u003d text;","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Bearypop"},"content":"                newTask \u003d new ToDo(text);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Bearypop"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Bearypop"},"content":"            case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Bearypop"},"content":"                int OpenBracketIndex \u003d text.indexOf(\"(by: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Bearypop"},"content":"                description \u003d text.substring(0, OpenBracketIndex -1);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Bearypop"},"content":"                String by \u003d text.substring(OpenBracketIndex + 5, text.length()-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Bearypop"},"content":"                newTask \u003d new Deadline(description, by, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Bearypop"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Bearypop"},"content":"            case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Bearypop"},"content":"                int fromIndex \u003d text.indexOf(\"(from: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Bearypop"},"content":"                int toIndex \u003d text.indexOf(\"to: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Bearypop"},"content":"                description \u003d text.substring(0, fromIndex-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Bearypop"},"content":"                String from \u003d text.substring(fromIndex+7, toIndex-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Bearypop"},"content":"                String to \u003d text.substring(toIndex+4, text.length()-1);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Bearypop"},"content":"                newTask \u003d new Event(description, from, to, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Bearypop"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Bearypop"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Bearypop"},"content":"        boolean done \u003d doneString.equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Bearypop"},"content":"        newTask.setDone(done);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Bearypop"},"content":"        return newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":108}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"        return this.tasks.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":17}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"     * Prints out the greeting message when the program is started.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"     * @param name","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public static void printGreeting(String name) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        System.out.println(String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", name));","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"        Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        System.out.println(\"You have the following duke.tasks:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bearypop"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Bearypop"},"content":"     * Prints out a line divider.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Bearypop"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bearypop"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Bearypop":22}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"    public void parseTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"        Command command \u003d parser.parse(\"bye\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Bearypop":15}},{"path":"src/test/java/duke/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"package duke.utils;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"    public void constructTaskFromFileTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Bearypop"},"content":"        Task task \u003d storage.constructTaskFromFile(\"[T][X] eat\");","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Bearypop"},"content":"        assertEquals(\"eat\", task.getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Bearypop"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Bearypop"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Bearypop":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bearypop"},"content":"todo borrow book","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"Bearypop"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"Bearypop"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Bearypop"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Bearypop"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Bearypop"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Bearypop"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Bearypop"},"content":"unmark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Bearypop"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Bearypop"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Bearypop":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Bearypop"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bearypop":1,"-":20}}]
