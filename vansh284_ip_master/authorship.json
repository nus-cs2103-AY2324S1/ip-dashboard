[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"# Didier project template","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"3. After that, locate the `src/main/java/Didier.java` file, right-click it, and choose `Run Didier.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vansh284":2,"-":22}},{"path":"src/main/java/DateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"public class DateFormatException extends DidierException {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"    public DateFormatException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"        super(\"The date must be in the format yyyy-mm-dd. \");","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"vansh284":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * A Deadline is a task which needs to be completed by a certain date. As a result, it keeps track","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * of when it must be completed by.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        return String.format(\"D|%s|%s\", super.composeToFileString(), this.by.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":32}},{"path":"src/main/java/Didier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"import java.io.File;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Didier {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    private static String tasksFileName \u003d \"didier.txt\";","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    private static String tasksDirectoryPath \u003d \"data/\";","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    enum Command {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"        LIST,","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        MARK,","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        UNMARK,","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        DELETE,","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        TODO,","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        EVENT,","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        BYE,","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        UNKOWN;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        static Command textToCommand(String text) {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"                Command command \u003d Command.valueOf(text.toUpperCase());","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                return command;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"                return Command.UNKOWN;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintBr();","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintMessage(\"Greetings user, I\u0027m Didier. How can I help you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintBr();","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        Scanner scanner \u003d new Scanner(System.in); // create a Scanner object for user input","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        String[] userInput \u003d scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        Command command \u003d Command.textToCommand(userInput[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        ArrayList\u003cTask\u003e tasks \u003d getTasks();","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        while (!command.equals(Command.BYE)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            // Carry out the action determined by the command","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                switch (command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"                case LIST:","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"                    Didier.botPrintMessage(\"The tasks in your list are as follows:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                        Didier.botPrintMessage(String.format(\"%d.%s\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"                case MARK:","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"                    try {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"                        Task task \u003d tasks.get(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"                        if (userInput[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"                            Didier.botPrintMessage(\"Okay! I\u0027ve marked the following task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"                        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"                            task.markAsNotDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"                            Didier.botPrintMessage(\"Okay! I\u0027ve marked the following task as undone:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"                        Didier.botPrintMessage(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"                    } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"                        throw new TaskNumberException(userInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"                case DELETE:","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"                    try {","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"                        Task task \u003d tasks.remove(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"                        Didier.botPrintMessage(\"Okay! I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"                        Didier.botPrintMessage(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"                        Didier.botPrintMessage(String.format(\"There are now %d tasks in your list\", tasks.size()));","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"                    } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"                        throw new TaskNumberException(userInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"                case TODO:","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"                case EVENT:","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"                    Task task;","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"                    if (userInput.length \u003d\u003d 1 || userInput[1].isBlank()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"                        throw new ElementMissingException(\"description\");","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"                    if (userInput[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"                        task \u003d new ToDo(userInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"                    } else if (userInput[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"                        String[] deadlineCommand \u003d userInput[1].split(\"\\\\\\\\by \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"                        if (deadlineCommand.length \u003d\u003d 1 || deadlineCommand[1].isBlank()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"                            throw new ElementMissingException(\"deadline\");","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"                        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"                            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"                                task \u003d new Deadline(deadlineCommand[0], LocalDate.parse(deadlineCommand[1].trim()));","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"                                throw new DateFormatException();","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"                            }","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"                    } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"                        String[] fromCommand \u003d userInput[1].split(\"\\\\\\\\from \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"                        if (fromCommand.length \u003d\u003d 1 || fromCommand[1].isBlank()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"                            throw new ElementMissingException(\"start time\");","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"                        String[] toCommand \u003d fromCommand[1].split(\"\\\\\\\\to \", 2);","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"                        if (toCommand.length \u003d\u003d 1 || toCommand[1].isBlank()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"                            throw new ElementMissingException(\"end time\");","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"                        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"                            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"                                task \u003d new Event(fromCommand[0], LocalDate.parse(toCommand[0].trim()),","lastModifiedDate":"2023-08-25"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"                                        LocalDate.parse(toCommand[1].trim()));","lastModifiedDate":"2023-08-25"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"                                throw new DateFormatException();","lastModifiedDate":"2023-08-25"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"                            }","lastModifiedDate":"2023-08-25"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"                    Didier.botPrintMessage(\"Okay! I\u0027ve added your task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"                    Didier.botPrintMessage(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"                    Didier.botPrintMessage(String.format(\"There are now %d tasks in your list\", tasks.size()));","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"                case UNKOWN:","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"                    throw new InvalidCommandException(userInput[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"                saveTasks(tasks);","lastModifiedDate":"2023-08-25"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"            } catch (DidierException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"                Didier.botPrintMessage(e.getMessage() + \"Please try again.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"            Didier.botPrintBr();","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"            userInput \u003d scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"            command \u003d Command.textToCommand(userInput[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintMessage(\"Goodbye! If you need more help in the future don\u0027t hesitate to ask me.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintBr();","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"        scanner.close();","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"     * Prints the message to the standard output, formatted in a specific way emulate the bot.","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"    private static void botPrintMessage(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"     * Prints a horizontal line break to the standard output.","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"    private static void botPrintBr() {","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"        String lineBreak \u003d \"---------------------------------------------------------------------\";","lastModifiedDate":"2023-08-20"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"        Didier.botPrintMessage(lineBreak);","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"vansh284"},"content":"    private static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-25"},{"lineNumber":157,"author":{"gitId":"vansh284"},"content":"        File directory \u003d new File(Didier.tasksDirectoryPath);","lastModifiedDate":"2023-08-25"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-25"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":161,"author":{"gitId":"vansh284"},"content":"        File file \u003d new File(Didier.tasksDirectoryPath + Didier.tasksFileName);","lastModifiedDate":"2023-08-25"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-25"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":166,"author":{"gitId":"vansh284"},"content":"                Task task \u003d Task.parseFileString(scanner.nextLine());","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"vansh284"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"            scanner.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":172,"author":{"gitId":"vansh284"},"content":"            return tasks;","lastModifiedDate":"2023-08-25"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":174,"author":{"gitId":"vansh284"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":175,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":176,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":178,"author":{"gitId":"vansh284"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-25"},{"lineNumber":179,"author":{"gitId":"vansh284"},"content":"        File directory \u003d new File(Didier.tasksDirectoryPath);","lastModifiedDate":"2023-08-25"},{"lineNumber":180,"author":{"gitId":"vansh284"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":181,"author":{"gitId":"vansh284"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-25"},{"lineNumber":182,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":183,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":184,"author":{"gitId":"vansh284"},"content":"            FileWriter fileWriter \u003d new FileWriter(Didier.tasksDirectoryPath + Didier.tasksFileName);","lastModifiedDate":"2023-08-25"},{"lineNumber":185,"author":{"gitId":"vansh284"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-08-25"},{"lineNumber":186,"author":{"gitId":"vansh284"},"content":"                fileWriter.write(task.composeToFileString() + System.lineSeparator());","lastModifiedDate":"2023-08-25"},{"lineNumber":187,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":188,"author":{"gitId":"vansh284"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":189,"author":{"gitId":"vansh284"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":190,"author":{"gitId":"vansh284"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-08-25"},{"lineNumber":191,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":192,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":193,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vansh284":191,"-":3}},{"path":"src/main/java/DidierException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"public class DidierException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    public DidierException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":6}},{"path":"src/main/java/ElementMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"public class ElementMissingException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    public ElementMissingException(String element) {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"        super(\"The \" + element + \" of the task is missing. \");","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * An Event is a task that will take place at a specific date and time. Therefore, it must keep track","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * of when the event is and from when to when the event will occur.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        return String.format(\"E|%s|%s|%s\", super.composeToFileString(), this.from.toString(), this.to.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":36}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"public class InvalidCommandException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"        super(\"I don\u0027t quite understand \" + command + \". \");","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * The Task class encapsulates a real-life task. A basic task has a description and keeps track of","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * whether it is completed or not. It is declared abstract as as task must take one of three forms:","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * ToDo, Deadline or Event.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    private String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"       return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"     * Composes the task and returns it in a String format suitable to be written into a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"     * This is used to save the task to a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * @return The composed task as a String.","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        return String.format(\"%s|%s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"     * Parses the given string obtained from a file into a Task.","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"     * @param fileString The String to be parsed.","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"     * @return The corresponding task.","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    public static Task parseFileString(String fileString) {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        String[] task \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        if (task[0].equals(\"T\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"            return new ToDo(task[2], Integer.parseInt(task[1]) !\u003d 0);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        } else if (task[0].equals(\"D\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"            return new Deadline(task[2], LocalDate.parse(task[3]), Integer.parseInt(task[1]) !\u003d 0);","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        } else if (task[0].equals(\"E\")){","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"            return new Event(task[2], LocalDate.parse(task[3]),","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"                    LocalDate.parse(task[4]), Integer.parseInt(task[1]) !\u003d 0);","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        return null;","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":63}},{"path":"src/main/java/TaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"public class TaskNumberException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"    public TaskNumberException(String taskNumber) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"        super(taskNumber + \" is an invalid task number. \");","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":5}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":" * A ToDo is the most basic type of Task. It only needs to be supplied with its description.","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        return String.format(\"T|%s\", super.composeToFileString());","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"todo set up project","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"todo call mother","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"unmark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"deadline return book \\by 2019-10-15","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"deadline finish project \\by 2011-11-11","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"event dinner with family \\from 2012-01-01 \\to 2013-01-02","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"mark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"deadline submit application \\by gibberish","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"deadline submit application \\by 2012-13-30","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"mark 12","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"gibberish","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"event lunch with family \\from 1997-11-30 \\to 1998-12-31","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"mark 7","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"mark 5","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"unmark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"unmark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"fsdkfns","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"deadline read book \\by","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"event basketball game \\from 2012-09-09 \\to","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"event football game","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"delete 4","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"delete 11","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"java -classpath ..\\bin Didier \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vansh284":1,"-":20}}]
