[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"# didier.Didier project template","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"3. After that, locate the `src/main/java/didier.Didier.java` file, right-click it, and choose `Run didier.Didier.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vansh284":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    mainClass.set(\"didier.Launcher\")","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    archiveBaseName \u003d \"Didier\"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"checkstyle {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"javafx {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"vansh284":13,"-":41}},{"path":"src/main/java/didier/Didier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.command.Command;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * Represents a Didier bot that is able to interact with a user, keep track of the list of tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * of the user and save the data in local storage.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Didier {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private boolean isActive;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Didier bot.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * @param directoryPath The path to the directory where Didier should store the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param fileName The name of the file where Didier should store the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public Didier(String directoryPath, String fileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        storage \u003d new Storage(directoryPath, fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        taskList \u003d storage.getTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        assert taskList !\u003d null : \"The task list of the Didier object storage is null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        isActive \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     * Returns the response of the didier bot based on the commandString inputted by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * @param commandString The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"     * @return The response of the didier bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    public String getResponse(String commandString) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(commandString);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"            assert command !\u003d null : \"Parser returns a null command object\";","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            if (command.isExit()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"                isActive \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            command.execute(this.taskList, this.storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            return command.getBotOutput(this.taskList, this.storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException exception) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            return exception.getMessage() + \"Please try again.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"     * Returns the bot uses to greet the user at the start of the user-bot interaction.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"     * @return The greeting message.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    public static String getBotGreeting() {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        return \"Greetings user, I\u0027m didier. How can I help you?\";","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"     * Returns whether the bot is currently active or not.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"     * @return The status of the bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    public boolean getIsActive() {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        return this.isActive;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vansh284":63,"-":1}},{"path":"src/main/java/didier/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" * The main entry class that launches the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"vansh284":12}},{"path":"src/main/java/didier/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.controller.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * The Main application class that provides the basic functionality to","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * set the scene on the stage and render the window.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private Didier didier \u003d new Didier(\"data/\", \"didier.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        MainWindow mainWindow \u003d new MainWindow(primaryStage);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        mainWindow.setDidier(didier);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        primaryStage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":23}},{"path":"src/main/java/didier/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import didier.command.AddCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import didier.command.DeleteCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import didier.command.ExitCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import didier.command.FindCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import didier.command.ListCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import didier.command.MarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import didier.exception.DateFormatException;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import didier.exception.ElementMissingException;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import didier.exception.InvalidCommandException;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":" * Deals with making sense of all user input to the bot.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     * Returns a Command object which encapsulates the command String that is entered by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * Converts the user input to this Command object.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * @param commandString The command provided by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     * @throws DidierException If the user command is invalid in any way.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public static Command parseCommand(String commandString) throws DidierException {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        String[] options \u003d commandString.split(\" \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        CommandType commandType \u003d CommandType.textToCommand(options[0]);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        case LIST:","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"            return parseListCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        case MARK:","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"            return parseMarkCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            return parseUnmarkCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        case DELETE:","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            return parseDeleteCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            return parseTodoCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            return parseDeadlineCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"            return parseEventCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        case FIND:","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"            return parseFindCommand(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        case BYE:","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"            return parseExitCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        default:","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"            throw new InvalidCommandException(options[0]);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    private static ListCommand parseListCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    private static ExitCommand parseExitCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"    private static FindCommand parseFindCommand(String[] options) throws ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        boolean isMissingKeyword \u003d options.length \u003d\u003d 1 || options[1].isBlank();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"        if (isMissingKeyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"keyword\");","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        return new FindCommand(options[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"    private static AddCommand parseTodoCommand(String[] options) throws ElementMissingException, DateFormatException {","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        return new AddCommand(getTaskDescription(options), null, null, null);","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    private static AddCommand parseDeadlineCommand(String[] options)","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"            throws ElementMissingException, DateFormatException {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"        String[] deadlineCommand \u003d options[1].split(\"\\\\\\\\by \", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"        return new AddCommand(getTaskDescription(options), getDeadlineBy(options), null, null);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"    private static AddCommand parseEventCommand(String[] options) throws ElementMissingException, DateFormatException {","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"        String description \u003d getTaskDescription(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"        LocalDate[] eventTimes \u003d getEventTimes(options);","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"        assert eventTimes.length \u003d\u003d 2 : \"There are too many or too few event times, there should only be a from and to\";","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        LocalDate from \u003d eventTimes[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"        LocalDate to \u003d eventTimes[1];","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"        return new AddCommand(getTaskDescription(options), null, from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"    private static String getTaskDescription(String[] options) throws ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"        boolean isMissingDescription \u003d options.length \u003d\u003d 1 || options[1].isBlank();","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"        if (isMissingDescription) {","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"description\");","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"        return options[1].split(\"\\\\\\\\\", 2)[0];","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"    private static LocalDate getDeadlineBy(String[] options) throws ElementMissingException, DateFormatException {","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"        String[] deadlineCommand \u003d options[1].split(\"\\\\\\\\by \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"        if (deadlineCommand.length \u003d\u003d 1 || deadlineCommand[1].isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"deadline\");","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"            return LocalDate.parse(deadlineCommand[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"            throw new DateFormatException();","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"    private static LocalDate[] getEventTimes(String[] options) throws ElementMissingException, DateFormatException {","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"        String[] fromCommand \u003d options[1].split(\"\\\\\\\\from \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"        if (fromCommand.length \u003d\u003d 1 || fromCommand[1].isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"start date\");","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"        String[] toCommand \u003d fromCommand[1].split(\"\\\\\\\\to \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"        if (toCommand.length \u003d\u003d 1 || toCommand[1].isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"end date\");","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"            return new LocalDate[]{LocalDate.parse(toCommand[0].trim()), LocalDate.parse(toCommand[1].trim())};","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"            throw new DateFormatException();","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"    private static DeleteCommand parseDeleteCommand(String[] options)","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"            throws TaskNumberException, ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"        if (options.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"task number\");","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"            int taskNumber \u003d Integer.parseInt(options[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"            throw new TaskNumberException(options[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"    private static MarkCommand parseMarkCommand(String[] options) throws TaskNumberException, ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"        return new MarkCommand(true, getMarkTaskNumber(options));","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"    private static MarkCommand parseUnmarkCommand(String[] options)","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"            throws TaskNumberException, ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"        return new MarkCommand(false, getMarkTaskNumber(options));","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"    private static int getMarkTaskNumber(String[] options) throws TaskNumberException, ElementMissingException {","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"        if (options.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"            throw new ElementMissingException(\"task number\");","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"vansh284"},"content":"            int taskNumber \u003d Integer.parseInt(options[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"vansh284"},"content":"            return taskNumber;","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"vansh284"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"vansh284"},"content":"            throw new TaskNumberException(options[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"vansh284"},"content":"    enum CommandType {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"vansh284"},"content":"        LIST,","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"vansh284"},"content":"        MARK,","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"vansh284"},"content":"        UNMARK,","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"vansh284"},"content":"        DELETE,","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"vansh284"},"content":"        TODO,","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"vansh284"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"vansh284"},"content":"        EVENT,","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"vansh284"},"content":"        FIND,","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"vansh284"},"content":"        BYE,","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"vansh284"},"content":"        UNKNOWN;","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"vansh284"},"content":"        public static CommandType textToCommand(String string) {","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"vansh284"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"vansh284"},"content":"                return CommandType.valueOf(string.toUpperCase());","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"vansh284"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"vansh284"},"content":"                return CommandType.UNKNOWN;","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"vansh284":184}},{"path":"src/main/java/didier/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import didier.exception.FileCorruptedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":" * Deals with reading tasks from a file and writing tasks to a fil. A storage object refers to","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":" * the memory at and allows the manipulation of a particular file in a particular directory.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    private String directoryPath;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    private String fileName;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Storage object.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * @param directoryPath The path to the directory where the file is located.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     * @param fileName The name of the file to read/write to.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public Storage(String directoryPath, String fileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        File directory \u003d new File(this.directoryPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"     * Gets the task list from the storage file as a String, parses it into a list of","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * task objects and returns the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"     * @return The task list stored in the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        File file \u003d new File(this.directoryPath + this.fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"                Task task \u003d Task.parseFileString(scanner.nextLine());","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"                assert task !\u003d null : \"The file parser returns a null task\";","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"            scanner.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"            return taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        } catch (FileNotFoundException | FileCorruptedException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"     * Writes the given task list to the file by composing it into a file String.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"     * @param taskList The task list to be stored.","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"     * @throws TaskNumberException If the task list is accessed at an invalid task index.","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    public void saveTasks(TaskList taskList) throws TaskNumberException, FileCorruptedException {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.directoryPath + this.fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"                fileWriter.write(taskList.getTask(i).composeToFileString() + System.lineSeparator());","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"            throw new FileCorruptedException();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":77}},{"path":"src/main/java/didier/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * Represents a list of tasks that the bot stores. Allows for several operations","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * on this list, so that the user can manipulate their task list by interacting with","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * the bot.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Initialises the arrayList internally used to represent the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"     * Removes the task at the requested index from the task list and returns the removed task.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"     * @param taskNumber The index of the task to be removed (1-based indexing).","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"     * @return The task removed.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"     * @throws TaskNumberException If taskNumber is an invalid index.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    public Task removeTask(int taskNumber) throws TaskNumberException {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            return tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            throw new TaskNumberException(String.valueOf(taskNumber));","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"     * @return Size of the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"     * Fetches the task at the requested index from the task list and returns the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"     * @param taskNumber The index of the desired task (1-based indexing).","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"     * @return The task at index given by taskNumber.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"     * @throws TaskNumberException If taskNumber is an invalid index.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"    public Task getTask(int taskNumber) throws TaskNumberException {","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"            return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"            throw new TaskNumberException(String.valueOf(taskNumber));","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"     * Returns whether the task list contains the given task.","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"     * @param task The task to be queried.","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"     * @return True if the task list contains the task else false.","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"    public boolean containsTask(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":81}},{"path":"src/main/java/didier/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.exception.DuplicateTaskException;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import didier.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import didier.task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import didier.task.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":" * The AddCommand encapsulates the logic of what occurs when the user tries to add any type of task","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":" * to their task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    private String description;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    private Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * Constructor for the AddCommand object.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     * @param by When the task should be completed by if it is a deadline else null.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     * @param from When the task begins if it is an event else null.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * @param to When the task ends if it is an event else null.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public AddCommand(String description, LocalDate by, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        this.task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        if (this.from !\u003d null \u0026\u0026 this.to !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            task \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        } else if (this.by !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"            task \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            task \u003d new ToDo(this.description);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        if (taskList.containsTask(task)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"            // command has not yet been executed so there is no bot output","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"            return \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        outputText +\u003d \"Okay! I\u0027ve added your task:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        outputText +\u003d String.format(\"\\n%s\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        outputText +\u003d String.format(\"\\nThere are now %d tasks in your list\", taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        return outputText;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":70}},{"path":"src/main/java/didier/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * Represents a command that was given by the user, resulting in some interaction with the storage and some","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * output being produced. The Command class is abstract since the manner in which it is executed","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * depends on what type of command it is.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"     * Executes the command, resulting in reading and writing to the storage","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"     * depending on what the type of command is.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * @param taskList The list of the users tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * @param storage  The storage object where the tasks are written to and stored.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * @throws DidierException If the command was inappropriate resulting in some error.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public abstract void execute(TaskList taskList, Storage storage) throws DidierException;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     * Returns the response of the bot to the reception of the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     * @param taskList The list of the users tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * @param storage  The storage object where the tasks are written to and stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     * @return the bot response.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    public abstract String getBotOutput(TaskList taskList, Storage storage) throws DidierException;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * Returns whether this Command is an ExitCommand.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"     * @return whether this Command is an ExitCommand.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        return this instanceof ExitCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":39}},{"path":"src/main/java/didier/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * The DeleteCommand encapsulates the logic of what happens when the user tries to delete a task from","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Constructor for the DeleteCommand object.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param taskNumber The index number of the task to be deleted (1-indexed).","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        this.task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        task \u003d taskList.removeTask(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d \"Okay! I\u0027ve removed this task:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d String.format(\"\\n%s\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d String.format(\"\\nThere are now %d tasks in your list\", taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        return outputText;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":43}},{"path":"src/main/java/didier/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * The ExitCommand encapsulates the logic of what occurs when the user tries to exit the interaction","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * with the bot.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        return \"Goodbye! If you need more help in the future don\u0027t hesitate to ask me.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":19}},{"path":"src/main/java/didier/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * The FindCommand encapsulates the logic of what occurs when the user searches their task list","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * for tasks that match a given keyword.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    private String keyword;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private TaskList taskListFind;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * Constructor for the FindCommand object.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * @param keyword The keyword to look for in the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        this.taskListFind \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"            if (task.descriptionHasKeyword(this.keyword)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"                taskListFind.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        outputText +\u003d \"The tasks that match the keyword in your lists are as follows:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        for (int i \u003d 1; i \u003c\u003d taskListFind.getSize(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d String.format(\"\\n%d.%s\", i, taskListFind.getTask(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        return outputText;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"vansh284":44}},{"path":"src/main/java/didier/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * The ListCommand encapsulates the logic of what occurs when the user tries to list all the tasks in","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * the current task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) throws TaskNumberException {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        outputText +\u003d \"The tasks in your list are as follows:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d String.format(\"\\n%d.%s\", i, taskList.getTask(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        return outputText;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":26}},{"path":"src/main/java/didier/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import didier.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import didier.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.exception.FileCorruptedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.task.Task;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * The MarkCommand encapsulates the logic of what occurs when the user tries to mark","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" * a task as done or undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    private Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     * The constructor for the MarkCommand object.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"     * @param isMark Whether the task should be marked or unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"     * @param taskNumber The index number of the task to be marked or unmarked (1-indexed).","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    public MarkCommand(boolean isMark, int taskNumber) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        this.task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public void execute(TaskList taskList, Storage storage) throws TaskNumberException, FileCorruptedException {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        if (isMark) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    public String getBotOutput(TaskList taskList, Storage storage) throws DidierException {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"            if (isMark) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"                outputText +\u003d \"Okay! I\u0027ve marked the following task as done:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"                outputText +\u003d \"Okay! I\u0027ve marked the following task as undone:\";","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"            outputText +\u003d String.format(\"\\n%s\", task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        return outputText;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":57}},{"path":"src/main/java/didier/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.controller;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":" * Custom controller that contains the dialog and display picture of the current locuteur.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        // load ui from fxml","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        // set properties of label node","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        dialog.setFont(new Font(14.0));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        // set properties of imageview node","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        // set background color of dialog box","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.LIGHTCYAN, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right,","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"     * and the dialog background color is pink.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        ObservableList\u003cNode\u003e temp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        Collections.reverse(temp);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"        this.getChildren().setAll(temp);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.LIGHTPINK, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"    public static DialogBox getUserDialog(String input, Image userImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"        return new DialogBox(input, userImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    public static DialogBox getDidierDialog(String response, Image didierImage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        DialogBox dialogBox \u003d new DialogBox(response, didierImage);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":75}},{"path":"src/main/java/didier/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.controller;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"import didier.Didier;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":" * Controller for the Main Window. Provides layout for other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    private Didier didier;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    private Image didierImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/didier.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"     * Constructor for the MainWindow.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"     * @param stage the stage where the MainWindow object is set.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    public MainWindow(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        userInput.setOnAction(e -\u003e handleUserInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"        sendButton.setOnMouseClicked(e -\u003e handleUserInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        dialogContainer.getChildren().add(DialogBox.getDidierDialog(Didier.getBotGreeting(), didierImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"    public void setDidier(Didier didier) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"        this.didier \u003d didier;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Didier\u0027s reply","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"        String response \u003d didier.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"                DialogBox.getDidierDialog(response, didierImage));","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"        if (!didier.getIsActive()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"            this.stage.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":73}},{"path":"src/main/java/didier/exception/DateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that the date provided by the user is not in the correct format.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"public class DateFormatException extends DidierException {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"    public DateFormatException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"        super(\"The date must be in the format yyyy-mm-dd. \");","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"vansh284":10}},{"path":"src/main/java/didier/exception/DidierException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that some error occurred during the user interaction with Didier. This is the","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * parent class of all the checked exceptions that could be thrown due to user interaction with Didier.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"public class DidierException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"    public DidierException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":11}},{"path":"src/main/java/didier/exception/DuplicateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that a duplicate task is being attempted to be added","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * to the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"public class DuplicateTaskException extends DidierException {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"        super(\"This task already exists in the list. \");","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"vansh284":12}},{"path":"src/main/java/didier/exception/ElementMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that the user has not provided all the elements necessary for the command they","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * requested to be executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"public class ElementMissingException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    public ElementMissingException(String element) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"        super(\"The \" + element + \" of the task is missing. \");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":12}},{"path":"src/main/java/didier/exception/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that the file has been corrupted as the program can no longer make sense of its","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" * contents so the user may need to delete the file for the application to continue working as normal again.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"public class FileCorruptedException extends DidierException {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    public FileCorruptedException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"        super(\"The task file was corrupted. Please delete the file.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"vansh284":12}},{"path":"src/main/java/didier/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that the user command inputted is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"public class InvalidCommandException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"        super(\"I don\u0027t quite understand \" + command + \". \");","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":11}},{"path":"src/main/java/didier/exception/TaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * Thrown to indicate that the task number index on which the user tried to do an operation is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"public class TaskNumberException extends DidierException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"    public TaskNumberException(String taskNumber) {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"        super(taskNumber + \" is an invalid task number. \");","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"vansh284":10}},{"path":"src/main/java/didier/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * A Deadline is a Task which needs to be completed by a certain date. As a result, it keeps track","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * of when it must be completed by.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Deadline object. The deadline is marked as undone by default at the start.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Deadline object that allows the user to specify whether the Deadline is done","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"     * or undone initially.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        return String.format(\"D|%s|%s\", super.composeToFileString(), this.by.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"            return this.by.equals(deadline.by) \u0026\u0026 super.equals(obj);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":55}},{"path":"src/main/java/didier/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":" * An Event is a Task that will take place over a specific time period. Therefore, it must keep track","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":" * of when the event starts and when the event ends.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Event object. Event is marked as undone by default at the start.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     * The constructor for the Event object that allows the user to specify whether the Event is done","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     * or undone initially.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"        return String.format(\"E|%s|%s|%s\", super.composeToFileString(), this.from.toString(), this.to.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"            return this.from.equals(event.from) \u0026\u0026 this.to.equals(event.to) \u0026\u0026 super.equals(obj);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":63}},{"path":"src/main/java/didier/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import didier.exception.FileCorruptedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":" * The Task class encapsulates a real-life task. A basic task has a description and keeps track of","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":" * whether it is completed or not. It is declared abstract as as task must take one of three concrete forms:","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":" * ToDo, Deadline or Event.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"    private String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * Constructor for the Task object. Task is marked as undone by default at the start.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"     * Constructor for the Task object that allows user to specify if the task is done or not initially.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"     * @param isDone Whether the task is done or not.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"     * Marks this task object to be done.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"     * Marks this task object to be undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"     * Composes this task object and returns it in a String format suitable to be written into a file.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"     * This is used to save the task in the local memory.","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"     * @return The task composed as a String.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        return String.format(\"%s|%s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"     * Parses the given string obtained from a file into a Task object.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"     * @param fileString The String to be parsed.","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"     * @throws FileCorruptedException If the file is corrupted and so fileString cannot be parsed.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"    public static Task parseFileString(String fileString) throws FileCorruptedException {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"            String[] taskDetails \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"            String taskType \u003d taskDetails[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"            boolean taskIsDone \u003d Integer.parseInt(taskDetails[1]) !\u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"            String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"            case \"T\":","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"                return new ToDo(taskDescription, taskIsDone);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"            case \"D\":","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"                LocalDate by \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"                return new Deadline(taskDescription, by, taskIsDone);","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"            case \"E\":","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"                LocalDate from \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"                LocalDate to \u003d LocalDate.parse(taskDetails[4]);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"                return new Event(taskDescription, from, to, taskIsDone);","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"            default:","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"                throw new FileCorruptedException();","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"            throw new FileCorruptedException();","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"     * Returns whether the description of this task contains the keyword or not.","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"     * @param keyword The keyword to search for in the task description.","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"     * @return True if the task description contains the keyword else false.","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"    public boolean descriptionHasKeyword(String keyword) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"            Task task \u003d (Task) obj;","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"            return this.description.equals(task.description);","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":116}},{"path":"src/main/java/didier/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":" * A ToDo is the most basic type of Task. It only needs to be supplied with its description.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"     * The constructor for the ToDo object. The todo is marked as undone by default at the start.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"     * The constructor for the ToDo object that allows the user to specify whether the ToDo is done or","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"     * undone initially.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"     * @param isDone Whether the todo is done or not.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    public String composeToFileString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        return String.format(\"T|%s\", super.composeToFileString());","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" \u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"         type\u003d\"javafx.scene.layout.AnchorPane\"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"         prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"vansh284":24}},{"path":"src/test/java/didier/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.command.AddCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"import didier.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"import didier.command.DeleteCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"import didier.command.ExitCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"import didier.command.FindCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"import didier.command.ListCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"import didier.command.MarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"import didier.exception.DidierException;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof ListCommand, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"    public void parse_mark_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"mark 2\");","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof MarkCommand, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"    public void parse_delete_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"delete 2\");","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof DeleteCommand, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"    public void parse_event_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"event borrow book \\\\from 2011-11-11 \\\\to 2011-11-12\");","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof AddCommand, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"    public void parse_bye_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof ExitCommand, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"    public void parse_unmark_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"unmark a\");","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof MarkCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"a is an invalid task number. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"    public void parse_delete_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"delete a\");","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof DeleteCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"a is an invalid task number. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"vansh284"},"content":"    public void parse_deadline_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"deadline borrow book\");","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof AddCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The deadline of the task is missing. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"vansh284"},"content":"    public void parse_eventDateMissing_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"event borrow book \\\\from 2022-12-11  \");","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof AddCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The end date of the task is missing. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"vansh284"},"content":"    public void parse_eventDateFormatWrong_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"event borrow book \\\\from 2022-11-31 \\\\to 2022-11-20\");","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof AddCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The date must be in the format yyyy-mm-dd. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"vansh284"},"content":"    public void parse_todo_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"todo    \");","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof AddCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The description of the task is missing. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"vansh284"},"content":"    public void parse_find_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"find    \");","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof FindCommand, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The keyword of the task is missing. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"vansh284"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"vansh284"},"content":"            Command command \u003d Parser.parseCommand(\"g\");","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"vansh284"},"content":"            assertEquals(command instanceof Command, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"vansh284"},"content":"        } catch (DidierException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"I don\u0027t quite understand g. \", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"vansh284":156}},{"path":"src/test/java/didier/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.exception.TaskNumberException;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    public void remove_validIndex_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"        taskList.addTask(null);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"            assertEquals(taskList.removeTask(1), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        } catch (TaskNumberException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"    public void remove_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        taskList.addTask(null);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"            assertEquals(taskList.removeTask(2), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"        } catch (TaskNumberException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"            assertEquals(e.getMessage(), \"2 is an invalid task number. \");","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"vansh284":35}},{"path":"src/test/java/didier/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"package didier.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"import didier.exception.FileCorruptedException;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_validMarkedToDo_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"T|1|borrow book\").toString(), \"[T][X] borrow book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_validUnmarkedDeadline_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"D|0|borrow book|2011-10-11\").toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"                    \"[D][ ] borrow book (by: Oct 11 2011)\");","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_validUnmarkedEvent_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"E|0|borrow book|2011-10-11|2011-11-12\").toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"                    \"[E][ ] borrow book (from: Oct 11 2011 to: Nov 12 2011)\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_invalidTask_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"X|0|borrow book|2011-12-11\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The task file was corrupted. Please delete the file.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"D|0|borrow book|2011-13-11\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The task file was corrupted. Please delete the file.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_invalidSeparator_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"D,0,borrow book,2011-10-11\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The task file was corrupted. Please delete the file.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"vansh284"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"vansh284"},"content":"    public void parseFileString_truncatedEvent_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"vansh284"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"vansh284"},"content":"            assertEquals(Task.parseFileString(\"E|0|borrow book|2011-10-11\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"vansh284"},"content":"            fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"vansh284"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"vansh284"},"content":"            assertEquals(\"The task file was corrupted. Please delete the file.\", e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"vansh284"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"vansh284"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"vansh284"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"vansh284"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"vansh284":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vansh284"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"vansh284"},"content":"todo set up project","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"vansh284"},"content":"todo call mother","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"vansh284"},"content":"mark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"vansh284"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"vansh284"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"vansh284"},"content":"unmark 2","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"deadline return book \\by 2019-10-15","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"vansh284"},"content":"deadline finish project \\by 2011-11-11","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"vansh284"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"vansh284"},"content":"event dinner with family \\from 2012-01-01 \\to 2013-01-02","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"vansh284"},"content":"mark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"vansh284"},"content":"deadline submit application \\by gibberish","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"vansh284"},"content":"deadline submit application \\by 2012-13-30","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"vansh284"},"content":"mark 12","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"vansh284"},"content":"gibberish","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"vansh284"},"content":"event lunch with family \\from 1997-11-30 \\to 1998-12-31","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"vansh284"},"content":"mark 7","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"vansh284"},"content":"mark 5","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"vansh284"},"content":"unmark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"vansh284"},"content":"unmark 6","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"vansh284"},"content":"fsdkfns","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"vansh284"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"vansh284"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"vansh284"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"vansh284"},"content":"deadline read book \\by","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"vansh284"},"content":"event basketball game \\from 2012-09-09 \\to","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"vansh284"},"content":"event football game","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"vansh284"},"content":"delete 4","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"vansh284"},"content":"delete 11","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"vansh284"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"vansh284"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"vansh284":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"vansh284"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\didier\\*.java ..\\src\\main\\java\\didier\\command\\*.java ..\\src\\main\\java\\didier\\exception\\*.java ..\\src\\main\\java\\didier\\task\\*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"vansh284"},"content":"java -classpath ..\\bin didier.Didier \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vansh284":2,"-":19}}]
