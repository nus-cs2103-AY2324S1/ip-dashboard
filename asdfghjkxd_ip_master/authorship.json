[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    mainClass.set(\"juke.Juke\")","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    archiveBaseName \u003d \"juke\"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"checkstyle {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":22,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"E|T|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|oh no is this a bug","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":5}},{"path":"src/main/java/juke/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Juke Virtual Assistant","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** UI for Juke. */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Storage for Juke. */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** Task List for Juke. */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for Juke.","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public Juke() throws JukeInitialisationException, JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage \u003d Storage.of();","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d TaskList.of(this.storage);","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        this.ui \u003d new Ui(new Scanner(System.in), this.storage, this.taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * Main function that is run when this Java file is compiled and executed.","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args CLI Arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            Juke jukeAssistant \u003d new Juke();","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            jukeAssistant.start();","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeInitialisationException | JukeStorageException","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                 | JukeParseException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            // program should not continue if it cannot initialise properly","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            // or if there are issues with retrieving data from the datafile","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            new JukeExceptionCommand(ex).complete();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * Starts the orchestrator for Juke.","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public void start() {","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        this.ui.start();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":58}},{"path":"src/main/java/juke/commands/JukeAddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Action that adds a Task to the Task Manager.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeAddTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** TaskList to manage all tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** JukeTask to add. */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final JukeTask task;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeAddTaskAction","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList TaskList","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task JukeTask to add","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeAddTaskCommand(TaskList taskList, JukeTask task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If there is an issue with storing changes","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.addTask(this.task);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(\"Task added: \" + this.task);","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":36}},{"path":"src/main/java/juke/commands/JukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalCommandArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.DateTimeParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract class used to dispatch commands to the respective commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeCommand extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates the specified JukeCommand of interest.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw command from the user input","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList TaskList object which manages all tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding JukeCommand object","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public static final JukeCommand of(String command, TaskList taskList) throws JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsedArgs \u003d Parser.parseBySpace(command);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeCommand.dispatch(parsedArgs, taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * Dispatches the commands to the necessary subclasses of JukeCommand.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList TaskList object which manages all tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding JukeCommand object","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeCommand dispatch(String[] args, TaskList taskList) throws JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeException(\"Oh no! No commands are present!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        String mainCommand \u003d args[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        String jukeOpError \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        switch (mainCommand) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukePrintCommand(taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeExitCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your mark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"                                                              \"mark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"                    int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"                    return new JukeMarkTaskDoneCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"                    jukeOpError \u003d \"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"for the command \\\"mark\\\"!\";","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your unmark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"                                                              \"unmark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"                    int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"                    return new JukeMarkTaskUndoneCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"                    jukeOpError \u003d \"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"for the command \\\"unmark\\\"!\";","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your delete command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"                                                       \"delete [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"                    int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"                    return new JukeDeleteTaskCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"                } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"                    jukeOpError \u003d \"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"for the command \\\"unmark\\\"!\";","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"                // contains only the command text","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your todo command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"                                                       \"todo [description]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"                // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"                String newArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"                JukeTask jt \u003d new JukeTodo(newArgs);","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"            // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"            String newDeadlineArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"            // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"            if (!Parser.isMatchByString(newDeadlineArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your deadline command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"                                                       \"deadline [description] /by [DD(-/|)MM(-/|)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"or DD(-/|)MM(-/|)YYYY]\\n(..) -\u003e any of\");","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"                String[] parsedArguments \u003d Parser.parseByByString(newDeadlineArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"                JukeTask jt \u003d new JukeDeadline(parsedArguments[0], DateTimeParser.parse(parsedArguments[1]));","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        case \"event\":","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"            // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"            String newEventArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"            // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"            if (!Parser.isMatchFromToString(newEventArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your event command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"                                                       \"event [description] /from [DD(-/|)MM(-/|)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"or DD(-/|)MM(-/|)YYYY]\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"/to [DD(-/|)MM(-/|)YYYY HH(-:)MM or DD(-/|)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"MM(-/|)YYYY]\\n(..) -\u003e any of\");","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"                String[] parsedArguments \u003d Parser.parseByFromToString(newEventArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"                LocalDateTime localTimeOne \u003d DateTimeParser.parse(parsedArguments[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"                LocalDateTime localTimeTwo \u003d DateTimeParser.parse(parsedArguments[2]);","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"                if (localTimeTwo.isBefore(localTimeOne)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"                    throw new JukeIllegalArgumentException(\"Oh no! The \\\"to\\\" date cannot be before the \"","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"                                                                   + \"\\\"from\\\" date!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"                JukeTask jt \u003d new JukeEvent(parsedArguments[0], localTimeOne, localTimeTwo);","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"            jukeOpError \u003d \"Oh no! I do not understand that command!\";","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"        // checks if there are any operational errors","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"        // note that this behaves similar to exceptions, in that older exceptions are overwritten by","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"        // newer ones","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"        throw new JukeIllegalArgumentException(jukeOpError);","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the command is carried out.","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"    public abstract void complete() throws JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":158}},{"path":"src/main/java/juke/commands/JukeDeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Action that deletes a Task from the Task Manager.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeleteTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** TaskList to manage all tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** JukeTask to remove. */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final int task;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeDeleteTaskAction.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList TaskList instance","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of task to delete","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeleteTaskCommand(TaskList taskList, int task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If there is an issue with storing changes","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        JukeTask jt \u003d this.taskList.deleteTask(this.task);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(\"Task deleted: \" + jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":37}},{"path":"src/main/java/juke/commands/JukeExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Action class that corresponds to an error action.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * This class may be deprecated in future use for favour of proper exception handling.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExceptionCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    private final Exception err;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create an Error Action.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExceptionCommand(Exception err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        this.err \u003d err;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(\"Error: \" + err);","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":27}},{"path":"src/main/java/juke/commands/JukeExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Action that is invoked when the user wishes to quit the assistant.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExitCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /** The farewell statement used by the assistant when the user decides to quit the assistant. */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String EXIT \u003d \"Goodbye!\";","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * JukeExitAction Constructor.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExitCommand() {}","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() throws JukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(EXIT);","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":24}},{"path":"src/main/java/juke/commands/JukeMarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a JukeTask as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskDoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** TaskList that manages the tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeMarkTaskDoneAction.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList JukeTaskManager that manages the tasks","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskDoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.markAsDone(this.index);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(\"Task Marked as Done!\\n\" + this.taskList.taskInformation(this.index));","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":35}},{"path":"src/main/java/juke/commands/JukeMarkTaskUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a JukeTask as undone.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskUndoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** TaskList that manages the tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeMarkTaskUndoneAction.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList TaskList that manages the tasks","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskUndoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If there is an issue with storing changes","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.markAsUndone(this.index);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(\"Task Marked as Undone!\\n\" + this.taskList.taskInformation(this.index));","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":35}},{"path":"src/main/java/juke/commands/JukePrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Action that invokes a print action on the command line.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukePrintCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** Object to print. */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    private final Object printTarget;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukePrintAction.","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * @param printTarget Object to print","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    public JukePrintCommand(Object printTarget) {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        this.printTarget \u003d printTarget;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Necessary method that is invoked when the action is carried out.","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    public void complete() {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(printTarget);","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":25}},{"path":"src/main/java/juke/core/JukeObject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.core;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents objects that Juke can handle.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeObject {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":7}},{"path":"src/main/java/juke/exceptions/JukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Base Exception class for which all other Juke Exceptions are based on.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Note that as this program is expected to parse any and all errors into a readable","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * format before being thrown back to the user through {@code JukeExceptionAction},","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * almost all exceptions should be unchecked and be caught only by the main event","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * loop which executes the Actions.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeException extends RuntimeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final String err;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a JukeException.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeException(String err) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.err \u003d err;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of the Exception.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the exception this object is encapsulating","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        return this.err;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":31}},{"path":"src/main/java/juke/exceptions/JukeInitialisationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that encapsulates the situation whereby Juke cannot","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * properly instantiate.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * All JukeInitialisationExceptions and subclasses of it should cause","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * the program to exit, as there is no way for the program to continue","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * if it cannot initialise the variables and data it needs to work.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeInitialisationException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a JukeInitialisationException.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeInitialisationException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":20}},{"path":"src/main/java/juke/exceptions/JukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error thrown when the parser for the data files cannot","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * parse the data.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * This is an unchecked exception as we cannot anticipate when a parsing","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * error will occur.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeParseException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a JukeParseException.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeParseException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":19}},{"path":"src/main/java/juke/exceptions/JukeStateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents the error when the user tries to modify the state of","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * any {@code JukeObject} unsuccessfully.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStateException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a JukeStateException.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStateException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":16}},{"path":"src/main/java/juke/exceptions/arguments/JukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.arguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that is thrown when an illegal argument(s) are used.","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * This exception is unchecked as we cannot anticipate the value of","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * the input arguments given by the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalArgumentException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error Description","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalArgumentException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":28}},{"path":"src/main/java/juke/exceptions/arguments/JukeIllegalCommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.arguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that is thrown when an illegal command argument is entered into","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * the command line.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalCommandArgumentException extends JukeIllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /** Expected Arguments. */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    private final String expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for {@code JukeIllegalCommandArgumentException}","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error Description","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param expectedArguments Expected arguments","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalCommandArgumentException(String err, String expectedArguments) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        this.expectedArguments \u003d expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of {@code JukeIllegalCommandArgumentException}.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString() + \"\\nUsage: \" + expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":29}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the storing, retrieving or modifying of data","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * in the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a JukeStorageException.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":18}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageReadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the reading data from the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageReadException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a {@code JukeStorageReadException}.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageReadException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":16}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageWriteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the writing of data to the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageWriteException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a {@code JukeStorageWriteException}.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * @param err Error description","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageWriteException(String err) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        super(err);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":16}},{"path":"src/main/java/juke/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Parses Datetime Strings into the relevant DateTime objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class DateTimeParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex for recognising DateTime inputs. */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String DATETIME_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4} \"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"            + \"([01]?[0-9]|2[0-3])?(-|:)?[0-5][0-9]$\";","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex for recognising Date inputs. */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String DATE_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4}\";","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input date is of the correct Date format.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param date Input date","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the String is a valid Date format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(DATE_REGEX, date);","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input date is of the correct DateTime format.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param datetime Input datetime","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the String is a valid DateTime format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isValidDateTime(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(DATETIME_REGEX, datetime);","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input String into a LocalDateTime object, provided that the","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * string meets the requirement of either being a valid Date or DateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @param datetime Input date/datetime string","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @return","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    public static LocalDateTime parse(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        // strip the datetime first to avoid any errors","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        datetime \u003d datetime.strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        if (isValidDateTime(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            String[] dateTimeSplit \u003d datetime.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            String[] date \u003d dateTimeSplit[0].split(\"\\\\/|-\");","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"            String[] time \u003d Pattern.matches(\"\\\\d{4}\", dateTimeSplit[1])","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                    ? new String[]{dateTimeSplit[1].substring(0, 2), dateTimeSplit[1].substring(2, 4)}","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"                    : dateTimeSplit[1].split(\"-|:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(date[2] + \"-\" + date[1] + \"-\" + date[0] + \"T\" + time[0] + \":\" + time[1] + \":00\");","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (isValidDate(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            String[] date \u003d datetime.split(\"\\\\/|-\");","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(date[2] + \"-\" + date[1] + \"-\" + date[0] + \"T00:00:00\");","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        throw new JukeParseException(\"Oh no! I cannot understand the date format you have given me!\\nEnsure that \"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                                             + \"datetimes are given as such: DD(/-)MM(/-)YYYY[ HH(:-)MM],\\nwhere \"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"                                             + \"(...) represents the set of acceptable symbols and [...] represents\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                                             + \"optional arguments.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     * Directly parse stored datafile representation of {@code LocalDateTime}","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     * objects into actual {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     * @param parsedDateTimeString Stored string","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code LocalDateTime} object","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    public static LocalDateTime fromParsedString(String parsedDateTimeString) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(parsedDateTimeString);","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeParseException(\"Oh no! I cannot understand the date format you have given me!\\nEnsure that \"","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"                                                 + \"datetimes are given as such: YYYY-MM-DDTHH:MM\");","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":81}},{"path":"src/main/java/juke/parsers/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Parses the datafile back into JukeTask objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * static methods.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class FileParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex String used to parse the datafile lines. */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String REGEX \u003d \"\\\\|\";","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a single task into a {@code JukeTask} object.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Single task to parse","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeTask} object","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeParseException if there are errors with parsing the datafile","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public static JukeTask parseTask(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        String[] data \u003d task.split(REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        if (data.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeParseException(\"Oh no! Todo \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeTodo(data[2], data[1].equals(\"T\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 4) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeParseException(\"Oh no! Deadline \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeDeadline(data[2], DateTimeParser.fromParsedString(data[3]), data[1].equals(\"T\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 5) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeParseException(\"Oh no! Event \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeEvent(data[2], DateTimeParser.fromParsedString(data[3]),","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                                 DateTimeParser.fromParsedString(data[4]), data[1].equals(\"T\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":56}},{"path":"src/main/java/juke/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Class that helps to parse the commands given by the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * static methods.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class Parser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for splitting a command by spaces. */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for checking a command by \"/by\". */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String CHECKING_BY_REGEX \u003d \".*\\\\s+/by\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for splitting a command by \"/by\". */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPLITTING_BY_REGEX \u003d \"\\\\s+/by\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for checking a command for \"/from\" and \"/to\". */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String CHECKING_FROM_TO_REGEX \u003d \".*\\\\s+/from\\\\s+.*|.*\\\\s+/to\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for splitting a command by \"/from\" and \"/to\". */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPLITTING_FROM_TO_REGEX \u003d \"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * Parse a command by a space. This method is used to obtain the first command in the command chain.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw Command","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of Strings which represents the tokens in the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseBySpace(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPACE_REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * Parse a command by the String \"/by\". This method is to be invoked only on a cleaned String where","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_BY_REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     * Parse a command by the String \"/from\" and \"/to. This method is to be invoked only on a","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * cleaned String where the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_FROM_TO_REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/by\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_BY_REGEX, command);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/from ... /to\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_FROM_TO_REGEX, command);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":75}},{"path":"src/main/java/juke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageReadException;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageWriteException;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.FileParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":" * Manages the storage and retrieval of data from the data file.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"public class Storage extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data directory. */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public static final Path DIR_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data file. */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public static final Path FILE_PATH \u003d Paths.get(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageManager} and creates the files","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * and directories required if necessary.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeStorageManager} instance","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeInitialisationException if the directories or files cannot be","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     *     created or initialised","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public static Storage of() throws JukeInitialisationException {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        // if the directory does not exist, the file also cannot exist","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Files.exists(DIR_PATH)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createDirectory(DIR_PATH);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createFile(FILE_PATH);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a directory to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            // if the dir exist but file doesn\u0027t, then just create the file","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createFile(FILE_PATH);","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a datafile to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        return new Storage();","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a list of saved task from the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     * @return List of {@code JukeTasks}","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or processed for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cJukeTask\u003e get() throws JukeStorageReadException {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedReader br \u003d Files.newBufferedReader(FILE_PATH)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"            String curr;","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"            List\u003cJukeTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"            while ((curr \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"                tasks.add(FileParser.parseTask(curr));","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"            return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageReadException(\"Oh no! I am unable to understand the data stored \"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"in the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     * Writes the list of tasks into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     * @param tasks List of {@code JukeTasks} to write","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or written to for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"    public void write(List\u003cJukeTask\u003e tasks) throws JukeStorageWriteException {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(FILE_PATH)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            for (JukeTask t : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"                bw.write(t.save());","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"                bw.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageWriteException(\"Oh no! I cannot save your data to the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":96}},{"path":"src/main/java/juke/tasks/JukeDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeadline extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[D] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** Deadline for Task. */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeDeadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeDeadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param completion Status of completion of the task","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline, boolean completion) throws JukeStateException {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        this(task, deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        if (completion) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"            this.markAsComplete();","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        return \"D\" + super.save() + \"|\" + deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of this {@code JukeDeadline} object","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeDeadline.TASK_DESCRIPTOR + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":61}},{"path":"src/main/java/juke/tasks/JukeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an Event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeEvent extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[E] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** Start Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** End Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor used to create an event.","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param start Start date/time","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param end End date/time","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor used to create an event.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task descriptioni","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @param start Start date/time","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param end End date/time","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @param completion Status of completion of the task","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime start, LocalDateTime end, boolean completion) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        this(taskName, start, end);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        if (completion) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            this.markAsComplete();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"        return \"E\" + super.save() + \"|\" + start + \"|\" + end;","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of this {@code JukeEvent} object","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeEvent.TASK_DESCRIPTOR + super.toString()","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"                + \" (from \" + start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs to \" + end.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \" hrs)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":66}},{"path":"src/main/java/juke/tasks/JukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents a task that the user adds to Juke.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeTask extends JukeObject {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Icon to display when the task is completed. */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String COMPLETED_INDICATOR \u003d \"[✓] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** Icon to display when the task not completed. */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String INCOMPLETE_INDICATOR \u003d \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Task description. */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private String taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Boolean to check if the task is completed */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Private constructor used to create an incomplete task.","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTask(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    public void markAsComplete() throws JukeStateException {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"Oh no! The task selected is already completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already incomplete","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    public void markAsIncomplete() throws JukeStateException {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"The task selected is already not completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     * Converts the task object to a String representation.","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of JukeTask","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? JukeTask.COMPLETED_INDICATOR : JukeTask.INCOMPLETE_INDICATOR) + taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    /** Abstract method that dictates how a particular task should be saved. */","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? \"|T|\" : \"|F|\") + this.taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":68}},{"path":"src/main/java/juke/tasks/JukeTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeTodo extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[T] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a Todo Task.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a Todo Task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param completion Status of completion of the task","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task, boolean completion) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        if (completion) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"            this.markAsComplete();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        return \"T\" + super.save();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of this {@code JukeTodo} object","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeTodo.TASK_DESCRIPTOR + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":47}},{"path":"src/main/java/juke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * A manager of JukeTasks. This class handles the addition/deletion/manipulation of","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * other child JukeTasks subsumed under its control.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class TaskList extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Header for Task Manager String representation. */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String HEADER \u003d \"\\n\\t\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e TASK LIST \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"            + \"\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** String representation of the Task Manager when it is empty. */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String EMPTY \u003d \"\\t\\t\\t\\t\\t\\t\\t\\t\\t!No Tasks Present!\";","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** List of JukeTasks under this Task Manager\u0027s control. */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private final LinkedList\u003cJukeTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * {@code JukeStorageManager} instance in charge of storing, retrieving and","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * modifying data.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private final Storage storageManager;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Private constructor for TaskList that initialises the","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * tasks within this Manager.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    private TaskList(Storage storageManager) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        this.storageManager \u003d storageManager;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e(storageManager.get());","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * Factory method to create a TaskList, from existing saved tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @return TaskList object","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    public static TaskList of(Storage storageManager) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        return new TaskList(storageManager);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * Adds a task.","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task JukeTask object.","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the task is added, else false","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    public boolean addTask(JukeTask task) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        boolean success \u003d this.tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        if (success) {","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"            this.storageManager.write(this.tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        return success;","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     * Deletes a task by index.","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of JukeTask object","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the task is successfuly deleted, else false","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if there the input argument is invalid","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTask deleteTask(int task) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask retTask \u003d this.tasks.get(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"            if (this.tasks.remove(retTask)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"                this.storageManager.write(this.tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"            return retTask;","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! The task index you have provided is not valid!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if there the input argument is invalid, and","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeIllegalArgumentException} if the user tries to mark a completed task as completed again, or","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeStorageException} if there is an issue with storing the changes","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    public void markAsDone(int index) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).markAsComplete();","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"        this.storageManager.write(this.tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the user tries to mark an incomplete task as incompleted again, or","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeStorageException} if there is an issue with storing the changes","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    public void markAsUndone(int index) throws JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).markAsIncomplete();","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"        this.storageManager.write(this.tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns information of the task at the specified index.","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"    public String taskInformation(int index) {","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        return this.tasks.get(index).toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"     * String representation of the task manager. This consists of all the tasks","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     * managed by this task manager.","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the task manager.","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"        builder.append(TaskList.HEADER);","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"            builder.append(TaskList.EMPTY);","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"                builder.append(\"\\t\")","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"                       .append((i + 1) + \". \")","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"                       .append(this.tasks.get(i))","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"                       .append(\"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"        return builder.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":148}},{"path":"src/main/java/juke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExitCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.core.JukeObject;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Orchestrates the operation of Juke by accepting commands and dispatching","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * them to the correct target methods.","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"public class Ui extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** Separator used by the virtual assistant to demarcate the start or end of a conversation */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SEPARATOR \u003d \"\\n-----------------------------------------------------------\"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"            + \"-------------------------------\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Juke Logo made from ASCII Art. Credits go to:","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * \u003ca href\u003d\"https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"            \"       __      __\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                    + \"      / /_  __/ /_____\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                    + \" __  / / / / / //_/ _ \\\\\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"                    + \"/ /_/ / /_/ / ,\u003c /  __/\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"                    + \"\\\\____/\\\\__,_/_/|_|\\\\___/\";","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /** Introductory statement used by the assistant when first booting up. */","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String INTRO \u003d \"What\u0027s up! My name is Juke (J|ava D|uke) and I will be your personal \"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            + \"assistant for today!\\nHow may I assist you?\";","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    /** The Virtual Assistant\u0027s output CLI prompt. */","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String JUKEOUTPUT \u003d \"\u003e\u003e\u003e \";","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    /** The user\u0027s input CLI prompt. */","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String JUKEINPUT \u003d \"juke\u003e \";","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    /** Scanner instance used to capture user input. */","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    private final Scanner jukeScanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /** Instance of TaskList that handles all JukeTasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /** Instance of Storage that handles all saved tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor for JukeOrchestrator.","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     * @param jukeScanner Scanner object to read in user input","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    public Ui(Scanner jukeScanner, Storage storage, TaskList taskList) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        this.jukeScanner \u003d jukeScanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * Method that begins the operation of the Assistant.","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    public void start() {","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        this.printIntroduction();","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        this.dispatch();","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * Dispatches the command and acts on it.","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    private void dispatch() {","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        JukeCommand action \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        do {","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"                // obtain user input","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"                System.out.print(Ui.JUKEINPUT);","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"                String inputCommand \u003d this.jukeScanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"                // parse the action into a JukeAction object","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"                // storage object is not passed into actions as storage is under the control of","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"                // tasklist; external access to storage is not authorised","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"                action \u003d JukeCommand.of(inputCommand, this.taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"                System.out.print(Ui.JUKEOUTPUT);","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"                // act on it, or any other future generated actions","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"                action.complete();","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"                System.out.print(Ui.SEPARATOR);","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (JukeException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"                // a bit of Pokémon exception handling over here, but it is necessary","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"                // to ensure that the UI obtains all possible exceptions to be thrown by the","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"                // program over the course of its runtime","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"                new JukeExceptionCommand(ex).complete();","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"                System.out.print(Ui.SEPARATOR);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"        } while (!(action instanceof JukeExitCommand));","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     * Prints out the Introduction statements.","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"    private void printIntroduction() {","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"        String builder \u003d Ui.LOGO","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"                + Ui.SEPARATOR","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"                + Ui.INTRO","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"                + Ui.SEPARATOR;","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        System.out.print(builder);","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":113}},{"path":"src/test/java/juke/parsers/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15-02-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15/02/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_invalidDate_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"32-12-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-14-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-05-1000000\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_whitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15-02-2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15/02/2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_excessivelyWhitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   -   02   -   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   /   02   /   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_whitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_excessivelyWhitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_whitespace_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02-2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02/2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02-2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02/2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_excessiveWhitespaces_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":151}},{"path":"src/test/java/juke/parsers/FileParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class FileParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(new JukeTodo(\"testing\", false).toString(), FileParser.parseTask(\"T|F|testing\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(new JukeDeadline(\"testing\", DateTimeParser.fromParsedString(\"2027-07-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"                     FileParser.parseTask(\"D|F|testing|2027-07-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(new JukeEvent(\"testing\", DateTimeParser.fromParsedString(\"2027-07-15T15:34\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"                                   DateTimeParser.fromParsedString(\"2027-08-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"                     FileParser.parseTask(\"E|F|testing|2027-07-15T15:34|2027-08-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"this is obviously wrong\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"T|Ftesting\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|2027-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|10000-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2027-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2027-07-15T15:34|200202-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_illegalDates_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"D|F|testing|202020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|2020-100-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|2020-07-2132131321T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-420-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-07-200T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-07-15T15:34|202721412-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-07-15T15:34|2020-800-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-07-15T15:34|2020-08-222323T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeParseException.class, () -\u003e FileParser.parseTask(\"E|Ftesting|2020-08-15T15:34|2020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":47}},{"path":"src/test/java/juke/parsers/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseSpace_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"test command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"test\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseSpace_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseSpace_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested   command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseSpace_gibberish_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string /by time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string /by time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string   /by   time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByString_gibberish_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string /from now /to later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string /from now /to later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string   /from   now   /to   later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_gibberish_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"    public void matchesByString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchByString(\"testing /by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"    public void matchesByString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchByString(\"testing/bytest\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"    public void matchesFromToString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"    public void matchesFromToString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":125}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"E|F|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"D|F|go to bed|9999-12-31T23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"E|F|go to prom|2023-08-09T00:00|2023-08-10T00:00","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"todo complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"deadline go to bed /by 31-12-9999 23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"event go to prom /from 09-08-2023 /to 10-08-2023","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"mark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"deadline /malformed","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"event /malformed /request","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"# set up the tasks.txt file","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"then","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"  echo \"E|T|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00\" \u003e ./data/tasks.txt","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"fi","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"if ! javac -cp \\","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core \\","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"-Xlint:none -d ../bin \\","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core/*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"java -classpath ../bin main.java.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"# compare the output to the expected output, ignoring ending whitespaces, since the output generates them but the","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"# expected file erases them","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"diff ACTUAL.TXT EXPECTED.TXT -b --ignore-blank-lines","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":33,"-":30}}]
