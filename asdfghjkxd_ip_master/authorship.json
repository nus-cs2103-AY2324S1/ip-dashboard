[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    mainClass.set(\"juke.Juke\")","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    archiveBaseName \u003d \"juke\"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"checkstyle {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":22,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"T|T|100000","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"T|F|bitch","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"E|F|bruh|2020-10-01T00:00|2022-10-05T00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"T|F|bruh","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|bruh","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"D|T|deadline task|2023-04-29T00:00","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"D|F|event|2001-01-01T00:00","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"E|F|idk|2019-02-01T00:00|2023-02-01T00:00","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"T|T|naur","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"T|F|task","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"E|F|this|2029-01-01T00:00|2099-01-01T00:00","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"T|F|this","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"asdfghjkxd":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"# Juke User Guide","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"Welcome to the `Juke` User Guide! Through this user guide, you will:","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"* Learn what `Juke` is and how it can help you track your tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"* Learn the features of `Juke`","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"* Learn the commands that `Juke` can understand","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"Let\u0027s get started!","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"## Getting Started","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"As `Juke` is a GUI application, you will need to install the relevant Java GUI libraries on","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"your machine.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"### Setting Up","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"To use `Juke`, you will need to install `Java 11` on your machine. You can find out more on","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"how you can install `Java 11` on your","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"[Windows machine](https://docs.azul.com/core/zulu-openjdk/install/windows),","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"[MacOS machine](https://docs.azul.com/core/zulu-openjdk/install/macos) or","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"[Linux machine](https://docs.azul.com/core/zulu-openjdk/install/debian) by clicking on the hyperlinked","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"text.","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"Ensure that you are downloading the latest version of `Java 11` from the websites that contain","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"the `JavaFX` library prepackaged in it.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **⚠️Warning**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"\u003e If you decide not to use the above `Java 11` JDKs for any reason, ensure that the JDK you","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"\u003e decide to use is at least `Java 11` and you install the relevant `JavaFX` library along with","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"\u003e the installation of the JDK!","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"Next, head to [this website](https://github.com/asdfghjkxd/ip/releases) and download the latest JAR file","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"attached in the latest release of `Juke`.","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"### Running `Juke`","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"Open up your device\u0027s terminal or command prompt. Navigate to the location where the JAR file is","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"downloaded into using the `cd` command. Click [here](https://www.educative.io/answers/what-is-cd-in-linux)","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"to learn more about the `cd` command.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"Finally, run the command `java -jar juke.jar` to start `Juke`!","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"### Frequently Asked Questions","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"Encountered some issues with installing Java or running the JAR file? Here are some common questions you may have!","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"**Q: Which version of `Java` do I need to install? There\u0027s so many versions called `Java 11`!**","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"**A:** Any version of Java 11 will do! Ensure that the JDK you install comes bundled with the JavaFX ","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"library! If you are using the Zulu JDK above, ensure that you install the ones that are tagged with ","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"\"JDK FX\" on the downloads page!","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"**Q: I have downloaded the JAR file, but I can\u0027t seem to execute the file!**","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"**A:** Do check that the correct Java version is being referenced when you execute the command ","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"\"java -jar juke.jar\", if you are unsure, run the command \"java --version\" to view the current ","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"version of Java that is used to execute the JAR file!","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"To change the default version of Java on your PC, check out \u003ca href\u003d\"https://www.baeldung.com/java-home-on-windows-7-8-10-mac-os-x-linux\"\u003ethis guide\u003c/a\u003e  ","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"to find out more on how you can set your PC\u0027s \"JAVA_HOME\" variable to allow the command to properly ","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"reference the Java 11 version you installed!","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"## GUI","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"The following image highlights some important aspects of the GUI:","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"![GUI](GUI.png)","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"## Notations","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"Before delving into the different commands that `Juke` can understand, here are some notations used in this User","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"Guide that you should take note of:","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"| Notation/Symbols                                          | Description                                                                                       |","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"|-----------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"| [...]                                                     | Square brackets describe mandatory inputs that, \u003cbr\u003eif omitted, will cause errors to appear       |","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"| \u003c...\u003e                                                     | Angular brackets represent parameters that you need to \u003cbr\u003e substitute with your own inputs       |","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"| ( ... OR ... ) **or** [ ... OR ... ] **or** ... OR ...    | The \"OR\" word is used to denote one mandatory \u003cbr\u003einput from the two inputs (represented by ...)  |","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"| ( ... AND ... ) **or** [ ... AND ... ] **or** ... AND ... | The \"AND\" word is used to denote two mandatory \u003cbr\u003einput from the two inputs (represented by ...) |","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"## Features","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"`Juke` is packed full of features to help you track your tasks!","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"### Add a `Todo` Task","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"You can add a `Todo` Task to help you track the tasks that you need to do! `Todo` tasks have","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"no deadlines, and are represented only by their completion status!","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"`todo [task name]`","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **⚠️Warning**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task name you enter **cannot** just be one or more spaces (\" \")!","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"* `todo task`","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"* `todo this is also a valid task`","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"* `todo task 1 is also a valid task`","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"Task added: [T] [] \u003cYOUR TASK NAME\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `todo` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"* `todo`: When the task name is omitted, an error will occur","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"### Add a `Deadline` Task","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"Create a `Deadline` Task to track completable tasks with a deadline!","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"`deadline [task name] /by [(DD(- OR /)MM(- OR /)YYYY HH(: or -)MM) OR (DD(- OR /)MM(- OR /)YYYY)]`","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"* Note the following","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"  * `DD`: 2-digit number representing the day","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"  * `MM`: 2-digit number representing the month","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"  * `YYYY`: 4-digit number representing the year","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"  * `HH`: 2-digit number representing the hour in 24 hours","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"  * `MM`: 2-digit number representing the minutes","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **⚠️Warning**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task name you enter **cannot** just be one or more spaces (\" \")!","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"* `deadline task /by 01/01/2023 23:59`","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"* `deadline other valid task /by 01/01/2023`","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"Task added: [D] [] \u003cYOUR TASK NAME\u003e by: \u003cTASK DEADLINE\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `deadline` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"* `deadline`, `deadline /by`: When the arguments are omitted, an error will occur","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"* `deadline error task /by gibberish`: When the date argument is invalid, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"### Create an `Event` Task","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"Create `Event` Tasks to track completable tasks with start and end dates!","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"event [task name] /from [(DD(- OR /)MM(- OR /)YYYY HH(: or -)MM) OR (DD(- OR /)MM(- OR /)YYYY)]","lastModifiedDate":"2023-09-16"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"/to [(DD(- OR /)MM(- OR /)YYYY HH(: or -)MM) OR (DD(- OR /)MM(- OR /)YYYY)]","lastModifiedDate":"2023-09-16"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"* Note the following","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"  * `DD`: 2-digit number representing the day","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"  * `MM`: 2-digit number representing the month","lastModifiedDate":"2023-09-16"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"  * `YYYY`: 4-digit number representing the year","lastModifiedDate":"2023-09-16"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"  * `HH`: 2-digit number representing the hour in 24 hours","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"  * `MM`: 2-digit number representing the minutes","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The date formats used in `event` follows closely to what `deadline` uses!","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **⚠️Warning**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task name you enter **cannot** just be one or more spaces (\" \")!","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"* `event task /from 01/01/2023 23:59 /to 01/01/2024 23:59`","lastModifiedDate":"2023-09-16"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"* `deadline other valid task /from 01/01/2023 /to 01/01/2024 23:59`","lastModifiedDate":"2023-09-16"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"Task added: [E] [] \u003cYOUR TASK NAME\u003e (from \u003cTASK START DATE\u003e to \u003cTASK END DATE\u003e)","lastModifiedDate":"2023-09-16"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `event` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":202,"author":{"gitId":"asdfghjkxd"},"content":"* `event`, `event /from`, `event /from /to`: When the arguments are omitted, an error will occur","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"asdfghjkxd"},"content":"* `event error task /from gibberish /to gibberish 2`: When the date argument is invalid, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":204,"author":{"gitId":"asdfghjkxd"},"content":"* `event error task 2 /from 01/01/2023 /to 01/01/2000`: When the start date is before the end date, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":205,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"### List all Tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"You may also view all Tasks that you have added so far to your task list!","lastModifiedDate":"2023-09-16"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":214,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":215,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":216,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":217,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":218,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":219,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":220,"author":{"gitId":"asdfghjkxd"},"content":"* `list`","lastModifiedDate":"2023-09-16"},{"lineNumber":221,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":222,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":223,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":224,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":225,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":226,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"asdfghjkxd"},"content":"Here\u0027s your list of tasks:","lastModifiedDate":"2023-09-16"},{"lineNumber":228,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":229,"author":{"gitId":"asdfghjkxd"},"content":"1. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":230,"author":{"gitId":"asdfghjkxd"},"content":"2. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":231,"author":{"gitId":"asdfghjkxd"},"content":"3. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":232,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":233,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":234,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":235,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":236,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `list` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":237,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":238,"author":{"gitId":"asdfghjkxd"},"content":"* `ls`: Using shortened spellings will result in errors","lastModifiedDate":"2023-09-16"},{"lineNumber":239,"author":{"gitId":"asdfghjkxd"},"content":"* \u0027list all my tasks`: Adding extra parameters will result in errors","lastModifiedDate":"2023-09-16"},{"lineNumber":240,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":241,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":243,"author":{"gitId":"asdfghjkxd"},"content":"### Delete a Task","lastModifiedDate":"2023-09-16"},{"lineNumber":244,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":245,"author":{"gitId":"asdfghjkxd"},"content":"You can also delete a Task from `Juke` to remove any unwanted task from your task list!","lastModifiedDate":"2023-09-16"},{"lineNumber":246,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":247,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":250,"author":{"gitId":"asdfghjkxd"},"content":"delete [TASK INDEX]","lastModifiedDate":"2023-09-16"},{"lineNumber":251,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":252,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":253,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task index is relative to the current order of the task list! If you are not sure","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"asdfghjkxd"},"content":"\u003e what the order of the list is, use the `list` command!","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":257,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":258,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":259,"author":{"gitId":"asdfghjkxd"},"content":"* `delete 1`","lastModifiedDate":"2023-09-16"},{"lineNumber":260,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":261,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":262,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":263,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":264,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":265,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":266,"author":{"gitId":"asdfghjkxd"},"content":"Task deleted: \u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":267,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":268,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":269,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":270,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":271,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `mark` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":272,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":273,"author":{"gitId":"asdfghjkxd"},"content":"* `delete 10000000`, `delete -1`: When attempting to delete a task that don\u0027t exist, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":274,"author":{"gitId":"asdfghjkxd"},"content":"* `delete 1` and then `delete 1` again: When attempting to delete a task that is already deleted, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":275,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":276,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":277,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":278,"author":{"gitId":"asdfghjkxd"},"content":"### Mark a Task as Done","lastModifiedDate":"2023-09-16"},{"lineNumber":279,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":280,"author":{"gitId":"asdfghjkxd"},"content":"You can mark a Task as complete to help you track your incomplete tasks!","lastModifiedDate":"2023-09-16"},{"lineNumber":281,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":282,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":283,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":284,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":285,"author":{"gitId":"asdfghjkxd"},"content":"mark [TASK INDEX]","lastModifiedDate":"2023-09-16"},{"lineNumber":286,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":287,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":288,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":289,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task index is relative to the current order of the task list! If you are not sure","lastModifiedDate":"2023-09-21"},{"lineNumber":290,"author":{"gitId":"asdfghjkxd"},"content":"\u003e what the order of the list is, use the `list` command!","lastModifiedDate":"2023-09-21"},{"lineNumber":291,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":292,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":293,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":294,"author":{"gitId":"asdfghjkxd"},"content":"* `mark 1`","lastModifiedDate":"2023-09-16"},{"lineNumber":295,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":296,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":297,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":298,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":299,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":300,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":301,"author":{"gitId":"asdfghjkxd"},"content":"Task marked as done: \u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":302,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":303,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":304,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task indicator will turn from `[ ]` to `[✓]`","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":307,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":308,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":309,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `mark` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":310,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":311,"author":{"gitId":"asdfghjkxd"},"content":"* `mark 10000000`, `mark -1`: When attempting to mark a task that don\u0027t exist, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":312,"author":{"gitId":"asdfghjkxd"},"content":"* `mark 1` and then `mark 1` again: When attempting to mark a task that is already marked, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":313,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":314,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":315,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":316,"author":{"gitId":"asdfghjkxd"},"content":"### Mark a Task as Undone","lastModifiedDate":"2023-09-16"},{"lineNumber":317,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":318,"author":{"gitId":"asdfghjkxd"},"content":"Conversely, you can also mark a Task as incomplete to help you track your completed tasks!","lastModifiedDate":"2023-09-16"},{"lineNumber":319,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":320,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":321,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":322,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":323,"author":{"gitId":"asdfghjkxd"},"content":"unmark [TASK INDEX]","lastModifiedDate":"2023-09-16"},{"lineNumber":324,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":325,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":326,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":327,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task index is relative to the current order of the task list! If you are not sure","lastModifiedDate":"2023-09-21"},{"lineNumber":328,"author":{"gitId":"asdfghjkxd"},"content":"\u003e what the order of the list is, use the `list` command!","lastModifiedDate":"2023-09-21"},{"lineNumber":329,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":330,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":331,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":332,"author":{"gitId":"asdfghjkxd"},"content":"* `unmark 1`","lastModifiedDate":"2023-09-16"},{"lineNumber":333,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":334,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":335,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":336,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":337,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":338,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":339,"author":{"gitId":"asdfghjkxd"},"content":"Task marked as undone: \u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":340,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":341,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":342,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":343,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task indicator will turn from `[✓]` to `[]`","lastModifiedDate":"2023-09-21"},{"lineNumber":344,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":345,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":346,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":347,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `mark` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":349,"author":{"gitId":"asdfghjkxd"},"content":"* `unmark 10000000`, `unmark -1`: When attempting to unmark a task that don\u0027t exist, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":350,"author":{"gitId":"asdfghjkxd"},"content":"* `unmark 1` and then `unmark 1` again: When attempting to unmark a task that is not marked, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":352,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":353,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":354,"author":{"gitId":"asdfghjkxd"},"content":"### Find your Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":356,"author":{"gitId":"asdfghjkxd"},"content":"Need help searching for a Task in your Task list? Use the Find feature to help you search","lastModifiedDate":"2023-09-16"},{"lineNumber":357,"author":{"gitId":"asdfghjkxd"},"content":"for the Task that you are looking for!","lastModifiedDate":"2023-09-16"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":359,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":362,"author":{"gitId":"asdfghjkxd"},"content":"find [QUERY]","lastModifiedDate":"2023-09-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":364,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":365,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":366,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The query can be any valid task name String (does not contain the illegal character `|`)!","lastModifiedDate":"2023-09-21"},{"lineNumber":367,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":368,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **⚠️Warning**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":369,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The task name you enter **cannot** just be one or more spaces (\" \")!","lastModifiedDate":"2023-09-21"},{"lineNumber":370,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":371,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":372,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":373,"author":{"gitId":"asdfghjkxd"},"content":"* `find my task`","lastModifiedDate":"2023-09-16"},{"lineNumber":374,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":375,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":376,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":377,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":378,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":379,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":380,"author":{"gitId":"asdfghjkxd"},"content":"Found them! Here are some of the tasks in your task list that contain the word ","lastModifiedDate":"2023-09-16"},{"lineNumber":381,"author":{"gitId":"asdfghjkxd"},"content":"\"\u003cQUERY\u003e\":","lastModifiedDate":"2023-09-16"},{"lineNumber":382,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":383,"author":{"gitId":"asdfghjkxd"},"content":"\u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":384,"author":{"gitId":"asdfghjkxd"},"content":"\u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":385,"author":{"gitId":"asdfghjkxd"},"content":"\u003cTASK\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":386,"author":{"gitId":"asdfghjkxd"},"content":"...","lastModifiedDate":"2023-09-16"},{"lineNumber":387,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":388,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":389,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":390,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":391,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `mark` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":392,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":393,"author":{"gitId":"asdfghjkxd"},"content":"* `find`: If the argument is omitted, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":394,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":395,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":396,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":397,"author":{"gitId":"asdfghjkxd"},"content":"### Sort your Tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":398,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":399,"author":{"gitId":"asdfghjkxd"},"content":"You can sort your tasks by their description, start date, end date and deadline in ascending","lastModifiedDate":"2023-09-16"},{"lineNumber":400,"author":{"gitId":"asdfghjkxd"},"content":"or descending order to help you be on task!","lastModifiedDate":"2023-09-16"},{"lineNumber":401,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":402,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":403,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":404,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":405,"author":{"gitId":"asdfghjkxd"},"content":"sort [SORT ORDER] [SORT BY]","lastModifiedDate":"2023-09-16"},{"lineNumber":406,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":407,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":408,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**   ","lastModifiedDate":"2023-09-21"},{"lineNumber":409,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The values that `[SORT ORDER]` can take are:","lastModifiedDate":"2023-09-21"},{"lineNumber":410,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `a` OR `asc` OR `ascend` OR `ascending`: Sorts the list in ascending order","lastModifiedDate":"2023-09-21"},{"lineNumber":411,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `d` OR `desc` OR `descend` OR `descending`: Sorts the list in descending order","lastModifiedDate":"2023-09-21"},{"lineNumber":412,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":413,"author":{"gitId":"asdfghjkxd"},"content":"\u003e **ℹ️ Note**  ","lastModifiedDate":"2023-09-21"},{"lineNumber":414,"author":{"gitId":"asdfghjkxd"},"content":"\u003e The values that `[SORT BY]` can take are:","lastModifiedDate":"2023-09-21"},{"lineNumber":415,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `d` OR `des` OR `descript` OR `description`: Sorts the list by task description","lastModifiedDate":"2023-09-21"},{"lineNumber":416,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `s` OR `st` OR `start` OR `start date`: Sorts the list by start date","lastModifiedDate":"2023-09-21"},{"lineNumber":417,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `e` OR `en` OR `end` OR `end date`: Sorts the list by end date","lastModifiedDate":"2023-09-21"},{"lineNumber":418,"author":{"gitId":"asdfghjkxd"},"content":"\u003e * `d` OR `dead` OR `deadln` OR `deadline`: Sorts the list by deadline","lastModifiedDate":"2023-09-21"},{"lineNumber":419,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":420,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":421,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":422,"author":{"gitId":"asdfghjkxd"},"content":"* `sort d d`","lastModifiedDate":"2023-09-16"},{"lineNumber":423,"author":{"gitId":"asdfghjkxd"},"content":"* `sort asc start date`","lastModifiedDate":"2023-09-16"},{"lineNumber":424,"author":{"gitId":"asdfghjkxd"},"content":"* `sort ascend description`","lastModifiedDate":"2023-09-16"},{"lineNumber":425,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":426,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":427,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":428,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will respond with:","lastModifiedDate":"2023-09-16"},{"lineNumber":429,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":430,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":431,"author":{"gitId":"asdfghjkxd"},"content":"Your task list is now sorted!","lastModifiedDate":"2023-09-16"},{"lineNumber":432,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":433,"author":{"gitId":"asdfghjkxd"},"content":"Here\u0027s your list of tasks:","lastModifiedDate":"2023-09-16"},{"lineNumber":434,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":435,"author":{"gitId":"asdfghjkxd"},"content":"1. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":436,"author":{"gitId":"asdfghjkxd"},"content":"2. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":437,"author":{"gitId":"asdfghjkxd"},"content":"3. ...","lastModifiedDate":"2023-09-16"},{"lineNumber":438,"author":{"gitId":"asdfghjkxd"},"content":"...","lastModifiedDate":"2023-09-16"},{"lineNumber":439,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":440,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":441,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":442,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":443,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `sort` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":444,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":445,"author":{"gitId":"asdfghjkxd"},"content":"* `sort`, `sort d`: If the argument is omitted, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":446,"author":{"gitId":"asdfghjkxd"},"content":"* `sort ddescending ddeadline`: If the argument is not in any one of the permitted arguments above,","lastModifiedDate":"2023-09-16"},{"lineNumber":447,"author":{"gitId":"asdfghjkxd"},"content":"  an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":448,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":449,"author":{"gitId":"asdfghjkxd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":450,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":451,"author":{"gitId":"asdfghjkxd"},"content":"### Exit Juke","lastModifiedDate":"2023-09-16"},{"lineNumber":452,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":453,"author":{"gitId":"asdfghjkxd"},"content":"Leaving so soon? Exit Juke with ease!","lastModifiedDate":"2023-09-16"},{"lineNumber":454,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":455,"author":{"gitId":"asdfghjkxd"},"content":"#### Usage","lastModifiedDate":"2023-09-16"},{"lineNumber":456,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":457,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":458,"author":{"gitId":"asdfghjkxd"},"content":"bye","lastModifiedDate":"2023-09-16"},{"lineNumber":459,"author":{"gitId":"asdfghjkxd"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":460,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":461,"author":{"gitId":"asdfghjkxd"},"content":"#### Examples","lastModifiedDate":"2023-09-16"},{"lineNumber":462,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":463,"author":{"gitId":"asdfghjkxd"},"content":"* `bye`","lastModifiedDate":"2023-09-16"},{"lineNumber":464,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":465,"author":{"gitId":"asdfghjkxd"},"content":"#### Expected Outcome","lastModifiedDate":"2023-09-16"},{"lineNumber":466,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":467,"author":{"gitId":"asdfghjkxd"},"content":"If successful, `Juke` will exit.","lastModifiedDate":"2023-09-16"},{"lineNumber":468,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":469,"author":{"gitId":"asdfghjkxd"},"content":"#### Possible Errors","lastModifiedDate":"2023-09-16"},{"lineNumber":470,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":471,"author":{"gitId":"asdfghjkxd"},"content":"The following are examples of errors that could happen to the `bye` command:","lastModifiedDate":"2023-09-16"},{"lineNumber":472,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":473,"author":{"gitId":"asdfghjkxd"},"content":"* `bye Juke`: If arguments are given, an error will occur","lastModifiedDate":"2023-09-16"},{"lineNumber":474,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":475,"author":{"gitId":"asdfghjkxd"},"content":"## Quick Summary","lastModifiedDate":"2023-09-16"},{"lineNumber":476,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":477,"author":{"gitId":"asdfghjkxd"},"content":"Congrats for reaching the end of the User Guide!","lastModifiedDate":"2023-09-16"},{"lineNumber":478,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":479,"author":{"gitId":"asdfghjkxd"},"content":"Need a refresher? The following table provides a quick summary of the commands that Juke can understand:","lastModifiedDate":"2023-09-16"},{"lineNumber":480,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":481,"author":{"gitId":"asdfghjkxd"},"content":"| Command    | Description                                           |","lastModifiedDate":"2023-09-16"},{"lineNumber":482,"author":{"gitId":"asdfghjkxd"},"content":"|------------|-------------------------------------------------------|","lastModifiedDate":"2023-09-16"},{"lineNumber":483,"author":{"gitId":"asdfghjkxd"},"content":"| `todo`     | Creates a `Todo` Task                                 |","lastModifiedDate":"2023-09-16"},{"lineNumber":484,"author":{"gitId":"asdfghjkxd"},"content":"| `deadline` | Creates a `Deadline` Task                             |","lastModifiedDate":"2023-09-16"},{"lineNumber":485,"author":{"gitId":"asdfghjkxd"},"content":"| `event`    | Creates an `Event` Task                               |","lastModifiedDate":"2023-09-16"},{"lineNumber":486,"author":{"gitId":"asdfghjkxd"},"content":"| `list`     | Lists all the Tasks that are present in the task list |","lastModifiedDate":"2023-09-16"},{"lineNumber":487,"author":{"gitId":"asdfghjkxd"},"content":"| `mark`     | Marks a Task as complete                              |","lastModifiedDate":"2023-09-16"},{"lineNumber":488,"author":{"gitId":"asdfghjkxd"},"content":"| `unmark`   | Marks a Task as incomplete                            |","lastModifiedDate":"2023-09-16"},{"lineNumber":489,"author":{"gitId":"asdfghjkxd"},"content":"| `delete`   | Deletes a Task from the task list                     |","lastModifiedDate":"2023-09-16"},{"lineNumber":490,"author":{"gitId":"asdfghjkxd"},"content":"| `find`     | Searches for a Task based on the task description     |","lastModifiedDate":"2023-09-16"},{"lineNumber":491,"author":{"gitId":"asdfghjkxd"},"content":"| `sort`     | Sorts the task list                                   |","lastModifiedDate":"2023-09-16"},{"lineNumber":492,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":493,"author":{"gitId":"asdfghjkxd"},"content":"## Glossary","lastModifiedDate":"2023-09-16"},{"lineNumber":494,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":495,"author":{"gitId":"asdfghjkxd"},"content":"* **Command**: The possible inputs that you enter into the input box to tell Juke what you","lastModifiedDate":"2023-09-16"},{"lineNumber":496,"author":{"gitId":"asdfghjkxd"},"content":"  want Juke to do","lastModifiedDate":"2023-09-16"},{"lineNumber":497,"author":{"gitId":"asdfghjkxd"},"content":"* **GUI**: Graphical User Interface, an interactive interface that permits users to interact with graphical","lastModifiedDate":"2023-09-16"},{"lineNumber":498,"author":{"gitId":"asdfghjkxd"},"content":"  elements on the screen to perform tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":499,"author":{"gitId":"asdfghjkxd"},"content":"* **Java**: General-purpose Programming Language that Juke is written in","lastModifiedDate":"2023-09-16"},{"lineNumber":500,"author":{"gitId":"asdfghjkxd"},"content":"* **JavaFX**: A Java GUI library that Juke relies on to generate the graphical interface for users","lastModifiedDate":"2023-09-22"},{"lineNumber":501,"author":{"gitId":"asdfghjkxd"},"content":"  to interact with","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":477,"-":24}},{"path":"src/main/java/juke/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Juke Virtual Assistant.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents the max character width of any String printed to screen. */","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public static final int MAX_STRING_LENGTH \u003d 40;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Runs the main event loop for Juke. This method invokes the inner {@code start()}","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * method to start the UI.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args CLI Arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"            Juke jukeAssistant \u003d new Juke();","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"            jukeAssistant.start();","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeInitialisationException | JukeStorageException","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                 | JukeParseException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"            // program should not continue if it cannot initialise properly","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"            // or if there are issues with retrieving data from the datafile","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"            new JukeExceptionCommand(ex).execute(Response.of());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Starts the UI for Juke.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    private void start() {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        Application.launch(Ui.class);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":42}},{"path":"src/main/java/juke/commands/JukeAddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Action that adds a Task to the {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeAddTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code JukeTask} to add. */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final JukeTask task;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeAddTaskAction}","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task {@code JukeTask} to add","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeAddTaskCommand(TaskList taskList, JukeTask task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.addTask(this.task);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        return response","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(\"Task added: \" + this.task))","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(this.taskList.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.DateUtils;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalCommandArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.DateTimeParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract class used to dispatch commands to the respective commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeCommand extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Regex strings are reused with major modification from ChatGPT, and is built and tested with","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // https://regex101.com/.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Regex to detect \"|\" in the topic, which is a reserved character for the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Adapted from ChatGPT.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String ILLEGAL_TOPIC_REGEX \u003d \".*\\\\|.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates the specified {@code JukeCommand} of interest.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw command from the user input","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding {@code JukeCommand} object","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    public static JukeCommand of(String command, TaskList taskList) throws JukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeCommand.dispatchCommand(Parser.parseBySpace(command), taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * Dispatches the commands to the necessary subclasses of {@code JukeCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding {@code JukeCommand} object","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the argument provided is not understood","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeCommand dispatchCommand(String[] args, TaskList taskList) throws JukeIllegalArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeException(\"Oh no! No commands are present!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        String mainCommand \u003d args[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        switch (mainCommand) {","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.list(args, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.exit(args);","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.mark(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.unmark(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.delete(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.todo(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.deadline(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.event(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.find(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        case \"sort\":","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.sort(args, taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"            // exits the switch and throws an exception in the proceeding line","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not understand that command!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukePrintCommand} object. Command will print out the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukePrintCommand} object","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukePrintCommand list(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your list command!\",","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"list\");","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukePrintCommand(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeExitCommand} object. Command will exit Juke.","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeExitCommand} object","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeExitCommand exit(String[] args) {","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your bye command!\",","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"bye\");","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukeExitCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeMarkTaskDoneCommand} object. Command will mark a task as complete.","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeMarkTaskDoneCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeMarkTaskDoneCommand mark(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your mark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"mark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"                int index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeMarkTaskDoneCommand(taskList, index - 1);","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"mark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeMarkTaskUndoneCommand} object. Command will mark a task as incomplete.","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeMarkTaskUndoneCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeMarkTaskUndoneCommand unmark(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your unmark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"unmark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"                int index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeMarkTaskUndoneCommand(taskList, index - 1);","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeDeleteTaskCommand} object. Command will delete a task.","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeDeleteTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeDeleteTaskCommand delete(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your delete command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"delete [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"                int index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeDeleteTaskCommand(taskList, index - 1);","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object. Command will add a Todo task.","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand todo(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"            // contains only the command text","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your todo command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"todo [description]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"            // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // Method is reused from https://www.spigotmc.org/threads/how-to-combine-args.239109/","lastModifiedDate":"2023-09-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            String newArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, newArgs)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The input cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeTodo(newArgs);","lastModifiedDate":"2023-08-21"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object. Command will add a Deadline task.","lastModifiedDate":"2023-09-16"},{"lineNumber":218,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand deadline(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"asdfghjkxd"},"content":"        // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // Method is reused from https://www.spigotmc.org/threads/how-to-combine-args.239109/","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        String newDeadlineArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":229,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":230,"author":{"gitId":"asdfghjkxd"},"content":"        // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":231,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Parser.isMatchByString(newDeadlineArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your deadline command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":233,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"deadline [description] /by [DD(-/)MM(-/)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"or DD(-/)MM(-/)YYYY]\\nNote: (..) -\u003e any of\");","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedArguments \u003d Parser.parseByByString(newDeadlineArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":237,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, parsedArguments[0])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The input cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":240,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":241,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":242,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeDeadline(parsedArguments[0], DateTimeParser.parse(parsedArguments[1]));","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":245,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object. Command will add a Event task.","lastModifiedDate":"2023-09-16"},{"lineNumber":249,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand event(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"asdfghjkxd"},"content":"        // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // Method is reused from https://www.spigotmc.org/threads/how-to-combine-args.239109/","lastModifiedDate":"2023-09-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        String newEventArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":260,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":261,"author":{"gitId":"asdfghjkxd"},"content":"        // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Parser.isMatchFromToString(newEventArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your event command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"event [description] /from [DD(-/)MM(-/)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-27"},{"lineNumber":265,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"or DD(-/)MM(-/)YYYY] \"","lastModifiedDate":"2023-09-18"},{"lineNumber":266,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"/to [DD(-/)MM(-/)YYYY HH(-:)MM or DD(-/)\"","lastModifiedDate":"2023-08-27"},{"lineNumber":267,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"MM(-/)YYYY]\\nNote: (..) -\u003e any of\");","lastModifiedDate":"2023-09-18"},{"lineNumber":268,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedArguments \u003d Parser.parseByFromToString(newEventArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":270,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":271,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, parsedArguments[0])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":272,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The input cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":273,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":274,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":275,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime startTime \u003d DateTimeParser.parse(parsedArguments[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":276,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime endTime \u003d DateTimeParser.parse(parsedArguments[2]);","lastModifiedDate":"2023-09-08"},{"lineNumber":277,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":278,"author":{"gitId":"asdfghjkxd"},"content":"            if (DateUtils.isAfter(startTime, endTime)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":279,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The \\\"to\\\" date cannot be before the \"","lastModifiedDate":"2023-08-26"},{"lineNumber":280,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"\\\"from\\\" date!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":281,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":282,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":283,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeEvent(parsedArguments[0], startTime, endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":284,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":285,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":287,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":288,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":289,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeFindTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":290,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":291,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":292,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":293,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeFindTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":294,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":295,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeFindTaskCommand find(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":296,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":297,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your find command!\",","lastModifiedDate":"2023-08-27"},{"lineNumber":298,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"find [word]\");","lastModifiedDate":"2023-08-27"},{"lineNumber":299,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":300,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        // Method is reused from https://www.spigotmc.org/threads/how-to-combine-args.239109/","lastModifiedDate":"2023-09-16"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        String newFindArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":305,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":306,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukeFindTaskCommand(taskList, newFindArgs);","lastModifiedDate":"2023-08-27"},{"lineNumber":307,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":308,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":309,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":310,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeSortListCommand} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":311,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":312,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-16"},{"lineNumber":313,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":314,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeSortListCommand} object","lastModifiedDate":"2023-09-16"},{"lineNumber":315,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":316,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeSortListCommand sort(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-11"},{"lineNumber":317,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1 || args.length \u003e 3) {","lastModifiedDate":"2023-09-21"},{"lineNumber":318,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your sort command!\",","lastModifiedDate":"2023-09-11"},{"lineNumber":319,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"sort [a/asc/ascend/ascending | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":320,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"d/desc/descend/descending] \"","lastModifiedDate":"2023-09-16"},{"lineNumber":321,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"[d/des/descript/description | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":322,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"dl/dead/deadln/deadline | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":323,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"s/st/start/start date | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":324,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"e/en/end/end date]\");","lastModifiedDate":"2023-09-16"},{"lineNumber":325,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":326,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":327,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            // Method is reused from https://www.spigotmc.org/threads/how-to-combine-args.239109/","lastModifiedDate":"2023-09-16"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            String newSortArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 2, args.length));","lastModifiedDate":"2023-09-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":332,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":333,"author":{"gitId":"asdfghjkxd"},"content":"            SortOrderEnum sortOrder \u003d SortOrderEnum.ofOrder(args[1].toLowerCase());","lastModifiedDate":"2023-09-11"},{"lineNumber":334,"author":{"gitId":"asdfghjkxd"},"content":"            SortTypeEnum sortType \u003d SortTypeEnum.ofType(newSortArgs.toLowerCase());","lastModifiedDate":"2023-09-11"},{"lineNumber":335,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeSortListCommand(sortOrder, sortType, taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":336,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2023-09-11"},{"lineNumber":337,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your sort command!\",","lastModifiedDate":"2023-09-11"},{"lineNumber":338,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"sort [a/asc/ascend/ascending | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":339,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"d/desc/descend/descending] \"","lastModifiedDate":"2023-09-16"},{"lineNumber":340,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"[d/des/descript/description | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":341,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"dl/dead/deadln/deadline | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":342,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"s/st/start/start date | \"","lastModifiedDate":"2023-09-16"},{"lineNumber":343,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"e/en/end/end date]\");","lastModifiedDate":"2023-09-16"},{"lineNumber":344,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":345,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":346,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":347,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":348,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":349,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":350,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":351,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":352,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeException or any of its subclasses if there are any issues encountered","lastModifiedDate":"2023-09-08"},{"lineNumber":353,"author":{"gitId":"asdfghjkxd"},"content":"     *     during the execution of code","lastModifiedDate":"2023-09-08"},{"lineNumber":354,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":355,"author":{"gitId":"asdfghjkxd"},"content":"    public abstract Response execute(Response response) throws JukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":356,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":326,"-":30}},{"path":"src/main/java/juke/commands/JukeDeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Action that deletes a Task from the {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeleteTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** JukeTask to remove. */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final int task;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeleteTaskCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} instance","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of task to delete","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeleteTaskCommand(TaskList taskList, int task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        String taskInfo \u003d this.taskList.getTaskInformation(this.task);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.deleteTask(this.task);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        return response","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(\"Task deleted: \" + taskInfo))","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(this.taskList.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":45}},{"path":"src/main/java/juke/commands/JukeExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Action class that corresponds to an exception is raised.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExceptionCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private final Exception exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeExceptionCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param exception Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExceptionCommand(JukeException exception) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        return response.with(Dialog.ofJuke(exception.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":33}},{"path":"src/main/java/juke/commands/JukeExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Action that is invoked when the user wishes to quit Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExitCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** The farewell statement used by the assistant when the user decides to quit the assistant. */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String EXIT_STRING \u003d \"Goodbye!\";","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeExitCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExitCommand() {}","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        return response.with(Dialog.ofJuke(JukeExitCommand.EXIT_STRING));","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":28}},{"path":"src/main/java/juke/commands/JukeFindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Action that finds a Task in the {@code TaskList} according to the task description.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeFindTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** Word of interest to search. */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private final String word;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeFindTaskCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} instance","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Word of interest to search","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeFindTaskCommand(TaskList taskList, String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e foundTasks \u003d this.taskList.findTask(this.word);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            stringBuilder.append(\"Sorry! I could not find any task with the word \\\"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(this.word)","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(\"\\\" in the task list!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            stringBuilder.append(\"Found them! Here are some of the tasks in your task list that contain the \"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"                    + \"word \\\"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(this.word)","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(\"\\\":\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"            for (JukeTask t : foundTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                stringBuilder.append(t).append(\"\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        return response.with(Dialog.ofJuke(stringBuilder.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":59}},{"path":"src/main/java/juke/commands/JukeMarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a {@code JukeTask} as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskDoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} that manages the tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeMarkTaskDoneCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} that manages the tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskDoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.setAsComplete(this.index);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        return response","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(\"Task marked as done: \"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                                            + this.taskList.getTaskInformation(this.index)))","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(this.taskList.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukeMarkTaskUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a {@code JukeTask} as undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskUndoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} that manages the tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeMarkTaskUndoneCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} that manages the tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskUndoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.setAsIncomplete(this.index);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        return response","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(\"Task marked as undone: \"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                                         + this.taskList.getTaskInformation(this.index)))","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                .with(Dialog.ofJuke(this.taskList.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukePrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Action that invokes a print action on the command line.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukePrintCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** Object to print. */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private final JukeObject printTarget;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukePrintCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param printTarget {@code Object} to print","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public JukePrintCommand(JukeObject printTarget) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.printTarget \u003d printTarget;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        return response.with(Dialog.ofJuke(printTarget.toString()));","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":33}},{"path":"src/main/java/juke/commands/JukeSortListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Action that sorts the {@code TaskList}.","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeSortListCommand extends JukeCommand {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code SortOrderEnum} to sort the {@code TaskList} by (order). */","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final SortOrderEnum sortOrder;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code SortTypeEnum} to sort the {@code TaskList} on (fields). */","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private final SortTypeEnum sortType;","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs a sort list command.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder {@code SortOrderEnum} enum that describes the order of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType {@code SortTypeEnum} enum that describes the type of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object to sort","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeSortListCommand(SortOrderEnum sortOrder, SortTypeEnum sortType, TaskList taskList) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        this.sortType \u003d sortType;","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Invokes an action when the command is executed. Note that sorting the task list is","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * inherently destructive, and the initial order of the task list will be destroyed","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * after the sort.","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object composed with response from Juke or the user","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if there are any errors encountered when sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.sort(this.sortOrder, this.sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        return response.with(Dialog.ofJuke(\"Your task list is now sorted!\\n\\n\" + this.taskList));","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":50}},{"path":"src/main/java/juke/commons/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Provides some utility methods for DateTime comparisons.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class DateUtils {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares two {@code LocalDateTime} objects and returns the integer describing the","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * order of the {@code LocalDateTimes}.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param firstDate First {@code LocalDateTime} object","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param secondDate Second {@code LocalDateTime} object","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if the first datetime is before the second datetime, 0 if they are equal and 1 if the first datetime","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *     is after the second datetime","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    public static int compareDateTimes(LocalDateTime firstDate, LocalDateTime secondDate) {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        return firstDate.compareTo(secondDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares two {@code LocalDateTime} objects and checks if the first datetime is after the second datetime.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param firstDate First {@code LocalDateTime} object","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param secondDate Second {@code LocalDateTime} object","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the first datetime is after the second datetime","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isAfter(LocalDateTime firstDate, LocalDateTime secondDate) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        return firstDate.isAfter(secondDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"asdfghjkxd":32}},{"path":"src/main/java/juke/commons/classes/JukeObject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.classes;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents objects that Juke can handle.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * This class has no functionality, and is merely present for subclassing relationships.","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeObject {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":9}},{"path":"src/main/java/juke/commons/enums/SortOrderEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.enums;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Enumeration on the order in which to sort the {@code TaskList} by.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public enum SortOrderEnum {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** Ascending order sort. */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    ASCENDING,","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Descending order sort. */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    DESCENDING;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input string into a {@code SortOrderEnum} enum. switch-case","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * is adapted from GitHub Copilot.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param order String representing the order to sort by","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code SortOrderEnum} enum value","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    public static SortOrderEnum ofOrder(String order) {","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        String lowerCaseOrder \u003d order.toLowerCase().strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // switch-case cases are adapted from GitHub Copilot, with some modifications made","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // to the cases Strings","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        switch (lowerCaseOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        case \"a\":","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        case \"asc\":","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        case \"ascend\":","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        case \"ascending\":","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return SortOrderEnum.ASCENDING;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        case \"d\":","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case \"desc\":","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case \"descend\":","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        case \"descending\":","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return SortOrderEnum.DESCENDING;","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            throw new IllegalArgumentException(\"Oh no! The sort order you entered is invalid!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":27,"-":15}},{"path":"src/main/java/juke/commons/enums/SortTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.enums;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Enumeration on the type of sort to be performed on the {@code TaskList}.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public enum SortTypeEnum {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by description of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    DESCRIPTION,","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by start date of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    START_DATE,","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by end date of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    END_DATE,","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by deadline of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    DEADLINE;","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input string into a {@code SortTypeEnum} enum. switch-case","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * is adapted from GitHub Copilot.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param type String representing the type of sort to perform","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code SortTypeEnum} enum value","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public static SortTypeEnum ofType(String type) {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        String lowerCaseType \u003d type.toLowerCase().strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // switch-case cases are adapted from GitHub Copilot, with some modifications made","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // to the cases Strings","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        switch (lowerCaseType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case \"d\":","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case \"des\":","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        case \"descript\":","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case \"description\":","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return SortTypeEnum.DESCRIPTION;","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        case \"s\":","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        case \"st\":","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        case \"start\":","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        case \"start date\":","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return SortTypeEnum.START_DATE;","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        case \"e\":","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        case \"en\":","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        case \"end\":","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        case \"end date\":","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return SortTypeEnum.END_DATE;","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case \"dl\":","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case \"dead\":","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case \"deadln\":","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return SortTypeEnum.DEADLINE;","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            throw new IllegalArgumentException(\"Oh no! The sort type you entered is invalid!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":33,"-":25}},{"path":"src/main/java/juke/commons/exceptions/JukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Base Exception class for which all other Juke Exceptions are based on.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Note that as this program is expected to parse any and all errors into a readable","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * format before being thrown back to the user through {@code JukeExceptionAction},","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * almost all exceptions should be unchecked and be caught only by the main event","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * loop which executes the Actions.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * @see java.lang.RuntimeException","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeException extends RuntimeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final String error;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of the {@code JukeException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the exception this object is encapsulating","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        return this.error;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":35}},{"path":"src/main/java/juke/commons/exceptions/JukeInitialisationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that encapsulates the situation whereby Juke cannot","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * properly instantiate. This error cannot be recovered from and causes","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Juke to exit.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * All {@code JukeInitialisationExceptions} and subclasses of it should cause","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * the program to exit, as there is no way for the program to continue","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * if it cannot initialise the variables and data it needs to work.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeInitialisationException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeInitialisationException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeInitialisationException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":21}},{"path":"src/main/java/juke/commons/exceptions/JukeStateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents the error when the user tries to illegally modify the state of any","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * {@code JukeObject} or if the user tries to modify the state of any {@code JukeObject}","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * unsuccessfully.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStateException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStateException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStateException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":17}},{"path":"src/main/java/juke/commons/exceptions/arguments/JukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.arguments;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents illegal argument(s) being used anywhere in Juke. This exception is the","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * superclass of all other exceptions that involve the use of illegal arguments/values.","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalArgumentException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error Description","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalArgumentException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":28}},{"path":"src/main/java/juke/commons/exceptions/arguments/JukeIllegalCommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.arguments;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an illegal command argument being entered into the command line.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalCommandArgumentException extends JukeIllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** String representing the expected arguments for a command. */","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    private final String expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeIllegalCommandArgumentException}","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error Description","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param expectedArguments Expected arguments","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalCommandArgumentException(String error, String expectedArguments) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        this.expectedArguments \u003d expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of {@code JukeIllegalCommandArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString() + \"\\nUsage: \" + expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":30}},{"path":"src/main/java/juke/commons/exceptions/parsers/JukeDataFileParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.parsers;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the parsing the datafile.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDataFileParseException extends JukeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDataFileParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDataFileParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/commons/exceptions/parsers/JukeDateFormatParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.parsers;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the parsing of some datetime input.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDateFormatParseException extends JukeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDateFormatParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDateFormatParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/commons/exceptions/parsers/JukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.parsers;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error thrown when any parser encounters an error with parsing","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * some input data. This exception is the superclass of all other exceptions that","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * involve some parsing error in Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeParseException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":19}},{"path":"src/main/java/juke/commons/exceptions/storage/JukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a generic error with the storing, retrieving or modifying of data","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * in the datafile. This exception is the superclass of any other exception that","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * involves the use of the device\u0027s storage.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":19}},{"path":"src/main/java/juke/commons/exceptions/storage/JukeStorageReadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the reading data from the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageReadException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageReadException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageReadException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/commons/exceptions/storage/JukeStorageWriteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.exceptions.storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the writing of data to the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageWriteException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageWriteException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageWriteException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/commons/interfaces/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.interfaces;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Denotes a class that can be saved to the datafile.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public interface Savable {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the String which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    String save();","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":13}},{"path":"src/main/java/juke/commons/interfaces/TaskSortable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.interfaces;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Defines a contract whereby objects of generic type {@code T extends JukeTask} can be sorted.","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * @param \u003cT\u003e Generic type that extends {@code JukeTask}","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public interface TaskSortable\u003cT extends JukeTask\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Sorts the objects of type {@code T} in the specified order and by the specified sort type.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    int sortBy(T task, SortTypeEnum sortType);","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":19}},{"path":"src/main/java/juke/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Parses Datetime Strings into the relevant {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * Note: The regex patterns are adapted from ChatGPT, modified to better meet the requirements of","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Juke. \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class DateTimeParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Regex strings are reused with some modification from ChatGPT, and is also built and tested with","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // https://regex101.com/.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Regex for recognising DateTime inputs. The regex pattern below are adapted from ChatGPT,","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * modified to better meet the requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DATETIME_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4} \"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"([01]?[0-9]|2[0-3])?(-|:)?[0-5][0-9]$\";","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Regex for recognising Date inputs. The regex pattern below are adapted from ChatGPT,","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * modified to better meet the requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String DATE_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4}\";","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //@@ author","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Checks if the input date is of the correct Date format. A Date format is specified by only the date","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and does not include the time.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param date Input date","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return true if the String is a valid Date format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Pattern.matches(DateTimeParser.DATE_REGEX, date);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Checks if the input date is of the correct DateTime format. A DateTime format specifies both the date","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * and the time.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param datetime Input datetime","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return true if the String is a valid DateTime format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static boolean isValidDateTime(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Pattern.matches(DateTimeParser.DATETIME_REGEX, datetime);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the input String into a {@code LocalDateTime} object, provided that the","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * string meets the requirement of either being a valid Date or DateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param datetime Input date/datetime string","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @return {@code LocalDateTime} object representing the input datetime","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws JukeDateFormatParseException if the input String is not in the valid Date or DateTime format as","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *     described above","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static LocalDateTime parse(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            // strip the datetime first to avoid any errors","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            datetime \u003d datetime.strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (isValidDateTime(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                // Regex strings are reused with major modification from ChatGPT, and is built and tested with","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                // https://regex101.com/.","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                String[] dateTimeSplit \u003d datetime.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                String[] parsedDate \u003d dateTimeSplit[0].split(\"\\\\/|-\");","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                boolean isMatchingRegex \u003d Pattern.matches(\"\\\\d{4}\", dateTimeSplit[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"                String[] parsedTime \u003d isMatchingRegex","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"                        ? new String[]{dateTimeSplit[1].substring(0, 2), dateTimeSplit[1].substring(2, 4)}","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"                        : dateTimeSplit[1].split(\"-|:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"                return LocalDateTime.parse(parsedDate[2] + \"-\" + parsedDate[1] + \"-\" + parsedDate[0] + \"T\"","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"                                                   + parsedTime[0] + \":\" + parsedTime[1] + \":00\");","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            } else if (isValidDate(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"                String[] date \u003d datetime.split(\"\\\\/|-\");","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"                return LocalDateTime.parse(date[2] + \"-\" + date[1] + \"-\" + date[0] + \"T00:00:00\");","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDateFormatParseException(","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"                    \"Oh no! I cannot understand the date format you have given me! Ensure \"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"that datetimes are given as such: DD(/-)MM(/-)YYYY[ \"","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"HH(:-)MM], where (...) represents the set of acceptable \"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"                            + \"symbols and [...] represents optional arguments.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        throw new JukeDateFormatParseException(","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"                \"Oh no! I cannot understand the date format you have given me! Ensure \"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"                        + \"that datetimes are given as such:\\nDD(/-)MM(/-)YYYY[ \"","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"                        + \"HH(:-)MM], where (...) represents the set of acceptable \"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"                        + \"symbols and [...] represents optional arguments.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses stored datafile representation of {@code LocalDateTime}","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * objects into actual {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"     * @param dateTimeString Stored string","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code LocalDateTime} object","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"    public static LocalDateTime fromDateTimeString(String dateTimeString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(dateTimeString);","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (DateTimeParseException | JukeDateFormatParseException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDateFormatParseException(\"Oh no! I cannot understand the date format you have given me!\"","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"                                                           + \"\\nEnsure that datetimes are given as such: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"                                                           + \"YYYY-MM-DDTHH:MM\");","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":58,"-":65}},{"path":"src/main/java/juke/parsers/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.DateUtils;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeDataFileParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Contains methods used to parse the datafile back into {@code JukeTask} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":" * static methods.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class FileParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Regex strings are reused with major modification from ChatGPT, and is built and tested with","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // https://regex101.com/.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Regex String used to parse the datafile lines. The regex patterns below are","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * adapted from ChatGPT, modified to better meet the requirements of","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FILE_SEPARATOR_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a single task into a {@code JukeTask} object.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Single task to parse","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeTask} object","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeDataFileParseException if there are errors with parsing the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    public static JukeTask parseTask(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        String[] data \u003d task.split(FileParser.FILE_SEPARATOR_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        if (data.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDataFileParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Todo \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeTodo(data[2], data[1].equals(\"T\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 4) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Deadline \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeDeadline(data[2], DateTimeParser.fromDateTimeString(data[3]), data[1].equals(\"T\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 5) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Event \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime start \u003d DateTimeParser.fromDateTimeString(data[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime end \u003d DateTimeParser.fromDateTimeString(data[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"            if (DateUtils.isAfter(start, end)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Event start date cannot be after the end date!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeEvent(data[2], start, end, data[1].equals(\"T\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDataFileParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":65,"-":12}},{"path":"src/main/java/juke/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Contains methods used to parse the commands given by the user. Note that excessive whitespaces surrounding","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * command arguments will be ignored and the command will be treated as if there were no excessive","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * whitespaces in the first place, mimicking how commands are parsed in shells like zsh and bash.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via static methods.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Note: The regex patterns below are adapted and modified from ChatGPT, to better meet the requirements of","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * Juke. \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class Parser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Regex strings are reused with major modification from ChatGPT, and is built and tested with","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // https://regex101.com/.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * String regex for splitting a command by any number of spaces. The regex pattern below are","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * adapted from ChatGPT, modified to better meet the requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String SPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * String regex for checking a command by \"/by\", preceded or proceeded by any number of whitespaces","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * or characters. The regex pattern below are adapted from ChatGPT, modified to better meet the","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String CHECKING_BY_STRING_REGEX \u003d \".*\\\\s+/by\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * String regex for splitting a command by \"/by\", preceded or proceeded by any number of whitespaces.","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The regex pattern below are adapted from ChatGPT, modified to better meet the requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String SPLITTING_BY_STRING_REGEX \u003d \"\\\\s+/by\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * String regex for checking a command for \"/from\" and \"/to\", preceded or proceeded by any number of whitespaces","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * or characters. The regex pattern below are adapted from ChatGPT, modified to better meet the requirements","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String CHECKING_FROM_TO_STRING_REGEX \u003d \".*\\\\s+/from\\\\s+.*\\\\s+/to\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * String regex for splitting a command by \"/from\" and \"/to\", , preceded or proceeded by any number of whitespaces.","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The regex pattern below are adapted from ChatGPT, modified to better meet the requirements of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * \u003ca href\u003d\"https://regex101.com/\"\u003eThis\u003c/a\u003e was used to build and test the new regex patterns.","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String SPLITTING_FROM_TO_STRING_REGEX \u003d \"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by a space. This method is used to obtain the first command in the command chain.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw Command","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of Strings which represents the tokens in the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseBySpace(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPACE_REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by the String \"/by\". This method is to be invoked only on a cleaned String where","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_BY_STRING_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by the String \"/from\" and \"/to\". This method is to be invoked only on a","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * cleaned String where the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_FROM_TO_STRING_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/by\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_BY_STRING_REGEX, command);","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/from ... /to\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_FROM_TO_STRING_REGEX, command);","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":70,"-":45}},{"path":"src/main/java/juke/responses/Dialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.responses;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.components.DialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.components.JukeDialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.components.UserDialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Defines an abstract class that encapsulates the dialog of the user and Juke.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class Dialog {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents the dialog text to be printed. */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private final String dialogText;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs a {@code Dialog} object with the necessary dialog text.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Input dialog text","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public Dialog(String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.dialogText \u003d text;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs a {@code Dialog} object that corresponds to the user\u0027s inputs.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Input dialog text","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public static Dialog ofUser(String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        return new UserDialog(text);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs a {@code Dialog} object that corresponds to Juke\u0027s inputs.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Input dialog text","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public static Dialog ofJuke(String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukeDialog(text);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the text associated with this {@code Dialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the dialog contained in this object","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    public String getDialogText() {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        return dialogText;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the {@code DialogBox} representation of this {@code Dialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the dialog contained in this object","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public abstract DialogBox getDialogBoxRepresentation();","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     * Static nested class that represents a User dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    private static class UserDialog extends Dialog {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        /**","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"         * Constructs a {@code UserDialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"         *","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"         * @param text Input dialog text","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"         */","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        public UserDialog(String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"            super(text);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        /**","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"         * Returns the {@code UserDialogBox} representation of this {@code UserDialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"         *","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"         * @return String representing the dialog contained in this object","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"         */","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        public DialogBox getDialogBoxRepresentation() {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"            return new UserDialogBox(this);","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     * Static nested class that represents a Juke dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    private static class JukeDialog extends Dialog {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        /**","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"         * Constructs a {@code JukeDialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"         *","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"         * @param text Input dialog text","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"         */","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        public JukeDialog(String text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            super(text);","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        /**","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"         * Returns the {@code JukeDialogBox} representation of this {@code UserDialog} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"         *","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"         * @return String representing the dialog contained in this object","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"         */","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"        @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        public DialogBox getDialogBoxRepresentation() {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeDialogBox(this);","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"asdfghjkxd":104}},{"path":"src/main/java/juke/responses/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.responses;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.components.DialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Represents the two-sided conversation between Juke and the user. Future implementation of this class","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * may see the use of a history list to capture more conversations between the user and Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"public class Response extends JukeObject {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents a series of Dialogs to be printed */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private final List\u003cDialog\u003e messages;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code Response}. This method is made private to","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * prevent illegal instantiation from the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private Response() {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.messages \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code Response}. This method is made private to","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * prevent illegal instantiation from the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private Response(List\u003cDialog\u003e withDialogs) {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        this.messages \u003d new LinkedList\u003c\u003e(withDialogs);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code Response}. This method is made private to","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * prevent illegal instantiation from the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @param inputDialog Input dialog message to display","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    private Response(Dialog... inputDialog) {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        this();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        this.messages.addAll(List.of(inputDialog));","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a {@code Response} with no input or output messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} with no input or output messages","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    public static Response of() {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response();","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a {@code Response} with existing inputs.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object pre-populated with the dialog inputs","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    public static Response of(Dialog... dialogs) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(dialogs);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the list of dialogs mapped into its corresponding {@code DialogBox} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code List} of {@code DialogBox}","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cDialogBox\u003e getDialogBoxes() {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        return this.messages.stream().map(Dialog::getDialogBoxRepresentation).collect(Collectors.toList());","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * Composes the input {@code Dialog} with the existing {@code Dialogs}, and","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * return a new instance of {@code Response} with the input {@code Dialog}.","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * @param inputDialog Input {@code Dialog} object","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    public Response with(Dialog inputDialog) {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cDialog\u003e composedDialogs \u003d new LinkedList\u003c\u003e(this.messages);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        composedDialogs.add(inputDialog);","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(composedDialogs);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":84}},{"path":"src/main/java/juke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageReadException;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageWriteException;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.FileParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":" * Manages the storage and retrieval of data from the data file. Internal runtime data is","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":" * handled by the TaskList object, and any read/writes to the device\u0027s memory is routed through","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":" * this class.","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"public class Storage extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data directory. */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data file. */","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code Storage}. Prevents external instantiation through","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * any methods other than {@code Storage.of()}.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    private Storage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        super();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code Storage} and the files","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * and directories required if necessary.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Storage} instance that is fully instantiated","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeInitialisationException if the directories or files cannot be","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     *     created or initialised","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    public static Storage of() throws JukeInitialisationException {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        // if the directory does not exist, create the directory","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Files.exists(Storage.DIRECTORY_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createDirectory(Storage.DIRECTORY_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a directory to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        // if the dir exist but file doesn\u0027t, then just create the file","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Files.exists(Storage.FILE_PATH)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createFile(Storage.FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a datafile to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        // the file and directory should exist if execution reaches here","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        assert Files.exists(Storage.FILE_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        assert Files.exists(Storage.DIRECTORY_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        return new Storage();","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a list of saved task after the datafile is parsed by the {@code FileParser}.","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * Code is adapted from https://jsparrow.github.io/rules/use-files-buffered-reader.html#code-changes","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     * and https://www.baeldung.com/java-buffered-reader.","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"     * @return List of {@code JukeTasks} retrieved","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or processed for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cJukeTask\u003e read() throws JukeStorageReadException {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedReader br \u003d Files.newBufferedReader(Storage.FILE_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"            String curr;","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            List\u003cJukeTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"            while ((curr \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"                tasks.add(FileParser.parseTask(curr));","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"            return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageReadException(\"Oh no! I am unable to understand the data stored \"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"in the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     * Writes the list of tasks into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     * Code is adapted from https://jsparrow.github.io/rules/use-files-buffered-reader.html#code-changes and","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     * https://www.baeldung.com/java-write-to-file","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     * @param tasks List of {@code JukeTasks} to write","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or written to for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"    public void write(List\u003cJukeTask\u003e tasks) throws JukeStorageWriteException {","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(Storage.FILE_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"            for (JukeTask t : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"                bw.write(t.save());","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"                bw.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageWriteException(\"Oh no! I cannot save your data to the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":117}},{"path":"src/main/java/juke/tasks/JukeDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.DateUtils;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeStateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Deadline task. Deadline tasks contain a deadline which is represented by a","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * {@code LocalDateTime} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeadline extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[D] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Deadline for Task. */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeadline}.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeadline}.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        this(task, deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the String which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        return \"D\" + super.save() + \"|\" + deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTask} object with the input {@code JukeTask} object for order. This method should","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * not be directly invoked by the user as it is mainly used for sorting.","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object is before the {@code JukeTask} object passed in, 0 if they","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     *     are the same, and 1 if this {@code JukeDeadline} object is after the {@code JukeTask} object passed in","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            // reuses the superclass\u0027s description comparator method","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortType);","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareDeadlineOrEndDate(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareStartDate(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeDeadline} object with another input {@code JukeTask} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * This method should not be directly invoked by the user as it is mainly used for sorting.","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object\u0027s start date is before the start date of the","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"     *     input {@code JukeTask} object, 0 if they are the same, and 1 if this {@code JukeDeadline}\u0027s","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"     *     start date is after the start date of the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareStartDate(JukeTask task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines are assumed to have an infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"            // and is hence always before any event task","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"            return -1;","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines are of equal priority when compared to other deadlines","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"            return 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are assumed to have a smaller but infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"            // and are hence before after any deadline task","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"            return 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the deadline or end date of this {@code JukeDeadline} object","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"     * with another input {@code JukeEvent} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object\u0027s deadline is before the deadline/end date of the","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"     *     input {@code JukeTask} object, 0 if they are the same, and 1 if this {@code JukeDeadline}\u0027s","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"     *     deadline is after the deadline/end date of the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareDeadlineOrEndDate(JukeTask task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"            return DateUtils.compareDateTimes(this.deadline, ((JukeEvent) task).getEndDate());","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"            return DateUtils.compareDateTimes(this.deadline, ((JukeDeadline) task).deadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before deadlines","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"            return 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the deadline of this {@code JukeDeadline} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"     * @return End date of this {@code JukeEvent} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"        return this.deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeDeadline} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeDeadline.TASK_DESCRIPTOR","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"                + super.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"                + \" (by \"","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":156}},{"path":"src/main/java/juke/tasks/JukeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.DateUtils;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeStateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.TaskSortable;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an Event task. Event tasks contain both a startTime and endTime","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * deadline, which are represented by {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeEvent extends JukeTask implements TaskSortable\u003cJukeTask\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[E] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /** Start Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** End Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeEvent}.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * @param startTime Start date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param endTime End date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeEvent}.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @param startTime Start date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @param endTime End date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime startTime, LocalDateTime endTime, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"        this(taskName, startTime, endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            // the event should have a start date that is before the end date","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            assert startTime.isBefore(endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the String which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        return \"E\" + super.save() + \"|\" + startTime + \"|\" + endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeEvent} object with the input {@code JukeTask} object for order.","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * This method should not be directly invoked by the user as it is mainly used for sorting.","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeEvent} object is before the input {@code JukeTask} object, 0 if they","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     *     are the same, and 1 if this {@code JukeEvent} object is after the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            // reuses the superclass\u0027s description comparator method","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortType);","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareDeadlineOrEndDate(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareStartDate(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeEvent}\u0027s deadline or end date with respect to the input {@code JukeTask} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * This method should not be directly invoked by the user as it is mainly used for sorting.","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeEvent}\u0027s end date is before the deadline/end date of the input","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeTask} object, 0 if they are the same, and 1 if this {@code JukeEvent}\u0027s end","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     *     date is after the deadline/end date of the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareDeadlineOrEndDate(JukeTask task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"            JukeEvent event \u003d (JukeEvent) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"            return DateUtils.compareDateTimes(this.endTime, event.endTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"            return DateUtils.compareDateTimes(this.endTime, ((JukeDeadline) task).getDeadline());","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before events","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"            // and so events are always after todos, subjected to the constraints of the sort order","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            return 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeEvent} object with another input {@code JukeTask} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"     * This method should not be directly invoked by the user as it is mainly used for sorting.","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeEvent} object\u0027s start date is before the start date of the input {@code JukeTask}","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"     *     object, 0 if they are the same, and 1 if this {@code JukeEvent} object is after the start date of the input","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareStartDate(JukeTask task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"            JukeEvent event \u003d (JukeEvent) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"            return this.startTime.compareTo(event.startTime);","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline || task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before events","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"            // and so events are always after todos, subjected to the constraints of the sort order","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"            return 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the end date of this {@code JukeEvent} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"     * @return End date of this {@code JukeEvent} object.","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"        return this.endTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeEvent} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeEvent.TASK_DESCRIPTOR","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"                + super.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"                + \" (from \" + startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs to \" + endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \" hrs)\";","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":163}},{"path":"src/main/java/juke/tasks/JukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeStateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.Savable;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.TaskSortable;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents a task that the user can add to Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeTask extends JukeObject implements TaskSortable\u003cJukeTask\u003e, Savable {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** String to represent when the task is completed. */","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String COMPLETED_INDICATOR \u003d \"[✓] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** String to represent when the task not completed. */","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String INCOMPLETE_INDICATOR \u003d \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Task description. */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** Boolean to check if the task is completed */","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeTask}. Since this is an abstract method,","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * this method is purely for subclasses to call for initialising common aspects of","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTask(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsComplete() throws JukeStateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"Oh no! The task selected is already completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already incomplete","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsIncomplete() throws JukeStateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"The task selected is already not completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the String which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? \"|T|\" : \"|F|\") + this.taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the task description contains the word being queried. All subclassses of","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * {@code JukeTask} will reuse this method for checking.","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Keyword to check","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the task description contains the keyword, false otherwise","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    public boolean stringMatches(String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        return this.taskName.contains(word);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     * Converts the task object to its corresponding String representation.","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? JukeTask.COMPLETED_INDICATOR : JukeTask.INCOMPLETE_INDICATOR) + taskName;","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTask} object with the specified {@code JukeTask} object for order. This method","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * compares task description only.","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * \u003cp\u003eThis method is present mainly for polymorphism and method reuse.\u003c/p\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeTask} object is before the {@code JukeTask} object passed in, 0 if they","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     *     are the same, and 1 if this {@code JukeTask} object is after the {@code JukeTask} object passed in","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"        return this.taskName.compareTo(task.taskName);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":109}},{"path":"src/main/java/juke/tasks/JukeTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Todo task. Todo tasks do not have any deadlines.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeTodo extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[T] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeTodo}.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeTodo}.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the String which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        return \"T\" + super.save();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTodo} object with the input {@code JukeTask} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeTodo} object is before the input {@code JukeTask} object,","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     *     0 if they are of the same date order, and 1 if this {@code JukeTodo} object is after","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     *     the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            // reuses the superclass\u0027s description comparator method","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortType);","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareDates(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeTodo} object with the input {@code JukeTask} object.","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if the start date of this {@code JukeDeadline} object is before the start date of the input","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeTask} object, 0 if they are the same, and 1 if the start date of this {@code JukeDeadline}","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     *     object is after the start date of the input {@code JukeTask} object","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareDates(JukeTask task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent || task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are assumed to have an infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"            // and is hence always before any event task; and","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines have a larger but infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"            return -1;","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are of equal priority when compared to other todos","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            return 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeTodo} object","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeTodo.TASK_DESCRIPTOR + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":104}},{"path":"src/main/java/juke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeStateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" * Manages all {@code JukeTask}s. This class handles the addition/deletion/manipulation of","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":" * any {@code JukeTask}s that are created by the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"public class TaskList extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Header for {@code TaskList} String representation. */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_LIST_HEADER \u003d \"Here\u0027s your list of tasks:\\n\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** String representation of the {@code TaskList} when it is empty. */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String NO_TASKS_PRESENT_STRING \u003d \"No Tasks Present!\";","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /** List of JukeTasks under this {@code TaskList}\u0027s control. */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    private final LinkedList\u003cJukeTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * {@code Storage} instance in charge of storing, retrieving and modifying data.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code TaskList} with all tasks loaded from the datafile.","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @param storage The storage object that manages any I/O operations on the datafile","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    private TaskList(Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e(storage.read());","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code TaskList} from existing tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code TaskList} object","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    public static TaskList of(Storage storageManager) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        return new TaskList(storageManager);","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task {@code JukeTask} object.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"    public void addTask(JukeTask task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        int lengthOfTasks \u003d this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.tasks.add(task)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"            assert this.tasks.size() \u003d\u003d lengthOfTasks + 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * Deletes a task by index from the task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of {@code JukeTask} object","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"    public void deleteTask(int task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask taskToDelete \u003d this.tasks.get(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"            int lengthOfTasks \u003d this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            if (this.tasks.remove(taskToDelete)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"                assert this.tasks.size() \u003d\u003d lengthOfTasks - 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"                this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! The task index you have provided is not valid!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task in the task list as complete.","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the user tries to mark a completed task as completed again","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is an issue with storing the changes","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsComplete(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the user tries to mark an incomplete task as incompleted again","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is an issue with storing the changes","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsIncomplete(int index) throws JukeStorageException {","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).setAsIncomplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns information of the task at the input index.","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"    public String getTaskInformation(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"        return this.tasks.get(index).toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"     * Finds all tasks that match the specified word.","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Word of interest","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code List} of {@code JukeTask} objects whose subject matches the word","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cJukeTask\u003e findTask(String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e wordMatches \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"        for (JukeTask t : this.tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"            if (t.stringMatches(word)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"                wordMatches.add(t);","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"        return wordMatches;","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"     * Sorts the tasks in the {@code TaskList} by the input {@code SortOrderEnum} and {@code SortTypeEnum}.","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"    public final void sort(SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"        // stores the original copy of the tasks for error recovery","lastModifiedDate":"2023-09-11"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e originalTasks \u003d new LinkedList\u003c\u003e(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.sort((t1, t2) -\u003e t2.sortBy(t1, sortType));","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"            if (sortOrder.equals(SortOrderEnum.ASCENDING)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"                this.reverse();","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IllegalArgumentException | UnsupportedOperationException | ClassCastException ex) {","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"            // if there is an error, revert the changes","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.addAll(originalTasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"        } finally {","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"            // save any changes made to the task list","lastModifiedDate":"2023-09-11"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"     * Reverses the order of the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"    private void reverse() {","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"        Collections.reverse(this.tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of the {@code TaskList}, which contains all tasks present","lastModifiedDate":"2023-09-16"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"     * within the task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of this {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"            return TaskList.NO_TASKS_PRESENT_STRING;","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"asdfghjkxd"},"content":"        builder.append(TaskList.TASK_LIST_HEADER);","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"            builder.append(i + 1)","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"                   .append(\". \")","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"                   .append(this.tasks.get(i))","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"                   .append(\"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"asdfghjkxd"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":216}},{"path":"src/main/java/juke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * User interface of Juke.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class Ui extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Name of the application. */","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public static final String APPLICATION_NAME \u003d \"Juke\";","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Height of the window. */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    public static final double WINDOW_HEIGHT \u003d 700.0d;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /** Width of the window. */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    public static final double WINDOW_WIDTH \u003d 450.0d;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Code is largely reused from https://se-education.org/guides/tutorials/javaFxPart2.html and","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // https://se-education.org/guides/tutorials/javaFxPart4.html with very minor modifications.","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param stage the scaffold of the application, whereby Nodes/widgets will be displayed.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            // specify the overall look of the window","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            // window is non-resizable with a height of 700px and a width of 450px","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            stage.setTitle(Ui.APPLICATION_NAME);","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            stage.setMinHeight(Ui.WINDOW_HEIGHT);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            stage.setMinWidth(Ui.WINDOW_WIDTH);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":25,"-":29}},{"path":"src/main/java/juke/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Class reused from https://se-education.org/guides/tutorials/javaFxPart3.html.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Abstract class that is used to represent a dialog box that is","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * displayed to the user through the GUI.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Inverts the order of the widgets within this dialog box. This method is left here as a quick way","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * to reverse the order of the child widgets. This method will be deprecated in the future.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Deprecated","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e childWidgets \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        FXCollections.reverse(childWidgets);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.getChildren().setAll(childWidgets);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":8,"-":20}},{"path":"src/main/java/juke/ui/components/JukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a dialog box containing Juke\u0027s response.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDialogBox extends DialogBox {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** Container for the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private StackPane dialogBubble;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /** Background of the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    private Region backgroundRegion;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Style of loading the FXML file is reused from https://se-education.org/guides/tutorials/javaFxPart4.html.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** Text within the dialog box. */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label textLabel;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /** Profile image to display in the chat. */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ImageView displayImage;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an instance of {@code JukeDialogBox}.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param dialog Text to display in the dialog box","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JukeDialogBox(Dialog dialog) {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Juke.class.getResource(\"/view/JukeDialog.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.textLabel.setText(dialog.getDialogText());","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.backgroundRegion.maxHeightProperty().bind(this.textLabel.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.backgroundRegion.minHeightProperty().bind(this.textLabel.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.backgroundRegion.minWidthProperty().bind(this.textLabel.widthProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.backgroundRegion.maxWidthProperty().bind(this.textLabel.widthProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":25,"-":33}},{"path":"src/main/java/juke/ui/components/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a dialog box containing the user\u0027s message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class UserDialogBox extends DialogBox {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** Container for the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private StackPane dialogBubble;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /** Background of the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    private Region backgroundRegion;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Style of loading the FXML file is reused from https://se-education.org/guides/tutorials/javaFxPart4.html.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** Text within the dialog box. */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label textLabel;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /** Profile image to display in the chat. */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ImageView displayImage;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an instance of {@code UserDialogBox}.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param dialog Text to display in the dialog box","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public UserDialogBox(Dialog dialog) {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Juke.class.getResource(\"/view/UserDialog.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.textLabel.setText(dialog.getDialogText());","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.backgroundRegion.maxHeightProperty().bind(this.textLabel.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.backgroundRegion.minHeightProperty().bind(this.textLabel.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.backgroundRegion.minWidthProperty().bind(this.textLabel.widthProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.backgroundRegion.maxWidthProperty().bind(this.textLabel.widthProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":25,"-":33}},{"path":"src/main/java/juke/ui/windows/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.windows;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Dialog;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"//@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Code is largely reused with some major modifications from","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"// https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Controller class for the main window of the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /** Offset for the widgets. */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final double OFFSETS \u003d 1.5d;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /** Storage object that handles the loading and saving of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** TaskList object that handles the manipulation of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** ScrollPane container that contains a scrollable object. */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /** VBox container that contains the dialog bubbles. */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /** TextField that accepts user input. */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private TextField inputField;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /** Button that submits the user input. */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Button submitButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initialises the core services of Juke, such as the","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Storage and TaskList services.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void initialiseCoreServices() {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            // init services","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.storage \u003d Storage.of();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.taskList \u003d TaskList.of(this.storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (JukeInitialisationException | JukeStorageException","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                 | JukeParseException ex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    Dialog.ofJuke(ex.getMessage()).getDialogBoxRepresentation());","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Initialises the main window and configures it with the preconfigured parameters.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // anchor the widgets to the parent layout\u0027s edges","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AnchorPane.setTopAnchor(this.scrollPane, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AnchorPane.setBottomAnchor(this.submitButton, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AnchorPane.setBottomAnchor(this.inputField, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AnchorPane.setRightAnchor(this.submitButton, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AnchorPane.setLeftAnchor(this.inputField, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // anchor the scroll","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // add the introductory dialog to the dialog container","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addIntroductoryDialog();","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // handle user inputs","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.submitButton.setOnMouseClicked((event) -\u003e this.handleInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.inputField.setOnAction((event) -\u003e this.handleInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // initialise core services after setting the handlers","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.initialiseCoreServices();","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Dispatches the command and acts on it.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void handleInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String inputCommand \u003d this.inputField.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Response response \u003d Response.of(Dialog.ofUser(inputCommand.strip()));","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            JukeCommand action \u003d JukeCommand.of(inputCommand, this.taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            // invokes the exit action should the user key in \"bye\" as the command","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (action instanceof JukeExitCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            // otherwise, execute the command and get the responses from the user and Juke","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            response \u003d action.execute(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (JukeException ex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // execute an exception command and add the response to the user","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            response \u003d new JukeExceptionCommand(ex).execute(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            // finalise the dialog boxes to add","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            this.dialogContainer","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    .getChildren()","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    .addAll(response.getDialogBoxes());","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            this.inputField.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Adds the introduction dialog to the user\u0027s screen on initialisation.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void addIntroductoryDialog() {","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String introductoryMessage \u003d \"Hello! I\u0027m Juke (J|ava D|uke)!\\nWhat can I do for you today?\";","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.dialogContainer","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .getChildren()","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(Dialog.ofJuke(introductoryMessage).getDialogBoxRepresentation());","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Forces the application to exit. This may be deprecated in the future","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * if the \"bye\" command is deprecated.","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void exit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":20,"-":124}},{"path":"src/main/resources/images/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"# Acknowledgements","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"The image files in this directory are reused directly from https://se-education.org/guides/tutorials/javaFxPart3.html","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"with little modifications done to the images.","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"src/main/resources/view/JukeDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"Code reused from https://se-education.org/guides/tutorials/javaFxPart4.html, with some minor changes.","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"450.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"         prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cImageView fx:id\u003d\"displayImage\" fitHeight\u003d\"60.0d\" fitWidth\u003d\"60.0d\" preserveRatio\u003d\"true\" \u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cCircle radius\u003d\"30.0d\" centerX\u003d\"30.0\" centerY\u003d\"30.0\"/\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"                @@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"                Image reused from https://se-education.org/guides/tutorials/javaFxPart3.html.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cImage url\u003d\"@/images/DaDuke.png\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                @@author","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cStackPane fx:id\u003d\"dialogBubble\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cRegion fx:id\u003d\"backgroundRegion\" maxWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cbackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cBackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003cfills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003cBackgroundFill fill\u003d\"lightblue\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003cradii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"                                        \u003cCornerRadii radius\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003c/radii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003c/BackgroundFill\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003c/fills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003c/Background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Region\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"                Fix for bounded width but unbounded height label is adapted from","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"                https://github.com/nus-cs2103-AY1920S2/forum/issues/58","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cLabel fx:id\u003d\"textLabel\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cInsets top\u003d\"15.0\" right\u003d\"15.0\" bottom\u003d\"15.0\" left\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"5.0\" bottom\u003d\"10.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":65}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"Code reused from https://se-education.org/guides/tutorials/javaFxPart4.html, with some minor changes.","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"            prefHeight\u003d\"700.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"juke.ui.windows.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"                  prefHeight\u003d\"670.0\" prefWidth\u003d\"450.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cTextField fx:id\u003d\"inputField\" layoutY\u003d\"670.0\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"                 maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleInput\" prefHeight\u003d\"25.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                 prefWidth\u003d\"370.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cButton fx:id\u003d\"submitButton\" layoutX\u003d\"374.0\" layoutY\u003d\"671.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"              onMouseClicked\u003d\"#handleInput\" prefHeight\u003d\"25.0\" prefWidth\u003d\"75.0\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":33}},{"path":"src/main/resources/view/UserDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"Code reused from https://se-education.org/guides/tutorials/javaFxPart4.html, with some minor changes.","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Pos?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"450.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"         prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cStackPane fx:id\u003d\"dialogBubble\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cRegion fx:id\u003d\"backgroundRegion\" maxWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cbackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cBackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003cfills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003cBackgroundFill fill\u003d\"lightgreen\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003cradii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"                                        \u003cCornerRadii radius\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003c/radii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003c/BackgroundFill\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003c/fills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003c/Background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Region\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"                Fix for bounded width but unbounded height label is adapted from","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"                https://github.com/nus-cs2103-AY1920S2/forum/issues/58","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cLabel fx:id\u003d\"textLabel\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cInsets top\u003d\"15.0\" right\u003d\"15.0\" bottom\u003d\"15.0\" left\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cImageView fx:id\u003d\"displayImage\" fitHeight\u003d\"60.0d\" fitWidth\u003d\"60.0d\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cCircle radius\u003d\"30.0d\" centerX\u003d\"30.0\" centerY\u003d\"30.0\"/\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                @@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                Image reused from https://se-education.org/guides/tutorials/javaFxPart3.html.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cImage url\u003d\"@/images/DaUser.png\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"                @@author","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"                --\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    \u003calignment\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cPos fx:constant\u003d\"TOP_RIGHT\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/alignment\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"5.0\" bottom\u003d\"10.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"\u003c!--","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"@@author","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"--\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":69}},{"path":"src/test/java/juke/parsers/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Code is reused from GitHub Copilot autocompletion. Some test cases, as well as the data, may have been","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// inevitably reused during the autocompletion process.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Tests for the DateTimeParser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with valid dash inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidDate_validDash_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15-02-2023\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with valid slash inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isValidDate_validSlash_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15/02/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with valid mixed delimiters.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void isValidDate_validMixed_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15/02-2023\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with invalid day.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void isValidDate_invalidDay_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"32-12-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with invalid month.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void isValidDate_invalidMonth_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-14-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with invalid year.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void isValidDate_invalidYear_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-05-1000000\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with whitespace-leading or whitespace-trailing","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * commands with dash.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void isValidDate_whitespacedDash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15-02-2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with whitespace-leading or whitespace-trailing","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * commands with slash.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void isValidDate_whitespacedSlash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15/02/2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with excessively whitespaced commands with dash.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void isValidDate_excessivelyWhitespacedDash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   -   02   -   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with excessively whitespaced commands with slash.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void isValidDate_excessivelyWhitespacedSlash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   /   02   /   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with illegal symbol \"?\".","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void isValidDate_illegalSymbolsQuestionMark_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with illegal symbol \"|\".","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void isValidDate_illegalSymbolsPipe_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with malformed input with slash.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void isValidDate_malformedSlash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDate} method with malformed input with dash.","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void isValidDate_malformedDash_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with valid inputs one.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void isValidDateTime_normalCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with valid inputs two.","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void isValidDateTime_normalCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with valid inputs three.","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void isValidDateTime_normalCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with valid inputs four.","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void isValidDateTime_normalCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method whiteSpaced DateTimes for combination","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * one.","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void isValidDateTime_whitespacedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method whiteSpaced DateTimes for combination","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * two.","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void isValidDateTime_whitespacedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method whiteSpaced DateTimes for combination","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * three.","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void isValidDateTime_whitespacedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method whiteSpaced DateTimes for combination","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * four.","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void isValidDateTime_whitespacedCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with excessively whitespaced DateTimes","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * with combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void isValidDateTime_excessivelyWhitespacedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with excessively whitespaced DateTimes","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * with combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void isValidDateTime_excessivelyWhitespacedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with excessively whitespaced DateTimes","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * with combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void isValidDateTime_excessivelyWhitespacedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with excessively whitespaced DateTimes","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * with combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void isValidDateTime_excessivelyWhitespacedCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with illegal symbols with combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void isValidDateTime_illegalSymbolsCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with illegal symbols with combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void isValidDateTime_illegalSymbolsCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with illegal symbols with combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void isValidDateTime_illegalSymbolsCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with illegal symbols with combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void isValidDateTime_illegalSymbolsCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with malformed inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void isValidDateTime_malformedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with malformed inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void isValidDateTime_malformedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Tests for the {@code isValidDateTime} method with malformed inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public void isValidDateTime_malformedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid Date inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public void parse_validDateCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid Date inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void parse_validDateCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid Date inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public void parse_validDateCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid Date inputs combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    public void parse_validDateCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid DateTime inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public void parse_validDateTimeCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid DateTime inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public void parse_validDateTimeCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid DateTime inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public void parse_validDateTimeCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with valid DateTime inputs combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public void parse_validDateTimeCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with Date combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    public void parse_dateWhitespaceCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02-2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with Date combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    public void parse_dateWhitespaceCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02/2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with Date combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void parse_dateWhitespaceCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02/2023   \").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with Date combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    public void parse_dateWhitespaceCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02-2023   \").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with DateTime combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    public void parse_dateTimeWhitespaceCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with DateTime combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    public void parse_dateTimeWhitespaceCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":410,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with DateTime combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    public void parse_dateTimeWhitespaceCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":418,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs with DateTime combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    public void parse_dateTimeWhitespaceCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced Date combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":427,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    public void parse_dateExcessiveWhitespacesCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                \"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced Date combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":436,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    public void parse_dateExcessiveWhitespacesCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                \"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":444,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced Date combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public void parse_dateExcessiveWhitespacesCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                \"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":453,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced Date combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":454,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    public void parse_dateExcessiveWhitespacesCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                \"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":462,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced DateTime combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    public void parse_dateTimeExcessiveWhitespacesCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                \"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":471,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced DateTime combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":472,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    public void parse_dateTimeExcessiveWhitespacesCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                \"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":480,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced DateTime combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":481,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    public void parse_dateTimeExcessiveWhitespacesCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":485,"author":{"gitId":"-"},"content":"                \"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":489,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with excessively whitespaced DateTime combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    public void parse_dateTimeExcessiveWhitespacesCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":494,"author":{"gitId":"-"},"content":"                \"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":498,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed Date inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    public void parse_malformedDateCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed Date inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":507,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    public void parse_malformedDateCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":514,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed DateTime inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":515,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    public void parse_malformedDateTimeCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":522,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed DateTime inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":523,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    public void parse_malformedDateTimeCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed DateTime inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":531,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    public void parse_malformedDateTimeCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":538,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with malformed DateTime inputs combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":539,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    public void parse_malformedDateTimeCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for Date input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":547,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    public void parse_dateIllegalSymbolsCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":554,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for Date input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":555,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    public void parse_dateIllegalSymbolsCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for Date input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":563,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    public void parse_dateIllegalSymbolsCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":570,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for Date input combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":571,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    public void parse_dateIllegalSymbolsCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":578,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for DateTime input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":579,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    public void parse_dateTimeIllegalSymbolsCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":586,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for DateTime input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":587,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    public void parse_dateTimeIllegalSymbolsCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for DateTime input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":595,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    public void parse_dateTimeIllegalSymbolsCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":602,"author":{"gitId":"-"},"content":"     * Tests for the {@code parse} method with illegal symbols for DateTime input combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":603,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    public void parse_dateTimeIllegalSymbolsCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":608,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":609,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":11,"-":598}},{"path":"src/test/java/juke/parsers/FileParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeDataFileParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// Code is reused with minor modification from GitHub Copilot autocompletion.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Some test cases, as well as the data, may have been inevitably reused during the autocompletion process.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Tests for the FileParser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FileParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with valid inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parseTask_validCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new JukeTodo(\"testing\", false).toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                                FileParser.parseTask(\"T|F|testing\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with valid inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseTask_validCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new JukeDeadline(\"testing\", DateTimeParser","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                             .fromDateTimeString(\"2027-07-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                     FileParser.parseTask(\"D|F|testing|2027-07-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with valid inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseTask_validCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new JukeEvent(","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                             \"testing\", DateTimeParser.fromDateTimeString(\"2027-07-15T15:34\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                             DateTimeParser.fromDateTimeString(\"2027-08-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                     FileParser.parseTask(\"E|F|testing|2027-07-15T15:34|2027-08-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"this is obviously wrong\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"this is | also | obviously wrong\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|2027-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|10000-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination five.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationFive_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \"E|Ftesting|2027-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination six.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationSix_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \"E|Ftesting|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with malformed commands combination seven.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTask_malformedCombinationSeven_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \"E|Ftesting|2027-07-15T15:34|200202-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(\"D|F|testing|202020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(\"D|F|testing|2020-100-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \"D|F|testing|2020-07-2132131321T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \"E|F|testing|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination five.","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationFive_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-420-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination six.","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationSix_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-07-200T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination seven.","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationSeven_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-07-15T15:34|202721412-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination eight.","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationEight_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-07-15T15:34|2020-800-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination nine.","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationNine_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-07-15T15:34|2020-08-222323T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseTask} method with invalid inputs combination ten.","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTask_illegalDatesCombinationTen_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \"E|F|testing|2020-08-15T15:34|2020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":13,"-":185}},{"path":"src/test/java/juke/parsers/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author asdfghjkxd-reused","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Code is reused from GitHub Copilot autocompletion. Some test cases, as well as the data, may have been","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// inevitably reused during the autocompletion process.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Tests for the Parser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseBySpace} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parseBySpace_valid_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"test command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"test\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseBySpace} method with whitespace-leading or whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseBySpace_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseBySpace} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseBySpace_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested   command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseBySpace} method with malformed inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseBySpace_malformed_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByByString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseByByString_valid_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string /by time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByByString} method with whitespace-leading or","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseByByString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string /by time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByByString} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseByByString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string   /by   time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByByString} method with malformed inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseByByString_malformed_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByFromToString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseByFromToString_valid_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string /from now /to later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByFromToString} method with whitespace-leading or","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseByFromToString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string /from now /to later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByFromToString} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseByFromToString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string   /from   now   /to   later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Tests for the {@code parseByFromToString} method with malformed inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseByFromToString_malformed_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(parsed[0], \"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with valid input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void isMatchByString_validCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchByString(\"testing /by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with valid input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void isMatchByString_validCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchByString(\"testing /by test more than one item\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with valid input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void isMatchByString_validCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchByString(\"testing more than one argument /by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with malformed by input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void isMatchByString_malformedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchByString(\"testing/bytest\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with malformed by input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void isMatchByString_malformedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchByString(\"testing/by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchByString} method with malformed by input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void isMatchByString_malformedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchByString(\"testing /bytest\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with valid input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_validCombinationOne_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with valid input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_validCombinationTwo_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing more than one arg /from testdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with valid input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_validCombinationThree_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate more than one /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with valid input combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_validCombinationFour_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate /to enddate more than one\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with valid input combination five.","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_validCombinationFive_success() {","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate more than one  /to enddate more \"","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                                                      + \"than one\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with malformed to-from input combination one.","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_malformedCombinationOne_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with malformed to-from input combination two.","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_malformedCombinationTwo_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/from testdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with malformed to-from input combination three.","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_malformedCombinationThree_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate/to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with malformed to-from input combination four.","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_malformedCombinationFour_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Tests for the {@code isMatchFromToString} method with malformed to-from input combination five.","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void isMatchFromToString_malformedCombinationFive_failure() {","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing /from testdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"asdfghjkxd":8,"-":271}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"E|F|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"D|F|go to bed|9999-12-31T23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"E|F|go to prom|2023-08-09T00:00|2023-08-10T00:00","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"todo complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"deadline go to bed /by 31-12-9999 23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"event go to prom /from 09-08-2023 /to 10-08-2023","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"mark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"deadline /malformed","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"event /malformed /request","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"# set up the tasks.txt file","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"then","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"  echo \"E|T|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00\" \u003e ./data/tasks.txt","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"fi","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"if ! javac -cp \\","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core \\","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"-Xlint:none -d ../bin \\","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core/*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"java -classpath ../bin main.java.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"# compare the output to the expected output, ignoring ending whitespaces, since the output generates them but the","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"# expected file erases them","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"diff ACTUAL.TXT EXPECTED.TXT -b --ignore-blank-lines","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":33,"-":30}}]
